#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint gid = gl_GlobalInvocationID.x;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     do
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y))))))
            {
            }
           else
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                }
               else
                {
                 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec2(injectionSwitch.x < injectionSwitch.y, false)))))))
                  {
                   for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), min(_GLF_IDENTITY(int(8), (_GLF_IDENTITY(int(8), int(ivec2(_GLF_IDENTITY(int(8), ~ (~ (_GLF_IDENTITY(int(8), max(int(8), int(8)))))), 0)))) ^ 0), int(8))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                    {
                     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                      {
                       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                        {
                         if(_GLF_WRAPPED_IF_FALSE(false))
                          {
                          }
                         else
                          {
                           if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || false)))
                            {
                             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                              {
                               do
                                {
                                 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                  {
                                  }
                                 else
                                  {
                                   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, (1) * 1)); _injected_loop_counter ++)
                                    {
                                     do
                                      {
                                       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
                                        {
                                         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
                                          barrier();
                                        }
                                      }
                                     while(_GLF_WRAPPED_LOOP(false));
                                    }
                                  }
                                }
                               while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(bvec2(_GLF_WRAPPED_LOOP(false), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-14.67)), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, 1.0, sqrt(0.0), 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0, 0.0, 1.0))))) > injectionSwitch.y))))));
                              }
                            }
                           else
                            {
                            }
                          }
                        }
                      }
                     else
                      {
                      }
                    }
                  }
                 else
                  {
                  }
                }
              }
             else
              {
              }
            }
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = (_GLF_IDENTITY(0, 0 ^ (0)) ^ int(_GLF_ONE(1.0, injectionSwitch.y))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-9.2)), bool(false))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec4(injectionSwitch.x, 1.0, sin(0.0), _GLF_ZERO(0.0, injectionSwitch.x)), mix(vec4(_GLF_FUZZED(24.65), _GLF_FUZZED(-5.9), _GLF_FUZZED(0.5), _GLF_FUZZED((-3.2 - -84.70))), vec4((vec4(injectionSwitch.x, 1.0, sin(0.0), _GLF_ZERO(0.0, injectionSwitch.x)))[0], (vec4(injectionSwitch.x, 1.0, sin(0.0), _GLF_ZERO(0.0, injectionSwitch.x)))[1], (vec4(injectionSwitch.x, 1.0, sin(0.0), _GLF_ZERO(0.0, injectionSwitch.x)))[2], (vec4(injectionSwitch.x, 1.0, sin(0.0), _GLF_ZERO(0.0, injectionSwitch.x)))[3]), bvec4(true, true, true, true))))), min(injectionSwitch.x, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(991.834))), injectionSwitch.x), mix(float(_GLF_IDENTITY(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), (clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) / 1.0)), float(_GLF_FUZZED(101.544)), _GLF_IDENTITY(bool(false), _GLF_IDENTITY(true && (bool(false)), bool(bvec3(true && (bool(false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))), injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x))) + 0.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-5953.5072), _GLF_FUZZED(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-4001.1230, max(_GLF_IDENTITY(-4001.1230, max(-4001.1230, -4001.1230)), -4001.1230)), clamp(-4001.1230, _GLF_IDENTITY(-4001.1230, mix(float(-4001.1230), float(_GLF_FUZZED(2.8)), bool(false))), _GLF_IDENTITY(-4001.1230, min(-4001.1230, _GLF_IDENTITY(-4001.1230, min(-4001.1230, _GLF_IDENTITY(-4001.1230, (true ? -4001.1230 : _GLF_FUZZED(15.39))))))))) * 7.1), _GLF_IDENTITY(float(mat3x2((_GLF_IDENTITY(-4001.1230, clamp(-4001.1230, _GLF_IDENTITY(-4001.1230, mix(float(-4001.1230), float(_GLF_FUZZED(2.8)), bool(false))), _GLF_IDENTITY(-4001.1230, min(-4001.1230, _GLF_IDENTITY(-4001.1230, min(-4001.1230, _GLF_IDENTITY(-4001.1230, (true ? -4001.1230 : _GLF_FUZZED(15.39))))))))) * 7.1), 1.0, 1.0, 1.0, 1.0, 0.0)), _GLF_IDENTITY(max(_GLF_IDENTITY(float(mat3x2((_GLF_IDENTITY(-4001.1230, clamp(-4001.1230, _GLF_IDENTITY(-4001.1230, mix(float(-4001.1230), float(_GLF_IDENTITY(_GLF_FUZZED(2.8), min(_GLF_IDENTITY(_GLF_FUZZED(2.8), max(_GLF_FUZZED(2.8), _GLF_FUZZED(2.8))), _GLF_FUZZED(2.8)))), bool(false))), _GLF_IDENTITY(-4001.1230, min(-4001.1230, _GLF_IDENTITY(-4001.1230, min(-4001.1230, _GLF_IDENTITY(-4001.1230, (true ? -4001.1230 : _GLF_FUZZED(15.39))))))))) * 7.1), 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, float(vec4(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(2.0) : 1.0)), exp(0.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x)))), 0.0)), min(float(mat3x2((_GLF_IDENTITY(-4001.1230, clamp(-4001.1230, _GLF_IDENTITY(-4001.1230, mix(float(-4001.1230), float(_GLF_FUZZED(2.8)), bool(false))), _GLF_IDENTITY(-4001.1230, min(-4001.1230, _GLF_IDENTITY(_GLF_IDENTITY(-4001.1230, min(-4001.1230, _GLF_IDENTITY(-4001.1230, (true ? -4001.1230 : _GLF_FUZZED(15.39))))), (_GLF_IDENTITY(-4001.1230, min(-4001.1230, _GLF_IDENTITY(-4001.1230, (true ? -4001.1230 : _GLF_FUZZED(15.39)))))) / 1.0))))) * 7.1), 1.0, 1.0, 1.0, 1.0, 0.0)), float(mat3x2((_GLF_IDENTITY(-4001.1230, clamp(-4001.1230, _GLF_IDENTITY(-4001.1230, mix(float(-4001.1230), float(_GLF_FUZZED(2.8)), bool(false))), _GLF_IDENTITY(-4001.1230, min(-4001.1230, _GLF_IDENTITY(-4001.1230, min(-4001.1230, _GLF_IDENTITY(-4001.1230, (true ? -4001.1230 : _GLF_FUZZED(15.39))))))))) * 7.1), 1.0, 1.0, 1.0, 1.0, 0.0)))), float(mat3x2((_GLF_IDENTITY(_GLF_IDENTITY(-4001.1230, clamp(-4001.1230, _GLF_IDENTITY(-4001.1230, mix(float(-4001.1230), float(_GLF_FUZZED(2.8)), bool(false))), _GLF_IDENTITY(-4001.1230, min(-4001.1230, _GLF_IDENTITY(-4001.1230, min(-4001.1230, _GLF_IDENTITY(-4001.1230, (true ? -4001.1230 : _GLF_FUZZED(15.39))))))))) * 7.1, mix(float(_GLF_FUZZED(86.18)), float(_GLF_IDENTITY(-4001.1230, clamp(-4001.1230, _GLF_IDENTITY(-4001.1230, mix(float(-4001.1230), float(_GLF_FUZZED(2.8)), bool(false))), _GLF_IDENTITY(-4001.1230, min(-4001.1230, _GLF_IDENTITY(-4001.1230, min(-4001.1230, _GLF_IDENTITY(-4001.1230, (true ? -4001.1230 : _GLF_FUZZED(15.39))))))))) * 7.1), bool(true)))), 1.0, 1.0, 1.0, 1.0, 0.0))), mix(float(_GLF_IDENTITY(max(_GLF_IDENTITY(float(mat3x2((_GLF_IDENTITY(-4001.1230, clamp(-4001.1230, _GLF_IDENTITY(-4001.1230, mix(float(-4001.1230), float(_GLF_FUZZED(2.8)), bool(false))), _GLF_IDENTITY(_GLF_IDENTITY(-4001.1230, min(-4001.1230, _GLF_IDENTITY(-4001.1230, min(-4001.1230, _GLF_IDENTITY(-4001.1230, (true ? -4001.1230 : _GLF_FUZZED(15.39))))))), float(mat4(_GLF_IDENTITY(-4001.1230, min(-4001.1230, _GLF_IDENTITY(-4001.1230, min(-4001.1230, _GLF_IDENTITY(-4001.1230, (true ? -4001.1230 : _GLF_FUZZED(15.39))))))), 1.0, sqrt(0.0), 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, 0.0, cos(0.0), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0))))) * 7.1), 1.0, 1.0, 1.0, 1.0, 0.0)), min(float(mat3x2((_GLF_IDENTITY(-4001.1230, clamp(-4001.1230, _GLF_IDENTITY(-4001.1230, mix(float(-4001.1230), float(_GLF_FUZZED(2.8)), bool(false))), _GLF_IDENTITY(-4001.1230, min(-4001.1230, _GLF_IDENTITY(-4001.1230, min(-4001.1230, _GLF_IDENTITY(-4001.1230, (true ? -4001.1230 : _GLF_FUZZED(15.39))))))))) * 7.1), 1.0, 1.0, 1.0, 1.0, 0.0)), float(mat3x2((_GLF_IDENTITY(-4001.1230, clamp(-4001.1230, _GLF_IDENTITY(-4001.1230, mix(float(-4001.1230), float(_GLF_IDENTITY(_GLF_FUZZED(2.8), mix(float(_GLF_FUZZED(-64.27)), float(_GLF_IDENTITY(_GLF_FUZZED(2.8), (_GLF_FUZZED(2.8)) * 1.0)), bool(true)))), bool(false))), _GLF_IDENTITY(-4001.1230, min(-4001.1230, _GLF_IDENTITY(-4001.1230, min(-4001.1230, _GLF_IDENTITY(-4001.1230, (true ? -4001.1230 : _GLF_FUZZED(15.39))))))))) * 7.1), 1.0, 1.0, 1.0, 1.0, 0.0)))), float(mat3x2((_GLF_IDENTITY(-4001.1230, clamp(-4001.1230, _GLF_IDENTITY(-4001.1230, mix(float(-4001.1230), float(_GLF_FUZZED(2.8)), bool(false))), _GLF_IDENTITY(-4001.1230, min(-4001.1230, _GLF_IDENTITY(-4001.1230, min(-4001.1230, _GLF_IDENTITY(-4001.1230, (true ? -4001.1230 : _GLF_IDENTITY(_GLF_FUZZED(15.39), max(_GLF_FUZZED(15.39), _GLF_IDENTITY(_GLF_FUZZED(15.39), min(_GLF_FUZZED(15.39), _GLF_FUZZED(15.39))))))))))))) * 7.1), 1.0, 1.0, 1.0, 1.0, 0.0))), clamp(max(_GLF_IDENTITY(float(mat3x2((_GLF_IDENTITY(-4001.1230, clamp(-4001.1230, _GLF_IDENTITY(-4001.1230, mix(float(-4001.1230), float(_GLF_FUZZED(2.8)), bool(false))), _GLF_IDENTITY(-4001.1230, min(-4001.1230, _GLF_IDENTITY(-4001.1230, min(-4001.1230, _GLF_IDENTITY(-4001.1230, (true ? -4001.1230 : _GLF_FUZZED(15.39))))))))) * 7.1), 1.0, 1.0, 1.0, 1.0, 0.0)), min(float(mat3x2((_GLF_IDENTITY(-4001.1230, clamp(-4001.1230, _GLF_IDENTITY(-4001.1230, mix(float(-4001.1230), float(_GLF_FUZZED(2.8)), bool(false))), _GLF_IDENTITY(-4001.1230, min(-4001.1230, _GLF_IDENTITY(-4001.1230, min(-4001.1230, _GLF_IDENTITY(-4001.1230, (true ? -4001.1230 : _GLF_FUZZED(15.39))))))))) * 7.1), 1.0, 1.0, 1.0, 1.0, 0.0)), float(mat3x2((_GLF_IDENTITY(-4001.1230, clamp(-4001.1230, _GLF_IDENTITY(-4001.1230, mix(float(-4001.1230), float(_GLF_FUZZED(2.8)), bool(false))), _GLF_IDENTITY(-4001.1230, min(-4001.1230, _GLF_IDENTITY(-4001.1230, min(-4001.1230, _GLF_IDENTITY(-4001.1230, (true ? -4001.1230 : _GLF_FUZZED(15.39))))))))) * 7.1), 1.0, 1.0, 1.0, 1.0, 0.0)))), float(mat3x2((_GLF_IDENTITY(-4001.1230, clamp(-4001.1230, _GLF_IDENTITY(-4001.1230, mix(float(-4001.1230), float(_GLF_FUZZED(2.8)), bool(false))), _GLF_IDENTITY(-4001.1230, min(-4001.1230, _GLF_IDENTITY(-4001.1230, min(-4001.1230, _GLF_IDENTITY(-4001.1230, (true ? -4001.1230 : _GLF_FUZZED(15.39))))))))) * 7.1), 1.0, 1.0, 1.0, 1.0, 0.0))), max(_GLF_IDENTITY(float(mat3x2((_GLF_IDENTITY(-4001.1230, clamp(-4001.1230, _GLF_IDENTITY(-4001.1230, mix(float(-4001.1230), float(_GLF_FUZZED(2.8)), bool(false))), _GLF_IDENTITY(-4001.1230, min(-4001.1230, _GLF_IDENTITY(-4001.1230, min(-4001.1230, _GLF_IDENTITY(_GLF_IDENTITY(-4001.1230, (true ? -4001.1230 : _GLF_FUZZED(15.39))), (_GLF_IDENTITY(-4001.1230, (true ? -4001.1230 : _GLF_FUZZED(15.39)))) - 0.0))))))) * 7.1), 1.0, 1.0, 1.0, 1.0, 0.0)), min(float(mat3x2((_GLF_IDENTITY(-4001.1230, clamp(-4001.1230, _GLF_IDENTITY(-4001.1230, mix(float(-4001.1230), float(_GLF_FUZZED(2.8)), bool(false))), _GLF_IDENTITY(-4001.1230, min(-4001.1230, _GLF_IDENTITY(-4001.1230, min(-4001.1230, _GLF_IDENTITY(-4001.1230, (true ? -4001.1230 : _GLF_FUZZED(15.39))))))))) * 7.1), 1.0, 1.0, 1.0, 1.0, 0.0)), float(mat3x2((_GLF_IDENTITY(_GLF_IDENTITY(-4001.1230, clamp(-4001.1230, _GLF_IDENTITY(-4001.1230, mix(float(-4001.1230), float(_GLF_FUZZED(2.8)), bool(false))), _GLF_IDENTITY(-4001.1230, min(-4001.1230, _GLF_IDENTITY(-4001.1230, min(-4001.1230, _GLF_IDENTITY(-4001.1230, (true ? -4001.1230 : _GLF_FUZZED(15.39))))))))) * 7.1, (_GLF_IDENTITY(-4001.1230, clamp(-4001.1230, _GLF_IDENTITY(-4001.1230, mix(float(-4001.1230), float(_GLF_FUZZED(2.8)), bool(false))), _GLF_IDENTITY(-4001.1230, min(-4001.1230, _GLF_IDENTITY(-4001.1230, min(-4001.1230, _GLF_IDENTITY(-4001.1230, (true ? -4001.1230 : _GLF_FUZZED(15.39))))))))) * 7.1) / 1.0)), 1.0, 1.0, 1.0, 1.0, 0.0)))), float(mat3x2((_GLF_IDENTITY(-4001.1230, clamp(-4001.1230, _GLF_IDENTITY(-4001.1230, mix(float(-4001.1230), float(_GLF_FUZZED(2.8)), bool(false))), _GLF_IDENTITY(-4001.1230, min(-4001.1230, _GLF_IDENTITY(-4001.1230, min(-4001.1230, _GLF_IDENTITY(-4001.1230, (true ? -4001.1230 : _GLF_FUZZED(15.39))))))))) * 7.1), 1.0, 1.0, 1.0, 1.0, 0.0))), max(_GLF_IDENTITY(float(mat3x2((_GLF_IDENTITY(-4001.1230, clamp(-4001.1230, _GLF_IDENTITY(-4001.1230, mix(float(-4001.1230), float(_GLF_FUZZED(2.8)), bool(false))), _GLF_IDENTITY(-4001.1230, min(-4001.1230, _GLF_IDENTITY(-4001.1230, min(-4001.1230, _GLF_IDENTITY(-4001.1230, (true ? -4001.1230 : _GLF_FUZZED(15.39))))))))) * 7.1), 1.0, 1.0, 1.0, 1.0, 0.0)), min(float(mat3x2((_GLF_IDENTITY(-4001.1230, clamp(-4001.1230, _GLF_IDENTITY(-4001.1230, mix(float(-4001.1230), float(_GLF_FUZZED(2.8)), bool(false))), _GLF_IDENTITY(-4001.1230, min(-4001.1230, _GLF_IDENTITY(-4001.1230, min(-4001.1230, _GLF_IDENTITY(-4001.1230, (true ? -4001.1230 : _GLF_FUZZED(15.39))))))))) * 7.1), 1.0, 1.0, 1.0, 1.0, 0.0)), float(mat3x2((_GLF_IDENTITY(-4001.1230, clamp(-4001.1230, _GLF_IDENTITY(-4001.1230, mix(float(-4001.1230), float(_GLF_FUZZED(2.8)), bool(false))), _GLF_IDENTITY(-4001.1230, min(-4001.1230, _GLF_IDENTITY(-4001.1230, min(-4001.1230, _GLF_IDENTITY(-4001.1230, (true ? -4001.1230 : _GLF_FUZZED(15.39))))))))) * 7.1), 1.0, 1.0, 1.0, 1.0, 0.0)))), float(mat3x2((_GLF_IDENTITY(-4001.1230, clamp(-4001.1230, _GLF_IDENTITY(-4001.1230, mix(float(-4001.1230), float(_GLF_FUZZED(2.8)), bool(false))), _GLF_IDENTITY(-4001.1230, min(-4001.1230, _GLF_IDENTITY(-4001.1230, min(-4001.1230, _GLF_IDENTITY(-4001.1230, (true ? -4001.1230 : _GLF_FUZZED(15.39))))))))) * 7.1), 1.0, 1.0, 1.0, 1.0, 0.0)))))), float(_GLF_FUZZED(-286.175)), bool(false))))))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x, (injectionSwitch.x) / 1.0))) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true && (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), mix(vec2(_GLF_FUZZED(-8.6), _GLF_FUZZED(-883.897)), vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) | (_GLF_IDENTITY(1, (1) << 0)))]), _GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(_GLF_IDENTITY(bvec2(true, true), bvec2(_GLF_IDENTITY(bvec2(bvec2(true, true)), bvec2(bvec2(bvec2(bvec2(true, true))))))), false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)))))).y), bool(bvec3(true && (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x2(injectionSwitch, 0.0, 1.0, 1.0, 0.0)), _GLF_IDENTITY(vec2(mat2x4(_GLF_IDENTITY(vec2(mat3x2(injectionSwitch, 0.0, 1.0, 1.0, 0.0)), (vec2(mat3x2(injectionSwitch, _GLF_IDENTITY(0.0, float(mat3x2(0.0, 1.0, 0.0, 1.0, 0.0, 0.0))), 1.0, 1.0, 0.0))) - vec2(0.0, 0.0)), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), clamp(vec2(mat2x4(_GLF_IDENTITY(vec2(mat3x2(injectionSwitch, 0.0, 1.0, 1.0, 0.0)), (vec2(mat3x2(injectionSwitch, 0.0, 1.0, 1.0, 0.0))) - vec2(0.0, 0.0)), 0.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, max(1.0, 1.0)) : _GLF_FUZZED(8.3))), 0.0, 1.0, 0.0, 1.0)), vec2(mat2x4(_GLF_IDENTITY(vec2(mat3x2(injectionSwitch, 0.0, 1.0, 1.0, 0.0)), (vec2(mat3x2(injectionSwitch, 0.0, 1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, 1.0 * (1.0))) / 1.0), 0.0))) - vec2(0.0, 0.0)), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), vec2(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(vec2(mat3x2(injectionSwitch, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0)), 1.0, 1.0, 0.0)), (vec2(mat3x2(injectionSwitch, 0.0, _GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 1.0, 0.0))) - vec2(0.0, 0.0)), clamp(_GLF_IDENTITY(vec2(mat3x2(injectionSwitch, 0.0, 1.0, 1.0, 0.0)), (vec2(mat3x2(injectionSwitch, 0.0, 1.0, 1.0, 0.0))) - vec2(0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(vec2(mat3x2(injectionSwitch, 0.0, 1.0, 1.0, 0.0)), (false ? _GLF_FUZZED(vec2(89.54, -172.461)) : vec2(mat3x2(injectionSwitch, 0.0, 1.0, 1.0, 0.0)))), (vec2(mat3x2(injectionSwitch, 0.0, 1.0, 1.0, 0.0))) - vec2(0.0, 0.0)), _GLF_IDENTITY(vec2(mat3x2(injectionSwitch, 0.0, 1.0, 1.0, 0.0)), (vec2(mat3x2(injectionSwitch, 0.0, 1.0, 1.0, 0.0))) - vec2(0.0, 0.0)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(vec2(mat3x2(injectionSwitch, 0.0, 1.0, 1.0, 0.0)), (vec2(mat3x2(injectionSwitch, 0.0, 1.0, 1.0, 0.0))) - vec2(0.0, 0.0)), clamp(_GLF_IDENTITY(vec2(mat3x2(injectionSwitch, 0.0, 1.0, 1.0, 0.0)), (vec2(mat3x2(injectionSwitch, 0.0, 1.0, 1.0, 0.0))) - vec2(0.0, 0.0)), _GLF_IDENTITY(vec2(mat3x2(injectionSwitch, 0.0, 1.0, 1.0, 0.0)), (vec2(mat3x2(injectionSwitch, 0.0, 1.0, 1.0, 0.0))) - vec2(0.0, 0.0)), _GLF_IDENTITY(vec2(mat3x2(injectionSwitch, 0.0, 1.0, 1.0, 0.0)), (vec2(mat3x2(injectionSwitch, 0.0, 1.0, 1.0, 0.0))) - vec2(0.0, 0.0))))) * mat2(1.0), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(vec2(mat3x2(injectionSwitch, 0.0, 1.0, 1.0, 0.0)), (true ? _GLF_IDENTITY(vec2(mat3x2(injectionSwitch, 0.0, 1.0, 1.0, 0.0)), (vec2(mat3x2(injectionSwitch, 0.0, 1.0, 1.0, 0.0))) * mat2(1.0)) : _GLF_FUZZED((vec2(7.7, 671.399))))), (vec2(mat3x2(injectionSwitch, 0.0, 1.0, 1.0, 0.0))) - vec2(0.0, 0.0)), clamp(_GLF_IDENTITY(vec2(mat3x2(injectionSwitch, 0.0, 1.0, 1.0, 0.0)), (vec2(mat3x2(injectionSwitch, 0.0, 1.0, 1.0, 0.0))) - vec2(0.0, 0.0)), _GLF_IDENTITY(vec2(mat3x2(injectionSwitch, 0.0, 1.0, 1.0, 0.0)), (vec2(mat3x2(injectionSwitch, 0.0, 1.0, 1.0, 0.0))) - vec2(0.0, 0.0)), _GLF_IDENTITY(vec2(mat3x2(injectionSwitch, 0.0, 1.0, 1.0, 0.0)), (vec2(mat3x2(injectionSwitch, 0.0, 1.0, 1.0, 0.0))) - vec2(0.0, 0.0))))) * mat2(1.0)) * mat2(1.0))), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)))))).x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-8.6), _GLF_FUZZED(-883.897)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), _GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec2(bvec2(true, true)))), false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, false || (false)))), (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, true)), bool(bvec4(bool(bvec4(false, false, true, true)), false, false, true)))), false || (false))))) || false)))))))))).y), true, true)))))))))))
              {
              }
             else
              {
               do
                {
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                    }
                   else
                    {
                     do
                      {
                       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))) * (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))) * (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))), (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))) * (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))), bool(bvec2(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))) * (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))), false)))) || false))) || (_GLF_WRAPPED_IF_FALSE(false)))) || false))
                        {
                        }
                       else
                        {
                         do
                          {
                           barrier();
                          }
                         while(_GLF_WRAPPED_LOOP(false));
                        }
                      }
                     while(_GLF_WRAPPED_LOOP(false));
                    }
                  }
                 else
                  {
                  }
                }
               while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))));
              }
            }
          }
        }
      }
    }
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 do
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     do
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) || false)))))
            {
             for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) / vec2(1.0, 1.0)).y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) / vec2(1.0, 1.0)).y)), false || (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-24.81)), float(injectionSwitch.x), bool(true))) < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))), mix(vec2(((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))))[0], _GLF_FUZZED(5787.7219)), vec2(_GLF_FUZZED(2489.1731), ((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))))[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, ! (! (true)))))) / vec2(1.0, 1.0)).y))))), (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))), max((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))), (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))))) / vec2(1.0, 1.0), _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), mix(vec2(_GLF_FUZZED(94.05), _GLF_FUZZED(460.997)), vec2((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))[0], _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))[1], _GLF_IDENTITY(float(float((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))[1])), clamp(float(float((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))[1])), float(float((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))[1])), float(float((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))[1])))))), bvec2(true, true)))) / vec2(1.0, 1.0)), (mat2(1.0) * ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), mix(vec2(_GLF_FUZZED(94.05), _GLF_FUZZED(460.997)), vec2((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))[0], _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))[1], _GLF_IDENTITY(float(float((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))[1])), clamp(float(float((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))[1])), float(float((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))[1])), float(float((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))[1])))))), bvec2(true, true)))) / vec2(1.0, 1.0))) * mat2(1.0)), mix(vec2(_GLF_FUZZED(-82.19), (mat2(1.0) * ((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) / vec2(1.0, 1.0)))[1]), vec2((mat2(1.0) * ((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) / vec2(1.0, 1.0)))[0], _GLF_FUZZED(-12.68)), bvec2(true, false))))).y)))) || false), false, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), (false ? _GLF_FUZZED(min(vec2(-425.764, 0.6), 30.26)) : _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))))) / vec2(1.0, 1.0)).y))), (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) / vec2(1.0, 1.0)), mix(vec2(_GLF_FUZZED(vec4(3.7, -8175.4689, 6.1, 1.4).b), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) / vec2(1.0, 1.0)))[1], clamp((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) / vec2(1.0, 1.0)))[1], _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) / vec2(1.0, 1.0)))[1], max((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) / vec2(1.0, 1.0)))[1], (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) / vec2(1.0, 1.0)))[1])), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) / vec2(1.0, 1.0), vec2(0.0, 0.0) + ((_GLF_IDENTITY(injectionSwitch, vec2(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))) * (injectionSwitch))) / vec2(1.0, 1.0)))))[1]))), vec2((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) / vec2(1.0, 1.0)))[0], _GLF_FUZZED(8.6)), bvec2(true, false))).y)))) || false), false, true)), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) / vec2(1.0, 1.0)), _GLF_IDENTITY(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) / vec2(1.0, 1.0))), max(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) / vec2(1.0, 1.0))), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) / vec2(1.0, 1.0)))))).y))), (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) / vec2(1.0, 1.0)).y)))) || false), false, true)), false)))))), false || (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) / vec2(1.0, 1.0)), vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) / vec2(1.0, 1.0)))).y))), (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) / vec2(1.0, 1.0)).y)))) || false), false, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) / vec2(1.0, 1.0)).y))), (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) / vec2(1.0, 1.0)).y)))) || false), false, true)), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) || false)))) && true), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) / vec2(1.0, 1.0)).y))), (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) / vec2(1.0, 1.0)).y, mix(float(_GLF_FUZZED(-6718.9656)), float(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) / vec2(1.0, 1.0)).y), bool(true))))))) || false), false, true)), false))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) / vec2(1.0, 1.0)).y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) / vec2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-7251.4199) : 1.0)), 1.0)).y)), (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) / vec2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-7251.4199) : 1.0)), 1.0)).y))) && true), false || (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) / vec2(1.0, 1.0)).y))))), _GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))), max((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))), (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))))) / vec2(1.0, 1.0), _GLF_IDENTITY(mat2(1.0) * ((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) / vec2(1.0, 1.0)), mix(vec2(_GLF_FUZZED(-82.19), (mat2(1.0) * ((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) / vec2(1.0, 1.0)))[1]), vec2((mat2(1.0) * ((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) / vec2(1.0, 1.0)))[0], _GLF_FUZZED(-12.68)), bvec2(true, false))))).y)))) || false, true && (_GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))), max((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))), (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))))) / vec2(1.0, 1.0), _GLF_IDENTITY(mat2(1.0) * ((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) / vec2(1.0, 1.0)), mix(vec2(_GLF_FUZZED(-82.19), (mat2(1.0) * ((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) / vec2(1.0, 1.0)))[1]), vec2((mat2(1.0) * ((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) / vec2(1.0, 1.0)))[0], _GLF_FUZZED(-12.68)), bvec2(true, false))))).y)))) || false, _GLF_IDENTITY(true, (true) && true) && ((_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))), max((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)))), (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))))) / vec2(1.0, 1.0), _GLF_IDENTITY(mat2(1.0) * ((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) / vec2(1.0, 1.0)), mix(vec2(_GLF_FUZZED(-82.19), (mat2(1.0) * ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)), vec2(1.0, 1.0) * (injectionSwitch))) / vec2(1.0, 1.0)))[1]), _GLF_IDENTITY(vec2((mat2(1.0) * ((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) / vec2(1.0, 1.0)))[0], _GLF_FUZZED(-12.68)), (vec2((mat2(1.0) * ((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) / vec2(1.0, 1.0)))[0], _GLF_FUZZED(-12.68))) / vec2(1.0, 1.0)), bvec2(true, false))))).y)))) || false))))), false, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) / vec2(1.0, 1.0)).y))), (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) / vec2(1.0, 1.0)).y)))) || false), false, true)), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) / vec2(1.0, 1.0)).y))), _GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) / vec2(1.0, 1.0)).y)))) || false, false || ((_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) / vec2(1.0, 1.0)).y)))) || false))), false, true)), false)))))), false || (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) / vec2(1.0, 1.0)), vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) / vec2(1.0, 1.0)))).y))), (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) / vec2(1.0, 1.0)).y, bool(bool(_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) / vec2(1.0, 1.0)).y, ! (! (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) / vec2(1.0, 1.0)).y)))))))))) || false), false, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), vec2(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), 1.0, 0.0, 1.0, 0.0), mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat2x3(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), 1.0, 0.0, 1.0, 0.0)))))) / vec2(1.0, 1.0)).y))), (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), _GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0))) - vec2(0.0, 0.0)), _GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(injectionSwitch))))))) / vec2(1.0, 1.0)).y)))) || false), false, true)), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) / vec2(1.0, 1.0)).y))), (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) / vec2(1.0, 1.0)).y)))) || false), false, true)), false))))))))), true && (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) / vec2(1.0, 1.0)).y))), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(1.0, 1.0) * (injectionSwitch), mat2(1.0) * (vec2(1.0, 1.0) * (injectionSwitch))))) / vec2(1.0, 1.0)).y)), false || (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) / vec2(1.0, 1.0)).y))))), (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-2.3)), bool(false))), 1.0) * (injectionSwitch))), max((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))), (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))))) / vec2(1.0, 1.0), _GLF_IDENTITY(mat2(1.0) * ((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) / vec2(1.0, 1.0)), mix(vec2(_GLF_FUZZED(-82.19), (mat2(1.0) * ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(1.0, 1.0) * (injectionSwitch), _GLF_IDENTITY(vec2(mat3x2(_GLF_IDENTITY(vec2(1.0, 1.0) * (injectionSwitch), max(vec2(1.0, 1.0) * (injectionSwitch), vec2(1.0, 1.0) * (injectionSwitch))), 0.0, 1.0, 1.0, determinant(mat2(0.0, 1.0, 0.0, abs(0.0))))), mix(vec2(_GLF_FUZZED(-6.5), (vec2(mat3x2(_GLF_IDENTITY(vec2(1.0, 1.0) * (injectionSwitch), max(vec2(1.0, 1.0) * (injectionSwitch), vec2(1.0, 1.0) * (injectionSwitch))), 0.0, 1.0, 1.0, determinant(mat2(0.0, 1.0, 0.0, abs(0.0))))))[1]), vec2((vec2(mat3x2(_GLF_IDENTITY(vec2(1.0, 1.0) * (injectionSwitch), max(vec2(1.0, 1.0) * (injectionSwitch), vec2(1.0, 1.0) * (injectionSwitch))), 0.0, 1.0, 1.0, determinant(mat2(0.0, 1.0, 0.0, abs(0.0))))))[0], _GLF_FUZZED(492.915)), bvec2(true, false)))))) / vec2(1.0, 1.0)))[1]), vec2((mat2(1.0) * ((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) / vec2(1.0, 1.0)))[0], _GLF_FUZZED(-12.68)), bvec2(true, false))))).y)))) || false), false, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) / vec2(1.0, 1.0)).y))), (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) / vec2(1.0, 1.0)).y)))) || false), false, true)), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) / vec2(1.0, 1.0)).y))), (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) / vec2(1.0, 1.0)).y)))) || false), false, true)), false))))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(1.0, 1.0) * (injectionSwitch), mat2(1.0) * (vec2(1.0, 1.0) * (injectionSwitch))))) / vec2(1.0, 1.0)).y)), false || (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) / vec2(1.0, 1.0)).y))))), (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-2.3)), bool(false))), 1.0) * (injectionSwitch))), max((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))), (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))))) / vec2(1.0, 1.0), _GLF_IDENTITY(mat2(1.0) * ((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) / vec2(1.0, 1.0)), mix(vec2(_GLF_FUZZED(-82.19), (mat2(1.0) * ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(1.0, 1.0) * (injectionSwitch), _GLF_IDENTITY(vec2(mat3x2(_GLF_IDENTITY(vec2(1.0, 1.0) * (injectionSwitch), max(vec2(1.0, 1.0) * (injectionSwitch), vec2(1.0, 1.0) * (injectionSwitch))), 0.0, 1.0, 1.0, determinant(mat2(0.0, 1.0, 0.0, abs(0.0))))), mix(vec2(_GLF_FUZZED(-6.5), (vec2(mat3x2(_GLF_IDENTITY(vec2(1.0, 1.0) * (injectionSwitch), max(vec2(1.0, 1.0) * (injectionSwitch), vec2(1.0, 1.0) * (injectionSwitch))), 0.0, 1.0, 1.0, determinant(mat2(0.0, 1.0, 0.0, abs(0.0))))))[1]), vec2((vec2(mat3x2(_GLF_IDENTITY(vec2(1.0, 1.0) * (injectionSwitch), max(vec2(1.0, 1.0) * (injectionSwitch), vec2(1.0, 1.0) * (injectionSwitch))), 0.0, 1.0, 1.0, determinant(mat2(0.0, 1.0, 0.0, abs(0.0))))))[0], _GLF_FUZZED(492.915)), bvec2(true, false)))))) / vec2(1.0, 1.0)))[1]), vec2((mat2(1.0) * ((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) / vec2(1.0, 1.0)))[0], _GLF_FUZZED(-12.68)), bvec2(true, false))))).y)))) || false), false, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) / vec2(1.0, 1.0)).y))), (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) / vec2(1.0, 1.0)).y)))) || false), false, true)), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) / vec2(1.0, 1.0)).y))), (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) / vec2(1.0, 1.0)).y)))) || false), false, true)), false))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(1.0, 1.0) * (injectionSwitch), mat2(1.0) * (vec2(1.0, 1.0) * (injectionSwitch))))) / vec2(1.0, 1.0)).y)), false || (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) / vec2(1.0, 1.0)).y))))), (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-2.3)), bool(false))), 1.0) * (injectionSwitch))), max((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))), (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))))) / vec2(1.0, 1.0), _GLF_IDENTITY(mat2(1.0) * ((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) / vec2(1.0, 1.0)), mix(vec2(_GLF_FUZZED(-82.19), (mat2(1.0) * ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(1.0, 1.0) * (injectionSwitch), _GLF_IDENTITY(vec2(mat3x2(_GLF_IDENTITY(vec2(1.0, 1.0) * (injectionSwitch), max(vec2(1.0, 1.0) * (injectionSwitch), vec2(1.0, 1.0) * (injectionSwitch))), 0.0, 1.0, 1.0, determinant(mat2(0.0, 1.0, 0.0, abs(0.0))))), mix(vec2(_GLF_FUZZED(-6.5), (vec2(mat3x2(_GLF_IDENTITY(vec2(1.0, 1.0) * (injectionSwitch), max(vec2(1.0, 1.0) * (injectionSwitch), vec2(1.0, 1.0) * (injectionSwitch))), 0.0, 1.0, 1.0, determinant(mat2(0.0, 1.0, 0.0, abs(0.0))))))[1]), vec2((vec2(mat3x2(_GLF_IDENTITY(vec2(1.0, 1.0) * (injectionSwitch), max(vec2(1.0, 1.0) * (injectionSwitch), vec2(1.0, 1.0) * (injectionSwitch))), 0.0, 1.0, 1.0, determinant(mat2(0.0, 1.0, 0.0, abs(0.0))))))[0], _GLF_FUZZED(492.915)), bvec2(true, false)))))) / vec2(1.0, 1.0)))[1]), vec2((mat2(1.0) * ((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) / vec2(1.0, 1.0)))[0], _GLF_FUZZED(-12.68)), bvec2(true, false))))).y)))) || false), false, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) / vec2(1.0, 1.0)).y))), (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) / vec2(1.0, 1.0)).y)))) || false), false, true)), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) / vec2(1.0, 1.0)).y))), (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) / vec2(1.0, 1.0)).y)))) || false), false, true)), false))))), false))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(1.0, 1.0) * (injectionSwitch), mat2(1.0) * (vec2(1.0, 1.0) * (injectionSwitch))))) / vec2(1.0, 1.0)).y)), false || (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) / vec2(1.0, 1.0)).y))))), (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-2.3)), bool(false))), 1.0) * (injectionSwitch))), max((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))), (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))))) / vec2(1.0, 1.0), _GLF_IDENTITY(mat2(1.0) * ((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) / vec2(1.0, 1.0)), mix(vec2(_GLF_FUZZED(-82.19), (mat2(1.0) * ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(1.0, 1.0) * (injectionSwitch), _GLF_IDENTITY(vec2(mat3x2(_GLF_IDENTITY(vec2(1.0, 1.0) * (injectionSwitch), max(vec2(1.0, 1.0) * (injectionSwitch), vec2(1.0, 1.0) * (injectionSwitch))), 0.0, 1.0, 1.0, determinant(mat2(0.0, 1.0, 0.0, abs(0.0))))), mix(vec2(_GLF_FUZZED(-6.5), (vec2(mat3x2(_GLF_IDENTITY(vec2(1.0, 1.0) * (injectionSwitch), max(vec2(1.0, 1.0) * (injectionSwitch), vec2(1.0, 1.0) * (injectionSwitch))), 0.0, 1.0, 1.0, determinant(mat2(0.0, 1.0, 0.0, abs(0.0))))))[1]), vec2((vec2(mat3x2(_GLF_IDENTITY(vec2(1.0, 1.0) * (injectionSwitch), max(vec2(1.0, 1.0) * (injectionSwitch), vec2(1.0, 1.0) * (injectionSwitch))), 0.0, 1.0, 1.0, determinant(mat2(0.0, 1.0, 0.0, abs(0.0))))))[0], _GLF_FUZZED(492.915)), bvec2(true, false)))))) / vec2(1.0, 1.0)))[1]), vec2((mat2(1.0) * ((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) / vec2(1.0, 1.0)))[0], _GLF_FUZZED(-12.68)), bvec2(true, false))))).y)))) || false), false, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) / vec2(1.0, 1.0)).y))), (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) / vec2(1.0, 1.0)).y)))) || false), false, true)), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) / vec2(1.0, 1.0)).y))), (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) / vec2(1.0, 1.0)).y)))) || false), false, true)), false))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(1.0, 1.0) * (injectionSwitch), mat2(1.0) * (vec2(1.0, 1.0) * (injectionSwitch))))) / vec2(1.0, 1.0)).y)), false || (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) / vec2(1.0, 1.0)).y))))), (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-2.3)), bool(false))), 1.0) * (injectionSwitch))), max((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))), (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))))) / vec2(1.0, 1.0), _GLF_IDENTITY(mat2(1.0) * ((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) / vec2(1.0, 1.0)), mix(vec2(_GLF_FUZZED(-82.19), (mat2(1.0) * ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(1.0, 1.0) * (injectionSwitch), _GLF_IDENTITY(vec2(mat3x2(_GLF_IDENTITY(vec2(1.0, 1.0) * (injectionSwitch), max(vec2(1.0, 1.0) * (injectionSwitch), vec2(1.0, 1.0) * (injectionSwitch))), 0.0, 1.0, 1.0, determinant(mat2(0.0, 1.0, 0.0, abs(0.0))))), mix(vec2(_GLF_FUZZED(-6.5), (vec2(mat3x2(_GLF_IDENTITY(vec2(1.0, 1.0) * (injectionSwitch), max(vec2(1.0, 1.0) * (injectionSwitch), vec2(1.0, 1.0) * (injectionSwitch))), 0.0, 1.0, 1.0, determinant(mat2(0.0, 1.0, 0.0, abs(0.0))))))[1]), vec2((vec2(mat3x2(_GLF_IDENTITY(vec2(1.0, 1.0) * (injectionSwitch), max(vec2(1.0, 1.0) * (injectionSwitch), vec2(1.0, 1.0) * (injectionSwitch))), 0.0, 1.0, 1.0, determinant(mat2(0.0, 1.0, 0.0, abs(0.0))))))[0], _GLF_FUZZED(492.915)), bvec2(true, false)))))) / vec2(1.0, 1.0)))[1]), vec2((mat2(1.0) * ((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) / vec2(1.0, 1.0)))[0], _GLF_FUZZED(-12.68)), bvec2(true, false))))).y)))) || false), false, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) / vec2(1.0, 1.0)).y))), (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) / vec2(1.0, 1.0)).y)))) || false), false, true)), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) / vec2(1.0, 1.0)).y))), (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) / vec2(1.0, 1.0)).y)))) || false), false, true)), false))))), false)))))))))), false || (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) / vec2(1.0, 1.0)), vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) / vec2(1.0, 1.0)))).y))), (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) / vec2(1.0, 1.0), mix(vec2(_GLF_FUZZED(6.1), ((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) / vec2(1.0, 1.0))[1]), vec2(((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) / vec2(1.0, 1.0))[0], _GLF_FUZZED((536.712 / -789.321))), bvec2(true, false)))).y)))) || false), false, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) / vec2(1.0, 1.0)).y))), (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) / vec2(1.0, 1.0)).y)))) || false), false, true)), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) / vec2(1.0, 1.0)).y)), (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) / vec2(1.0, 1.0)).y))) && true)), (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) / vec2(1.0, 1.0)).y)))) && _GLF_IDENTITY(true, (true) && true)), (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) / vec2(1.0, 1.0)).y)))) || false), false, true)), false)))))))), bool(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(1.0, 1.0) * (injectionSwitch), mat2(1.0) * (vec2(1.0, 1.0) * (injectionSwitch))))) / vec2(1.0, 1.0)).y)), false || (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) / vec2(1.0, 1.0)).y))))), (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-2.3)), bool(false))), 1.0) * (injectionSwitch))), max((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))), (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))))) / vec2(1.0, 1.0), _GLF_IDENTITY(mat2(1.0) * ((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) / vec2(1.0, 1.0)), mix(vec2(_GLF_FUZZED(-82.19), (mat2(1.0) * ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(1.0, 1.0) * (injectionSwitch), _GLF_IDENTITY(vec2(mat3x2(_GLF_IDENTITY(vec2(1.0, 1.0) * (injectionSwitch), max(vec2(1.0, 1.0) * (injectionSwitch), vec2(1.0, 1.0) * (injectionSwitch))), 0.0, 1.0, 1.0, determinant(mat2(0.0, 1.0, 0.0, abs(0.0))))), mix(vec2(_GLF_FUZZED(-6.5), (vec2(mat3x2(_GLF_IDENTITY(vec2(1.0, 1.0) * (injectionSwitch), max(vec2(1.0, 1.0) * (injectionSwitch), vec2(1.0, 1.0) * (injectionSwitch))), 0.0, 1.0, 1.0, determinant(mat2(0.0, 1.0, 0.0, abs(0.0))))))[1]), vec2((vec2(mat3x2(_GLF_IDENTITY(vec2(1.0, 1.0) * (injectionSwitch), max(vec2(1.0, 1.0) * (injectionSwitch), vec2(1.0, 1.0) * (injectionSwitch))), 0.0, 1.0, 1.0, determinant(mat2(0.0, 1.0, 0.0, abs(0.0))))))[0], _GLF_FUZZED(492.915)), bvec2(true, false)))))) / vec2(1.0, 1.0)))[1]), vec2((mat2(1.0) * ((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) / vec2(1.0, 1.0)))[0], _GLF_FUZZED(-12.68)), bvec2(true, false))))).y)))) || false), false, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) / vec2(1.0, 1.0)).y))), (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) / vec2(1.0, 1.0)).y)))) || false), false, true)), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) / vec2(1.0, 1.0)).y))), (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) / vec2(1.0, 1.0)).y)))) || false), false, true)), false))))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(1.0, 1.0) * (injectionSwitch), mat2(1.0) * (vec2(1.0, 1.0) * (injectionSwitch))))) / vec2(1.0, 1.0)).y)), false || (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) / vec2(1.0, 1.0)).y))))), (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-2.3)), bool(false))), 1.0) * (injectionSwitch))), max((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))), (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))))) / vec2(1.0, 1.0), _GLF_IDENTITY(mat2(1.0) * ((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) / vec2(1.0, 1.0)), mix(vec2(_GLF_FUZZED(-82.19), (mat2(1.0) * ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(1.0, 1.0) * (injectionSwitch), _GLF_IDENTITY(vec2(mat3x2(_GLF_IDENTITY(vec2(1.0, 1.0) * (injectionSwitch), max(vec2(1.0, 1.0) * (injectionSwitch), vec2(1.0, 1.0) * (injectionSwitch))), 0.0, 1.0, 1.0, determinant(mat2(0.0, 1.0, 0.0, abs(0.0))))), mix(vec2(_GLF_FUZZED(-6.5), (vec2(mat3x2(_GLF_IDENTITY(vec2(1.0, 1.0) * (injectionSwitch), max(vec2(1.0, 1.0) * (injectionSwitch), vec2(1.0, 1.0) * (injectionSwitch))), 0.0, 1.0, 1.0, determinant(mat2(0.0, 1.0, 0.0, abs(0.0))))))[1]), vec2((vec2(mat3x2(_GLF_IDENTITY(vec2(1.0, 1.0) * (injectionSwitch), max(vec2(1.0, 1.0) * (injectionSwitch), vec2(1.0, 1.0) * (injectionSwitch))), 0.0, 1.0, 1.0, determinant(mat2(0.0, 1.0, 0.0, abs(0.0))))))[0], _GLF_FUZZED(492.915)), bvec2(true, false)))))) / vec2(1.0, 1.0)))[1]), vec2((mat2(1.0) * ((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) / vec2(1.0, 1.0)))[0], _GLF_FUZZED(-12.68)), bvec2(true, false))))).y)))) || false), false, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) / vec2(1.0, 1.0)).y))), (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) / vec2(1.0, 1.0)).y)))) || false), false, true)), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) / vec2(1.0, 1.0)).y))), (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) / vec2(1.0, 1.0)).y)))) || false), false, true)), false))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(1.0, 1.0) * (injectionSwitch), mat2(1.0) * (vec2(1.0, 1.0) * (injectionSwitch))))) / vec2(1.0, 1.0)).y)), false || (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) / vec2(1.0, 1.0)).y))))), (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-2.3)), bool(false))), 1.0) * (injectionSwitch))), max((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))), (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))))) / vec2(1.0, 1.0), _GLF_IDENTITY(mat2(1.0) * ((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) / vec2(1.0, 1.0)), mix(vec2(_GLF_FUZZED(-82.19), (mat2(1.0) * ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(1.0, 1.0) * (injectionSwitch), _GLF_IDENTITY(vec2(mat3x2(_GLF_IDENTITY(vec2(1.0, 1.0) * (injectionSwitch), max(vec2(1.0, 1.0) * (injectionSwitch), vec2(1.0, 1.0) * (injectionSwitch))), 0.0, 1.0, 1.0, determinant(mat2(0.0, 1.0, 0.0, abs(0.0))))), mix(vec2(_GLF_FUZZED(-6.5), (vec2(mat3x2(_GLF_IDENTITY(vec2(1.0, 1.0) * (injectionSwitch), max(vec2(1.0, 1.0) * (injectionSwitch), vec2(1.0, 1.0) * (injectionSwitch))), 0.0, 1.0, 1.0, determinant(mat2(0.0, 1.0, 0.0, abs(0.0))))))[1]), vec2((vec2(mat3x2(_GLF_IDENTITY(vec2(1.0, 1.0) * (injectionSwitch), max(vec2(1.0, 1.0) * (injectionSwitch), vec2(1.0, 1.0) * (injectionSwitch))), 0.0, 1.0, 1.0, determinant(mat2(0.0, 1.0, 0.0, abs(0.0))))))[0], _GLF_FUZZED(492.915)), bvec2(true, false)))))) / vec2(1.0, 1.0)))[1]), vec2((mat2(1.0) * ((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) / vec2(1.0, 1.0)))[0], _GLF_FUZZED(-12.68)), bvec2(true, false))))).y)))) || false), false, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) / vec2(1.0, 1.0)).y))), (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) / vec2(1.0, 1.0)).y)))) || false), false, true)), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) / vec2(1.0, 1.0)).y))), (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) / vec2(1.0, 1.0)).y)))) || false), false, true)), false))))), false))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(1.0, 1.0) * (injectionSwitch), mat2(1.0) * (vec2(1.0, 1.0) * (injectionSwitch))))) / vec2(1.0, 1.0)).y)), false || (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) / vec2(1.0, 1.0)).y))))), (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-2.3)), bool(false))), 1.0) * (injectionSwitch))), max((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))), (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))))) / vec2(1.0, 1.0), _GLF_IDENTITY(mat2(1.0) * ((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) / vec2(1.0, 1.0)), mix(vec2(_GLF_FUZZED(-82.19), (mat2(1.0) * ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(1.0, 1.0) * (injectionSwitch), _GLF_IDENTITY(vec2(mat3x2(_GLF_IDENTITY(vec2(1.0, 1.0) * (injectionSwitch), max(vec2(1.0, 1.0) * (injectionSwitch), vec2(1.0, 1.0) * (injectionSwitch))), 0.0, 1.0, 1.0, determinant(mat2(0.0, 1.0, 0.0, abs(0.0))))), mix(vec2(_GLF_FUZZED(-6.5), (vec2(mat3x2(_GLF_IDENTITY(vec2(1.0, 1.0) * (injectionSwitch), max(vec2(1.0, 1.0) * (injectionSwitch), vec2(1.0, 1.0) * (injectionSwitch))), 0.0, 1.0, 1.0, determinant(mat2(0.0, 1.0, 0.0, abs(0.0))))))[1]), vec2((vec2(mat3x2(_GLF_IDENTITY(vec2(1.0, 1.0) * (injectionSwitch), max(vec2(1.0, 1.0) * (injectionSwitch), vec2(1.0, 1.0) * (injectionSwitch))), 0.0, 1.0, 1.0, determinant(mat2(0.0, 1.0, 0.0, abs(0.0))))))[0], _GLF_FUZZED(492.915)), bvec2(true, false)))))) / vec2(1.0, 1.0)))[1]), vec2((mat2(1.0) * ((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) / vec2(1.0, 1.0)))[0], _GLF_FUZZED(-12.68)), bvec2(true, false))))).y)))) || false), false, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) / vec2(1.0, 1.0)).y))), (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) / vec2(1.0, 1.0)).y)))) || false), false, true)), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) / vec2(1.0, 1.0)).y))), (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) / vec2(1.0, 1.0)).y)))) || false), false, true)), false))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(1.0, 1.0) * (injectionSwitch), mat2(1.0) * (vec2(1.0, 1.0) * (injectionSwitch))))) / vec2(1.0, 1.0)).y)), false || (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) / vec2(1.0, 1.0)).y))))), (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-2.3)), bool(false))), 1.0) * (injectionSwitch))), max((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))), (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))))) / vec2(1.0, 1.0), _GLF_IDENTITY(mat2(1.0) * ((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) / vec2(1.0, 1.0)), mix(vec2(_GLF_FUZZED(-82.19), (mat2(1.0) * ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(1.0, 1.0) * (injectionSwitch), _GLF_IDENTITY(vec2(mat3x2(_GLF_IDENTITY(vec2(1.0, 1.0) * (injectionSwitch), max(vec2(1.0, 1.0) * (injectionSwitch), vec2(1.0, 1.0) * (injectionSwitch))), 0.0, 1.0, 1.0, determinant(mat2(0.0, 1.0, 0.0, abs(0.0))))), mix(vec2(_GLF_FUZZED(-6.5), (vec2(mat3x2(_GLF_IDENTITY(vec2(1.0, 1.0) * (injectionSwitch), max(vec2(1.0, 1.0) * (injectionSwitch), vec2(1.0, 1.0) * (injectionSwitch))), 0.0, 1.0, 1.0, determinant(mat2(0.0, 1.0, 0.0, abs(0.0))))))[1]), vec2((vec2(mat3x2(_GLF_IDENTITY(vec2(1.0, 1.0) * (injectionSwitch), max(vec2(1.0, 1.0) * (injectionSwitch), vec2(1.0, 1.0) * (injectionSwitch))), 0.0, 1.0, 1.0, determinant(mat2(0.0, 1.0, 0.0, abs(0.0))))))[0], _GLF_FUZZED(492.915)), bvec2(true, false)))))) / vec2(1.0, 1.0)))[1]), vec2((mat2(1.0) * ((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) / vec2(1.0, 1.0)))[0], _GLF_FUZZED(-12.68)), bvec2(true, false))))).y)))) || false), false, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) / vec2(1.0, 1.0)).y))), (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) / vec2(1.0, 1.0)).y)))) || false), false, true)), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) / vec2(1.0, 1.0)).y))), (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) / vec2(1.0, 1.0)).y)))) || false), false, true)), false))))), false)))))))))), false || (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) / vec2(1.0, 1.0)), vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) / vec2(1.0, 1.0)))).y))), (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) / vec2(1.0, 1.0), mix(vec2(_GLF_FUZZED(6.1), ((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) / vec2(1.0, 1.0))[1]), vec2(((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) / vec2(1.0, 1.0))[0], _GLF_FUZZED((536.712 / -789.321))), bvec2(true, false)))).y)))) || false), false, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) / vec2(1.0, 1.0)).y))), (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) / vec2(1.0, 1.0)).y)))) || false), false, true)), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) / vec2(1.0, 1.0)).y)), (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) / vec2(1.0, 1.0)).y))) && true)), (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) / vec2(1.0, 1.0)).y)))) && _GLF_IDENTITY(true, (true) && true)), (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) / vec2(1.0, 1.0)).y)))) || false), false, true)), false)))))))), false, true)))))))))
                    {
                     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_WRAPPED_IF_FALSE(false))))
                      {
                      }
                     else
                      {
                       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true))))
                        {
                         if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))))
                          {
                           if(_GLF_WRAPPED_IF_FALSE(false))
                            {
                            }
                           else
                            {
                             barrier();
                            }
                          }
                         else
                          {
                          }
                        }
                       else
                        {
                        }
                      }
                    }
                   else
                    {
                    }
                  }
                }
              }
            }
           else
            {
            }
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   else
    {
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 uint total_threads = num_workgroup * workgroup_size;
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(7), int(7))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, 0 ^ (_GLF_IDENTITY(_injected_loop_counter, max(_injected_loop_counter, _injected_loop_counter)))) < 1); _injected_loop_counter ++)
      {
       do
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, min(1, 1))))))), int(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) | (1))))), int(_GLF_ZERO(0.0, injectionSwitch.x))), ivec2(0, 0) ^ (ivec2(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) | (1))))), int(_GLF_ZERO(0.0, injectionSwitch.x)))))) * _GLF_IDENTITY(ivec2(1, 1), min(_GLF_IDENTITY(ivec2(1, 1), (_GLF_IDENTITY(ivec2(1, 1), (ivec2(1, 1)) << ivec2(0, 0))) ^ ivec2(0, 0)), ivec2(1, 1))))))); _injected_loop_counter ++)
          {
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
            {
             if(subgroup_local_id + 1 < subgroup_size)
              {
               if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), true && ((false))))) || false)))))
                {
                }
               else
                {
                 do
                  {
                   buf[(gid + 1) % total_threads] = 2;
                  }
                 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))));
                }
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, 0.0, 0.0, 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), sin(0.0), log(1.0))))))))
                    {
                     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                      {
                       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
                        {
                        }
                       else
                        {
                         if(_GLF_WRAPPED_IF_TRUE(true))
                          {
                           do
                            {
                             do
                              {
                               if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, true && (true))))
                                {
                                 subgroupAll(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))));
                                }
                               else
                                {
                                }
                              }
                             while(_GLF_WRAPPED_LOOP(false));
                            }
                           while(_GLF_WRAPPED_LOOP(false));
                          }
                         else
                          {
                          }
                        }
                      }
                    }
                   else
                    {
                    }
                  }
                 else
                  {
                  }
                }
               else
                {
                }
               do
                {
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   do
                    {
                     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      {
                      }
                     else
                      {
                       if(_GLF_WRAPPED_IF_TRUE(true))
                        {
                         if(_GLF_WRAPPED_IF_TRUE(true))
                          {
                           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(_GLF_IDENTITY(1, (1) << 0)))) << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) >> 0))) >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), clamp(_GLF_IDENTITY(int(7), int(7)), _GLF_IDENTITY(int(7), int(7)), _GLF_IDENTITY(int(7), int(7)))), max(_GLF_IDENTITY(int(7), int(7)), _GLF_IDENTITY(int(7), int(7)))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(7, ~ (_GLF_IDENTITY(~ (7), clamp(~ (7), ~ (7), ~ (7)))))), int(7)), clamp(_GLF_IDENTITY(int(7), int(7)), _GLF_IDENTITY(int(7), int(7)), _GLF_IDENTITY(int(7), int(7)))), max(_GLF_IDENTITY(int(7), int(7)), _GLF_IDENTITY(int(7), int(7)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), clamp(_GLF_IDENTITY(int(7), int(7)), _GLF_IDENTITY(int(7), int(7)), _GLF_IDENTITY(int(7), int(7)))), max(_GLF_IDENTITY(int(7), int(7)), _GLF_IDENTITY(int(7), int(7)))))))); _injected_loop_counter ++)
                            {
                             do
                              {
                               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                                {
                                 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                  {
                                  }
                                 else
                                  {
                                   if(_GLF_WRAPPED_IF_TRUE(true))
                                    {
                                     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-4.6)), float(injectionSwitch.y), bool(true)))) / 1.0)))))
                                      {
                                      }
                                     else
                                      {
                                       do
                                        {
                                         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))))), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
                                          {
                                          }
                                         else
                                          {
                                           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4(injectionSwitch.x, 0.0, exp(0.0), 0.0, 1.0, 0.0, 0.0, abs(0.0), abs(exp(0.0)), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))), vec3(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0)), dot(vec3(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))), vec3(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0))))), min(float(mat4(injectionSwitch.x, 0.0, exp(0.0), 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(abs(0.0), (abs(0.0)) - 0.0), abs(exp(0.0)), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))), vec3(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0)), dot(vec3(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))), vec3(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0))))), float(mat4(injectionSwitch.x, 0.0, exp(0.0), 0.0, 1.0, 0.0, 0.0, abs(0.0), abs(exp(0.0)), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))), vec3(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0)), dot(vec3(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))), vec3(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0)))))))) > injectionSwitch.y), ! (! (! (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4(injectionSwitch.x, 0.0, exp(0.0), 0.0, 1.0, 0.0, 0.0, abs(0.0), abs(exp(0.0)), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))), vec3(_GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0))), injectionSwitch.x), 0.0, 1.0)), dot(vec3(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))), vec3(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0))))), min(float(mat4(injectionSwitch.x, 0.0, exp(0.0), 0.0, 1.0, 0.0, 0.0, abs(0.0), abs(exp(0.0)), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))), vec3(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0)), dot(vec3(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))), vec3(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0))))), float(mat4(injectionSwitch.x, 0.0, exp(0.0), 0.0, 1.0, 0.0, 0.0, abs(0.0), abs(exp(0.0)), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))), vec3(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0)), dot(vec3(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))), vec3(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0)))))))) > injectionSwitch.y))))) || false)))), true && (bool(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || false))))))), ! (! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4(injectionSwitch.x, 0.0, exp(0.0), 0.0, 1.0, 0.0, 0.0, abs(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)) * (0.0))) * _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, log(1.0))), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, log(1.0)))))), abs(exp(0.0)), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))), vec3(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0)), dot(vec3(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))), vec3(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0))))), min(float(mat4(injectionSwitch.x, 0.0, exp(0.0), 0.0, 1.0, 0.0, 0.0, abs(0.0), abs(exp(0.0)), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))), vec3(_GLF_ZERO(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), injectionSwitch.x), 0.0, 1.0)), dot(vec3(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))), vec3(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0))))), float(mat4(injectionSwitch.x, 0.0, exp(0.0), 0.0, 1.0, 0.0, 0.0, abs(0.0), abs(exp(0.0)), 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))), vec3(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0)), dot(vec3(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))), vec3(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0)))))))) > injectionSwitch.y), ! (! (! (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4(injectionSwitch.x, 0.0, exp(0.0), 0.0, 1.0, 0.0, 0.0, abs(0.0), abs(exp(0.0)), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))), vec3(_GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0))), injectionSwitch.x), 0.0, 1.0)), dot(vec3(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))), vec3(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0))))), min(float(mat4(injectionSwitch.x, 0.0, exp(0.0), 0.0, 1.0, 0.0, 0.0, abs(0.0), abs(exp(0.0)), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))), vec3(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0)), dot(vec3(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))), vec3(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0))))), float(mat4(injectionSwitch.x, 0.0, exp(0.0), 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-8.0) : 0.0)), 0.0)), abs(0.0), abs(exp(0.0)), 1.0, 0.0, _GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, 0.0 + (0.0)))), 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))), vec3(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0)), dot(vec3(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))), vec3(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0)))))))) > injectionSwitch.y))))) || false)))), true && (bool(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || false)))))))))))))), ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-4115.5689) : injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-6506.0366, -8.7)))).x, mix(float(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-6506.0366, -8.7)))).x), float(_GLF_FUZZED((-18.76 * 78.67))), bool(false))) > injectionSwitch.y), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((- vec2(5261.2112, 2.0)).s), _GLF_FUZZED(-154.227)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y))), false || (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || false)))), _GLF_IDENTITY(true, false || (true)) && (bool(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false || (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || false)), false || (false || _GLF_IDENTITY((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || false)), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || false)), ((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || false))) || false)))))))))))))))) || false)), true && (! _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4(injectionSwitch.x, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(tanh((-6.7 - -8.9))) : 0.0)), exp(0.0), 0.0, 1.0, 0.0, 0.0, abs(0.0), abs(exp(0.0)), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))), vec3(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0)), dot(vec3(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))), vec3(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))), (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))))) + 0.0)), 0.0, 1.0))))), min(float(mat4(injectionSwitch.x, 0.0, exp(0.0), 0.0, 1.0, 0.0, 0.0, abs(0.0), abs(exp(0.0)), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))), vec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 1.0)), dot(vec3(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))), vec3(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0))))), float(mat4(injectionSwitch.x, 0.0, exp(0.0), 0.0, 1.0, 0.0, 0.0, abs(0.0), abs(exp(0.0)), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))), vec3(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0)), dot(vec3(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))), vec3(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0)))))))) > injectionSwitch.y), ! (! (! (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4(injectionSwitch.x, _GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, min(0.0, 0.0)))), exp(0.0), 0.0, 1.0, 0.0, 0.0, abs(0.0), abs(exp(0.0)), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))), vec3(_GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0))), injectionSwitch.x), 0.0, 1.0)), dot(vec3(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))), vec3(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0))))), min(float(mat4(injectionSwitch.x, 0.0, exp(0.0), 0.0, 1.0, 0.0, 0.0, abs(0.0), abs(exp(0.0)), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(float(52150))), bool(false))), 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))), vec3(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0)), dot(vec3(0.0, 0.0, determinant(mat2(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0, 1.0))), vec3(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0))))), float(mat4(injectionSwitch.x, 0.0, exp(_GLF_IDENTITY(0.0, (0.0) - 0.0)), 0.0, 1.0, 0.0, 0.0, abs(0.0), abs(exp(0.0)), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))), vec3(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0)), dot(vec3(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))), vec3(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0)))))))) > injectionSwitch.y))))) || false)))), true && (bool(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 1.0))))).x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || false))))))), ! (! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4(injectionSwitch.x, 0.0, exp(0.0), 0.0, 1.0, 0.0, 0.0, abs(0.0), abs(exp(0.0)), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(true, bool(bool(true))) ? 1.0 : _GLF_FUZZED(617.793))), 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))), vec3(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0)), dot(vec3(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))), vec3(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0))))), min(float(mat4(injectionSwitch.x, 0.0, exp(0.0), 0.0, 1.0, 0.0, 0.0, abs(0.0), abs(exp(0.0)), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))), vec3(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0)), dot(vec3(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))), vec3(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, float(mat4(1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0))), 1.0))), float(_GLF_FUZZED(71.17)), bool(false)))))))), float(mat4(injectionSwitch.x, 0.0, exp(0.0), 0.0, 1.0, 0.0, 0.0, abs(0.0), abs(exp(0.0)), 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, determinant(_GLF_IDENTITY(mat2(1.0, 0.0, 0.0, 1.0), _GLF_IDENTITY((_GLF_IDENTITY(mat2(1.0, 0.0, 0.0, 1.0), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(1.0, 0.0, 0.0, 1.0)))), ((_GLF_IDENTITY(mat2(1.0, 0.0, 0.0, 1.0), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(1.0, 0.0, 0.0, 1.0))))) - mat2(0.0, 0.0, 0.0, 0.0)) / mat2(1.0, 1.0, 1.0, 1.0)))), vec3(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0)), dot(vec3(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))), vec3(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0)))))))) > injectionSwitch.y), ! (! (! (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4(injectionSwitch.x, 0.0, exp(0.0), 0.0, 1.0, 0.0, 0.0, abs(0.0), _GLF_IDENTITY(abs(exp(0.0)), (false ? _GLF_FUZZED(asin(2.6)) : abs(exp(0.0)))), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))), vec3(_GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0))), injectionSwitch.x), 0.0, 1.0)), dot(vec3(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))), _GLF_IDENTITY(vec3(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0), mix(vec3(_GLF_FUZZED(1.3), (vec3(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0))[1], (vec3(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0))[2]), vec3((vec3(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0))[0], _GLF_FUZZED(5.3), _GLF_FUZZED(400.517)), bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false))))))), min(float(mat4(injectionSwitch.x, 0.0, exp(0.0), 0.0, 1.0, 0.0, 0.0, abs(0.0), abs(exp(0.0)), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))), vec3(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0)), dot(vec3(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), determinant(mat2(1.0, 0.0, 0.0, 1.0))), vec3(_GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2x4(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-1683.6914))))), 0.0, 0.0, 0.0, 1.0, tan(0.0), tan(length(vec2(0.0, 0.0))), 0.0))), injectionSwitch.x), 0.0, 1.0))))), float(mat4(injectionSwitch.x, 0.0, exp(0.0), 0.0, 1.0, 0.0, 0.0, abs(0.0), abs(exp(0.0)), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))), vec3(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0)), dot(vec3(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))), vec3(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0)))))))) > injectionSwitch.y))))) || false)))), true && (bool(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || false)))))))))))))), ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-4115.5689) : injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-6506.0366, -8.7)))).x > injectionSwitch.y), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).y), (! (injectionSwitch.x > injectionSwitch.y)) || false)))), true && (bool(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false || (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || false)), _GLF_IDENTITY(false || (false || _GLF_IDENTITY((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || false)), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || false)), ((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || false))) || false))))), ! (! (false || (false || _GLF_IDENTITY((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || false)), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || false)), ((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || false))) || false))))))))))))))))))) || false)), ((! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4(injectionSwitch.x, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(tanh((-6.7 - -8.9))) : 0.0)), exp(0.0), 0.0, 1.0, 0.0, 0.0, abs(0.0), abs(exp(0.0)), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))), vec3(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0)), dot(vec3(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))), vec3(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))), (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))))) + 0.0)), 0.0, 1.0))))), min(float(mat4(injectionSwitch.x, 0.0, exp(0.0), 0.0, 1.0, 0.0, 0.0, abs(0.0), abs(exp(0.0)), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))), vec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 1.0)), dot(vec3(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))), vec3(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0))))), float(mat4(injectionSwitch.x, 0.0, exp(0.0), 0.0, 1.0, 0.0, 0.0, abs(0.0), abs(exp(0.0)), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))), vec3(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0)), dot(vec3(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))), vec3(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0)))))))) > injectionSwitch.y), ! (! (! (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4(injectionSwitch.x, _GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, min(0.0, 0.0)))), exp(0.0), 0.0, 1.0, 0.0, 0.0, abs(0.0), abs(exp(0.0)), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))), vec3(_GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0))), injectionSwitch.x), 0.0, 1.0)), dot(vec3(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))), vec3(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0))))), min(float(mat4(injectionSwitch.x, 0.0, exp(0.0), 0.0, 1.0, 0.0, 0.0, abs(0.0), abs(exp(0.0)), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(float(52150))), bool(false))), 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))), vec3(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0)), dot(vec3(0.0, 0.0, determinant(mat2(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0, 1.0))), vec3(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0))))), float(mat4(injectionSwitch.x, 0.0, exp(_GLF_IDENTITY(0.0, (0.0) - 0.0)), 0.0, 1.0, 0.0, 0.0, abs(0.0), abs(exp(0.0)), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))), vec3(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0)), dot(vec3(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))), vec3(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0)))))))) > injectionSwitch.y))))) || false)))), true && (bool(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 1.0))))).x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || false))))))), ! (! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4(injectionSwitch.x, 0.0, exp(0.0), 0.0, 1.0, 0.0, 0.0, abs(0.0), abs(exp(0.0)), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(true, bool(bool(true))) ? 1.0 : _GLF_FUZZED(617.793))), 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))), vec3(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0)), dot(vec3(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))), vec3(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0))))), min(float(mat4(injectionSwitch.x, 0.0, exp(0.0), 0.0, 1.0, 0.0, 0.0, abs(0.0), abs(exp(0.0)), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))), vec3(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0)), dot(vec3(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))), vec3(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, float(mat4(1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0))), 1.0))), float(_GLF_FUZZED(71.17)), bool(false)))))))), float(mat4(injectionSwitch.x, 0.0, exp(0.0), 0.0, 1.0, 0.0, 0.0, abs(0.0), abs(exp(0.0)), 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, determinant(_GLF_IDENTITY(mat2(1.0, 0.0, 0.0, 1.0), _GLF_IDENTITY((_GLF_IDENTITY(mat2(1.0, 0.0, 0.0, 1.0), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(1.0, 0.0, 0.0, 1.0)))), ((_GLF_IDENTITY(mat2(1.0, 0.0, 0.0, 1.0), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(1.0, 0.0, 0.0, 1.0))))) - mat2(0.0, 0.0, 0.0, 0.0)) / mat2(1.0, 1.0, 1.0, 1.0)))), vec3(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0)), dot(vec3(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))), vec3(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0)))))))) > injectionSwitch.y), ! (! (! (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4(injectionSwitch.x, 0.0, exp(0.0), 0.0, 1.0, 0.0, 0.0, abs(0.0), _GLF_IDENTITY(abs(exp(0.0)), (false ? _GLF_FUZZED(asin(2.6)) : abs(exp(0.0)))), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))), vec3(_GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0))), injectionSwitch.x), 0.0, 1.0)), dot(vec3(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))), _GLF_IDENTITY(vec3(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0), mix(vec3(_GLF_FUZZED(1.3), (vec3(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0))[1], (vec3(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0))[2]), vec3((vec3(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0))[0], _GLF_FUZZED(5.3), _GLF_FUZZED(400.517)), bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false))))))), min(float(mat4(injectionSwitch.x, 0.0, exp(0.0), 0.0, 1.0, 0.0, 0.0, abs(0.0), abs(exp(0.0)), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))), vec3(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0)), dot(vec3(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), determinant(mat2(1.0, 0.0, 0.0, 1.0))), vec3(_GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2x4(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-1683.6914))))), 0.0, 0.0, 0.0, 1.0, tan(0.0), tan(length(vec2(0.0, 0.0))), 0.0))), injectionSwitch.x), 0.0, 1.0))))), float(mat4(injectionSwitch.x, 0.0, exp(0.0), 0.0, 1.0, 0.0, 0.0, abs(0.0), abs(exp(0.0)), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))), vec3(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0)), dot(vec3(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))), vec3(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0)))))))) > injectionSwitch.y))))) || false)))), true && (bool(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || false)))))))))))))), ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-4115.5689) : injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-6506.0366, -8.7)))).x > injectionSwitch.y), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).y), (! (injectionSwitch.x > injectionSwitch.y)) || false)))), true && (bool(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false || (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || false)), _GLF_IDENTITY(false || (false || _GLF_IDENTITY((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || false)), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || false)), ((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || false))) || false))))), ! (! (false || (false || _GLF_IDENTITY((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || false)), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || false)), ((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || false))) || false))))))))))))))))))) || false))) || false))))))))
                                            {
                                            }
                                           else
                                            {
                                             if(_GLF_WRAPPED_IF_TRUE(true))
                                              {
                                               if(_GLF_WRAPPED_IF_TRUE(true))
                                                {
                                                 do
                                                  {
                                                   if(_GLF_WRAPPED_IF_FALSE(false))
                                                    {
                                                    }
                                                   else
                                                    {
                                                     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), (min(injectionSwitch, injectionSwitch)) * mat2(1.0))), injectionSwitch))) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(-624.362, -34.80)), clamp(true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)) : _GLF_IDENTITY(_GLF_FUZZED(vec2(-624.362, -34.80)), _GLF_IDENTITY(mat2(1.0) * (_GLF_FUZZED(vec2(-624.362, -34.80))), (mat2(1.0) * (_GLF_FUZZED(vec2(-624.362, -34.80)))) * mat2(1.0))), true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(-624.362, -34.80)), true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(-624.362, -34.80)))))), injectionSwitch)))), injectionSwitch)).y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, false))), true, true, true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
                                                      {
                                                      }
                                                     else
                                                      {
                                                       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))))
                                                        {
                                                         if(_GLF_WRAPPED_IF_FALSE(false))
                                                          {
                                                          }
                                                         else
                                                          {
                                                           if(_GLF_WRAPPED_IF_TRUE(true))
                                                            {
                                                             if(_GLF_WRAPPED_IF_FALSE(false))
                                                              {
                                                              }
                                                             else
                                                              {
                                                               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec2(true, true))), (injectionSwitch.x < injectionSwitch.y))))
                                                                {
                                                                 for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                                                                  {
                                                                   if(_GLF_WRAPPED_IF_TRUE(true))
                                                                    {
                                                                     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), mix(vec2((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))[0], (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))[1]), vec2(_GLF_FUZZED(3.3), _GLF_FUZZED(8.9)), bvec2(false, false))), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))))) + vec2(0.0, 0.0), min((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), mix(vec2((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))[0], (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))[1]), vec2(_GLF_FUZZED(3.3), _GLF_FUZZED(8.9)), bvec2(false, false))), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))))) + vec2(0.0, 0.0), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), mix(vec2((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))[0], (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))[1]), vec2(_GLF_FUZZED(3.3), _GLF_FUZZED(8.9)), bvec2(false, false))), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))))) + vec2(0.0, 0.0)))).x < injectionSwitch.y)) && (_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x < injectionSwitch.y), true, false, true)), false || (_GLF_IDENTITY(bool(bvec4((injectionSwitch.x < injectionSwitch.y), true, false, true)), ! (! (bool(bvec4((injectionSwitch.x < injectionSwitch.y), true, false, true)))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
                                                                      {
                                                                       for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(0), int(0))); _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, _GLF_IDENTITY((1) / 1, min((1) / _GLF_IDENTITY(1, (1) / 1), (1) / 1)))); _injected_loop_counter ++)
                                                                        {
                                                                         if(_GLF_WRAPPED_IF_TRUE(true))
                                                                          {
                                                                           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                                                                            {
                                                                             if(_GLF_WRAPPED_IF_TRUE(true))
                                                                              {
                                                                               for(int _injected_loop_counter = _GLF_IDENTITY(_GLF_IDENTITY(0, (0) | 0), (true ? 0 : _GLF_FUZZED((++ _injected_loop_counter)))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                                                                                {
                                                                                 do
                                                                                  {
                                                                                   if(_GLF_WRAPPED_IF_TRUE(true))
                                                                                    {
                                                                                     if(_GLF_WRAPPED_IF_TRUE(true))
                                                                                      {
                                                                                       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))
                                                                                        {
                                                                                        }
                                                                                       else
                                                                                        {
                                                                                         for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(8), int(8)))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(8), int(8))))), bool(bvec2(_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(8), int(8))))), (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(8), int(8)))))) && true), false)))), true && (! (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(8), int(8)), int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(int(8), int(8)), (_GLF_IDENTITY(int(8), int(8))) | (_GLF_IDENTITY(int(8), int(8)))), 0), max(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(int(8), int(8)), (_GLF_IDENTITY(int(8), int(8))) | (_GLF_IDENTITY(int(8), int(8)))), 0), ivec2(_GLF_IDENTITY(_GLF_IDENTITY(int(8), int(8)), (_GLF_IDENTITY(int(8), int(8))) | (_GLF_IDENTITY(int(8), int(8)))), 0)))))))), bool(bvec2(_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(8), _GLF_IDENTITY(_GLF_IDENTITY(int(8), (int(8)) | (int(8))), 1 * (_GLF_IDENTITY(_GLF_IDENTITY(int(8), (int(8)) | (int(8))), (_GLF_IDENTITY(int(8), (int(8)) | (int(8)))) ^ 0))))))), (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(8), int(8)))))) && true), false))))))); _injected_loop_counter --)
                                                                                          {
                                                                                           if(_GLF_WRAPPED_IF_FALSE(false))
                                                                                            {
                                                                                            }
                                                                                           else
                                                                                            {
                                                                                             for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false || (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < 1, bool(bool(_injected_loop_counter < 1)))))); _injected_loop_counter ++)
                                                                                              {
                                                                                               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                                                                                                {
                                                                                                 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                                                                                                  {
                                                                                                   for(int _injected_loop_counter = (0 | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (int(4)) << 0))) >> _GLF_IDENTITY(int(4), int(4)))); _injected_loop_counter ++)
                                                                                                    {
                                                                                                     barrier();
                                                                                                    }
                                                                                                  }
                                                                                                 else
                                                                                                  {
                                                                                                  }
                                                                                                }
                                                                                              }
                                                                                            }
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                     else
                                                                                      {
                                                                                      }
                                                                                    }
                                                                                   else
                                                                                    {
                                                                                    }
                                                                                  }
                                                                                 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))));
                                                                                }
                                                                              }
                                                                             else
                                                                              {
                                                                              }
                                                                            }
                                                                          }
                                                                         else
                                                                          {
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                   else
                                                                    {
                                                                    }
                                                                  }
                                                                }
                                                               else
                                                                {
                                                                }
                                                              }
                                                            }
                                                           else
                                                            {
                                                            }
                                                          }
                                                        }
                                                       else
                                                        {
                                                        }
                                                      }
                                                    }
                                                  }
                                                 while(_GLF_WRAPPED_LOOP(false));
                                                }
                                               else
                                                {
                                                }
                                              }
                                             else
                                              {
                                              }
                                            }
                                          }
                                        }
                                       while(_GLF_WRAPPED_LOOP(false));
                                      }
                                    }
                                   else
                                    {
                                    }
                                  }
                                }
                              }
                             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                            }
                          }
                         else
                          {
                          }
                        }
                       else
                        {
                        }
                      }
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                  }
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
             else
              {
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), clamp(_GLF_IDENTITY(int(6), (_GLF_IDENTITY(int(6), min(_GLF_IDENTITY(int(6), clamp(int(6), int(6), int(_GLF_IDENTITY(6, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (6))))), int(6)))) - 0), int(6), int(6)))))); _injected_loop_counter --)
                {
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                  }
                 else
                  {
                   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                    {
                     if(_GLF_WRAPPED_IF_FALSE(false))
                      {
                      }
                     else
                      {
                       if(_GLF_WRAPPED_IF_TRUE(true))
                        {
                         buf[(gid + 1) % total_threads] = 2;
                        }
                       else
                        {
                        }
                      }
                    }
                  }
                }
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                {
                 do
                  {
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     do
                      {
                       do
                        {
                         if(_GLF_WRAPPED_IF_TRUE(true))
                          {
                           do
                            {
                             if(_GLF_WRAPPED_IF_TRUE(true))
                              {
                               if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) && true)))
                                {
                                }
                               else
                                {
                                 for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                                  {
                                   if(_GLF_WRAPPED_IF_FALSE(false))
                                    {
                                    }
                                   else
                                    {
                                     do
                                      {
                                       if(_GLF_WRAPPED_IF_TRUE(true))
                                        {
                                         if(_GLF_WRAPPED_IF_FALSE(false))
                                          {
                                          }
                                         else
                                          {
                                           if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) && true)))
                                            {
                                            }
                                           else
                                            {
                                             do
                                              {
                                               for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0), ! _GLF_IDENTITY((! (_GLF_WRAPPED_LOOP(_injected_loop_counter != 0))), _GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-6794.4313)), vec2(_GLF_IDENTITY(_GLF_FUZZED(-24.35), max(_GLF_FUZZED(-24.35), _GLF_FUZZED(-24.35))), (injectionSwitch)[1]), bvec2(false, true))).x > injectionSwitch.y)) || (_GLF_IDENTITY((! (_GLF_WRAPPED_LOOP(_injected_loop_counter != 0))), _GLF_IDENTITY(bool(bvec3((! (_GLF_WRAPPED_LOOP(_injected_loop_counter != 0))), false, false)), false || (bool(bvec3((! (_GLF_WRAPPED_LOOP(_injected_loop_counter != 0))), false, false))))))))) && true), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0), bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0), bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0), false, true)))))), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 0, ! (! (_injected_loop_counter != 0)))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0), bool(bvec3(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (0 >> _GLF_IDENTITY(int(5), int(5))) | (_GLF_IDENTITY(_injected_loop_counter, 0 + (_injected_loop_counter)))) != 0), false, true)))), bool(bvec2(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0), bool(bvec3(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (0 >> _GLF_IDENTITY(int(5), int(5))) | (_GLF_IDENTITY(_injected_loop_counter, 0 + (_injected_loop_counter)))) != 0), false, true)))), true)))))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x < injectionSwitch.y)))) && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter != 0))))) || false), true), bvec2(bvec3(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0), true), true))))), false)), bool(bvec4(bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0), bool(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0), true), bvec2(bvec3(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0), true), true))))), _GLF_IDENTITY(false, true && (false)))), false, true, true)))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0), bool(bvec4(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter != 0)))))), true, false, true))), false, true), bvec3(bvec3(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0), false, true))))))))), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0), bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0), bool(bvec3(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (0 >> _GLF_IDENTITY(int(5), int(5))) | (_GLF_IDENTITY(_injected_loop_counter, 0 + (_injected_loop_counter)))) != 0), false, true))))))))))), _GLF_IDENTITY(false, (false) && true)), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 0, false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter != 0, ! (! (_injected_loop_counter != 0))), true && (_GLF_IDENTITY(_injected_loop_counter != 0, ! (! (_injected_loop_counter != 0))))), (_injected_loop_counter != 0) || false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter != 0, bool(bvec4(_injected_loop_counter != 0, false, false, true))), (_injected_loop_counter != 0) || false), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter != 0, (_injected_loop_counter != 0) || false), (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter != 0, bool(bvec2(_injected_loop_counter != 0, true))), (_injected_loop_counter != 0) || false)) || false))))) || false)))), bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, ~ (~ (_injected_loop_counter))) != 0), bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0), false, true)))))), _GLF_IDENTITY(false, (false) && true)), true, false))))); _GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) << (_GLF_IDENTITY(0, (0) | _GLF_IDENTITY(0, ~ (~ (0)))) << _GLF_IDENTITY(int(2), int(2)))))
                                                {
                                                 subgroupAll(true);
                                                }
                                              }
                                             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                                            }
                                          }
                                        }
                                       else
                                        {
                                        }
                                      }
                                     while(_GLF_WRAPPED_LOOP(false));
                                    }
                                  }
                                }
                              }
                             else
                              {
                              }
                            }
                           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                          }
                         else
                          {
                          }
                        }
                       while(_GLF_WRAPPED_LOOP(false));
                      }
                     while(_GLF_WRAPPED_LOOP(false));
                    }
                   else
                    {
                    }
                  }
                 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                }
              }
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
  }
}
