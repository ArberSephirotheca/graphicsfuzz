#version 460
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
struct _GLF_struct_10 {
 mat3x2 _f0;
 float _f1;
} ;

struct _GLF_struct_8 {
 vec3 _f0;
 bvec3 _f1;
 ivec4 _f2;
 vec4 _f3;
 int _f4;
} ;

struct _GLF_struct_7 {
 ivec3 _f0;
} ;

struct _GLF_struct_6 {
 bvec4 _f0;
} ;

struct _GLF_struct_5 {
 mat3x4 _f0;
} ;

struct _GLF_struct_9 {
 ivec2 _f0;
 _GLF_struct_5 _f1;
 mat4x2 _f2;
 _GLF_struct_6 _f3;
 float _f4;
 _GLF_struct_7 _f5;
 _GLF_struct_8 _f6;
} ;

struct _GLF_struct_4 {
 int _f0;
 mat2x3 _f1;
} ;

struct _GLF_struct_2 {
 bvec2 _f0;
 mat3x2 _f1;
 vec3 _f2;
 uvec3 _f3;
} ;

struct _GLF_struct_1 {
 mat3x4 _f0;
 uvec2 _f1;
 ivec2 _f2;
 uvec4 _f3;
 bool _f4;
} ;

struct _GLF_struct_0 {
 bvec4 _f0;
 mat2x4 _f1;
 mat3x4 _f2;
 bvec3 _f3;
 mat3x2 _f4;
} ;

struct _GLF_struct_3 {
 _GLF_struct_0 _f0;
 mat4x2 _f1;
 uint num_workgroup;
 _GLF_struct_1 _f2;
 _GLF_struct_2 _f3;
} ;

struct _GLF_struct_11 {
 mat3 _f0;
 _GLF_struct_3 _f1;
 ivec4 _f2;
 _GLF_struct_4 _f3;
 _GLF_struct_9 _f4;
 uvec4 _f5;
 _GLF_struct_10 _f6;
} ;

#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint gid = gl_GlobalInvocationID.x;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 _GLF_struct_11 _GLF_struct_replacement_11 = _GLF_struct_11(mat3(1.0), _GLF_struct_3(_GLF_struct_0(bvec4(true), mat2x4(1.0), mat3x4(1.0), bvec3(true), mat3x2(1.0)), mat4x2(1.0), gl_NumWorkGroups.x, _GLF_struct_1(mat3x4(1.0), uvec2(1u), ivec2(1), uvec4(1u), true), _GLF_struct_2(bvec2(true), mat3x2(1.0), vec3(1.0), uvec3(1u))), ivec4(1), _GLF_struct_4(1, mat2x3(1.0)), _GLF_struct_9(ivec2(1), _GLF_struct_5(mat3x4(1.0)), mat4x2(1.0), _GLF_struct_6(bvec4(true)), 1.0, _GLF_struct_7(ivec3(1)), _GLF_struct_8(vec3(1.0), bvec3(true), ivec4(1), vec4(1.0), 1)), uvec4(1u), _GLF_struct_10(mat3x2(1.0), 1.0));
 uint workgroup_size = gl_WorkGroupSize.x;
 uint total_threads = _GLF_struct_replacement_11._f1.num_workgroup * workgroup_size;
 if(subgroup_local_id + 1 < subgroup_size)
  {
   buf[(gid + 1) % total_threads] = 2;
   subgroupAll(false);
  }
 else
  {
   buf[(gid + 1) % total_threads] = 2;
   subgroupAll(true);
  }
}
