#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_12 {
 uint _f0;
 uvec3 _f1;
 bool _f2;
 mat3x2 _f3;
 mat4x3 _f4;
 mat2x4 _f5;
} ;

struct _GLF_struct_13 {
 _GLF_struct_12 _f0;
 mat3x4 _f1;
 mat4x3 _f2;
 uvec3 _f3;
 ivec3 _f4;
 uint _f5;
} ;

struct _GLF_struct_10 {
 mat3x2 _f0;
 uint _f1;
 vec2 _f2;
 mat2x4 _f3;
} ;

struct _GLF_struct_9 {
 uint _f0;
} ;

struct _GLF_struct_8 {
 mat2x3 _f0;
 bvec4 _f1;
 float _f2;
 bvec2 _f3;
 mat4 _f4;
 float _f5;
 mat4x2 _f6;
} ;

struct _GLF_struct_7 {
 mat2x3 _f0;
 mat3x2 _f1;
} ;

struct _GLF_struct_11 {
 uvec4 _f0;
 uvec3 _f1;
 _GLF_struct_7 _f2;
 _GLF_struct_8 _f3;
 _GLF_struct_9 _f4;
 _GLF_struct_10 _f5;
} ;

struct _GLF_struct_5 {
 mat4 _f0;
 mat4x2 _f1;
} ;

struct _GLF_struct_6 {
 vec4 _f0;
 _GLF_struct_5 _f1;
 bvec2 _f2;
} ;

struct _GLF_struct_3 {
 mat4x2 _f0;
 mat2x3 _f1;
} ;

struct _GLF_struct_2 {
 mat2 _f0;
 mat2x4 _f1;
 bvec2 _f2;
 uint next_virtual_gid;
 bvec4 _f3;
 ivec2 _f4;
 mat2 _f5;
 mat4x3 _f6;
} ;

struct _GLF_struct_1 {
 uvec3 _f0;
 bvec3 _f1;
} ;

struct _GLF_struct_4 {
 ivec3 _f0;
 uvec2 _f1;
 _GLF_struct_1 _f2;
 _GLF_struct_2 _f3;
 mat2 _f4;
 mat2x3 _f5;
 _GLF_struct_3 _f6;
} ;

struct _GLF_struct_14 {
 _GLF_struct_4 _f0;
 float _f1;
 _GLF_struct_6 _f2;
 _GLF_struct_11 _f3;
 _GLF_struct_13 _f4;
} ;

struct _GLF_struct_0 {
 mat2x4 _f0;
 bool _f1;
 uint subgroup_id;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, true && (false))), bool(_GLF_IDENTITY(bool(bool(false)), bool(bool(bool(bool(false)))))))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), bool(bool(bool(false))))), bool(bvec2(bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(bool(bool(bool(false))), ! (! (bool(bool(bool(false)))))))), false))), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), bool(bool(bool(false))))), bool(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(bool(false), bool(bool(bool(false))))), false), bvec2(bvec2(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(bool(false), bool(bool(bool(false))))), false), _GLF_IDENTITY(bvec2(bvec2(bvec2(bool(_GLF_IDENTITY(bool(false), bool(bool(bool(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, ! (! (false)))))))))), false))), bvec2(bvec4(bvec2(bvec2(bvec2(bool(_GLF_IDENTITY(bool(false), bool(bool(bool(false))))), false))), false, false))))))))), bool(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(bool(bool(bool(false))), true && (bool(bool(bool(false))))))), _GLF_IDENTITY(bool(bvec2(bool(_GLF_IDENTITY(bool(false), bool(bool(bool(false))))), false)), true && (bool(bvec2(bool(_GLF_IDENTITY(bool(false), bool(bool(bool(false))))), false))))), true, true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), bool(bool(bool(false))))), bool(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(bool(false), bool(bool(bool(false))))), false), bvec2(bvec2(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(bool(false), bool(bool(bool(false))))), false), _GLF_IDENTITY(bvec2(bvec2(bvec2(bool(_GLF_IDENTITY(bool(false), bool(bool(bool(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, ! (! (false)))))))))), false))), bvec2(bvec4(bvec2(bvec2(bvec2(bool(_GLF_IDENTITY(bool(false), bool(bool(bool(false))))), false))), false, false))))))))), bool(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(bool(bool(bool(false))), true && (bool(bool(bool(false))))))), _GLF_IDENTITY(bool(bvec2(bool(_GLF_IDENTITY(bool(false), bool(bool(bool(false))))), false)), true && (bool(bvec2(bool(_GLF_IDENTITY(bool(false), bool(bool(bool(false))))), false))))), true, true))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), bool(bool(bool(false))))), bool(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(bool(false), bool(bool(bool(false))))), false), bvec2(bvec2(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(bool(false), bool(bool(bool(false))))), false), _GLF_IDENTITY(bvec2(bvec2(bvec2(bool(_GLF_IDENTITY(bool(false), bool(bool(bool(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, ! (! (false)))))))))), false))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(bvec2(bool(_GLF_IDENTITY(bool(false), bool(bool(bool(false))))), false)), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(bool(_GLF_IDENTITY(bool(false), bool(bool(bool(false))))), false)), bvec2(bvec3(bvec2(bvec2(bool(_GLF_IDENTITY(bool(false), bool(bool(bool(false))))), false)), true))))))), false, false))))))))), bool(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(bool(bool(bool(false))), true && (bool(bool(bool(false))))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(bool(_GLF_IDENTITY(bool(false), bool(bool(bool(false))))), false)), true && (bool(bvec2(bool(_GLF_IDENTITY(bool(false), bool(bool(bool(false))))), false)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(bool(_GLF_IDENTITY(bool(false), bool(bool(bool(false))))), false)), true && (bool(bvec2(bool(_GLF_IDENTITY(bool(false), bool(bool(bool(false))))), false)))), (_GLF_IDENTITY(bool(bvec2(bool(_GLF_IDENTITY(bool(false), bool(bool(bool(false))))), false)), true && (bool(bvec2(bool(_GLF_IDENTITY(bool(false), bool(bool(bool(false))))), false))))) || false))))), true, true)))) && true)))), true), true, _GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true))))))))), bvec2(bvec3(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), bool(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), false || (! (_GLF_IDENTITY(false, true && (false)))))) || false))), false || (false))))))), bool(bvec2(bool(_GLF_IDENTITY(bool(false), bool(bool(bool(false))))), false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, false || (false)))), bool(bvec2(bool(bool(_GLF_IDENTITY(false, false || (false)))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec2(injectionSwitch.x < injectionSwitch.y, true))))))))))), bool(bvec2(bool(_GLF_IDENTITY(bool(false), bool(bool(bool(false))))), false))))), _GLF_IDENTITY(true, ! (! (true)))), _GLF_IDENTITY(true, true && (true)), true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), bool(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false))))), bool(bvec2(bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(bool(bool(bool(false))), _GLF_IDENTITY(! (! (bool(bool(bool(false))))), _GLF_IDENTITY(bool(bvec2(! (! (bool(bool(bool(false))))), false)), ! (! (bool(bvec2(! (! (bool(bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(bool(bvec3(bool(false), true, false)), (bool(bvec3(bool(false), true, false))) || false)))))), false))))))))), false))), true), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), bool(bool(bool(false))))), bool(bvec2(bool(_GLF_IDENTITY(bool(false), bool(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true)))), false))), true), true, true)), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), bool(bool(bool(false))))), bool(bvec2(bool(_GLF_IDENTITY(bool(false), bool(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true)))), false))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), bool(bool(bool(false))))), bool(bvec2(bool(_GLF_IDENTITY(bool(false), bool(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true)))), false)))) || false), true), true, true)), true, false)), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), bool(bool(bool(false))))), bool(bvec2(bool(_GLF_IDENTITY(bool(false), bool(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true)))), false))), true), true, true)), true, false)), true, false)), bvec2(bvec3(bvec2(bvec4(bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), bool(bool(bool(false))))), bool(bvec2(bool(_GLF_IDENTITY(bool(false), bool(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true)))), false))), true), true, true)), true, false)), true, false)), false))))), bvec2(bvec3(bvec2(bvec4(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), bool(bool(bool(_GLF_IDENTITY(false, false || (false))))))), bool(bvec2(bool(_GLF_IDENTITY(bool(false), bool(bool(bool(false))))), false))), true), true, true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), bool(bool(bool(false))))), true && (bool(_GLF_IDENTITY(bool(false), bool(bool(bool(false))))))), bool(bvec2(bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(bool(bool(bool(false))), ! (! (bool(bool(bool(false)))))))), false))), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), bool(bool(bool(false))))), bool(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(false))), bool(bool(bool(false))))), false))), true), true, true)), bvec2(bvec3(bvec2(bvec4(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), bool(bool(bool(_GLF_IDENTITY(false, false || (false))))))), bool(bvec2(bool(_GLF_IDENTITY(bool(false), bool(bool(bool(false))))), false))), true), true, true)), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y))))))))))), bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), bool(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false))))), bool(bvec2(bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(bool(bool(bool(false))), _GLF_IDENTITY(! (! (bool(bool(bool(false))))), _GLF_IDENTITY(bool(bvec2(! (! (bool(bool(bool(false))))), false)), ! (! (bool(bvec2(! (! (bool(bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(bool(bvec3(bool(false), true, false)), (bool(bvec3(bool(false), true, false))) || false)))))), false))))))))), false))), true), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), bool(bool(bool(false))))), bool(bvec2(bool(_GLF_IDENTITY(bool(false), bool(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true)))), false))), true), true, true)), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), bool(bool(bool(false))))), bool(bvec2(bool(_GLF_IDENTITY(bool(false), bool(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true)))), false))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), bool(bool(bool(false))))), bool(bvec2(bool(_GLF_IDENTITY(bool(false), bool(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true)))), false)))) || false), true), true, true)), true, false)), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), bool(bool(bool(false))))), bool(bvec2(bool(_GLF_IDENTITY(bool(false), bool(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true)))), false))), true), true, true)), true, false)), true, false)), bvec2(bvec3(bvec2(bvec4(bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), bool(bool(bool(false))))), bool(bvec2(bool(_GLF_IDENTITY(bool(false), bool(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true)))), false))), true), true, true)), true, false)), true, false)), false))))), bvec2(bvec3(bvec2(bvec4(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), bool(bool(bool(_GLF_IDENTITY(false, false || (false))))))), bool(bvec2(bool(_GLF_IDENTITY(bool(false), bool(bool(bool(false))))), false))), true), true, true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), bool(bool(bool(false))))), true && (bool(_GLF_IDENTITY(bool(false), bool(bool(bool(false))))))), bool(bvec2(bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(bool(bool(bool(false))), ! (! (bool(bool(bool(false)))))))), false))), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), bool(bool(bool(false))))), bool(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(false))), bool(bool(bool(false))))), false))), true), true, true)), bvec2(bvec3(bvec2(bvec4(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), bool(bool(bool(_GLF_IDENTITY(false, false || (false))))))), bool(bvec2(bool(_GLF_IDENTITY(bool(false), bool(bool(bool(false))))), false))), true), true, true)), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y))))))))))))))))))))))
  {
   do
    {
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))) || false))))
        return;
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         do
          {
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 1, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, (true) && true), true, true, true)), ! (! (bool(bvec4(_GLF_IDENTITY(true, (true) && true), true, true, true)))))) && _GLF_IDENTITY((_injected_loop_counter != _GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY((1), ~ (_GLF_IDENTITY(~ ((1)), int(int(~ ((1))))))) << (0 << _GLF_IDENTITY(int(7), int(7))), _GLF_IDENTITY(~ (~ ((1) << (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(7), _GLF_IDENTITY((int(7)), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3((int(7)), 0, 0), max(ivec3((int(7)), 0, 0), _GLF_IDENTITY(ivec3((_GLF_IDENTITY(int(7), min(int(7), _GLF_IDENTITY(int(7), max(int(7), int(7)))))), 0, 0), clamp(ivec3((int(7)), 0, 0), ivec3(_GLF_IDENTITY((int(7)), min(_GLF_IDENTITY((int(7)), (false ? _GLF_FUZZED(78930) : (int(7)))), _GLF_IDENTITY((int(7)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_injected_loop_counter) : (int(7)))))), 0, 0), ivec3((int(7)), 0, 0)))))), clamp(int(_GLF_IDENTITY(ivec3((int(7)), 0, 0), max(ivec3((int(7)), 0, 0), _GLF_IDENTITY(ivec3((int(7)), 0, 0), clamp(ivec3((int(7)), 0, 0), ivec3((int(7)), 0, 0), ivec3((int(7)), 0, 0)))))), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3((int(7)), 0, 0), max(ivec3((int(7)), 0, 0), _GLF_IDENTITY(ivec3((int(7)), 0, 0), clamp(ivec3((int(7)), 0, 0), ivec3((int(7)), 0, 0), ivec3((int(7)), 0, 0)))))), (int(_GLF_IDENTITY(ivec3((int(7)), 0, 0), max(ivec3((int(7)), 0, 0), _GLF_IDENTITY(ivec3((int(7)), 0, 0), clamp(ivec3((int(7)), 0, 0), ivec3((int(7)), 0, 0), ivec3((int(7)), 0, 0))))))) - 0), int(_GLF_IDENTITY(ivec3((int(7)), 0, 0), max(ivec3((int(7)), 0, 0), _GLF_IDENTITY(ivec3((int(7)), 0, 0), clamp(ivec3((int(7)), 0, 0), ivec3((int(7)), 0, 0), ivec3((int(7)), 0, 0))))))))) | (_GLF_IDENTITY(int(7), (_GLF_IDENTITY(int(7), (int(7)) / 1)) * 1))), int(7))))), (~ (~ ((1) << (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(7), (int(7)) | (int(_GLF_IDENTITY(7, ~ (~ (_GLF_IDENTITY(7, _GLF_IDENTITY((7), ((7)) | (_GLF_IDENTITY((7), clamp(_GLF_IDENTITY((7), (true ? (7) : _GLF_FUZZED(-44840))), (7), (7))))) / 1))))))), int(_GLF_IDENTITY(7, clamp(7, 7, 7)))))))) ^ 0)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((_injected_loop_counter != _GLF_IDENTITY(1, _GLF_IDENTITY((1) << (0 << _GLF_IDENTITY(int(7), int(7))), _GLF_IDENTITY(~ (~ ((1) << (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(7), (int(7)) | (int(7))), int(7))))), (~ (~ ((1) << (0 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(7), (int(7)) | (int(_GLF_IDENTITY(7, ~ (~ (_GLF_IDENTITY(7, (7) / 1))))))), min(_GLF_IDENTITY(_GLF_IDENTITY(int(7), _GLF_IDENTITY((int(7)) | (int(_GLF_IDENTITY(7, ~ (~ (_GLF_IDENTITY(7, (7) / 1)))))), int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((int(7)) | (int(_GLF_IDENTITY(7, ~ (~ (_GLF_IDENTITY(7, (7) / 1))))))))), (_GLF_IDENTITY(int(7), (int(7)) | (int(_GLF_IDENTITY(7, ~ (~ (_GLF_IDENTITY(7, (7) / 1)))))))) / 1), _GLF_IDENTITY(int(7), (int(7)) | (_GLF_IDENTITY(int(_GLF_IDENTITY(7, ~ (~ (_GLF_IDENTITY(7, (7) / 1))))), 0 | (int(_GLF_IDENTITY(7, ~ (~ (_GLF_IDENTITY(7, (7) / 1))))))))))), int(7)))))) ^ _GLF_IDENTITY(0, int(ivec4(0, 0, 1, 0))))))), ((_injected_loop_counter != _GLF_IDENTITY(1, _GLF_IDENTITY((1) << (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(7), 0 ^ (int(7))), int(7))), _GLF_IDENTITY(~ (~ ((1) << (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(7), (int(7)) | _GLF_IDENTITY((int(7)), (_GLF_IDENTITY((int(7)), (_GLF_IDENTITY((int(7)), _GLF_IDENTITY(~ (~ ((int(7)))), clamp(~ (~ ((int(7)))), ~ (~ ((int(7)))), ~ (~ ((int(7)))))))) | ((int(7))))) * 1)), int(7))))), (~ _GLF_IDENTITY((~ ((1) << (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(7), (int(7)) | (int(_GLF_IDENTITY(7, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(7, (7) / 1))), max((~ (_GLF_IDENTITY(7, (7) / 1))), (~ (_GLF_IDENTITY(7, (7) / 1))))))))), int(7))))), clamp((~ ((_GLF_IDENTITY(1, max(1, 1))) << (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(7), (int(7)) | (int(_GLF_IDENTITY(7, ~ (~ (_GLF_IDENTITY(7, (7) / 1))))))), int(7))))), (~ ((1) << (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(7), (int(7)) | (int(_GLF_IDENTITY(7, ~ (~ (_GLF_IDENTITY(7, (7) / 1))))))), int(7))))), _GLF_IDENTITY((~ ((1) << (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(7), (int(7)) | (int(_GLF_IDENTITY(7, ~ (~ (_GLF_IDENTITY(7, (7) / 1))))))), int(7))))), (_GLF_IDENTITY((~ ((1) << (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(7), (int(7)) | (int(_GLF_IDENTITY(7, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(7, (7) / 1))), (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(7, (7) / 1))), (~ (~ (_GLF_IDENTITY(7, (7) / 1)))) + 0)) * 1))))), int(7))))), ((~ ((_GLF_IDENTITY(1, (1) | 0)) << (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(7), (int(7)) | (int(_GLF_IDENTITY(7, ~ (~ (_GLF_IDENTITY(7, (7) / 1))))))), int(7)))))) / 1)) | (_GLF_IDENTITY((~ ((1) << (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(7), (int(7)) | (int(_GLF_IDENTITY(7, ~ (~ (_GLF_IDENTITY(7, (7) / 1))))))), int(7))))), 1 * ((~ ((1) << (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(7), (int(7)) | (int(_GLF_IDENTITY(7, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(7, (7) / 1), (true ? _GLF_IDENTITY(7, (7) / 1) : _GLF_FUZZED(_injected_loop_counter))))))))), int(7)))))))))))) ^ 0))))) || false))), bool(bvec4(true && (_injected_loop_counter != _GLF_IDENTITY(1, (1) << (0 << _GLF_IDENTITY(int(7), int(7))))), false, false, true))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, _GLF_IDENTITY((true) && true, false || ((true) && true))), true, true, true)), ! (! (bool(bvec4(_GLF_IDENTITY(true, (true) && true), true, true, true)))))), (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, (true) && true), true, _GLF_IDENTITY(true, (true) || false), true)), ! (! (bool(bvec4(_GLF_IDENTITY(true, (true) && true), _GLF_IDENTITY(true, ! (! (true))), true, true))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && (_injected_loop_counter != _GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> 0), (1) << 0)) << (_GLF_IDENTITY(0, (0) | (0)) << _GLF_IDENTITY(_GLF_IDENTITY(int(7), max(int(_GLF_IDENTITY(7, (true ? _GLF_IDENTITY(7, 1 * (7)) : _GLF_FUZZED(-62514)))), _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(ivec3(int(7), 1, 1)), _GLF_IDENTITY(0, ~ (~ (0))) ^ (int(ivec3(int(7), 1, 1))))))), int(7))), _GLF_IDENTITY(~ _GLF_IDENTITY(_GLF_IDENTITY((~ ((1) << (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(7), (int(7)) | (int(7))), int(7))))), clamp((~ ((1) << (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(7), (int(7)) | (int(7))), int(7))))), (~ ((1) << (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(7), (int(7)) | (int(7))), int(7))))), (~ ((1) << (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(7), (int(7)) | (int(7))), int(7))))))), max((~ ((1) << (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(7), (int(7)) | (int(7))), int(7))))), _GLF_IDENTITY((~ ((1) << (_GLF_IDENTITY(0, clamp(0, 0, 0)) << _GLF_IDENTITY(_GLF_IDENTITY(int(7), (int(7)) | (int(7))), int(_GLF_IDENTITY(7, (7) | int(_GLF_ZERO(0.0, injectionSwitch.x)))))))), ~ (_GLF_IDENTITY(~ ((~ _GLF_IDENTITY((_GLF_IDENTITY((1), int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY((1), (false ? _GLF_FUZZED(8335) : (1))), 1, 0), ivec3(0, 0, 0) | (ivec3(_GLF_IDENTITY((1), (false ? _GLF_FUZZED(8335) : (1))), 1, 0))))) << (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(7), (_GLF_IDENTITY(int(7), (int(7)) | 0)) | (int(7))), int(7)))), 0 | (_GLF_IDENTITY(_GLF_IDENTITY(((1) << (_GLF_IDENTITY(0, (0) - (0 >> _GLF_IDENTITY(int(4), int(4)))) << _GLF_IDENTITY(_GLF_IDENTITY(int(7), (_GLF_IDENTITY(int(7), (int(7)) | 0)) | (int(7))), int(7)))), min(((1) << (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(7), (_GLF_IDENTITY(int(7), (int(7)) | 0)) | (int(7))), int(7)))), _GLF_IDENTITY(((1) << (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(7), (_GLF_IDENTITY(int(7), (int(7)) | 0)) | (int(7))), int(7)))), _GLF_IDENTITY((_GLF_IDENTITY(((1) << (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(7), (_GLF_IDENTITY(int(7), (int(7)) | 0)) | (int(7))), int(7)))), (((1) << (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(7), (_GLF_IDENTITY(int(7), (int(7)) | 0)) | (int(7))), int(7))))) ^ 0)) | (((1) << (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(7), (_GLF_IDENTITY(int(7), (int(7)) | 0)) | (int(7))), int(7))))), min(_GLF_IDENTITY((_GLF_IDENTITY(((1) << (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(7), (_GLF_IDENTITY(int(7), (int(7)) | 0)) | (int(7))), int(7)))), (((1) << (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(7), (_GLF_IDENTITY(int(7), (int(7)) | 0)) | (int(7))), int(7))))) ^ 0)) | (((1) << (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(7), (_GLF_IDENTITY(int(7), (int(7)) | 0)) | (int(7))), int(7))))), clamp((_GLF_IDENTITY(((1) << (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(7), (_GLF_IDENTITY(int(7), (int(7)) | 0)) | (int(7))), int(7)))), (((1) << (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(7), (_GLF_IDENTITY(int(7), (int(7)) | 0)) | (int(7))), int(7))))) ^ 0)) | (((1) << (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(7), (_GLF_IDENTITY(int(7), (int(7)) | 0)) | (int(7))), int(7))))), _GLF_IDENTITY((_GLF_IDENTITY(((1) << (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(7), (_GLF_IDENTITY(int(7), (int(7)) | 0)) | (int(7))), int(7)))), (((1) << (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(7), (_GLF_IDENTITY(int(7), (int(7)) | 0)) | (int(7))), int(7))))) ^ 0)) | (((1) << (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(7), (_GLF_IDENTITY(int(7), (int(7)) | 0)) | (int(7))), int(7))))), 1 * ((_GLF_IDENTITY(((1) << (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(7), (_GLF_IDENTITY(int(7), (int(7)) | 0)) | (int(7))), int(7)))), (((1) << (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(7), (_GLF_IDENTITY(int(7), (int(7)) | 0)) | (int(7))), int(7))))) ^ 0)) | (((1) << (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(7), (_GLF_IDENTITY(int(7), (int(7)) | 0)) | (int(7))), int(7))))))), (_GLF_IDENTITY(((1) << (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(7), (_GLF_IDENTITY(int(7), (int(7)) | 0)) | (int(7))), int(7)))), (((1) << (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(7), (_GLF_IDENTITY(int(7), (int(7)) | 0)) | (int(7))), int(7))))) ^ 0)) | (((1) << (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(7), (_GLF_IDENTITY(int(7), (int(7)) | 0)) | (int(7))), int(7))))))), (_GLF_IDENTITY(((1) << (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(7), (_GLF_IDENTITY(int(7), (int(7)) | 0)) | (int(7))), int(7)))), (((1) << (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(7), (_GLF_IDENTITY(int(7), (int(7)) | 0)) | (int(7))), int(7))))) ^ 0)) | (((1) << (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(7), (_GLF_IDENTITY(int(7), (int(7)) | 0)) | (int(7))), int(7)))))))))), int(ivec3(((1) << (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(7), (_GLF_IDENTITY(int(7), (int(7)) | 0)) | (int(7))), int(7)))), 1, 0))))))), (1 ^ (0 ^ 1)) | (~ ((~ _GLF_IDENTITY(((1) << (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(7), (_GLF_IDENTITY(int(7), (int(7)) | 0)) | (int(7))), int(7)))), 0 | (_GLF_IDENTITY(((1) << (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(7), _GLF_IDENTITY((_GLF_IDENTITY(int(7), (int(7)) | 0)), clamp((_GLF_IDENTITY(int(7), (int(7)) | 0)), _GLF_IDENTITY((_GLF_IDENTITY(int(7), (int(7)) | 0)), ((_GLF_IDENTITY(int(7), (int(7)) | 0))) * 1), (_GLF_IDENTITY(int(7), (int(7)) | 0)))) | (int(7))), int(7)))), int(ivec3(((1) << (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, min(0, 0))) - 0) << _GLF_IDENTITY(_GLF_IDENTITY(int(7), (_GLF_IDENTITY(int(7), (int(7)) | 0)) | (int(7))), int(7)))), _GLF_IDENTITY(1, (1) | (1)), 0))))))))))))), (~ (~ ((1) << (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(7), (int(7)) | _GLF_IDENTITY(_GLF_IDENTITY((int(7)), ((int(7))) | ((int(7)))), (_GLF_IDENTITY((int(7)), ((int(7))) | ((int(7))))) ^ 0)), int(7)))))) ^ 0)))), bool(bvec4(true && (_injected_loop_counter != _GLF_IDENTITY(_GLF_IDENTITY(1, (1) << (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), (_GLF_IDENTITY(int(7), int(7))) * 1) : _GLF_FUZZED(-94922))))), min(_GLF_IDENTITY(1, (1) << (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), (_GLF_IDENTITY(int(7), int(7))) * 1) : _GLF_FUZZED(-94922))))), _GLF_IDENTITY(1, (1) << (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), (_GLF_IDENTITY(int(7), int(7))) * 1) : _GLF_FUZZED(-94922)))))))), false, false, true)))) || false))); _injected_loop_counter ++)
            {
             barrier();
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             return;
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(false))
      return;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       return;
      }
     else
      {
      }
    }
   do
    {
     if(_GLF_DEAD(false))
      return;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  return;
 do
  {
   for(int _injected_loop_counter = _GLF_IDENTITY(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(1, 1, 0), ivec3(ivec3(ivec3(1, 1, 0))))), clamp(int(ivec3(1, 1, 0)), int(ivec3(1, 1, 0)), int(ivec3(1, 1, _GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, (0) >> 0))))))))))), 1)), _GLF_IDENTITY((true ? 1 : _GLF_FUZZED(-78477)), ((true ? 1 : _GLF_FUZZED(-78477))) / 1)); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > _GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0)))), false || (_injected_loop_counter > _GLF_IDENTITY(0, _GLF_IDENTITY(clamp(0, 0, _GLF_IDENTITY(0, (false ? _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) - 0)), (_GLF_IDENTITY(true, ! (! (true))) ? _GLF_FUZZED(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) - 0)) : _GLF_IDENTITY(_GLF_FUZZED(_injected_loop_counter), (_GLF_FUZZED(_injected_loop_counter)) | (_GLF_FUZZED(_injected_loop_counter))))) : 0))), (clamp(0, 0, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) - 0)) : 0)))) | 0))))); _injected_loop_counter --)
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        return;
      }
     else
      {
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      break;
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 _GLF_struct_0 _GLF_struct_replacement_0 = _GLF_struct_0(mat2x4(1.0), true, gl_SubgroupID);
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true)))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      return;
    }
  }
 else
  {
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   for(int _injected_loop_counter = (0 | 0); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false))))))
      return;
    }
   else
    {
    }
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false)))) && true)) || false))
    return;
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), min(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(vec4((injectionSwitch) * mat2(1.0), 1.0, 1.0))), _GLF_IDENTITY((injectionSwitch) * mat2(1.0), clamp((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))))), injectionSwitch)).y))))))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - sqrt(0.0))))))
        {
         return;
        }
       else
        {
        }
      }
    }
   else
    {
    }
   return;
  }
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(false)), bool(bvec2(! (_GLF_WRAPPED_IF_FALSE(false)), false))))))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             for(int _injected_loop_counter = int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((383.258 * 6.6)), _GLF_FUZZED(-532.272)), vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))[0], clamp((injectionSwitch)[_GLF_IDENTITY(0, (0) | (0))], (injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), bvec2(true, true))).y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
              {
               if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(3.8)), float(injectionSwitch.x), bool(true)))), float(_GLF_FUZZED(vec4(794.227, 546.982, -651.128, 0.1).p)), bool(false))) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(3.8)), float(injectionSwitch.x), bool(true)))), float(_GLF_FUZZED(vec4(794.227, 546.982, -651.128, 0.1).p)), bool(false))) > injectionSwitch.y)))))))
                break;
               if(_GLF_DEAD(false))
                break;
               do
                {
                 return;
                }
               while(_GLF_WRAPPED_LOOP(false));
               if(_GLF_DEAD(false))
                break;
              }
            }
          }
        }
      }
    }
   else
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     else
      {
      }
    }
  }
 if(_GLF_DEAD(false))
  return;
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((_GLF_IDENTITY(0, (0) | (0)) | 0) >> _GLF_IDENTITY(int(4), int(4)))); _injected_loop_counter --)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) && true)))))
    {
     if(_GLF_DEAD(false))
      break;
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 do
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2(injectionSwitch.y, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0), transpose(transpose(mat2(injectionSwitch.y, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0))))))))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)))
    return;
   do
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           return;
          }
         else
          {
          }
        }
      }
     else
      {
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    break;
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) || false)));
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, max(gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) ^ 0u)));
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), false), bvec2(bvec3(bvec2((injectionSwitch.x > injectionSwitch.y), false), false))))))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
    return;
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         do
          {
           return;
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         return;
        }
       else
        {
        }
      }
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 0.0))).x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _injected_loop_counter, _injected_loop_counter)) > 0, (_injected_loop_counter > 0) && true), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _injected_loop_counter, _injected_loop_counter)) > 0, (_injected_loop_counter > 0) && true), (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _injected_loop_counter, _injected_loop_counter)) > 0, (_injected_loop_counter > 0) && true)) || false)) || false)); _injected_loop_counter --)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0))) * (injectionSwitch), mat2(1.0) * (mat2(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0))) * (injectionSwitch))), vec2(mat2x3(mat2(1.0) * (injectionSwitch), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0)))).x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
      {
       do
        {
         do
          {
           return;
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
            continue;
          }
         while(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0)))) + (injectionSwitch)).x > injectionSwitch.y))), (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y)))) || false))))) && true), false || (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0)))) + (injectionSwitch)).x > injectionSwitch.y))), (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x, max(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x)) > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y)))) || false))))) && true))));
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            return;
           continue;
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             return;
            }
           else
            {
            }
          }
         if(_GLF_DEAD(false))
          continue;
        }
       while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(3266.9973), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-1.1)), bvec2(true, false))).x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))), _GLF_IDENTITY((_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)))), ((_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x)) > injectionSwitch.y))))) || false) && true));
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-107.991)), bool(false))) > injectionSwitch.y))), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), max(_GLF_IDENTITY(min(injectionSwitch, injectionSwitch), mix(vec2(_GLF_FUZZED(4928.3285), _GLF_FUZZED(-1.4)), vec2((min(injectionSwitch, injectionSwitch))[0], (min(injectionSwitch, injectionSwitch))[1]), bvec2(true, true))), min(injectionSwitch, injectionSwitch)))).x < injectionSwitch.y))))))
      continue;
    }
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
      continue;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         do
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))
              return;
             return;
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))))
              {
              }
             else
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  return;
                 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 >> _GLF_IDENTITY(int(5), int(5)))); _injected_loop_counter --)
                  {
                   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 1, true && (_GLF_IDENTITY(_injected_loop_counter != 1, (_GLF_IDENTITY(_injected_loop_counter != 1, false || (_injected_loop_counter != 1))) && true)))); _injected_loop_counter ++)
                    {
                     do
                      {
                       if(_GLF_DEAD(false))
                        continue;
                       return;
                      }
                     while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(false)))));
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      continue;
                    }
                  }
                 do
                  {
                   if(_GLF_DEAD(false))
                    return;
                  }
                 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                 if(_GLF_DEAD(false))
                  return;
                }
              }
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
        }
      }
     do
      {
       if(_GLF_DEAD(false))
        return;
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   else
    {
    }
  }
 else
  {
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         do
          {
           return;
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       for(int _injected_loop_counter = _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), 0 ^ (_GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), max(int(_GLF_ONE(1.0, injectionSwitch.y)), int(_GLF_ONE(1.0, injectionSwitch.y)))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         return;
        }
       if(_GLF_DEAD(false))
        return;
      }
     else
      {
      }
    }
   return;
  }
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, (workgroup_size) / 1u) * workgroup_id;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
  }
 do
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY(_GLF_IDENTITY((! (false)), true && ((! (false)))), true && ((! (false)))))), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), bool(bool(_GLF_IDENTITY((false), ((false)) || false)))))))))), _GLF_IDENTITY(false, ! (! (false))), false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, _GLF_IDENTITY(0.0, (0.0) - length(vec3(0.0, 0.0, 0.0)))) + (injectionSwitch)), _GLF_IDENTITY((false ? _GLF_FUZZED(vec2(-8.2, -347.659)) : injectionSwitch), clamp((false ? _GLF_FUZZED(vec2(-8.2, -347.659)) : _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)), injectionSwitch))[0], _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))[1], (injectionSwitch[1]) / 1.0), float(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))[1], (injectionSwitch[1]) / 1.0), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))[1], (injectionSwitch[1]) / 1.0)) / exp(0.0)), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))[1], (injectionSwitch[1]) / 1.0)), float(_GLF_FUZZED(2.8)), bool(false))), 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), vec3(vec4(vec3(0.0, 1.0, 0.0), 0.0)))) - vec3(0.0, 0.0, 0.0)), vec3(0.0, 1.0, log(1.0))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, log(1.0)))), 1.0)))))), _GLF_IDENTITY((false ? _GLF_FUZZED(vec2(-8.2, -347.659)) : injectionSwitch), mix(vec2(((false ? _GLF_FUZZED(vec2(_GLF_IDENTITY(-8.2, mix(float(-8.2), float(_GLF_FUZZED(9.6)), bool(false))), -347.659)) : injectionSwitch))[0], (_GLF_IDENTITY((false ? _GLF_FUZZED(vec2(-8.2, -347.659)) : injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : (false ? _GLF_FUZZED(vec2(-8.2, -347.659)) : injectionSwitch))))[1]), vec2(_GLF_IDENTITY(_GLF_FUZZED(85.52), float(_GLF_IDENTITY(float(_GLF_FUZZED(85.52)), clamp(float(_GLF_FUZZED(85.52)), float(_GLF_FUZZED(85.52)), float(_GLF_FUZZED(85.52)))))), _GLF_FUZZED(-9842.6458)), bvec2(false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, false))), false, false)))))), (false ? _GLF_FUZZED(vec2(-8.2, -347.659)) : injectionSwitch)))).y), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(vec2(-8.2, -347.659)) : injectionSwitch), vec2(0.0, 0.0) + (_GLF_IDENTITY((false ? _GLF_FUZZED(vec2(-8.2, -347.659)) : injectionSwitch), max((false ? _GLF_FUZZED(vec2(-8.2, -347.659)) : injectionSwitch), (false ? _GLF_FUZZED(vec2(-8.2, -347.659)) : injectionSwitch))))), clamp((false ? _GLF_FUZZED(vec2(-8.2, -347.659)) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), vec2(mat2(min(injectionSwitch, injectionSwitch), _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(exp2(-808.730)))), _GLF_IDENTITY(1.0, min(1.0, 1.0)))), 0.0))))[1], (injectionSwitch[1]) / 1.0)))), _GLF_IDENTITY((false ? _GLF_FUZZED(vec2(-8.2, -347.659)) : injectionSwitch), mix(vec2(((false ? _GLF_FUZZED(vec2(-8.2, -347.659)) : injectionSwitch))[0], ((_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false) ? _GLF_IDENTITY(_GLF_FUZZED(vec2(-8.2, -347.659)), min(_GLF_IDENTITY(_GLF_FUZZED(vec2(-8.2, -347.659)), vec2(0.0, 0.0) + (_GLF_FUZZED(vec2(-8.2, -347.659)))), _GLF_FUZZED(vec2(-8.2, -347.659)))) : injectionSwitch, _GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false) ? _GLF_IDENTITY(_GLF_FUZZED(vec2(-8.2, -347.659)), min(_GLF_IDENTITY(_GLF_FUZZED(vec2(-8.2, -347.659)), vec2(0.0, 0.0) + (_GLF_FUZZED(vec2(-8.2, -347.659)))), _GLF_FUZZED(vec2(-8.2, -347.659)))) : injectionSwitch, max(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false) ? _GLF_IDENTITY(_GLF_FUZZED(vec2(-8.2, -347.659)), min(_GLF_IDENTITY(_GLF_FUZZED(vec2(-8.2, -347.659)), vec2(0.0, 0.0) + (_GLF_FUZZED(vec2(-8.2, -347.659)))), _GLF_FUZZED(vec2(-8.2, -347.659)))) : injectionSwitch, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false) ? _GLF_IDENTITY(_GLF_FUZZED(vec2(-8.2, -347.659)), min(_GLF_IDENTITY(_GLF_FUZZED(vec2(-8.2, -347.659)), vec2(0.0, 0.0) + (_GLF_FUZZED(vec2(-8.2, -347.659)))), _GLF_FUZZED(vec2(-8.2, -347.659)))) : injectionSwitch)))), vec2(1.0, 1.0) * (vec2(vec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false) ? _GLF_IDENTITY(_GLF_FUZZED(vec2(-8.2, -347.659)), min(_GLF_IDENTITY(_GLF_FUZZED(vec2(-8.2, -347.659)), vec2(0.0, 0.0) + (_GLF_FUZZED(vec2(-8.2, -347.659)))), _GLF_FUZZED(vec2(-8.2, -347.659)))) : injectionSwitch, max(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false) ? _GLF_IDENTITY(_GLF_FUZZED(vec2(-8.2, -347.659)), min(_GLF_IDENTITY(_GLF_FUZZED(vec2(-8.2, -347.659)), vec2(0.0, 0.0) + (_GLF_FUZZED(vec2(-8.2, -347.659)))), _GLF_FUZZED(vec2(-8.2, -347.659)))) : injectionSwitch, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false) ? _GLF_IDENTITY(_GLF_FUZZED(vec2(-8.2, -347.659)), min(_GLF_IDENTITY(_GLF_FUZZED(vec2(-8.2, -347.659)), vec2(0.0, 0.0) + (_GLF_FUZZED(vec2(-8.2, -347.659)))), _GLF_FUZZED(vec2(-8.2, -347.659)))) : injectionSwitch)))))))))[1]), vec2(_GLF_FUZZED(85.52), _GLF_FUZZED(-9842.6458)), bvec2(false, false))), (false ? _GLF_FUZZED(vec2(-8.2, -347.659)) : injectionSwitch)))).y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), _GLF_IDENTITY((false ? _GLF_FUZZED(vec2(-8.2, -347.659)) : injectionSwitch), clamp((false ? _GLF_FUZZED(vec2(-8.2, -347.659)) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))[1], (injectionSwitch[1]) / 1.0)))), _GLF_IDENTITY((false ? _GLF_FUZZED(vec2(-8.2, -347.659)) : injectionSwitch), mix(vec2(((false ? _GLF_FUZZED(vec2(-8.2, -347.659)) : injectionSwitch))[0], ((false ? _GLF_FUZZED(vec2(-8.2, -347.659)) : injectionSwitch))[1]), vec2(_GLF_FUZZED(85.52), _GLF_FUZZED(-9842.6458)), bvec2(_GLF_IDENTITY(false, ! (! (false))), false))), (false ? _GLF_FUZZED(vec2(-8.2, -347.659)) : injectionSwitch)))).y))))))), false || _GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((false ? _GLF_FUZZED(vec2(-8.2, -347.659)) : injectionSwitch), clamp((false ? _GLF_FUZZED(vec2(-8.2, -347.659)) : injectionSwitch), (false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(-8.2, -347.659)), vec2(mat4x3(_GLF_FUZZED(vec2(-8.2, -347.659)), 1.0, 0.0, _GLF_IDENTITY(determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), (determinant(_GLF_IDENTITY(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0), transpose(transpose(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)))))) / _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, abs(0.0), 0.0, 0.0), vec4(1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0))), 0.0, 0.0)), dot(vec4(1.0, abs(0.0), 0.0, 0.0), vec4(1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), _GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 0.0), (_GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 0.0), _GLF_IDENTITY(vec4(mat3(vec4(1.0, 1.0, 1.0, 0.0), 1.0, 0.0, 0.0, 1.0, 0.0)), min(vec4(mat3(vec4(1.0, 1.0, 1.0, 0.0), 1.0, 0.0, 0.0, 1.0, 0.0)), vec4(mat3(vec4(1.0, 1.0, 1.0, 0.0), 1.0, 0.0, 0.0, 1.0, 0.0)))))) * vec4(1.0, 1.0, 1.0, 1.0))), dot(_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 1.0), max(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), vec4(1.0, 1.0, 1.0, 0.0))), 0.0, 0.0))), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 1.0, cos(0.0)))) : injectionSwitch), (_GLF_IDENTITY(false ? _GLF_FUZZED(vec2(-8.2, _GLF_IDENTITY(-347.659, mix(float(_GLF_IDENTITY(-347.659, (false ? _GLF_FUZZED(7.1) : _GLF_IDENTITY(-347.659, (-347.659) / 1.0)))), float(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(6326.3729, max(6326.3729, _GLF_IDENTITY(6326.3729, (6326.3729) + log(1.0)))), max(_GLF_IDENTITY(6326.3729, max(6326.3729, _GLF_IDENTITY(6326.3729, (6326.3729) + _GLF_IDENTITY(log(1.0), 0.0 + (log(1.0)))))), _GLF_IDENTITY(6326.3729, _GLF_IDENTITY(max(6326.3729, _GLF_IDENTITY(6326.3729, (6326.3729) + log(1.0))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? max(6326.3729, _GLF_IDENTITY(6326.3729, _GLF_IDENTITY((6326.3729), (_GLF_IDENTITY((6326.3729), min((6326.3729), (6326.3729)))) / 1.0) + log(1.0))) : _GLF_FUZZED(32.26)))))))), bool(false))))) : injectionSwitch, (true ? _GLF_IDENTITY(false ? _GLF_FUZZED(vec2(-8.2, _GLF_IDENTITY(_GLF_IDENTITY(-347.659, mix(_GLF_IDENTITY(float(-347.659), min(float(-347.659), _GLF_IDENTITY(float(-347.659), (float(-347.659)) / 1.0))), float(_GLF_FUZZED(_GLF_IDENTITY(6326.3729, max(6326.3729, _GLF_IDENTITY(6326.3729, (6326.3729) + log(1.0)))))), bool(false))), _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(-347.659, mix(_GLF_IDENTITY(float(-347.659), min(float(-347.659), _GLF_IDENTITY(float(-347.659), (float(-347.659)) / 1.0))), float(_GLF_FUZZED(_GLF_IDENTITY(6326.3729, max(6326.3729, _GLF_IDENTITY(6326.3729, (6326.3729) + log(1.0)))))), bool(false))), (_GLF_IDENTITY(-347.659, mix(_GLF_IDENTITY(float(-347.659), min(float(-347.659), _GLF_IDENTITY(float(-347.659), (float(-347.659)) / 1.0))), float(_GLF_FUZZED(_GLF_IDENTITY(6326.3729, max(6326.3729, _GLF_IDENTITY(6326.3729, (_GLF_IDENTITY(6326.3729, max(_GLF_IDENTITY(6326.3729, (6326.3729) * 1.0), 6326.3729))) + log(1.0)))))), bool(false)))) - sqrt(0.0)), min(_GLF_IDENTITY(-347.659, mix(_GLF_IDENTITY(float(-347.659), min(float(-347.659), _GLF_IDENTITY(float(-347.659), (float(-347.659)) / 1.0))), float(_GLF_FUZZED(_GLF_IDENTITY(6326.3729, max(6326.3729, _GLF_IDENTITY(6326.3729, (6326.3729) + log(1.0)))))), bool(false))), _GLF_IDENTITY(-347.659, mix(_GLF_IDENTITY(float(-347.659), min(float(-347.659), _GLF_IDENTITY(float(-347.659), (float(-347.659)) / 1.0))), float(_GLF_FUZZED(_GLF_IDENTITY(6326.3729, max(6326.3729, _GLF_IDENTITY(6326.3729, (6326.3729) + log(1.0)))))), bool(false))))), 1.0, 1.0, 0.0, 1.0, 0.0)), max(_GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(-347.659, mix(_GLF_IDENTITY(float(-347.659), min(float(-347.659), _GLF_IDENTITY(float(-347.659), (float(-347.659)) / 1.0))), float(_GLF_FUZZED(_GLF_IDENTITY(6326.3729, max(6326.3729, _GLF_IDENTITY(6326.3729, (6326.3729) + log(1.0)))))), bool(false))), min(_GLF_IDENTITY(-347.659, mix(_GLF_IDENTITY(float(-347.659), min(float(-347.659), _GLF_IDENTITY(float(-347.659), (float(-347.659)) / 1.0))), float(_GLF_FUZZED(_GLF_IDENTITY(6326.3729, max(6326.3729, _GLF_IDENTITY(6326.3729, (6326.3729) + log(1.0)))))), bool(false))), _GLF_IDENTITY(-347.659, mix(_GLF_IDENTITY(float(-347.659), min(float(-347.659), _GLF_IDENTITY(float(-347.659), (float(-347.659)) / 1.0))), float(_GLF_FUZZED(_GLF_IDENTITY(6326.3729, max(6326.3729, _GLF_IDENTITY(6326.3729, (6326.3729) + log(1.0)))))), bool(false))))), 1.0, 1.0, 0.0, 1.0, 0.0)), min(float(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(-347.659, mix(_GLF_IDENTITY(_GLF_IDENTITY(float(-347.659), float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(float(-347.659), max(float(-347.659), float(-347.659))), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 0.0), clamp(vec3(_GLF_IDENTITY(float(-347.659), max(float(-347.659), float(-347.659))), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 0.0), vec3(_GLF_IDENTITY(float(-347.659), max(float(-347.659), float(-347.659))), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 0.0), vec3(_GLF_IDENTITY(float(-347.659), max(float(-347.659), float(-347.659))), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 0.0))))), min(float(-347.659), _GLF_IDENTITY(float(-347.659), (float(-347.659)) / 1.0))), float(_GLF_FUZZED(_GLF_IDENTITY(6326.3729, max(6326.3729, _GLF_IDENTITY(6326.3729, (6326.3729) + log(1.0)))))), _GLF_IDENTITY(bool(false), true && (bool(false))))), min(_GLF_IDENTITY(-347.659, mix(_GLF_IDENTITY(float(-347.659), min(float(-347.659), _GLF_IDENTITY(float(-347.659), (float(-347.659)) / 1.0))), float(_GLF_FUZZED(_GLF_IDENTITY(6326.3729, max(6326.3729, _GLF_IDENTITY(6326.3729, (6326.3729) + log(1.0)))))), bool(false))), _GLF_IDENTITY(-347.659, mix(_GLF_IDENTITY(float(-347.659), min(float(-347.659), _GLF_IDENTITY(float(-347.659), (float(-347.659)) / 1.0))), float(_GLF_FUZZED(_GLF_IDENTITY(6326.3729, max(6326.3729, _GLF_IDENTITY(6326.3729, (6326.3729) + log(1.0)))))), bool(false))))), 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-36.51)), float(1.0), bool(true))), 0.0)), float(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(-347.659, mix(_GLF_IDENTITY(float(-347.659), min(float(-347.659), _GLF_IDENTITY(float(-347.659), (float(-347.659)) / 1.0))), float(_GLF_FUZZED(_GLF_IDENTITY(6326.3729, max(6326.3729, _GLF_IDENTITY(6326.3729, (6326.3729) + log(1.0)))))), bool(false))), min(_GLF_IDENTITY(-347.659, mix(_GLF_IDENTITY(float(-347.659), min(float(-347.659), _GLF_IDENTITY(float(-347.659), (float(-347.659)) / 1.0))), float(_GLF_FUZZED(_GLF_IDENTITY(6326.3729, max(6326.3729, _GLF_IDENTITY(6326.3729, (6326.3729) + log(1.0)))))), bool(false))), _GLF_IDENTITY(-347.659, mix(_GLF_IDENTITY(float(-347.659), min(float(-347.659), _GLF_IDENTITY(float(-347.659), (float(-347.659)) / 1.0))), float(_GLF_FUZZED(_GLF_IDENTITY(6326.3729, max(6326.3729, _GLF_IDENTITY(6326.3729, (6326.3729) + log(1.0)))))), bool(false))))), 1.0, 1.0, 0.0, 1.0, 0.0)))), float(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(-347.659, mix(_GLF_IDENTITY(float(-347.659), min(float(-347.659), _GLF_IDENTITY(float(-347.659), (float(-347.659)) / 1.0))), float(_GLF_FUZZED(_GLF_IDENTITY(6326.3729, max(6326.3729, _GLF_IDENTITY(6326.3729, (6326.3729) + log(1.0)))))), bool(false))), min(_GLF_IDENTITY(-347.659, mix(_GLF_IDENTITY(float(-347.659), min(float(-347.659), _GLF_IDENTITY(_GLF_IDENTITY(float(-347.659), (false ? _GLF_FUZZED(5.0) : _GLF_IDENTITY(float(-347.659), float(mat4(float(-347.659), 0.0, 0.0, 1.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, exp(0.0), 0.0, 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0))))), (float(-347.659)) / 1.0))), float(_GLF_FUZZED(_GLF_IDENTITY(6326.3729, max(6326.3729, _GLF_IDENTITY(6326.3729, (6326.3729) + log(1.0)))))), bool(false))), _GLF_IDENTITY(-347.659, mix(_GLF_IDENTITY(float(-347.659), min(float(-347.659), _GLF_IDENTITY(float(-347.659), (float(-347.659)) / 1.0))), float(_GLF_FUZZED(_GLF_IDENTITY(6326.3729, max(6326.3729, _GLF_IDENTITY(6326.3729, (6326.3729) + log(1.0)))))), bool(false))))), 1.0, 1.0, 0.0, 1.0, 0.0))))))) : injectionSwitch, vec2(mat3x2(_GLF_IDENTITY(false ? _GLF_FUZZED(vec2(-8.2, _GLF_IDENTITY(-347.659, mix(float(-347.659), float(_GLF_FUZZED(_GLF_IDENTITY(6326.3729, max(6326.3729, _GLF_IDENTITY(6326.3729, (6326.3729) + log(1.0)))))), bool(false))))) : injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(false ? _GLF_FUZZED(vec2(-8.2, _GLF_IDENTITY(-347.659, mix(float(-347.659), float(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(6326.3729, max(6326.3729, _GLF_IDENTITY(6326.3729, (6326.3729) + log(1.0)))), (_GLF_IDENTITY(6326.3729, max(6326.3729, _GLF_IDENTITY(6326.3729, (6326.3729) + log(1.0))))) / cos(0.0)))), bool(false))))) : injectionSwitch, (false ? _GLF_FUZZED(vec2(_GLF_IDENTITY(-8.2, (-8.2) / round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), _GLF_IDENTITY(-347.659, mix(float(-347.659), float(_GLF_FUZZED(_GLF_IDENTITY(6326.3729, max(6326.3729, _GLF_IDENTITY(6326.3729, (6326.3729) + log(1.0)))))), bool(false))))) : injectionSwitch) - vec2(0.0, 0.0)), 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), tan(0.0), 0.0, 1.0), (true ? mat4x2(_GLF_IDENTITY(false ? _GLF_FUZZED(vec2(-8.2, _GLF_IDENTITY(-347.659, mix(float(-347.659), float(_GLF_FUZZED(_GLF_IDENTITY(6326.3729, max(6326.3729, _GLF_IDENTITY(6326.3729, (6326.3729) + log(1.0)))))), bool(false))))) : injectionSwitch, (false ? _GLF_FUZZED(vec2(-8.2, _GLF_IDENTITY(-347.659, mix(float(-347.659), float(_GLF_FUZZED(_GLF_IDENTITY(6326.3729, max(6326.3729, _GLF_IDENTITY(6326.3729, (6326.3729) + log(1.0)))))), bool(false))))) : injectionSwitch) - vec2(0.0, 0.0)), 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), tan(0.0), 0.0, 1.0) : _GLF_FUZZED(mat4x2(_GLF_IDENTITY(81.59, clamp(_GLF_IDENTITY(81.59, (81.59) - 0.0), 81.59, _GLF_IDENTITY(81.59, float(_GLF_IDENTITY(mat4(81.59, 0.0, exp(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0), (mat4(81.59, 0.0, exp(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0)) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))))), _GLF_IDENTITY(3.5, (3.5) / 1.0), -9000.3029, -8.6, -8.8, 3271.9558, 51.47, 3.1)))))), sqrt(1.0), 0.0, 1.0, 0.0))) : _GLF_FUZZED(mix((vec2(645.242, -0.6) + injectionSwitch), injectionSwitch, -9.7)))))))).y)), _GLF_IDENTITY(bool(bvec4(((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((false ? _GLF_FUZZED(vec2(-8.2, -347.659)) : injectionSwitch), _GLF_IDENTITY(clamp((false ? _GLF_FUZZED(vec2(-8.2, -347.659)) : injectionSwitch), (false ? _GLF_FUZZED(vec2(-8.2, -347.659)) : injectionSwitch), (_GLF_IDENTITY(false ? _GLF_FUZZED(vec2(-8.2, _GLF_IDENTITY(-347.659, mix(float(-347.659), float(_GLF_FUZZED(_GLF_IDENTITY(6326.3729, max(6326.3729, _GLF_IDENTITY(_GLF_IDENTITY(6326.3729, (6326.3729) * 1.0), (6326.3729) + log(1.0)))))), bool(false))))) : injectionSwitch, (true ? _GLF_IDENTITY(false ? _GLF_FUZZED(vec2(-8.2, _GLF_IDENTITY(-347.659, mix(float(-347.659), float(_GLF_FUZZED(_GLF_IDENTITY(6326.3729, max(6326.3729, _GLF_IDENTITY(_GLF_IDENTITY(6326.3729, min(6326.3729, 6326.3729)), (6326.3729) + log(1.0)))))), bool(false))))) : injectionSwitch, vec2(mat3x2(false ? _GLF_FUZZED(vec2(-8.2, _GLF_IDENTITY(-347.659, mix(float(-347.659), float(_GLF_FUZZED(_GLF_IDENTITY(6326.3729, max(6326.3729, _GLF_IDENTITY(6326.3729, (6326.3729) + log(1.0)))))), bool(false))))) : injectionSwitch, sqrt(1.0), 0.0, 1.0, 0.0))) : _GLF_FUZZED(mix((vec2(645.242, -0.6) + injectionSwitch), injectionSwitch, -9.7)))))), mix(vec2(_GLF_FUZZED(8.1), _GLF_FUZZED(-5434.0334)), vec2((clamp((false ? _GLF_FUZZED(vec2(-8.2, -347.659)) : injectionSwitch), (false ? _GLF_FUZZED(vec2(-8.2, -347.659)) : injectionSwitch), (_GLF_IDENTITY(false ? _GLF_FUZZED(vec2(-8.2, _GLF_IDENTITY(-347.659, mix(float(-347.659), float(_GLF_FUZZED(_GLF_IDENTITY(6326.3729, max(6326.3729, _GLF_IDENTITY(_GLF_IDENTITY(6326.3729, (6326.3729) * 1.0), (6326.3729) + log(1.0)))))), bool(false))))) : injectionSwitch, (true ? _GLF_IDENTITY(false ? _GLF_FUZZED(vec2(-8.2, _GLF_IDENTITY(-347.659, mix(float(-347.659), float(_GLF_FUZZED(_GLF_IDENTITY(6326.3729, max(6326.3729, _GLF_IDENTITY(_GLF_IDENTITY(6326.3729, min(6326.3729, 6326.3729)), (6326.3729) + log(1.0)))))), bool(false))))) : injectionSwitch, vec2(mat3x2(false ? _GLF_FUZZED(vec2(-8.2, _GLF_IDENTITY(-347.659, mix(float(-347.659), float(_GLF_FUZZED(_GLF_IDENTITY(6326.3729, max(6326.3729, _GLF_IDENTITY(6326.3729, (6326.3729) + log(1.0)))))), bool(false))))) : injectionSwitch, sqrt(1.0), 0.0, 1.0, 0.0))) : _GLF_FUZZED(mix((vec2(645.242, -0.6) + injectionSwitch), injectionSwitch, -9.7)))))))[0], (clamp((false ? _GLF_FUZZED(vec2(-8.2, -347.659)) : injectionSwitch), (false ? _GLF_FUZZED(vec2(-8.2, -347.659)) : injectionSwitch), (_GLF_IDENTITY(false ? _GLF_FUZZED(vec2(-8.2, _GLF_IDENTITY(-347.659, mix(float(-347.659), float(_GLF_FUZZED(_GLF_IDENTITY(6326.3729, max(6326.3729, _GLF_IDENTITY(_GLF_IDENTITY(6326.3729, (6326.3729) * 1.0), (6326.3729) + log(1.0)))))), bool(false))))) : injectionSwitch, (true ? _GLF_IDENTITY(false ? _GLF_FUZZED(vec2(-8.2, _GLF_IDENTITY(-347.659, mix(float(-347.659), float(_GLF_FUZZED(_GLF_IDENTITY(6326.3729, max(6326.3729, _GLF_IDENTITY(_GLF_IDENTITY(6326.3729, min(6326.3729, 6326.3729)), (6326.3729) + log(1.0)))))), bool(false))))) : injectionSwitch, vec2(mat3x2(false ? _GLF_FUZZED(vec2(-8.2, _GLF_IDENTITY(-347.659, mix(float(-347.659), float(_GLF_FUZZED(_GLF_IDENTITY(6326.3729, max(6326.3729, _GLF_IDENTITY(6326.3729, (6326.3729) + log(1.0)))))), bool(false))))) : injectionSwitch, sqrt(1.0), 0.0, 1.0, 0.0))) : _GLF_FUZZED(mix((vec2(645.242, -0.6) + injectionSwitch), injectionSwitch, -9.7)))))))[1]), bvec2(true, true))))).y, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((false ? _GLF_FUZZED(vec2(-8.2, -347.659)) : injectionSwitch), clamp((false ? _GLF_FUZZED(vec2(-8.2, -347.659)) : injectionSwitch), (false ? _GLF_FUZZED(vec2(-8.2, -347.659)) : injectionSwitch), (_GLF_IDENTITY(false ? _GLF_FUZZED(vec2(-8.2, _GLF_IDENTITY(-347.659, mix(float(-347.659), float(_GLF_FUZZED(_GLF_IDENTITY(6326.3729, max(6326.3729, _GLF_IDENTITY(6326.3729, (6326.3729) + log(1.0)))))), bool(false))))) : injectionSwitch, (true ? _GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(vec2(-8.2, _GLF_IDENTITY(-347.659, mix(float(-347.659), float(_GLF_FUZZED(_GLF_IDENTITY(6326.3729, max(6326.3729, _GLF_IDENTITY(_GLF_IDENTITY(6326.3729, min(6326.3729, 6326.3729)), (6326.3729) + log(1.0)))))), bool(false)))), mix(vec2((vec2(-8.2, _GLF_IDENTITY(-347.659, mix(float(-347.659), float(_GLF_FUZZED(_GLF_IDENTITY(6326.3729, max(6326.3729, _GLF_IDENTITY(_GLF_IDENTITY(6326.3729, min(6326.3729, 6326.3729)), (6326.3729) + log(1.0)))))), bool(false)))))[0], _GLF_FUZZED((3.2 + -3157.5547))), vec2(_GLF_FUZZED(85.00), (vec2(-8.2, _GLF_IDENTITY(-347.659, mix(float(-347.659), float(_GLF_FUZZED(_GLF_IDENTITY(6326.3729, _GLF_IDENTITY(max(6326.3729, _GLF_IDENTITY(_GLF_IDENTITY(6326.3729, min(6326.3729, 6326.3729)), (6326.3729) + log(1.0))), min(max(6326.3729, _GLF_IDENTITY(_GLF_IDENTITY(6326.3729, min(6326.3729, 6326.3729)), (6326.3729) + log(1.0))), max(6326.3729, _GLF_IDENTITY(_GLF_IDENTITY(6326.3729, min(6326.3729, 6326.3729)), (6326.3729) + log(1.0)))))))), bool(false)))))[1]), bvec2(false, true)))) : injectionSwitch, vec2(mat3x2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))) ? _GLF_FUZZED(vec2(-8.2, _GLF_IDENTITY(-347.659, mix(float(-347.659), float(_GLF_FUZZED(_GLF_IDENTITY(6326.3729, max(6326.3729, _GLF_IDENTITY(6326.3729, (6326.3729) + log(1.0)))))), bool(false))))) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), sqrt(1.0), 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-3203.7166)), float(0.0), bool(true)))))) : _GLF_FUZZED(mix((vec2(645.242, -0.6) + injectionSwitch), injectionSwitch, -9.7)))))))).y, 0.0 + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((false ? _GLF_FUZZED(vec2(-8.2, -347.659)) : _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))), clamp((false ? _GLF_FUZZED(vec2(-8.2, -347.659)) : injectionSwitch), (false ? _GLF_FUZZED(vec2(-8.2, -347.659)) : injectionSwitch), (_GLF_IDENTITY(false ? _GLF_FUZZED(vec2(-8.2, _GLF_IDENTITY(-347.659, mix(float(-347.659), float(_GLF_FUZZED(_GLF_IDENTITY(6326.3729, max(6326.3729, _GLF_IDENTITY(6326.3729, (6326.3729) + log(1.0)))))), bool(false))))) : injectionSwitch, (true ? _GLF_IDENTITY(false ? _GLF_FUZZED(vec2(_GLF_IDENTITY(-8.2, (-8.2) - length(0.0)), _GLF_IDENTITY(-347.659, mix(float(-347.659), float(_GLF_FUZZED(_GLF_IDENTITY(6326.3729, max(6326.3729, _GLF_IDENTITY(_GLF_IDENTITY(6326.3729, min(6326.3729, 6326.3729)), (6326.3729) + log(_GLF_IDENTITY(1.0, (1.0) + abs(0.0)))))))), bool(false))))) : injectionSwitch, vec2(mat3x2(false ? _GLF_FUZZED(vec2(-8.2, _GLF_IDENTITY(-347.659, mix(float(-347.659), float(_GLF_FUZZED(_GLF_IDENTITY(6326.3729, max(6326.3729, _GLF_IDENTITY(6326.3729, (6326.3729) + log(1.0)))))), bool(false))))) : injectionSwitch, sqrt(1.0), 0.0, 1.0, 0.0))) : _GLF_IDENTITY(_GLF_FUZZED(mix((vec2(645.242, -0.6) + injectionSwitch), injectionSwitch, -9.7)), (_GLF_FUZZED(mix((vec2(645.242, -0.6) + injectionSwitch), injectionSwitch, -9.7))) / _GLF_IDENTITY(vec2(1.0, 1.0), (true ? vec2(1.0, 1.0) : _GLF_FUZZED(injectionSwitch)))))))))).y)) : _GLF_FUZZED(-4.6))))), true, _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x < injectionSwitch.y)))), (bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, 0.0, abs(1.0), 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, cos(0.0)), vec4(1.0, 0.0, exp(0.0), 0.0)), dot(vec4(0.0, 1.0, 0.0, cos(0.0)), vec4(1.0, 0.0, exp(0.0), 0.0))), 1.0, 1.0, 0.0, 1.0))) > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true)), bool(bool(injectionSwitch.x > injectionSwitch.y))))), true)), (bool(bvec4((_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((false ? _GLF_FUZZED(vec2(-8.2, -347.659)) : injectionSwitch), clamp((false ? _GLF_FUZZED(_GLF_IDENTITY(vec2(-8.2, -347.659), (vec2(-8.2, -347.659)) * mat2(1.0))) : injectionSwitch), _GLF_IDENTITY((false ? _GLF_FUZZED(vec2(-8.2, -347.659)) : injectionSwitch), _GLF_IDENTITY(((false ? _GLF_FUZZED(vec2(-8.2, -347.659)) : injectionSwitch)) * mat2(1.0), clamp(((false ? _GLF_FUZZED(vec2(-8.2, -347.659)) : injectionSwitch)) * mat2(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0))), _GLF_IDENTITY(((false ? _GLF_FUZZED(vec2(-8.2, -347.659)) : injectionSwitch)) * mat2(1.0), clamp(_GLF_IDENTITY(((false ? _GLF_FUZZED(vec2(-8.2, -347.659)) : injectionSwitch)) * mat2(1.0), vec2(mat4(((false ? _GLF_FUZZED(vec2(-8.2, -347.659)) : injectionSwitch)) * mat2(1.0), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))), ((false ? _GLF_FUZZED(vec2(-8.2, -347.659)) : injectionSwitch)) * mat2(1.0), ((false ? _GLF_FUZZED(vec2(-8.2, -347.659)) : injectionSwitch)) * mat2(1.0))), ((false ? _GLF_FUZZED(vec2(-8.2, -347.659)) : injectionSwitch)) * mat2(1.0)))), (_GLF_IDENTITY(false ? _GLF_FUZZED(vec2(-8.2, _GLF_IDENTITY(-347.659, mix(float(-347.659), float(_GLF_FUZZED(_GLF_IDENTITY(6326.3729, max(6326.3729, _GLF_IDENTITY(6326.3729, (6326.3729) + log(1.0)))))), bool(false))))) : injectionSwitch, (true ? _GLF_IDENTITY(false ? _GLF_FUZZED(vec2(-8.2, _GLF_IDENTITY(-347.659, mix(float(-347.659), float(_GLF_FUZZED(_GLF_IDENTITY(6326.3729, max(6326.3729, _GLF_IDENTITY(6326.3729, (6326.3729) + log(1.0)))))), bool(false))))) : _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(6.1)), vec2(_GLF_FUZZED(819.963), _GLF_IDENTITY((injectionSwitch)[1], max(_GLF_IDENTITY((injectionSwitch)[1], 0.0 + ((injectionSwitch)[1])), _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1]))))), bvec2(false, true))), vec2(mat3x2(_GLF_IDENTITY(false ? _GLF_FUZZED(vec2(-8.2, _GLF_IDENTITY(-347.659, mix(float(-347.659), float(_GLF_FUZZED(_GLF_IDENTITY(6326.3729, max(6326.3729, _GLF_IDENTITY(6326.3729, (6326.3729) + log(1.0)))))), bool(false))))) : injectionSwitch, clamp(false ? _GLF_FUZZED(vec2(-8.2, _GLF_IDENTITY(-347.659, mix(float(-347.659), float(_GLF_FUZZED(_GLF_IDENTITY(6326.3729, max(6326.3729, _GLF_IDENTITY(6326.3729, (6326.3729) + log(1.0)))))), bool(false))))) : injectionSwitch, false ? _GLF_FUZZED(vec2(-8.2, _GLF_IDENTITY(-347.659, mix(float(-347.659), float(_GLF_FUZZED(_GLF_IDENTITY(6326.3729, max(6326.3729, _GLF_IDENTITY(6326.3729, (6326.3729) + log(1.0)))))), bool(false))))) : injectionSwitch, false ? _GLF_FUZZED(vec2(-8.2, _GLF_IDENTITY(-347.659, mix(float(-347.659), float(_GLF_FUZZED(_GLF_IDENTITY(6326.3729, max(6326.3729, _GLF_IDENTITY(6326.3729, (6326.3729) + log(1.0)))))), bool(false))))) : injectionSwitch)), sqrt(1.0), 0.0, 1.0, 0.0))) : _GLF_FUZZED(mix((vec2(645.242, -0.6) + injectionSwitch), injectionSwitch, -9.7)))))))).y), bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((false ? _GLF_FUZZED(vec2(-8.2, -347.659)) : injectionSwitch), clamp((false ? _GLF_FUZZED(vec2(-8.2, -347.659)) : injectionSwitch), _GLF_IDENTITY((false ? _GLF_FUZZED(vec2(-8.2, -347.659)) : injectionSwitch), _GLF_IDENTITY(((false ? _GLF_FUZZED(vec2(-8.2, -347.659)) : injectionSwitch)) * mat2(1.0), clamp(((false ? _GLF_FUZZED(vec2(-8.2, -347.659)) : injectionSwitch)) * _GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0))), ((false ? _GLF_FUZZED(vec2(-8.2, -347.659)) : injectionSwitch)) * mat2(1.0), ((false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(-8.2, -347.659)), mat2(1.0) * (_GLF_FUZZED(vec2(-8.2, -347.659)))) : injectionSwitch)) * mat2(1.0)))), (_GLF_IDENTITY(false ? _GLF_FUZZED(vec2(-8.2, _GLF_IDENTITY(_GLF_IDENTITY(-347.659, mix(float(-347.659), float(_GLF_FUZZED(_GLF_IDENTITY(6326.3729, max(6326.3729, _GLF_IDENTITY(6326.3729, (6326.3729) + log(1.0)))))), bool(false))), min(_GLF_IDENTITY(-347.659, mix(float(-347.659), float(_GLF_FUZZED(_GLF_IDENTITY(6326.3729, max(6326.3729, _GLF_IDENTITY(6326.3729, (6326.3729) + log(1.0)))))), bool(false))), _GLF_IDENTITY(-347.659, mix(float(-347.659), float(_GLF_FUZZED(_GLF_IDENTITY(6326.3729, max(6326.3729, _GLF_IDENTITY(6326.3729, (6326.3729) + log(1.0)))))), bool(false))))))) : injectionSwitch, (true ? _GLF_IDENTITY(false ? _GLF_FUZZED(vec2(-8.2, _GLF_IDENTITY(-347.659, mix(float(-347.659), float(_GLF_FUZZED(_GLF_IDENTITY(6326.3729, max(6326.3729, _GLF_IDENTITY(6326.3729, (6326.3729) + log(1.0)))))), bool(false))))) : injectionSwitch, vec2(mat3x2(false ? _GLF_FUZZED(vec2(-8.2, _GLF_IDENTITY(-347.659, mix(float(-347.659), float(_GLF_FUZZED(_GLF_IDENTITY(6326.3729, max(6326.3729, _GLF_IDENTITY(6326.3729, (6326.3729) + log(1.0)))))), bool(false))))) : injectionSwitch, sqrt(1.0), 0.0, 1.0, 0.0))) : _GLF_FUZZED(mix((vec2(645.242, -0.6) + injectionSwitch), injectionSwitch, -9.7)))))))).y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true))) && true))))))
      {
       if(_GLF_DEAD(false))
        return;
       for(int _injected_loop_counter = _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-13639) : 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), false))))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - _GLF_IDENTITY(abs(vec2(0.0, 0.0)), (abs(vec2(0.0, 0.0))) * vec2(1.0, 1.0))).x > injectionSwitch.y))))
          continue;
         barrier();
        }
      }
     return;
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(false))
      return;
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_id, 0u ^ (_GLF_struct_replacement_0.subgroup_id)) * subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_id, 0u ^ (_GLF_struct_replacement_0.subgroup_id)) * subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_id, 0u ^ (_GLF_struct_replacement_0.subgroup_id)) * subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_id, (_GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_id, (_GLF_struct_replacement_0.subgroup_id) | 0u)) | (_GLF_struct_replacement_0.subgroup_id)), 0u ^ (_GLF_struct_replacement_0.subgroup_id)) * subgroup_size : _GLF_FUZZED(workgroup_base), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_id, (_GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_id, (_GLF_struct_replacement_0.subgroup_id) | 0u)) | (_GLF_struct_replacement_0.subgroup_id)), 0u ^ (_GLF_struct_replacement_0.subgroup_id)) * subgroup_size : _GLF_FUZZED(workgroup_base)) + 0u)), ((true ? _GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_id, 0u ^ (_GLF_struct_replacement_0.subgroup_id)) * subgroup_size : _GLF_FUZZED(workgroup_base))) + 0u))) * 1u)) >> (0u >> _GLF_IDENTITY(uint(5u), uint(5u))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_id, 0u ^ (_GLF_struct_replacement_0.subgroup_id)) * subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_id, 0u ^ (_GLF_struct_replacement_0.subgroup_id)) * subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_id, (_GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_id, (_GLF_struct_replacement_0.subgroup_id) | 0u)) | (_GLF_struct_replacement_0.subgroup_id)), 0u ^ (_GLF_struct_replacement_0.subgroup_id)) * subgroup_size : _GLF_FUZZED(workgroup_base), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_id, (_GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_id, (_GLF_struct_replacement_0.subgroup_id) | 0u)) | (_GLF_struct_replacement_0.subgroup_id)), 0u ^ (_GLF_struct_replacement_0.subgroup_id)) * subgroup_size : _GLF_FUZZED(workgroup_base)) + 0u)), ((true ? _GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_id, 0u ^ (_GLF_struct_replacement_0.subgroup_id)) * subgroup_size : _GLF_FUZZED(workgroup_base))) + 0u))) * 1u)) >> (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))) >> 0u)) + subgroup_local_id;
 _GLF_struct_14 _GLF_struct_replacement_14 = _GLF_struct_14(_GLF_struct_4(ivec3(1), uvec2(1u), _GLF_struct_1(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), clamp(uvec3(1u), uvec3(1u), uvec3(1u))), uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(uvec3(1u), clamp(uvec3(1u), uvec3(1u), uvec3(1u))))), _GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), clamp(uvec3(1u), uvec3(1u), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), (uvec3(1u)) >> _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) / uvec3(1u, 1u, 1u))), uvec3(uvec3(_GLF_IDENTITY(uvec3(1u), (uvec3(1u)) >> _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) / uvec3(1u, 1u, 1u)))))))), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), clamp(uvec3(1u), uvec3(1u), uvec3(1u))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), clamp(uvec3(1u), uvec3(1u), uvec3(1u))), (_GLF_IDENTITY(uvec3(1u), clamp(uvec3(1u), uvec3(1u), uvec3(1u)))) << (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(2u), uvec3(2u))))), uvec3(0u, 0u, 0u) | ((_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), clamp(uvec3(1u), uvec3(1u), uvec3(1u))), (_GLF_IDENTITY(uvec3(1u), clamp(uvec3(1u), uvec3(1u), uvec3(1u)))) << (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(2u), uvec3(2u))))))) >> uvec3(0u, 0u, 0u)))) : _GLF_IDENTITY(_GLF_FUZZED(uvec3(40661u, 149019u, 55744u)), uvec3(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(_GLF_FUZZED(uvec3(40661u, 149019u, 55744u)), (_GLF_FUZZED(uvec3(40661u, 149019u, 55744u))) ^ uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))), ((true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), clamp(uvec3(1u), uvec3(1u), _GLF_IDENTITY(uvec3(1u), (uvec3(1u)) + (uvec3(_GLF_IDENTITY(0u, (0u) - 0u), 0u, 0u) >> _GLF_IDENTITY(_GLF_IDENTITY(uvec3(6u), uvec3(6u)), (_GLF_IDENTITY(uvec3(6u), uvec3(6u))) | (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(0u), uvec3(0u)))))))), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(uvec3(1u), clamp(uvec3(1u), uvec3(1u), uvec3(1u))))), uvec3(0u, 0u, 0u) + _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), clamp(uvec3(1u), uvec3(1u), uvec3(1u))), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(uvec3(1u), clamp(uvec3(1u), uvec3(1u), uvec3(1u)))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), clamp(uvec3(1u), uvec3(1u), uvec3(1u))), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(uvec3(1u), clamp(uvec3(1u), uvec3(1u), uvec3(1u)))))) : _GLF_FUZZED(uvec3(37813u, 66424u, 15825u))))) : _GLF_FUZZED(uvec3(40661u, 149019u, 55744u)))) / uvec3(1u, 1u, 1u))), bvec3(true)), _GLF_struct_2(mat2(1.0), mat2x4(1.0), bvec2(true), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_id, min(_GLF_struct_replacement_0.subgroup_id, _GLF_struct_replacement_0.subgroup_id)) * subgroup_size, min(workgroup_base + _GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_id, min(_GLF_struct_replacement_0.subgroup_id, _GLF_struct_replacement_0.subgroup_id)) * subgroup_size, workgroup_base + _GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_id, min(_GLF_struct_replacement_0.subgroup_id, _GLF_struct_replacement_0.subgroup_id)) * subgroup_size)), min(workgroup_base + _GLF_struct_replacement_0.subgroup_id * subgroup_size, workgroup_base + _GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_id * subgroup_size, max(_GLF_struct_replacement_0.subgroup_id * subgroup_size, _GLF_struct_replacement_0.subgroup_id * subgroup_size)))) + ((subgroup_local_id + 1) % subgroup_size), bvec4(true), _GLF_IDENTITY(_GLF_IDENTITY(ivec2(1), (ivec2(_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (_GLF_IDENTITY(~ (1), clamp(~ (1), ~ (1), ~ (1)))) - 0))), min(_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (_GLF_IDENTITY(~ (1), clamp(~ (1), ~ (1), ~ (1)))) - 0))), (true ? _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (_GLF_IDENTITY(~ (1), clamp(~ (1), ~ (1), ~ (1)))) - 0))) : _GLF_FUZZED(-14293))), _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (_GLF_IDENTITY(~ (1), clamp(~ (1), ~ (1), ~ (1)))) - 0))))), 1) | ivec2(1, 1)) * _GLF_IDENTITY((ivec2(1)), _GLF_IDENTITY(max(_GLF_IDENTITY((ivec2(1)), ivec2(ivec2((ivec2(1))))), (ivec2(1))), ivec2(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, min(0, 0))))) >> 0), 0) ^ (max((ivec2(1)), (ivec2(1))))))), (_GLF_IDENTITY(ivec2(1), (_GLF_IDENTITY(ivec2(1, 1) | ivec2(1, 1), (ivec2(1, 1) | ivec2(1, 1)) | ivec2(0, 0))) * _GLF_IDENTITY((ivec2(1)), _GLF_IDENTITY(max((ivec2(1)), (ivec2(1))), _GLF_IDENTITY(ivec2(0, 0) ^ (max((ivec2(1)), (ivec2(1)))), (ivec2(_GLF_IDENTITY(0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0 : _GLF_FUZZED(66104))), 0) ^ (max((ivec2(1)), (ivec2(1))))) >> ivec2(0, 0)))))) << (ivec2(0, 0) >> _GLF_IDENTITY(ivec2(0), ivec2(0)))), mat2(1.0), mat4x3(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-3.9)), float(_GLF_IDENTITY(1.0, 1.0 * (1.0))), bool(true))))), mat2(1.0), mat2x3(1.0), _GLF_struct_3(mat4x2(1.0), mat2x3(1.0))), 1.0, _GLF_struct_6(vec4(1.0), _GLF_struct_5(mat4(1.0), mat4x2(1.0)), bvec2(true)), _GLF_struct_11(uvec4(1u), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), clamp(uvec3(1u), uvec3(1u), _GLF_IDENTITY(uvec3(1u), min(_GLF_IDENTITY(uvec3(1u), max(uvec3(1u), uvec3(1u))), _GLF_IDENTITY(uvec3(1u), uvec3(1u, 1u, 1u) * (uvec3(1u))))))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), (uvec3(1u)) << uvec3(0u, 0u, 0u)), clamp(uvec3(1u), uvec3(1u), uvec3(1u)))) | uvec3(0u, _GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) | 0u)))), 0u)), _GLF_struct_7(mat2x3(1.0), mat3x2(1.0)), _GLF_struct_8(mat2x3(1.0), bvec4(true), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(93.10))))), bvec2(true), mat4(1.0), 1.0, mat4x2(1.0)), _GLF_struct_9(1u), _GLF_struct_10(mat3x2(1.0), 1u, vec2(1.0), mat2x4(1.0))), _GLF_struct_13(_GLF_struct_12(1u, uvec3(1u), true, mat3x2(1.0), mat4x3(1.0), mat2x4(1.0)), mat3x4(1.0), mat4x3(1.0), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))) > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(8.8))))), injectionSwitch.y)))) ? _GLF_FUZZED(uvec3(31738u, 86573u, _GLF_IDENTITY(167825u, (167825u) | 0u))) : uvec3(1u))), (_GLF_IDENTITY(uvec3(1u), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-21.26) : injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(58.10)), bool(false))))), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4(injectionSwitch.x, 1.0, 0.0, sin(0.0), 0.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, abs(1.0))), 1.0 * (float(mat4(injectionSwitch.x, 1.0, 0.0, sin(0.0), 0.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, abs(1.0)))))))), (injectionSwitch.x) - 0.0))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, max(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(559.943)), float(injectionSwitch.y), bool(_GLF_IDENTITY(true, false || (true))))))))) ? _GLF_FUZZED(uvec3(31738u, 86573u, 167825u)) : uvec3(1u)))) | (_GLF_IDENTITY(uvec3(1u), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))) > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), injectionSwitch.y)))) ? _GLF_FUZZED(uvec3(31738u, _GLF_IDENTITY(86573u, (_GLF_IDENTITY(86573u, (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(86573u, 0u | (86573u))))) | (86573u)), 167825u)) : uvec3(1u))))), _GLF_IDENTITY(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (1) - 0)), ivec3(0, 0, 0) | (ivec3(_GLF_IDENTITY(1, _GLF_IDENTITY((1), 0 ^ ((1))) - 0)))), _GLF_IDENTITY(ivec3(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(1, (1) - 0), int(_GLF_ZERO(0.0, injectionSwitch.x)), 1)), (false ? _GLF_FUZZED(93790) : int(ivec3(_GLF_IDENTITY(1, (1) - 0), int(_GLF_ZERO(0.0, injectionSwitch.x)), 1)))))), ivec3(_GLF_IDENTITY(0, (0) - 0), 0, 0) | (ivec3(_GLF_IDENTITY(1, _GLF_IDENTITY((1), 0 ^ ((1))) - 0)))), max(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (1) - 0)), ivec3(0, _GLF_IDENTITY(0, min(0, 0)), 0) | (ivec3(_GLF_IDENTITY(1, _GLF_IDENTITY((1), _GLF_IDENTITY(0, (0) | 0) ^ ((1))) - 0)))), _GLF_IDENTITY(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (1) - 0)), ivec3(0, 0, 0) | (ivec3(_GLF_IDENTITY(1, _GLF_IDENTITY((1), 0 ^ ((1))) - 0)))), _GLF_IDENTITY((_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (1) - 0)), ivec3(0, 0, 0) | (ivec3(_GLF_IDENTITY(1, _GLF_IDENTITY((1), 0 ^ ((1))) - 0))))) / ivec3(1, 1, 1), min((_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (1) - 0)), ivec3(0, 0, 0) | (ivec3(_GLF_IDENTITY(1, _GLF_IDENTITY((1), 0 ^ ((1))) - 0))))) / ivec3(1, 1, 1), _GLF_IDENTITY((_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (1) - 0)), ivec3(0, 0, 0) | (ivec3(_GLF_IDENTITY(1, _GLF_IDENTITY((1), 0 ^ ((1))) - 0))))) / ivec3(1, 1, 1), ivec3(ivec4(_GLF_IDENTITY((_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (1) - 0)), ivec3(0, 0, 0) | (ivec3(_GLF_IDENTITY(1, _GLF_IDENTITY((1), 0 ^ ((1))) - 0))))) / ivec3(1, 1, 1), max((_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (1) - 0)), ivec3(0, 0, 0) | (ivec3(_GLF_IDENTITY(1, _GLF_IDENTITY((1), 0 ^ ((1))) - 0))))) / ivec3(1, 1, 1), (_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (1) - 0)), ivec3(0, 0, 0) | (ivec3(_GLF_IDENTITY(1, _GLF_IDENTITY((1), 0 ^ ((1))) - 0))))) / ivec3(1, 1, 1))), 1)))))))))), _GLF_IDENTITY((ivec3(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (1) - 0)), ivec3(0, 0, 0) | (ivec3(_GLF_IDENTITY(1, _GLF_IDENTITY((1), 0 ^ ((1))) - 0)))), max(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (1) - 0)), ~ (~ (ivec3(_GLF_IDENTITY(1, (1) - 0))))), ivec3(0, 0, 0) | (ivec3(_GLF_IDENTITY(1, _GLF_IDENTITY((1), _GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec2(0, 1)), (_GLF_IDENTITY(int(ivec2(0, 1)), ~ (~ _GLF_IDENTITY((int(ivec2(0, 1))), ((int(ivec2(0, 1)))) + 0)))) | 0)) ^ ((1))) - _GLF_IDENTITY(0, (0) >> _GLF_IDENTITY(0, (0) << 0)))))), _GLF_IDENTITY(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (1) - 0)), ivec3(0, 0, 0) | (ivec3(_GLF_IDENTITY(1, _GLF_IDENTITY((1), 0 ^ ((1))) - 0)))), (_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (1) - 0)), _GLF_IDENTITY(ivec3(0, 0, 0), clamp(ivec3(0, 0, 0), ivec3(0, 0, 0), _GLF_IDENTITY(ivec3(0, 0, 0), (ivec3(0, 0, 0)) ^ ivec3(0, 0, 0)))) | _GLF_IDENTITY((ivec3(_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, (1) | (1))))), 0 ^ ((1))) - 0))), ((ivec3(_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, (1) | (1))))), 0 ^ ((1))) - 0)))) / ivec3(1, 1, 1)))) / ivec3(1, 1, 1))))), ivec3(0, 0, 0) ^ (ivec3(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (1) - 0)), ivec3(0, 0, 0) | (ivec3(_GLF_IDENTITY(1, _GLF_IDENTITY((1), 0 ^ ((1))) - 0)))), max(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (1) - 0)), ~ (~ (ivec3(_GLF_IDENTITY(1, (1) - 0))))), ivec3(0, 0, 0) | (ivec3(_GLF_IDENTITY(1, _GLF_IDENTITY((1), _GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec2(0, 1)), (_GLF_IDENTITY(int(ivec2(0, 1)), ~ (~ _GLF_IDENTITY((int(ivec2(0, 1))), ((int(ivec2(0, 1)))) + 0)))) | 0)) ^ ((1))) - _GLF_IDENTITY(0, (0) >> _GLF_IDENTITY(0, (0) << 0)))))), _GLF_IDENTITY(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (1) - 0)), ivec3(0, 0, 0) | (ivec3(_GLF_IDENTITY(1, _GLF_IDENTITY((1), 0 ^ ((1))) - 0)))), (_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (1) - 0)), _GLF_IDENTITY(ivec3(0, 0, 0), clamp(ivec3(0, 0, 0), ivec3(0, 0, 0), _GLF_IDENTITY(ivec3(0, 0, 0), (ivec3(0, 0, 0)) ^ ivec3(0, 0, 0)))) | _GLF_IDENTITY((ivec3(_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, (1) | (1))))), 0 ^ ((1))) - 0))), ((ivec3(_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, (1) | (1))))), 0 ^ ((1))) - 0)))) / ivec3(1, 1, 1)))) / ivec3(1, 1, 1))))))))) ^ (ivec3(0, 0, 0) >> _GLF_IDENTITY(ivec3(5), ivec3(5))), (false ? _GLF_FUZZED(ivec3(87942, -49421, 17619)) : _GLF_IDENTITY((ivec3(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (1) - 0)), ivec3(0, 0, 0) | (ivec3(_GLF_IDENTITY(1, _GLF_IDENTITY((1), 0 ^ ((1))) - 0)))), (_GLF_IDENTITY(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (1) - 0)), _GLF_IDENTITY(ivec3(ivec4(ivec3(_GLF_IDENTITY(1, (1) - 0)), 1)), (true ? ivec3(ivec4(ivec3(_GLF_IDENTITY(1, (1) - 0)), 1)) : _GLF_FUZZED((ivec3(-31595, -89510, 61506) >> -23457))))), ivec3(0, 0, 0) | (ivec3(_GLF_IDENTITY(1, _GLF_IDENTITY((1), 0 ^ ((1))) - 0))))) << (ivec3(0, 0, 0) & ivec3(19317, -75372, 31543))), max(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (1) - 0)), ivec3(0, 0, 0) | (ivec3(_GLF_IDENTITY(1, _GLF_IDENTITY((1), 0 ^ ((1))) - 0)))), _GLF_IDENTITY(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (1) - 0)), ivec3(0, 0, 0) | (ivec3(_GLF_IDENTITY(1, _GLF_IDENTITY((1), 0 ^ ((1))) - 0)))), (_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (1) - 0)), ivec3(0, 0, 0) | (_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, _GLF_IDENTITY((1), 0 ^ ((1))) - 0)), ~ (~ (ivec3(_GLF_IDENTITY(1, _GLF_IDENTITY((1), 0 ^ ((1))) - 0)))))))) / ivec3(1, 1, 1))))))) ^ (ivec3(0, 0, 0) >> _GLF_IDENTITY(ivec3(5), ivec3(_GLF_IDENTITY(5, _GLF_IDENTITY((_GLF_IDENTITY(5, min(_GLF_IDENTITY(5, min(5, 5)), 5))), 0 | ((_GLF_IDENTITY(5, min(_GLF_IDENTITY(5, min(5, 5)), 5))))) / 1)))), ~ (_GLF_IDENTITY(~ ((ivec3(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (1) - 0)), ivec3(0, 0, _GLF_IDENTITY(0, int(ivec3(_GLF_IDENTITY(0, clamp(0, 0, 0)), 0, ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))))))) | (ivec3(_GLF_IDENTITY(1, _GLF_IDENTITY((1), 0 ^ ((1))) - 0)))), max(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (1) - 0)), ivec3(0, 0, 0) | (ivec3(_GLF_IDENTITY(1, _GLF_IDENTITY((1), 0 ^ ((1))) - 0)))), _GLF_IDENTITY(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (1) - 0)), ivec3(0, 0, 0) | (ivec3(_GLF_IDENTITY(1, _GLF_IDENTITY((1), 0 ^ ((1))) - 0)))), (_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (1) - 0)), ivec3(0, 0, 0) | (ivec3(_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) ^ 0)) ^ 0), _GLF_IDENTITY((1), 0 ^ ((_GLF_IDENTITY(1, _GLF_IDENTITY((1), 1 * ((1))) << 0)))) - 0))))) / ivec3(1, 1, 1))))))) ^ (ivec3(0, 0, 0) >> _GLF_IDENTITY(ivec3(5), ivec3(5)))), (~ ((ivec3(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (1) - 0)), ivec3(0, 0, 0) | (ivec3(_GLF_IDENTITY(1, _GLF_IDENTITY((1), 0 ^ ((1))) - 0)))), max(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (1) - 0)), ivec3(0, 0, 0) | (ivec3(_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((1), 0 ^ ((1))) - 0), (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, 1 * (1))), 0 ^ ((1))) - 0), (true ? _GLF_IDENTITY(1, _GLF_IDENTITY((1), 0 ^ ((1))) - 0) : _GLF_FUZZED(-11484)))) | (_GLF_IDENTITY(1, _GLF_IDENTITY((1), 0 ^ ((1))) - 0)))))), _GLF_IDENTITY(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (1) - 0)), ivec3(0, 0, 0) | _GLF_IDENTITY((ivec3(_GLF_IDENTITY(1, _GLF_IDENTITY((1), 0 ^ ((1))) - 0))), max((ivec3(_GLF_IDENTITY(1, _GLF_IDENTITY((1), 0 ^ ((1))) - 0))), _GLF_IDENTITY((ivec3(_GLF_IDENTITY(1, _GLF_IDENTITY((1), 0 ^ ((1))) - 0))), ((ivec3(1, 1, 1) << _GLF_IDENTITY(ivec3(7), ivec3(7))) >> _GLF_IDENTITY(ivec3(7), ivec3(7))) * (_GLF_IDENTITY((ivec3(_GLF_IDENTITY(1, _GLF_IDENTITY((1), 0 ^ ((1))) - 0))), clamp((ivec3(_GLF_IDENTITY(1, _GLF_IDENTITY((1), 0 ^ ((1))) - 0))), (ivec3(_GLF_IDENTITY(1, _GLF_IDENTITY((1), 0 ^ ((1))) - 0))), (ivec3(_GLF_IDENTITY(1, _GLF_IDENTITY((1), 0 ^ ((1))) - 0)))))))))), (_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (1) - 0)), ivec3(0, 0, 0) | (ivec3(_GLF_IDENTITY(1, _GLF_IDENTITY((1), _GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, 0 | (0)))) ^ ((1))) - 0))))) / ivec3(1, 1, 1))))))) ^ (ivec3(0, 0, 0) >> _GLF_IDENTITY(ivec3(5), ivec3(5))))) >> ivec3(0, _GLF_IDENTITY(0, _GLF_IDENTITY((0), min((0), (0))) | 0), 0)))))))), _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, 1u * (1u)), 1u))));
 if(_GLF_DEAD(false))
  return;
 buf[virtual_gid] = 1;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))))
  {
   do
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
      {
       buf[_GLF_struct_replacement_14._f0._f3.next_virtual_gid] = 2;
      }
    }
   while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) || false)))));
   if(_GLF_DEAD(false))
    return;
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     do
      {
       subgroupAll(false);
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 else
  {
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_WRAPPED_IF_TRUE(true)) && true))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, bool(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && (_GLF_IDENTITY(false, bool(bool(false)))))))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
    }
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     buf[_GLF_struct_replacement_14._f0._f3.next_virtual_gid] = 2;
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     subgroupAll(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bool(_GLF_IDENTITY(! _GLF_IDENTITY((true), bool(_GLF_IDENTITY(bool((true)), bool(bvec4(bool((true)), true, _GLF_IDENTITY(false, ! (! (false))), true))))), (! (true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))));
    }
   else
    {
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) && true, bool(bool((_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))) && true)))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       return;
       if(_GLF_DEAD(false))
        return;
      }
     else
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          return;
        }
       else
        {
        }
      }
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         for(int _injected_loop_counter = _GLF_IDENTITY((0 << _GLF_IDENTITY(int(3), int(3))), (true ? (0 << _GLF_IDENTITY(int(3), int(3))) : _GLF_FUZZED(-16072))); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(vec4(7006.5277, 52.17, 9357.4790, -486.613).p)), float(_GLF_ONE(1.0, injectionSwitch.y)), bool(true))))); _GLF_IDENTITY(_injected_loop_counter ++, _GLF_IDENTITY(1, (1) - 0) * (_GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) / 1))))
          {
           if(_GLF_DEAD(false))
            continue;
           return;
           if(_GLF_DEAD(false))
            break;
          }
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
  }
}
