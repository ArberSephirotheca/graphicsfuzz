#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec4 GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_11next_virtual_gidsubgroup_idsubgroup_sizevirtual_gid;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), (false) && true)), bool(bvec2(! (_GLF_IDENTITY(false, (false) && true)), _GLF_TRUE(_GLF_IDENTITY(true, bool(bool(true))), (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED(mat2(926.036, -5811.8935, 5.5, 27.36)) : _GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0))))))), _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, sqrt(sqrt(1.0)), 0.0, 0.0, 0.0, 0.0, cos(0.0), 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))))).y))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec3(bvec2(true, false), false))))), false))), (false) && true)), bool(bvec2(! (_GLF_IDENTITY(false, (false) && true)), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))), (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_IDENTITY(true, bool(bvec2(true, false))), false))), (false) && true)), bool(bvec2(! (_GLF_IDENTITY(false, (false) && true)), _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), false || (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))), ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))) && true))))))) && true)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y, injectionSwitch.y))))))
    {
    }
   else
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), bool(bvec2(bool(bool(_GLF_DEAD(false))), false)))))))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       else
        {
        }
      }
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 0)); _injected_loop_counter --)
      {
       return;
      }
    }
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_WRAPPED_IF_TRUE(true)) && true))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))), _GLF_IDENTITY(1.0, (1.0) / 1.0) * (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(length(injectionSwitch.st)))), max(injectionSwitch.x, injectionSwitch.x)))))) > injectionSwitch.y))))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bvec2(true, false)))))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         else
          {
          }
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        return;
       for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < (((_GLF_IDENTITY((1 << _GLF_IDENTITY(int(3), int(_GLF_IDENTITY(3, 1 * (3))))) >> _GLF_IDENTITY(int(3), int(3)), ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))) ^ 0)) << _GLF_IDENTITY(int(3), _GLF_IDENTITY(_GLF_IDENTITY(int(3), (int(3)) | (int(3))), min(_GLF_IDENTITY(int(3), (int(3)) | (int(3))), _GLF_IDENTITY(int(3), (_GLF_IDENTITY(int(3), (_GLF_IDENTITY(int(3), 0 | (int(3)))) - (0 << _GLF_IDENTITY(int(1), int(1))))) | (int(3))))))) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), max(int(3), int(_GLF_IDENTITY(3, 0 | (_GLF_IDENTITY(3, int(ivec4(3, 0, (-71409 & 0), 0))))))))))), (_GLF_WRAPPED_LOOP(_injected_loop_counter < (((_GLF_IDENTITY(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)), ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))) ^ 0), (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)), ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))) ^ 0)) | 0)) << _GLF_IDENTITY(int(3), _GLF_IDENTITY(_GLF_IDENTITY(int(3), (int(3)) | (int(3))), min(_GLF_IDENTITY(_GLF_IDENTITY(int(3), (int(3)) | (int(3))), int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(int(3), (int(3)) | (int(3))), 1, 1), (ivec3(_GLF_IDENTITY(int(3), (int(3)) | (int(3))), 1, 1)) ^ ivec3(0, 0, 0)))), _GLF_IDENTITY(int(3), _GLF_IDENTITY((int(3)), ((int(3))) | ((int(3)))) | (int(3))))))) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), max(int(3), int(_GLF_IDENTITY(_GLF_IDENTITY(3, _GLF_IDENTITY(0 | (_GLF_IDENTITY(3, int(ivec4(3, 0, (-71409 & 0), 0)))), (0 | (_GLF_IDENTITY(3, int(ivec4(3, 0, (-71409 & 0), 0))))) | (0 | (_GLF_IDENTITY(3, int(ivec4(3, 0, (-71409 & 0), 0))))))), max(_GLF_IDENTITY(3, _GLF_IDENTITY(0 | (_GLF_IDENTITY(3, int(ivec4(3, 0, (-71409 & 0), 0)))), (0 | (_GLF_IDENTITY(3, int(ivec4(3, 0, (-71409 & 0), 0))))) | (0 | (_GLF_IDENTITY(3, int(ivec4(3, 0, (-71409 & 0), 0))))))), _GLF_IDENTITY(_GLF_IDENTITY(3, _GLF_IDENTITY(0 | (_GLF_IDENTITY(3, int(ivec4(3, 0, (-71409 & 0), 0)))), (0 | (_GLF_IDENTITY(3, int(ivec4(3, 0, (-71409 & 0), 0))))) | (0 | (_GLF_IDENTITY(3, int(ivec4(3, 0, (-71409 & 0), 0))))))), min(_GLF_IDENTITY(3, _GLF_IDENTITY(0 | (_GLF_IDENTITY(3, int(ivec4(3, 0, (-71409 & 0), 0)))), (0 | (_GLF_IDENTITY(3, int(ivec4(3, 0, (-71409 & 0), 0))))) | (0 | (_GLF_IDENTITY(3, int(ivec4(3, 0, (-71409 & 0), 0))))))), _GLF_IDENTITY(3, _GLF_IDENTITY(0 | (_GLF_IDENTITY(3, int(ivec4(3, 0, (-71409 & 0), 0)))), (0 | (_GLF_IDENTITY(3, int(ivec4(3, 0, (-71409 & 0), 0))))) | (0 | (_GLF_IDENTITY(3, int(ivec4(3, 0, (-71409 & 0), 0)))))))))))))))))) && true); _GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) ^ 0))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             do
              {
               if(_GLF_DEAD(false))
                break;
               return;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                break;
              }
             while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y))))))))), bool(bvec2(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), true))), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (false ? _GLF_FUZZED(-65.28) : injectionSwitch[0])), injectionSwitch[1])).y) || false)), ! (! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)))))))))))), bool(bvec2(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), true)))))))));
            }
          }
        }
      }
    }
   else
    {
    }
  }
 uint subgroup_id = gl_SubgroupID;
 for(int _injected_loop_counter = (((1 & 1) << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(5, (5) + 0), clamp(5, 5, 5))), (int(_GLF_IDENTITY(5, clamp(5, 5, 5)))) ^ 0))) >> _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, clamp(_GLF_IDENTITY(5, max(_GLF_IDENTITY(5, (5) | (5)), _GLF_IDENTITY(5, (5) >> 0))), 5, 5))))); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 | 0)); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      continue;
     continue;
    }
   if(_GLF_DEAD(false))
    return;
  }
 GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_11next_virtual_gidsubgroup_idsubgroup_sizevirtual_gid.y = subgroup_id;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_11next_virtual_gidsubgroup_idsubgroup_sizevirtual_gid.z = subgroup_size;
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)).x;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       return;
      }
    }
  }
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, max(gl_WorkGroupID.x, gl_WorkGroupID.x));
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, 0u ^ (workgroup_size * workgroup_id));
 for(int _injected_loop_counter = _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (~ (int(_GLF_ZERO(0.0, injectionSwitch.x))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (((0 ^ 1) << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7)))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false) && true, ((false) && true) || false), ! (! (_GLF_IDENTITY((false) && true, _GLF_IDENTITY(_GLF_IDENTITY(false || ((false) && true), bool(bvec4(false || ((false) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))), bool(bvec2(false || ((false) && true), false))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (_GLF_IDENTITY(_GLF_IDENTITY(41736, (41736) | (41736)) & (0 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), max(int(6), int(6))))), min(_GLF_IDENTITY(41736, (41736) | (41736)) & (0 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), max(int(6), int(6))))), _GLF_IDENTITY(41736, (41736) | (41736)) & (0 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), max(int(6), int(6))))))))); _injected_loop_counter --)
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
          }
         else
          {
          }
        }
       else
        {
        }
      }
    }
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   if(_GLF_DEAD(false))
    {
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_11next_virtual_gidsubgroup_idsubgroup_sizevirtual_gid.y * GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_11next_virtual_gidsubgroup_idsubgroup_sizevirtual_gid.z, uint(_GLF_IDENTITY(uvec3(workgroup_base + GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_11next_virtual_gidsubgroup_idsubgroup_sizevirtual_gid.y * GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_11next_virtual_gidsubgroup_idsubgroup_sizevirtual_gid.z, 0u, 1u), (uvec3(workgroup_base + GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_11next_virtual_gidsubgroup_idsubgroup_sizevirtual_gid.y * GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_11next_virtual_gidsubgroup_idsubgroup_sizevirtual_gid.z, _GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), min(uint(0u), uint(0u))))), 1u)) | (uvec3(workgroup_base + _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_11next_virtual_gidsubgroup_idsubgroup_sizevirtual_gid, uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_11next_virtual_gidsubgroup_idsubgroup_sizevirtual_gid)).y * GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_11next_virtual_gidsubgroup_idsubgroup_sizevirtual_gid.z, 0u, 1u))))) + subgroup_local_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY((true) && true, (_GLF_IDENTITY((true) && true, bool(_GLF_IDENTITY(bvec2((true) && true, false), bvec2(bvec4(bvec2(_GLF_IDENTITY((true), false || _GLF_IDENTITY(((true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(((true)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(((true)), true && (((true)))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(((true)), true && (((true)))), true, false), false)))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(((true)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(((true)), true && (((true)))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(((true)), true && (((true)))), true, false), false)))))), bool(bvec2(! (_GLF_IDENTITY(((true)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(((true)), true && (((true)))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(((true)), true && (((true)))), true, false), false)))))), false)))) && true)))) && true, _GLF_IDENTITY(false, ! (! (false)))), true, true)))))) && true))))
  {
   _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_11next_virtual_gidsubgroup_idsubgroup_sizevirtual_gid.w = virtual_gid, (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_11next_virtual_gidsubgroup_idsubgroup_sizevirtual_gid.w = virtual_gid, (GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_11next_virtual_gidsubgroup_idsubgroup_sizevirtual_gid.w = _GLF_IDENTITY(virtual_gid, (virtual_gid) ^ 0u)) - 0u)) - 0u), (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_11next_virtual_gidsubgroup_idsubgroup_sizevirtual_gid.w = virtual_gid, _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_11next_virtual_gidsubgroup_idsubgroup_sizevirtual_gid.w = virtual_gid, (GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_11next_virtual_gidsubgroup_idsubgroup_sizevirtual_gid.w = virtual_gid) - 0u)) - 0u, (_GLF_IDENTITY((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(1u), uint(1u)), max(1u << _GLF_IDENTITY(uint(1u), uint(1u)), _GLF_IDENTITY(1u << _GLF_IDENTITY(uint(1u), uint(1u)), clamp(1u << _GLF_IDENTITY(uint(1u), uint(1u)), 1u << _GLF_IDENTITY(uint(1u), uint(1u)), 1u << _GLF_IDENTITY(uint(1u), uint(1u))))))) >> _GLF_IDENTITY(uint(1u), uint(1u)), ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(1u), uint(1u)), max(1u << _GLF_IDENTITY(uint(1u), uint(1u)), _GLF_IDENTITY(1u << _GLF_IDENTITY(uint(1u), uint(1u)), clamp(1u << _GLF_IDENTITY(uint(1u), uint(1u)), 1u << _GLF_IDENTITY(uint(1u), uint(1u)), 1u << _GLF_IDENTITY(uint(1u), uint(1u))))))) >> _GLF_IDENTITY(uint(1u), uint(1u))) | (0u & 122472u))) * (_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_11next_virtual_gidsubgroup_idsubgroup_sizevirtual_gid.w = virtual_gid, (GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_11next_virtual_gidsubgroup_idsubgroup_sizevirtual_gid.w = virtual_gid) - 0u)) - 0u, ~ (~ ((_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_11next_virtual_gidsubgroup_idsubgroup_sizevirtual_gid.w = virtual_gid, (GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_11next_virtual_gidsubgroup_idsubgroup_sizevirtual_gid.w = virtual_gid) - 0u)) - 0u))))))) - 0u);
   for(int _injected_loop_counter = _GLF_IDENTITY(0, ~ (~ (0))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     do
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
         return;
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))));
    }
  }
 else
  {
  }
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(uint(uvec3(workgroup_base, 1u, 0u)), clamp(uint(uvec3(workgroup_base, 1u, 0u)), uint(uvec3(workgroup_base, 1u, 0u)), _GLF_IDENTITY(uint(uvec3(workgroup_base, 1u, 0u)), min(uint(uvec3(workgroup_base, 1u, 0u)), uint(uvec3(workgroup_base, 1u, 0u))))))) + GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_11next_virtual_gidsubgroup_idsubgroup_sizevirtual_gid.y * GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_11next_virtual_gidsubgroup_idsubgroup_sizevirtual_gid.z + ((_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id)) + 1) % GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_11next_virtual_gidsubgroup_idsubgroup_sizevirtual_gid.z);
 do
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        return;
      }
     else
      {
      }
     for(int _injected_loop_counter = (81196 & 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       return;
      }
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     for(int _injected_loop_counter = (0 & (_GLF_IDENTITY(_GLF_IDENTITY(-57800, clamp(-57800, _GLF_IDENTITY(-57800, (-57800) / 1), -57800)) >> 32058, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, determinant(mat2(0.0, 0.0, 1.0, 0.0)) + (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) < injectionSwitch.y)) ? _GLF_IDENTITY(-57800, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(-57800, int(ivec4(-57800, 1, 0, 1)))), (~ (_GLF_IDENTITY(-57800, int(ivec4(-57800, 1, 0, 1))))) >> 0))) >> 32058 : _GLF_FUZZED(-40881))))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < 1, bool(bvec2(_injected_loop_counter < 1, false)))); _GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) | (0 & 79574)))
      {
       if(_GLF_DEAD(false))
        return;
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _GLF_IDENTITY(_injected_loop_counter ++, 0 ^ (_injected_loop_counter ++)))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (false ? _GLF_FUZZED((vec2(-3070.0923, -5.6) - length(-28.11))) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), ! (! _GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))) && true)))), (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), ! _GLF_IDENTITY((! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))), ! (! ((! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))))))) && true))))))
          return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)))) > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         continue;
        }
      }
    }
   else
    {
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, true)), true && (bool(bvec4(false, true, true, true)))))))
  return;
 do
  {
   do
    {
     _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_11next_virtual_gidsubgroup_idsubgroup_sizevirtual_gid.x = next_virtual_gid, (GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_11next_virtual_gidsubgroup_idsubgroup_sizevirtual_gid.x = next_virtual_gid) << 0u), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_11next_virtual_gidsubgroup_idsubgroup_sizevirtual_gid.x = next_virtual_gid, (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_11next_virtual_gidsubgroup_idsubgroup_sizevirtual_gid.x = next_virtual_gid, 0u | (GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_11next_virtual_gidsubgroup_idsubgroup_sizevirtual_gid.x = next_virtual_gid))) << 0u)));
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false))))))
    return;
  }
 else
  {
  }
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    continue;
   for(int _injected_loop_counter = int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) - 0.0)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-6268.6446), _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) * 1.0)), vec2((injectionSwitch)[0], _GLF_FUZZED((+ 2266.2071))), bvec2(true, false))), injectionSwitch)).y)))), _GLF_IDENTITY(false, bool(bvec4(false, true, true, false))) || (_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-6268.6446), _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) * 1.0)), vec2((injectionSwitch)[0], _GLF_FUZZED((+ 2266.2071))), bvec2(true, false))), injectionSwitch)).y)))), (_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-6268.6446), _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) * 1.0)), vec2((injectionSwitch)[0], _GLF_FUZZED((+ 2266.2071))), bvec2(true, false))), injectionSwitch)).y)))), bool(bvec2((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-6268.6446), _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) * 1.0)), vec2((injectionSwitch)[0], _GLF_FUZZED((+ 2266.2071))), bvec2(true, false))), injectionSwitch)).y)))), false)))) || false))) && true))
        return;
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(5.7)), float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), bool(true))) > injectionSwitch.y))))
        continue;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
       return;
      }
     buf[GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_11next_virtual_gidsubgroup_idsubgroup_sizevirtual_gid.w] = 1;
    }
  }
 buf[GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_11next_virtual_gidsubgroup_idsubgroup_sizevirtual_gid.w] = 1;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), (injectionSwitch.x > injectionSwitch.y))))
  return;
 do
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     if(_GLF_IDENTITY(subgroup_local_id + 1 < _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_11next_virtual_gidsubgroup_idsubgroup_sizevirtual_gid, max(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_11next_virtual_gidsubgroup_idsubgroup_sizevirtual_gid, _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_11next_virtual_gidsubgroup_idsubgroup_sizevirtual_gid, uvec4(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_11next_virtual_gidsubgroup_idsubgroup_sizevirtual_gid[0], GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_11next_virtual_gidsubgroup_idsubgroup_sizevirtual_gid[1], GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_11next_virtual_gidsubgroup_idsubgroup_sizevirtual_gid[2], GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_11next_virtual_gidsubgroup_idsubgroup_sizevirtual_gid[3])))), (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_11next_virtual_gidsubgroup_idsubgroup_sizevirtual_gid, (false ? _GLF_FUZZED(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_11next_virtual_gidsubgroup_idsubgroup_sizevirtual_gid) : GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_11next_virtual_gidsubgroup_idsubgroup_sizevirtual_gid))) * (uvec4(1u, 1u, _GLF_IDENTITY(1u, min(1u, 1u)), 1u) & uvec4(1u, 1u, 1u, 1u))), _GLF_IDENTITY(min(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_11next_virtual_gidsubgroup_idsubgroup_sizevirtual_gid, GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_11next_virtual_gidsubgroup_idsubgroup_sizevirtual_gid), (min(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_11next_virtual_gidsubgroup_idsubgroup_sizevirtual_gid, GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_11next_virtual_gidsubgroup_idsubgroup_sizevirtual_gid)) | (min(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_11next_virtual_gidsubgroup_idsubgroup_sizevirtual_gid, GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_11next_virtual_gidsubgroup_idsubgroup_sizevirtual_gid)))).z, _GLF_IDENTITY(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) || false))), (true) && true) && (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (subgroup_local_id), ~ (_GLF_IDENTITY(~ (~ (subgroup_local_id)), ~ (_GLF_IDENTITY(~ (~ (~ (subgroup_local_id))), (~ (~ (~ (subgroup_local_id)))) - 0u))))))), subgroup_local_id)), 1u * (_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (subgroup_local_id), ~ (_GLF_IDENTITY(~ (~ (subgroup_local_id)), ~ (_GLF_IDENTITY(~ (~ (~ (subgroup_local_id))), (~ (~ (~ (subgroup_local_id)))) - 0u))))))), _GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u), _GLF_IDENTITY(subgroup_local_id, uint(uint(subgroup_local_id))))))))))) + 1 < GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_11next_virtual_gidsubgroup_idsubgroup_sizevirtual_gid.z)))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_IDENTITY(true, ! (! _GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), (_GLF_IDENTITY(bool(bvec2(true, false)), (bool(bvec2(true, false))) || false)) || false))), bool(bvec4((true), true, false, true)))))))), (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
          {
           return;
          }
         else
          {
          }
        }
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
        {
        }
       else
        {
         buf[GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_11next_virtual_gidsubgroup_idsubgroup_sizevirtual_gid.x] = _GLF_IDENTITY(2, max(_GLF_IDENTITY(_GLF_IDENTITY(2, max(_GLF_IDENTITY(2, clamp(2, _GLF_IDENTITY(2, _GLF_IDENTITY((2), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((2), clamp((2), (_GLF_IDENTITY(2, (2) * 1)), (2))), clamp(_GLF_IDENTITY((2), clamp((2), (2), _GLF_IDENTITY((2), ((2)) + 0))), _GLF_IDENTITY((2), clamp((2), (2), (2))), _GLF_IDENTITY((2), clamp((2), (2), (2)))))), 0 + (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((2), clamp((2), (2), (2))), clamp(_GLF_IDENTITY((2), clamp(_GLF_IDENTITY((2), ((2)) * 1), (2), (_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (false ? _GLF_FUZZED(51567) : 2))) << (0 >> _GLF_IDENTITY(int(7), int(7))))))), _GLF_IDENTITY((2), clamp((2), (2), (_GLF_IDENTITY(2, (2) | (2))))), _GLF_IDENTITY((2), clamp((2), (2), (2)))))), min((_GLF_IDENTITY(_GLF_IDENTITY((2), clamp((2), (2), (2))), clamp(_GLF_IDENTITY((2), clamp((2), _GLF_IDENTITY((2), min((2), (2))), (2))), _GLF_IDENTITY((2), clamp((2), (2), (2))), _GLF_IDENTITY((2), clamp((2), (2), (2)))))), (_GLF_IDENTITY(_GLF_IDENTITY((2), clamp((2), (2), (2))), clamp(_GLF_IDENTITY((2), clamp((2), (2), (_GLF_IDENTITY(2, clamp(2, 2, _GLF_IDENTITY(2, ~ (~ (2)))))))), _GLF_IDENTITY((2), clamp((2), (2), (2))), _GLF_IDENTITY((2), clamp((2), (2), (2)))))))))))) / 1), 2)), 2)), clamp(2, _GLF_IDENTITY(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) - 0)) * 1), clamp(_GLF_IDENTITY(2, (2) | (2)), 2, _GLF_IDENTITY(2, 0 | (2)))), _GLF_IDENTITY(2, int(ivec2(2, ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0)))))))), 2));
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), false || (bool(bvec2(false, false))))))))))
        return;
       do
        {
         for(int _injected_loop_counter = _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, (1) - 0))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             subgroupAll(false);
            }
           else
            {
             if(_GLF_DEAD(false))
              break;
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
        continue;
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(89.17)))))))
        return;
       if(_GLF_DEAD(false))
        continue;
       for(int _injected_loop_counter = _GLF_IDENTITY(int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-5490.6376)), bool(false))))), (int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-5490.6376)), bool(false)))))) | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
        {
         if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, sin(0.0), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0))).y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), 1.0 * (clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, sin(0.0), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(vec4(-416.265, -9.6, 542.398, 5.8).z)), bool(false))), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0))).y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))), true && ((_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))), injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))))))), true && (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y, clamp(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-95.18)), vec2(_GLF_FUZZED(-3219.5481), (injectionSwitch)[1]), bvec2(false, true))))).y, injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, (injectionSwitch.y) / 1.0)))), true && ((injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.y), (true ? _GLF_IDENTITY((injectionSwitch.y), max((injectionSwitch.y), (injectionSwitch.y))) : _GLF_FUZZED(-414.030)))) + 0.0) / 1.0))), float(mat4x3(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, abs(1.0), 1.0)))))))))), bool(bvec4(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))), true && ((injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), float(mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-5103.9501)), vec2(_GLF_FUZZED(5.8), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))).y, (injectionSwitch.y) / 1.0))), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, abs(1.0), 1.0)))))))))), true, true, false))))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0))), 1.0, 0.0, 0.0, abs(0.0), 0.0, determinant(mat4(1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, length(vec2(0.0, 0.0)), 0.0, 1.0, 1.0, 0.0, log(1.0), 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)))), 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0))) > injectionSwitch.y))))
            continue;
           do
            {
             buf[GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_11next_virtual_gidsubgroup_idsubgroup_sizevirtual_gid.x] = _GLF_IDENTITY(2, _GLF_IDENTITY((2), int(_GLF_ZERO(0.0, injectionSwitch.x)) | ((2))) | int(_GLF_ZERO(0.0, injectionSwitch.x)));
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         else
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
           do
            {
             if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
              return;
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
        }
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 ^ 0)); _injected_loop_counter --)
        {
         subgroupAll(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool(bool(true))), bool(bvec4(bool(bool(bool(_GLF_IDENTITY(true, (true) && true)))), true, false, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) || false), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, (false) || false), false), true, false))))))))), (bool(_GLF_IDENTITY(bool(bool(bool(true))), bool(bvec4(bool(bool(bool(true))), true, false, false))))) || false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bool(true)))), (! (_GLF_IDENTITY(true, bool(bool(true))))) || false)))))), _GLF_IDENTITY(false || (bool(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))))))) && (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), ! (! (_GLF_IDENTITY(true, bool(bool(true)))))))))), (false || (bool(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) - sin(abs(vec2(0.0, 0.0)))).y)) && (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), ! (! (_GLF_IDENTITY(true, bool(bool(true))))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(true && (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), ! (! (_GLF_IDENTITY(true, bool(bool(true))))))), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), ! (! (_GLF_IDENTITY(true, bool(bool(true)))))))))))), false || (bool(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((924.381 + -8.8))), bool(false)))))))) && (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), ! (! (_GLF_IDENTITY(true, bool(bool(true))))))))))))), false || (_GLF_IDENTITY(true && (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(2771.3986)), float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), bool(true))) < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), ! (! (_GLF_IDENTITY(true, bool(bool(true))))))))), false || (bool(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), ! (! (_GLF_IDENTITY(true, bool(bool(true))))))))))))), (true && _GLF_IDENTITY((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(true), (bool(true)) || false), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(bool(true), (bool(true)) || false), false), true, false)), bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_IDENTITY(bool(true), (bool(true)) || false), false), true, false)), true, true)))))))), _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(vec3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, 0.0))), mix(float(_GLF_FUZZED(2771.3986)), float(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * cos(vec2(0.0, 0.0))) : _GLF_FUZZED(injectionSwitch))).x, injectionSwitch.x))), bool(true))) < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), ! (! (_GLF_IDENTITY(true, bool(bool(true))))))))), false || (bool(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, true && (true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), ! (! (_GLF_IDENTITY(true, bool(bool(true))))))))))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(true), (bool(true)) || false), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(bool(true), (bool(true)) || false), false), true, false)), bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_IDENTITY(bool(true), (bool(true)) || false), false), true, false)), true, true)))))))), _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(vec3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, 0.0))), mix(float(_GLF_FUZZED(2771.3986)), float(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * cos(vec2(0.0, 0.0))) : _GLF_FUZZED(injectionSwitch))).x, injectionSwitch.x))), bool(true))) < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), ! (! (_GLF_IDENTITY(true, bool(bool(true))))))))), false || (bool(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, true && (true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), ! (! (_GLF_IDENTITY(true, bool(bool(true))))))))))))), ! (! ((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(true), (bool(true)) || false), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(bool(true), (bool(true)) || false), false), true, false)), bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_IDENTITY(bool(true), (bool(true)) || false), false), true, false)), true, true)))))))), _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(vec3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, 0.0))), mix(float(_GLF_FUZZED(2771.3986)), float(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * cos(vec2(0.0, 0.0))) : _GLF_FUZZED(injectionSwitch))).x, injectionSwitch.x))), bool(true))) < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), ! (! (_GLF_IDENTITY(true, bool(bool(true))))))))), false || (bool(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, true && (true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), ! (! (_GLF_IDENTITY(true, bool(bool(true)))))))))))))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bool(bvec2(bool(bvec4(_GLF_IDENTITY((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(true), (bool(true)) || false), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(bool(true), (bool(true)) || false), false), true, false)), bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_IDENTITY(bool(true), (bool(true)) || false), false), true, false)), true, true)))))))), _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(vec3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, 0.0))), mix(float(_GLF_FUZZED(2771.3986)), float(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * cos(vec2(0.0, 0.0))) : _GLF_FUZZED(injectionSwitch))).x, injectionSwitch.x))), bool(true))) < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), ! (! (_GLF_IDENTITY(true, bool(bool(true))))))))), false || (bool(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, true && (true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), ! (! (_GLF_IDENTITY(true, bool(bool(true))))))))))))), ! (! ((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(true), (bool(true)) || false), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(bool(true), (bool(true)) || false), false), true, false)), bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_IDENTITY(bool(true), (bool(true)) || false), false), true, false)), true, true)))))))), _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(vec3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, 0.0))), mix(float(_GLF_FUZZED(2771.3986)), float(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * cos(vec2(0.0, 0.0))) : _GLF_FUZZED(injectionSwitch))).x, injectionSwitch.x))), bool(true))) < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), ! (! (_GLF_IDENTITY(true, bool(bool(true))))))))), false || (bool(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, true && (true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), ! (! (_GLF_IDENTITY(true, bool(bool(true)))))))))))))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), true))))) || false))))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), bool(bool(true))))), _GLF_IDENTITY((_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bool(true)))))) || false, false || (_GLF_IDENTITY((_GLF_IDENTITY(true, false || _GLF_IDENTITY((_GLF_IDENTITY(true, bool(bool(true)))), ! (! ((_GLF_IDENTITY(true, bool(bool(true))))))))), bool(bvec4((_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bool(true)))))), true, false, false))) || false))), false, true, false)))), true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) || false)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))))).y)) || (_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(bvec3(! (true), false, true)), true && (bool(bvec3(! (true), false, true)))))))))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(false || (bool(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), ! (! (_GLF_IDENTITY(true, bool(bool(true)))))))))), ! (_GLF_IDENTITY(! (false || (bool(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), ! (! (_GLF_IDENTITY(true, bool(bool(true))))))))))), (! (false || (bool(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), ! (! (_GLF_IDENTITY(true, bool(bool(true))))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), ! (! (_GLF_IDENTITY(true, bool(bool(true))))))), bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), ! (! (_GLF_IDENTITY(true, bool(bool(true))))))), false), bvec2(bvec3(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), ! (! (_GLF_IDENTITY(true, bool(bool(true))))))), false), false)))))) && true)))))) && true))), true && (_GLF_IDENTITY(false || (bool(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), ! (_GLF_IDENTITY(! (bool(bool(true))), ! (! (_GLF_IDENTITY(! (bool(bool(true))), ! (! (! (bool(bool(true)))))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), ! (! (_GLF_IDENTITY(true, bool(bool(true)))))))))), ! (_GLF_IDENTITY(! (false || (bool(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), ! (! (_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true)))))))))))))))), (! (false || (bool(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true))))) && true)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bool(true)))), bool(bool(! (_GLF_IDENTITY(true, bool(bool(true)))))))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), ! (! (_GLF_IDENTITY(true, bool(bool(true))))))), bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), ! (! (_GLF_IDENTITY(true, bool(bool(true))))))), false), bvec2(bvec3(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), ! (! (_GLF_IDENTITY(true, bool(bool(true))))))), false), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), ! (! (_GLF_IDENTITY(true, bool(bool(true))))))), false), _GLF_IDENTITY(bvec2(bvec4(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), ! (! (_GLF_IDENTITY(true, bool(bool(true))))))), false), false, true)), bvec2(bvec2(bvec2(bvec4(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), ! (! (_GLF_IDENTITY(true, bool(bool(true))))))), false), false, true)))))), true, false)), bvec2(bvec3(bvec2(bvec4(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), ! (! (_GLF_IDENTITY(true, bool(bool(true))))))), false), _GLF_IDENTITY(bvec2(bvec4(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), ! (! (_GLF_IDENTITY(true, bool(bool(true))))))), false), false, true)), bvec2(bvec2(bvec2(bvec4(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), ! (! (_GLF_IDENTITY(true, bool(bool(true))))))), false), false, true)))))), true, false)), false)))), false)))))) && true)))))) && true))))))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), ! (! (_GLF_IDENTITY(true, bool(bool(true))))))))), false || (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), bool(bvec2(bool(bool(true)), false)))), (_GLF_IDENTITY(true, bool(bool(true)))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, bool(bool(true))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(true, bool(bool(true))), true, true)))))), ! (! (_GLF_IDENTITY(true, bool(bool(true))))))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, bool(bool(true))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(true, bool(bool(true))), true, true)))))), ! (! (_GLF_IDENTITY(true, bool(bool(true)))))))))))))), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), ! (! (_GLF_IDENTITY(true, bool(bool(true))))))))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), ! (! (_GLF_IDENTITY(true, bool(bool(true))))))))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), ! (! (_GLF_IDENTITY(true, bool(bool(true)))))))))) || false)))), false || (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), (_GLF_IDENTITY(true, bool(bool(true)))) && true), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x < injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)), ! (! (bool(bvec4((injectionSwitch.x < injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))))))) && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, bool(bool(true))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(true, bool(bool(true))), true, true)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, bool(bool(true))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(true, bool(bool(true))), true, true))))))), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, bool(bool(true))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(true, bool(bool(true))), true, true))))))), true, false, false))))), ! (! (_GLF_IDENTITY(true, bool(bool(true)))))))))))))))))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(_GLF_IDENTITY(true, false || _GLF_IDENTITY((true), ! (! ((true))))), bool(_GLF_IDENTITY(bool(true), ! (! (bool(true)))))))), false || (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, false || _GLF_IDENTITY((true), ! (! ((true))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, false || _GLF_IDENTITY((true), ! (! ((true))))), true, false)), (bool(bvec3(_GLF_IDENTITY(true, false || _GLF_IDENTITY((true), ! (! ((true))))), true, false))) && true)), bool(_GLF_IDENTITY(bool(true), ! (! (bool(true)))))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bool(true))))), (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), true && (_GLF_IDENTITY(true, bool(bool(true)))))))) || false)) || false, false || (_GLF_IDENTITY((_GLF_IDENTITY(true, false || _GLF_IDENTITY((_GLF_IDENTITY(true, bool(bool(true)))), false || ((_GLF_IDENTITY(true, bool(bool(true)))))))), bool(bvec4((_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bool(true)))))), true, false, false))) || false))), false, true, false)))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, (true) || false)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, bool(bool(true))))))))))), _GLF_IDENTITY(false || (bool(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), ! (! (_GLF_IDENTITY(true, bool(bool(true)))))))))), ! (_GLF_IDENTITY(! (false || (bool(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), bool(bool(true))), ! (! (_GLF_IDENTITY(true, bool(bool(true))))))))))), (! (false || (bool(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)), (bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))) && true)) && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bool(true)))), ! (! (! (_GLF_IDENTITY(true, bool(bool(true)))))))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), ! (! (_GLF_IDENTITY(true, bool(bool(true))))))), bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), ! (! (_GLF_IDENTITY(true, bool(bool(true))))))), false), bvec2(bvec3(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), ! (! (_GLF_IDENTITY(true, bool(bool(true))))))), false), false)))))) && true)))))) && true))))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), (_GLF_IDENTITY(true, bool(bool(true)))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), ! (! (_GLF_IDENTITY(true, bool(bool(true))))))))), false || (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), (_GLF_IDENTITY(true, bool(bool(true)))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, bool(bool(true))), true, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, bool(bool(true))), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, bool(bool(true))), true, true), false)))))))), ! (! (_GLF_IDENTITY(true, bool(bool(true)))))))))))), ! (! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), ! (! (_GLF_IDENTITY(true, bool(bool(true))))))))), false || (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), (_GLF_IDENTITY(true, bool(bool(true)))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, bool(bool(true))), true, true), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, bool(bool(true))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(true, bool(bool(true))), true, true)))), false)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, bool(bool(true))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(true, bool(bool(true))), true, true)))), false)))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(true, bool(bool(true))), true, true)))))), ! (! (_GLF_IDENTITY(true, bool(bool(true)))))))))))))))))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(_GLF_IDENTITY(true, false || _GLF_IDENTITY((true), ! (! ((true))))), bool(_GLF_IDENTITY(bool(true), ! (! (bool(true)))))))), ! (! (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(false, ! (! (false))) || _GLF_IDENTITY((true), ! (_GLF_IDENTITY(! ((true)), (! ((true))) && true)))), bool(_GLF_IDENTITY(bool(true), ! (! (bool(true))))))))))), _GLF_IDENTITY((_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bool(true)))))) || false, false || (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_IDENTITY(false || _GLF_IDENTITY((_GLF_IDENTITY(true, bool(bool(true)))), false || ((_GLF_IDENTITY(true, bool(bool(true)))))), (false || _GLF_IDENTITY((_GLF_IDENTITY(true, bool(bool(true)))), false || ((_GLF_IDENTITY(true, bool(bool(true))))))) && true))), false || ((_GLF_IDENTITY(true, _GLF_IDENTITY(false || _GLF_IDENTITY((_GLF_IDENTITY(true, bool(bool(true)))), false || ((_GLF_IDENTITY(true, bool(bool(true)))))), (false || _GLF_IDENTITY((_GLF_IDENTITY(true, bool(bool(true)))), false || ((_GLF_IDENTITY(true, bool(bool(true))))))) && true))))), bool(bvec4((_GLF_IDENTITY(true, false || _GLF_IDENTITY((_GLF_IDENTITY(true, bool(bool(true)))), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(true, bool(bool(true))))), bool(bvec2(bool((_GLF_IDENTITY(true, bool(bool(true))))), true))))))), true, false, false))) || false))), false, true, false)))), true, true), bvec3(bvec3(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, bool(bool(true))))))))))), _GLF_IDENTITY(false || (bool(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), ! (! (_GLF_IDENTITY(true, bool(bool(true)))))))))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (false || (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), ! (! (_GLF_IDENTITY(true, bool(bool(true)))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), ! (! (_GLF_IDENTITY(true, bool(bool(true)))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), ! (! (_GLF_IDENTITY(true, bool(bool(true))))))))))))))), (! _GLF_IDENTITY((false || (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), ! (! (_GLF_IDENTITY(true, bool(bool(true))))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), ! (! (_GLF_IDENTITY(true, bool(bool(true))))))), bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), ! (! (_GLF_IDENTITY(true, bool(bool(true))))))), false), bvec2(bvec3(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), ! (! (_GLF_IDENTITY(true, bool(bool(true))))))), false), false)))))) && true)), true && (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), ! (! (_GLF_IDENTITY(true, bool(bool(true))))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), true && (_GLF_IDENTITY(true, bool(bool(true))))))))), bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), ! (! (_GLF_IDENTITY(true, bool(bool(true))))))), false), bvec2(bvec3(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), ! (! (_GLF_IDENTITY(true, bool(bool(true))))))), false), false)))))) && true))))))), ((false || (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), ! (! (_GLF_IDENTITY(true, bool(bool(true))))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), ! (! (_GLF_IDENTITY(true, bool(bool(true))))))), bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), ! (! (_GLF_IDENTITY(true, bool(bool(true))))))), false), bvec2(bvec3(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), ! (! (_GLF_IDENTITY(true, bool(bool(true))))))), false), false)))))) && true)), true && (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), ! (! (_GLF_IDENTITY(true, bool(bool(true))))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), true && (_GLF_IDENTITY(true, bool(bool(true))))))))), bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), ! (! (_GLF_IDENTITY(true, bool(bool(true))))))), false), bvec2(bvec3(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), ! (! (_GLF_IDENTITY(true, bool(bool(true))))))), false), false)))))) && true)))))))) || false)) && true)), (_GLF_IDENTITY((_GLF_IDENTITY(! (false || (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), ! (! (_GLF_IDENTITY(true, bool(bool(true)))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), ! (! (_GLF_IDENTITY(true, bool(bool(true)))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), ! (! (_GLF_IDENTITY(true, bool(bool(true))))))))))))))), (! _GLF_IDENTITY((false || (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), ! (! (_GLF_IDENTITY(true, bool(bool(true))))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), ! (! (_GLF_IDENTITY(true, bool(bool(true))))))), bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), ! (! (_GLF_IDENTITY(true, bool(bool(true))))))), false), bvec2(bvec3(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), ! (! (_GLF_IDENTITY(true, bool(bool(true))))))), false), false)))))) && true)), true && (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), ! (! (_GLF_IDENTITY(true, bool(bool(true))))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), true && (_GLF_IDENTITY(true, bool(bool(true))))))))), bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), ! (! (_GLF_IDENTITY(true, bool(bool(true))))))), false), bvec2(bvec3(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), ! (! (_GLF_IDENTITY(true, bool(bool(true))))))), false), false)))))) && true))))))), ((false || (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), ! (! (_GLF_IDENTITY(true, bool(bool(true))))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), ! (! (_GLF_IDENTITY(true, bool(bool(true))))))), bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), ! (! (_GLF_IDENTITY(true, bool(bool(true))))))), false), bvec2(bvec3(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), ! (! (_GLF_IDENTITY(true, bool(bool(true))))))), false), false)))))) && true)), true && (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), ! (! (_GLF_IDENTITY(true, bool(bool(true))))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), true && (_GLF_IDENTITY(true, bool(bool(true))))))))), bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), ! (! (_GLF_IDENTITY(true, bool(bool(true))))))), false), bvec2(bvec3(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), ! (! (_GLF_IDENTITY(true, bool(bool(true))))))), false), false)))))) && true)))))))) || false)) && true)), false || ((_GLF_IDENTITY(! (false || (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), ! (! (_GLF_IDENTITY(true, bool(bool(true)))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), ! (! (_GLF_IDENTITY(true, bool(bool(true)))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), ! (! (_GLF_IDENTITY(true, bool(bool(true))))))))))))))), (! _GLF_IDENTITY((false || (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), ! (! (_GLF_IDENTITY(true, bool(bool(true))))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), ! (! (_GLF_IDENTITY(true, bool(bool(true))))))), bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), ! (! (_GLF_IDENTITY(true, bool(bool(true))))))), false), bvec2(bvec3(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), ! (! (_GLF_IDENTITY(true, bool(bool(true))))))), false), false)))))) && true)), true && (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), ! (! (_GLF_IDENTITY(true, bool(bool(true))))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), true && (_GLF_IDENTITY(true, bool(bool(true))))))))), bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), ! (! (_GLF_IDENTITY(true, bool(bool(true))))))), false), bvec2(bvec3(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), ! (! (_GLF_IDENTITY(true, bool(bool(true))))))), false), false)))))) && true))))))), ((false || (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), ! (! (_GLF_IDENTITY(true, bool(bool(true))))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), ! (! (_GLF_IDENTITY(true, bool(bool(true))))))), bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), ! (! (_GLF_IDENTITY(true, bool(bool(true))))))), false), bvec2(bvec3(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), ! (! (_GLF_IDENTITY(true, bool(bool(true))))))), false), false)))))) && true)), true && (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), ! (! (_GLF_IDENTITY(true, bool(bool(true))))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), true && (_GLF_IDENTITY(true, bool(bool(true))))))))), bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), ! (! (_GLF_IDENTITY(true, bool(bool(true))))))), false), bvec2(bvec3(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), ! (! (_GLF_IDENTITY(true, bool(bool(true))))))), false), false)))))) && true)))))))) || false)) && true))))) || false)))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), ! (! (_GLF_IDENTITY(true, bool(bool(true))))))))), false || (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, (true) && true), false))))), ! (! (bool(bool(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, (true) && true), false)))))))))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, bool(bool(true))), true, true), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, bool(bool(true))), true, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, bool(bool(true))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(true, bool(bool(true))), true, true)))))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, bool(bool(true))), true, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, bool(bool(true))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(true, bool(bool(true))), true, true))))))))))))), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(true, bool(bool(true))), true, true)), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(true, bool(bool(true))), true, true))))))))), ! (! (_GLF_IDENTITY(true, bool(bool(true)))))))))))), ! (! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(true, bool(bool(true)))), ! (! ((_GLF_IDENTITY(true, bool(bool(true)))))))))))), false || (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), (_GLF_IDENTITY(true, bool(bool(true)))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, bool(bool(true))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(true, bool(bool(true))), true, true)))))), ! (! (_GLF_IDENTITY(true, bool(bool(true)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), (_GLF_IDENTITY(true, bool(bool(true)))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, bool(bool(true))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(true, bool(bool(true))), true, true)))))), ! (! (_GLF_IDENTITY(true, bool(bool(true)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), (_GLF_IDENTITY(true, bool(bool(true)))) && true), _GLF_TRUE(_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)), injectionSwitch)).x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, bool(bool(true))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(true, bool(bool(true))), true, true)))))), ! (! (_GLF_IDENTITY(true, bool(bool(true)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, bool(bool(true))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(true, bool(bool(true))), true, true)))))), ! (! (_GLF_IDENTITY(true, bool(bool(true))))))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, bool(bool(true))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(true, bool(bool(true))), true, true)))))), ! (! (_GLF_IDENTITY(true, bool(bool(true)))))))), ! (! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), ! (! (_GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) && true))))), bool(bool(true))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, bool(bool(true))), true, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(true, bool(bool(true))), true, true))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(true, bool(bool(true))), true, true))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(true, bool(bool(true))), true, true))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(true, bool(bool(true))), true, true))))))))))))))), ! (! (_GLF_IDENTITY(true, bool(bool(true)))))))))))))))))) || false)) || false))))))))))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(_GLF_IDENTITY(true, false || _GLF_IDENTITY((true), ! (! (_GLF_IDENTITY((true), ((true)) || false))))), bool(_GLF_IDENTITY(bool(true), ! (! (bool(_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), _GLF_IDENTITY((_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bool(true)))))) || false, false || (_GLF_IDENTITY((_GLF_IDENTITY(true, false || _GLF_IDENTITY((_GLF_IDENTITY(true, bool(bool(true)))), _GLF_IDENTITY(false || ((_GLF_IDENTITY(true, bool(bool(true))))), (false || ((_GLF_IDENTITY(true, bool(bool(true)))))) && true)))), bool(bvec4((_GLF_IDENTITY(true, false || (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, true, true)), bool(bvec4(bool(bvec4(true, true, true, true)), true, false, true)))), bool(bool(true)))))), true, false, false))) || false))), false, true, false)))), true, true)))))))), false || (! (_GLF_IDENTITY(true, _GLF_IDENTITY(false, bool(bool(false))) || _GLF_IDENTITY((_GLF_IDENTITY(true, bool(bool(true)))), _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), bool(bvec2(_GLF_IDENTITY(bool(bool(true)), bool(bvec4(_GLF_IDENTITY(bool(bool(true)), false || (bool(bool(true)))), false, false, false))), true))))), _GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))) && true), (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) - 0.0, float(_GLF_IDENTITY(mat3x2((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) - 0.0, 1.0, 0.0, abs(1.0), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0), mat3x2(mat4(mat3x2((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) - 0.0, 1.0, 0.0, abs(1.0), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0))))))) > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec2(bool(bvec2((_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), bool(bvec2(_GLF_IDENTITY(bool(bool(true)), bool(bvec4(_GLF_IDENTITY(bool(bool(true)), false || (bool(bool(true)))), false, false, false))), true))))), _GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))) && true), (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) - 0.0, float(_GLF_IDENTITY(mat3x2((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) - 0.0, 1.0, 0.0, abs(1.0), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0), mat3x2(mat4(mat3x2((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) - 0.0, 1.0, 0.0, abs(1.0), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0))))))) > injectionSwitch.y)))), false)), ! (! (bool(bvec2(bool(bvec2((_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), bool(bvec2(_GLF_IDENTITY(bool(bool(true)), bool(bvec4(_GLF_IDENTITY(bool(bool(true)), false || (bool(bool(true)))), false, false, false))), true))))), _GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))) && true), (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) - 0.0, float(_GLF_IDENTITY(mat3x2((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) - 0.0, 1.0, 0.0, abs(1.0), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0), mat3x2(mat4(mat3x2((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) - 0.0, 1.0, 0.0, abs(1.0), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0))))))) > injectionSwitch.y)))), false))))))))))))));
        }
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), true, true))), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), true, true, true)), (bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), true, true, true))) && true)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), true, true))), true, true), true)))), (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), true, true))), _GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, true && (true)), false))), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (_GLF_IDENTITY(! (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (! (! (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)) && true)))) && _GLF_IDENTITY(true, ! (! (true)))), true, true))), true, true), true))))) || false))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
  {
  }
 else
  {
   for(int _injected_loop_counter = (1 ^ _GLF_IDENTITY(0, (0) | (0))); _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) * 1))) != 0), false || (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _injected_loop_counter, _GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, 0 + (_GLF_IDENTITY(_injected_loop_counter, (true ? _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) / 1) : _GLF_FUZZED(_injected_loop_counter))))), (_injected_loop_counter) * 1))) != 0))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY(clamp(_injected_loop_counter, _injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) * 1)), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(clamp(_injected_loop_counter, _injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) * 1)), clamp(clamp(_injected_loop_counter, _injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) * 1)), clamp(_injected_loop_counter, _injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) * 1)), clamp(_injected_loop_counter, _injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) * 1)))), 1, 1, 0)), (int(ivec4(_GLF_IDENTITY(clamp(_injected_loop_counter, _injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) * 1)), clamp(clamp(_injected_loop_counter, _injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) * 1)), clamp(_injected_loop_counter, _injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) * 1)), clamp(_injected_loop_counter, _injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) * 1)))), 1, 1, 0))) * 1))) != 0), false || (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _injected_loop_counter, _GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY(0, (1 ^ 1) ^ (0)) + (_GLF_IDENTITY(_injected_loop_counter, (true ? _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) / 1) : _GLF_FUZZED(_injected_loop_counter))))), (_injected_loop_counter) * 1))) != 0))))), (_GLF_WRAPPED_LOOP(_injected_loop_counter != 0)) || false); _injected_loop_counter --)
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(bool(bvec3(bool(false), true, false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bvec3(bool(false), true, false)), (bool(bvec3(bool(false), true, _GLF_IDENTITY(false, bool(bvec2(false, true)))))) && true), true, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bvec3(bool(false), true, false)), (bool(bvec3(bool(false), true, _GLF_IDENTITY(false, bool(bvec2(false, true)))))) && true), true, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bool(bvec3(bool(false), true, false)), (bool(bvec3(bool(false), true, _GLF_IDENTITY(false, bool(bvec2(false, true)))))) && true), true, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false))), false)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bvec3(bool(false), true, false)), (bool(bvec3(bool(false), true, _GLF_IDENTITY(false, bool(bvec2(false, true)))))) && true), true, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bool(bvec3(bool(false), true, false)), (bool(bvec3(bool(false), true, _GLF_IDENTITY(false, bool(bvec2(false, true)))))) && true), true, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false))), false)), true))))), bool(_GLF_IDENTITY(bool(bool(bvec3(_GLF_IDENTITY(bool(bvec3(bool(false), true, _GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))), (false) && true))), _GLF_IDENTITY((bool(bvec3(bool(false), true, false))), bool(bvec3((bool(bvec3(bool(false), true, false))), false, true))) && _GLF_IDENTITY(true, (true) && true)), true, false))), false || (bool(bool(bvec3(_GLF_IDENTITY(bool(bvec3(bool(false), true, _GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))), (false) && true))), _GLF_IDENTITY((bool(bvec3(bool(false), true, false))), bool(bvec3((bool(bvec3(bool(false), true, false))), false, true))) && _GLF_IDENTITY(true, (true) && true)), true, false))))))))))), ! (! (bool(bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(bool(bvec3(bool(false), true, false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bvec3(bool(false), true, false)), (bool(bvec3(bool(false), true, _GLF_IDENTITY(false, bool(bvec2(false, true)))))) && true), true, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bvec3(bool(false), true, false)), (bool(bvec3(bool(false), true, _GLF_IDENTITY(false, bool(bvec2(false, true)))))) && true), true, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bool(bvec3(bool(false), true, false)), (bool(bvec3(bool(false), true, _GLF_IDENTITY(false, bool(bvec2(false, true)))))) && true), true, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false))), false)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bvec3(bool(false), true, false)), (bool(bvec3(bool(false), true, _GLF_IDENTITY(false, bool(bvec2(false, true)))))) && true), true, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bool(bvec3(bool(false), true, false)), (bool(bvec3(bool(false), true, _GLF_IDENTITY(false, bool(bvec2(false, true)))))) && true), true, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false))), false)), true))))), bool(_GLF_IDENTITY(bool(bool(bvec3(_GLF_IDENTITY(bool(bvec3(bool(false), true, _GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))), (false) && true))), _GLF_IDENTITY((bool(bvec3(bool(false), true, false))), bool(bvec3((bool(bvec3(bool(false), true, false))), false, true))) && _GLF_IDENTITY(true, (true) && true)), true, false))), false || (bool(bool(bvec3(_GLF_IDENTITY(bool(bvec3(bool(false), true, _GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))), (false) && true))), _GLF_IDENTITY((bool(bvec3(bool(false), true, false))), bool(bvec3((bool(bvec3(bool(false), true, false))), false, true))) && _GLF_IDENTITY(true, (true) && true)), true, false)))))))))))))))))))
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             do
              {
               return;
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
           else
            {
            }
           if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
            continue;
          }
        }
      }
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
}
