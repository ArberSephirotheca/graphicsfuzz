#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 0) uniform buf0 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), true && (true && (false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-8.3) : _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)))))) > injectionSwitch.y)), bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false)))))), (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-8.3) : _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)))), max(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-8.3) : _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-8.3) : _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)))))))) > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false))))))
      return;
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.6)), bool(false))) > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(true, ! (! (true))), false, true)), true && (bool(bvec4(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))), false, true)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 uvec4 GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_12num_workgroupsubgroup_idvirtual_gidworkgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), false || (bool(bool(injectionSwitch.x > injectionSwitch.y)))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), bool(bvec4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, false, false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y))))))))))), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), bool(bvec4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, false, false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y)))))))))))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3(injectionSwitch.x, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3(0.0, determinant(mat4(0.0, 1.0, 0.0, 1.0, sqrt(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, sin(0.0), 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0)), mix(float(float(mat3(0.0, determinant(mat4(0.0, 1.0, 0.0, 1.0, sqrt(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, sin(0.0), 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0))), float(_GLF_FUZZED(-91.78)), bool(false)))), 0.0, 1.0, 1.0, length(vec2(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-297.547) : 0.0)))), 1.0, 0.0, 0.0)), max(float(mat3(injectionSwitch.x, 0.0, 0.0, 1.0, 1.0, length(vec2(0.0, 0.0)), 1.0, 0.0, 0.0)), float(mat3(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(3.1)), float(injectionSwitch.x), bool(true))), injectionSwitch.x)), 0.0, 0.0, 1.0, 1.0, length(vec2(0.0, 0.0)), 1.0, 0.0, 0.0))))) > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))) && true), false, true))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_12num_workgroupsubgroup_idvirtual_gidworkgroup_id.y = subgroup_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (! (_GLF_IDENTITY(false, ! (! (false))))) && true)))) || false)))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))))) || (true)), (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(9.7, max(9.7, 9.7)), (false ? _GLF_FUZZED(-195.962) : _GLF_IDENTITY(9.7, max(9.7, 9.7))))) : injectionSwitch.x, max(false ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(9.7, max(9.7, 9.7)), (false ? _GLF_FUZZED(-195.962) : _GLF_IDENTITY(9.7, max(9.7, 9.7)))), (_GLF_IDENTITY(_GLF_IDENTITY(9.7, max(9.7, 9.7)), (false ? _GLF_FUZZED(-195.962) : _GLF_IDENTITY(_GLF_IDENTITY(9.7, min(9.7, _GLF_IDENTITY(9.7, 0.0 + (9.7)))), max(9.7, 9.7))))) * 1.0)) : injectionSwitch.x, false ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(9.7, max(9.7, 9.7)), (false ? _GLF_FUZZED(-195.962) : _GLF_IDENTITY(_GLF_IDENTITY(9.7, max(9.7, 9.7)), (false ? _GLF_FUZZED(asinh(7.1)) : _GLF_IDENTITY(9.7, max(9.7, 9.7))))))) : injectionSwitch.x)))) < injectionSwitch.y)) && (false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false)))), (false) && true)) || false)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (! (_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))))), true && (_GLF_IDENTITY(! (! (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(false, bool(bool(false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))))), bool(bvec2(! (! (_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))))), false))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! _GLF_IDENTITY((! (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).y)), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true && (_GLF_IDENTITY((! (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).y)), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), ! (! ((! (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).y)), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec2(false, false))))), (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(8.4)), float(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(52.63)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))))))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), true && (bool(injectionSwitch.x > injectionSwitch.y)))), false || (bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), true && (bool(injectionSwitch.x > injectionSwitch.y)))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))) && true))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), ((false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) && true))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), true && _GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))) && true)))))
          {
           if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), true, _GLF_IDENTITY(false, ! (! (false))), true)), bool(bool(bool(bvec4(_GLF_DEAD(false), true, _GLF_IDENTITY(false, ! (! (false))), true)))))), (_GLF_DEAD(false)) || false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
           return;
          }
         barrier();
        }
       barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).y))))))) || false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), ! (! (((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))), (! _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), ! (! (((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))))) || false)))))) || false))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))), ! (! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))))))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))))), (_GLF_DEAD(false)) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false)))), (_GLF_DEAD(false)) && true))), false || (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))), true, false, true))), _GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(bool(bvec3((_GLF_DEAD(false)), true, false)), false || (_GLF_IDENTITY(bool(bvec3((_GLF_DEAD(false)), true, false)), (bool(bvec3((_GLF_DEAD(false)), true, false))) && true)))) && true))), (! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), (_GLF_IDENTITY((_GLF_DEAD(false)), ! (_GLF_IDENTITY(! ((_GLF_DEAD(false))), (! ((_GLF_DEAD(false)))) && true)))) && true) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))), (_GLF_DEAD(false)) && _GLF_IDENTITY(true, (true) || false)))), true && ((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))), (_GLF_DEAD(false)) && _GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, true && (true)), false))))))))) && true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))) || false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(gl_NumWorkGroups))).x) ^ 0u), _GLF_IDENTITY(max(_GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(gl_NumWorkGroups.x, gl_NumWorkGroups.x, gl_NumWorkGroups.x))) / 1u)) ^ 0u), _GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) ^ 0u)), ~ (_GLF_IDENTITY(~ (max(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) ^ 0u), _GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) ^ 0u))), (~ (max(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) ^ 0u), _GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY((gl_NumWorkGroups.x) ^ 0u, max(_GLF_IDENTITY((gl_NumWorkGroups.x) ^ 0u, 0u + ((gl_NumWorkGroups.x) ^ 0u)), (gl_NumWorkGroups.x) ^ 0u)))))) << 0u))))));
 GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_12num_workgroupsubgroup_idvirtual_gidworkgroup_id.x = num_workgroup;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))), (bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bool(! (_GLF_DEAD(false)))))))), bool(bvec3(! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_DEAD(false))), true && (! _GLF_IDENTITY((! (_GLF_DEAD(false))), bool(bvec4(_GLF_IDENTITY((! (_GLF_DEAD(false))), bool(_GLF_IDENTITY(bool((! (_GLF_DEAD(false)))), (bool((! (_GLF_DEAD(false))))) || false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))))))), true, false))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bool(! (_GLF_DEAD(false))))))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bool(! (_GLF_DEAD(false)))))))))), bool(bvec3(! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_DEAD(false))), true && (! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false)))))), bool(bvec4(_GLF_IDENTITY((! (_GLF_DEAD(false))), bool(_GLF_IDENTITY(bool((! (_GLF_DEAD(false)))), (bool((! (_GLF_DEAD(false))))) || false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))))))), true, false))))))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | _GLF_IDENTITY(uvec3(0u, 0u, 0u), clamp(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u)))).x;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))
  barrier();
 _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_12num_workgroupsubgroup_idvirtual_gidworkgroup_id.w = workgroup_id, _GLF_IDENTITY((GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_12num_workgroupsubgroup_idvirtual_gidworkgroup_id.w = workgroup_id) >> 0u, ((97528u & 0u) >> _GLF_IDENTITY(uint(4u), uint(4u))) | ((GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_12num_workgroupsubgroup_idvirtual_gidworkgroup_id.w = workgroup_id) >> 0u)));
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))) || false)))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) || false), true, true)))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, true))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), (false || (false)) && true))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(bool((! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), (! ((false))) || false))))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))))))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), true && (bool(_GLF_DEAD(false)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)), bool(bvec4(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)), true, false, true))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
        barrier();
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, abs(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0))).y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(! (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec2(! (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false)))))))), (bool(_GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(! (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec2(! (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false))))))))) && true))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, true))), ! (! ((injectionSwitch.x > injectionSwitch.y)))), false, false, true)), false || (bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), ! (! (! (! ((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))))), false, false, true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec4(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), (! (! ((injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(false, false || (false)), false, true)), false || (bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))), false, false, true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, true)))), ! (! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), false, false, true)), false || (bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), false, false, true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec4(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), true && (! (! ((injectionSwitch.x > injectionSwitch.y)))))), false, false, true)), false || (bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(64.21), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-6.5)), bvec2(true, false))).x > injectionSwitch.y), ! (! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (((injectionSwitch.x > injectionSwitch.y))) || false))), false, false, true))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x < injectionSwitch.y))), true, true)))))))))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec2(bvec2(_GLF_DEAD(false), false)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_12num_workgroupsubgroup_idvirtual_gidworkgroup_id, _GLF_IDENTITY(uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_12num_workgroupsubgroup_idvirtual_gidworkgroup_id, (GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_12num_workgroupsubgroup_idvirtual_gidworkgroup_id) >> uvec4(0u, 0u, 0u, 0u)), min(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_12num_workgroupsubgroup_idvirtual_gidworkgroup_id, (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_12num_workgroupsubgroup_idvirtual_gidworkgroup_id, uvec4(GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_12num_workgroupsubgroup_idvirtual_gidworkgroup_id[0], _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_12num_workgroupsubgroup_idvirtual_gidworkgroup_id, (GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_12num_workgroupsubgroup_idvirtual_gidworkgroup_id) >> uvec4(0u, 0u, 0u, 0u))[1], GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_12num_workgroupsubgroup_idvirtual_gidworkgroup_id[2], GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_12num_workgroupsubgroup_idvirtual_gidworkgroup_id[3]))) / uvec4(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), (GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_12num_workgroupsubgroup_idvirtual_gidworkgroup_id) >> uvec4(0u, 0u, 0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_12num_workgroupsubgroup_idvirtual_gidworkgroup_id, (GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_12num_workgroupsubgroup_idvirtual_gidworkgroup_id) >> uvec4(0u, 0u, 0u, 0u)), (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_12num_workgroupsubgroup_idvirtual_gidworkgroup_id, (GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_12num_workgroupsubgroup_idvirtual_gidworkgroup_id) >> uvec4(0u, 0u, 0u, 0u))) >> uvec4(0u, 0u, 0u, 0u))))), (uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_12num_workgroupsubgroup_idvirtual_gidworkgroup_id, (GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_12num_workgroupsubgroup_idvirtual_gidworkgroup_id) >> uvec4(0u, 0u, 0u, 0u)), min(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_12num_workgroupsubgroup_idvirtual_gidworkgroup_id, (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_12num_workgroupsubgroup_idvirtual_gidworkgroup_id, uvec4(GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_12num_workgroupsubgroup_idvirtual_gidworkgroup_id[0], _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_12num_workgroupsubgroup_idvirtual_gidworkgroup_id, (GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_12num_workgroupsubgroup_idvirtual_gidworkgroup_id) >> uvec4(0u, 0u, 0u, 0u))[1], GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_12num_workgroupsubgroup_idvirtual_gidworkgroup_id[2], GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_12num_workgroupsubgroup_idvirtual_gidworkgroup_id[3]))) / uvec4(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), (GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_12num_workgroupsubgroup_idvirtual_gidworkgroup_id) >> uvec4(0u, 0u, 0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_12num_workgroupsubgroup_idvirtual_gidworkgroup_id, (GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_12num_workgroupsubgroup_idvirtual_gidworkgroup_id) >> uvec4(0u, 0u, 0u, 0u)), (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_12num_workgroupsubgroup_idvirtual_gidworkgroup_id, (GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_12num_workgroupsubgroup_idvirtual_gidworkgroup_id) >> uvec4(0u, 0u, 0u, 0u))) >> uvec4(0u, 0u, 0u, 0u)))))) << (uvec4(0u, 0u, 0u, 0u) >> _GLF_IDENTITY(uvec4(8u), uvec4(8u))))).w;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 0.0, 0.0, 0.0), (false ? _GLF_FUZZED(mat3x2(8.5, 1.8, -3.7, -407.870, 1.2, -918.172)) : mat3x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 0.0, 0.0, 0.0))))).x, float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 0.0, 0.0, 0.0), (false ? _GLF_FUZZED(mat3x2(8.5, 1.8, -3.7, -407.870, 1.2, -918.172)) : mat3x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 0.0, 0.0, 0.0))))).x, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0), (mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 0.0, 0.0, 0.0), (false ? _GLF_FUZZED(mat3x2(8.5, 1.8, -3.7, -407.870, 1.2, -918.172)) : mat3x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 0.0, 0.0, 0.0))))).x, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)) + mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))) > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 0.0, 0.0, 0.0), (false ? _GLF_FUZZED(mat3x2(8.5, 1.8, -3.7, -407.870, 1.2, -918.172)) : mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0)), 0.0, 0.0, 0.0, 0.0))))).x, float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], _GLF_IDENTITY(float(vec2(_GLF_IDENTITY(injectionSwitch[1], (true ? injectionSwitch[1] : _GLF_FUZZED((9356.1404 + -736.330)))), 1.0)), 1.0 * (float(vec2(_GLF_IDENTITY(injectionSwitch[1], (true ? injectionSwitch[1] : _GLF_FUZZED((9356.1404 + -736.330)))), 1.0))))))), 0.0, 0.0, 0.0, 0.0), (false ? _GLF_FUZZED(mat3x2(8.5, 1.8, -3.7, -407.870, 1.2, -918.172)) : mat3x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 0.0, 0.0, 0.0))))).x, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0), (mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 0.0, 0.0, 0.0), (false ? _GLF_FUZZED(mat3x2(8.5, 1.8, -3.7, -407.870, 1.2, -918.172)) : mat3x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1])))), 0.0, 0.0, 0.0, 0.0))))).x, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)) + mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 0.0)))) > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_12num_workgroupsubgroup_idvirtual_gidworkgroup_id, uvec4(0u, 0u, 0u, 0u) ^ (GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_12num_workgroupsubgroup_idvirtual_gidworkgroup_id)).y * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || (_GLF_IDENTITY(false, true && (false))))) || false)), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false), bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false)))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, false || (false)))), (bool(bool(_GLF_IDENTITY(false, false || (false))))) || false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y, false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2x3(injectionSwitch.x, 1.0, 0.0, sin(0.0), 1.0, 0.0), transpose(transpose(mat2x3(injectionSwitch.x, 1.0, 0.0, sin(0.0), 1.0, 0.0)))))), injectionSwitch.x)), (injectionSwitch.x) + 0.0) > injectionSwitch.y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y), true), bvec2(bvec4(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y), true), bvec2(bvec4(bvec2((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y), true), false, true))), _GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), true)))), (_GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y), true)), true && (bool(bvec2((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y), true))))) || false)))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-84.53)), vec2(_GLF_FUZZED(83.51), _GLF_IDENTITY((injectionSwitch)[1], float(vec4((injectionSwitch)[1], 0.0, 0.0, 0.0)))), bvec2(false, true))))).y, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(5075.8411) : 0.0)), 1.0, 1.0, 1.0, 0.0, 0.0), (mat2x3(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(5075.8411) : 0.0)), 1.0, 1.0, 1.0, 0.0, 0.0)) * mat2(1.0))), (false ? _GLF_FUZZED(3.2) : float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(5075.8411) : 0.0)), 1.0, 1.0, 1.0, 0.0, 0.0), (mat2x3(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(5075.8411) : 0.0)), 1.0, 1.0, 1.0, 0.0, 0.0)) * mat2(1.0)))))), 1.0, 1.0, sqrt(0.0), 0.0, 1.0, 0.0)), max(float(mat4x2(injectionSwitch.y, 0.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), sqrt(0.0), _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0)), float(mat4x2(injectionSwitch.y, 0.0, 1.0, 1.0, sqrt(0.0), 0.0, 1.0, 0.0))))), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(7927.6165)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || _GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), ((! (false))) || false)) && true))))) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bool(false))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y))))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false)))), ((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(sinh(_GLF_IDENTITY(-6130.4260, 1.0 * _GLF_IDENTITY((_GLF_IDENTITY(-6130.4260, mix(float(_GLF_FUZZED(260.705)), float(-6130.4260), bool(true)))), (false ? _GLF_FUZZED(9707.8001) : _GLF_IDENTITY((_GLF_IDENTITY(-6130.4260, mix(float(_GLF_FUZZED(260.705)), float(-6130.4260), bool(true)))), (false ? _GLF_FUZZED(-724.593) : (_GLF_IDENTITY(-6130.4260, mix(float(_GLF_FUZZED(260.705)), float(-6130.4260), bool(true))))))))))))) > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), (true ? injectionSwitch.x : _GLF_FUZZED(sinh(-6130.4260)))) > injectionSwitch.y, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), (true ? injectionSwitch.x : _GLF_FUZZED(sinh(-6130.4260)))) > injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), (true ? injectionSwitch.x : _GLF_FUZZED(sinh(-6130.4260)))) > injectionSwitch.y))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), (true ? injectionSwitch.x : _GLF_FUZZED(sinh(-6130.4260)))) > injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), (true ? injectionSwitch.x : _GLF_FUZZED(sinh(-6130.4260)))) > injectionSwitch.y)))) && true)))), bool(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(sinh(-6130.4260)))), (true ? _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(sinh(_GLF_IDENTITY(-6130.4260, min(-6130.4260, -6130.4260)))))) : _GLF_IDENTITY(_GLF_FUZZED(77.39), min(_GLF_FUZZED(77.39), _GLF_FUZZED(77.39))))) > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), false, false)))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bool(true)))))) ? injectionSwitch.x : _GLF_FUZZED(sinh(-6130.4260))), (_GLF_IDENTITY(_GLF_IDENTITY((true ? injectionSwitch.x : _GLF_FUZZED(sinh(-6130.4260))), (false ? _GLF_FUZZED(85.18) : (true ? injectionSwitch.x : _GLF_FUZZED(sinh(-6130.4260))))), max((true ? injectionSwitch.x : _GLF_FUZZED(sinh(-6130.4260))), (true ? injectionSwitch.x : _GLF_FUZZED(sinh(-6130.4260)))))) + 0.0)) > injectionSwitch.y), bool(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, tan(0.0), 0.0, log(1.0), 1.0))).x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0))))), injectionSwitch.x)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5649.9208), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(float(true))), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))).x, (injectionSwitch.x) + 0.0) : _GLF_FUZZED(sinh(-6130.4260)))) > injectionSwitch.y), false, false))))), true && (! _GLF_IDENTITY((bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY((true ? _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(5.9))), injectionSwitch.x)) : _GLF_FUZZED(sinh(-6130.4260))), (_GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)) ? injectionSwitch.x : _GLF_FUZZED(sinh(-6130.4260))), max((_GLF_IDENTITY(true ? injectionSwitch.x : _GLF_FUZZED(sinh(-6130.4260)), clamp(true ? injectionSwitch.x : _GLF_FUZZED(sinh(-6130.4260)), true ? injectionSwitch.x : _GLF_FUZZED(sinh(-6130.4260)), true ? injectionSwitch.x : _GLF_FUZZED(sinh(-6130.4260))))), (true ? injectionSwitch.x : _GLF_FUZZED(_GLF_IDENTITY(sinh(-6130.4260), max(sinh(-6130.4260), _GLF_IDENTITY(sinh(-6130.4260), max(sinh(-6130.4260), sinh(-6130.4260)))))))))) + 0.0)) > injectionSwitch.y), bool(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(-5166.5181)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))), float(mat3(injectionSwitch.x, _GLF_IDENTITY(0.0, (0.0) + 0.0), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0))))), injectionSwitch.x)), (true ? _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(9898.3850), (injectionSwitch)[1]), min(_GLF_IDENTITY(vec2(_GLF_FUZZED(9898.3850), (injectionSwitch)[1]), (true ? vec2(_GLF_FUZZED(9898.3850), (injectionSwitch)[1]) : _GLF_FUZZED(vec2(-66.37, 6372.7534)))), vec2(_GLF_FUZZED(9898.3850), (injectionSwitch)[1]))), vec2((injectionSwitch)[0], _GLF_FUZZED(803.369)), bvec2(true, false))).x) + 0.0) : _GLF_FUZZED(sinh(-6130.4260)))) > injectionSwitch.y), false, _GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), false || ((bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY((true ? _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(5.9))), injectionSwitch.x)) : _GLF_FUZZED(sinh(-6130.4260))), (_GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)) ? injectionSwitch.x : _GLF_FUZZED(sinh(-6130.4260))), max((_GLF_IDENTITY(true ? injectionSwitch.x : _GLF_FUZZED(sinh(-6130.4260)), clamp(true ? injectionSwitch.x : _GLF_FUZZED(sinh(-6130.4260)), true ? injectionSwitch.x : _GLF_FUZZED(sinh(-6130.4260)), true ? injectionSwitch.x : _GLF_FUZZED(sinh(-6130.4260))))), (true ? injectionSwitch.x : _GLF_FUZZED(_GLF_IDENTITY(sinh(-6130.4260), max(sinh(-6130.4260), _GLF_IDENTITY(sinh(-6130.4260), max(sinh(-6130.4260), sinh(-6130.4260)))))))))) + 0.0)) > injectionSwitch.y), bool(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(-5166.5181)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))), float(mat3(injectionSwitch.x, _GLF_IDENTITY(0.0, (0.0) + 0.0), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0))))), injectionSwitch.x)), (true ? _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(9898.3850), (injectionSwitch)[1]), min(_GLF_IDENTITY(vec2(_GLF_FUZZED(9898.3850), (injectionSwitch)[1]), (true ? vec2(_GLF_FUZZED(9898.3850), (injectionSwitch)[1]) : _GLF_FUZZED(vec2(-66.37, 6372.7534)))), vec2(_GLF_FUZZED(9898.3850), (injectionSwitch)[1]))), vec2((injectionSwitch)[0], _GLF_FUZZED(803.369)), bvec2(true, false))).x) + 0.0) : _GLF_FUZZED(sinh(-6130.4260)))) > injectionSwitch.y), false, _GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))))))), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(sinh(-6130.4260)))) > injectionSwitch.y), bool(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(sinh(-6130.4260)))) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(sinh(-6130.4260)))) > _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).y)))), false, false)))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-87.62)), vec2(_GLF_FUZZED(vec2(-8.3, -8.2).g), (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, _GLF_IDENTITY(dot(vec4(0.0, 1.0, tan(0.0), 0.0), vec4(0.0, round(length(normalize(1.0))), 0.0, _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(dot(vec4(0.0, 1.0, tan(0.0), 0.0), vec4(0.0, round(length(normalize(1.0))), 0.0, _GLF_ZERO(0.0, injectionSwitch.x))), (false ? _GLF_FUZZED(90.33) : dot(vec4(0.0, 1.0, tan(0.0), 0.0), vec4(0.0, round(length(normalize(1.0))), 0.0, _GLF_ZERO(0.0, injectionSwitch.x)))))), 1.0, 1.0)))), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, _GLF_IDENTITY(dot(vec4(0.0, 1.0, tan(0.0), 0.0), vec4(0.0, round(length(normalize(1.0))), 0.0, _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(dot(vec4(0.0, 1.0, tan(0.0), 0.0), vec4(0.0, round(length(normalize(1.0))), 0.0, _GLF_ZERO(0.0, injectionSwitch.x))), (false ? _GLF_FUZZED(90.33) : dot(vec4(0.0, 1.0, tan(0.0), 0.0), vec4(0.0, round(length(normalize(1.0))), 0.0, _GLF_ZERO(0.0, injectionSwitch.x)))))), 1.0, 1.0)))), true, false, false)), (_GLF_IDENTITY(bool(bvec4((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, _GLF_IDENTITY(dot(vec4(0.0, 1.0, tan(0.0), 0.0), vec4(0.0, round(length(normalize(1.0))), 0.0, _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(dot(vec4(0.0, 1.0, tan(0.0), 0.0), vec4(0.0, round(length(normalize(1.0))), 0.0, _GLF_ZERO(0.0, injectionSwitch.x))), (false ? _GLF_FUZZED(90.33) : dot(vec4(0.0, 1.0, tan(0.0), 0.0), vec4(0.0, round(length(normalize(1.0))), 0.0, _GLF_ZERO(0.0, injectionSwitch.x)))))), 1.0, 1.0)))), true, false, false)), ! (! (bool(bvec4((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, _GLF_IDENTITY(dot(vec4(0.0, 1.0, tan(0.0), 0.0), vec4(0.0, round(length(normalize(1.0))), 0.0, _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(dot(vec4(0.0, 1.0, tan(0.0), 0.0), vec4(0.0, round(length(normalize(1.0))), 0.0, _GLF_ZERO(0.0, injectionSwitch.x))), (false ? _GLF_FUZZED(90.33) : dot(vec4(0.0, 1.0, tan(0.0), 0.0), vec4(0.0, round(length(normalize(1.0))), 0.0, _GLF_ZERO(0.0, injectionSwitch.x)))))), 1.0, 1.0)))), true, false, false)))))) || false)))))).x, (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, true, true), bvec3(bvec3(bvec3(true, true, true)))))) ? injectionSwitch.x : _GLF_FUZZED(sinh(-6130.4260)))) > injectionSwitch.y), bool(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(sinh(-6130.4260)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(sinh(-6130.4260)))), (false ? _GLF_FUZZED(2.9) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(sinh(-6130.4260)))), min(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(sinh(-6130.4260)))), _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(sinh(-6130.4260)))))))), _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(sinh(-6130.4260)))), _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(sinh(-6130.4260)))))) > injectionSwitch.y), false, false))))), false || (! (bool(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-87.62)), vec2(_GLF_FUZZED(vec2(-8.3, -8.2).g), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), mix(vec2(_GLF_FUZZED(79.96), _GLF_FUZZED(40.47)), vec2((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-87.62)), vec2(_GLF_FUZZED(vec2(-8.3, -8.2).g), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))[0], (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-87.62)), vec2(_GLF_FUZZED(vec2(-8.3, -8.2).g), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))[1]), bvec2(true, true))).x, (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, _GLF_IDENTITY(true, (true) && true), true), bvec3(bvec3(bvec3(true, true, true)))))) ? injectionSwitch.x : _GLF_FUZZED(sinh(-6130.4260)))) > injectionSwitch.y), bool(bvec3((_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(54.50)), float(injectionSwitch.x), bool(true))), injectionSwitch.x))), float(_GLF_FUZZED(-46.82)), bool(false))) : _GLF_FUZZED(sinh(-6130.4260)))) > injectionSwitch.y), false, false))), false || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-87.62)), vec2(_GLF_FUZZED(vec2(-8.3, -8.2).g), (_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 1.0))))[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], float(_GLF_IDENTITY(mat2x4(injectionSwitch[1], 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat2x4(-711.392, -240.185, 1.0, -3.3, -40.74, -33.41, -7417.1876, 18.59)) : mat2x4(injectionSwitch[1], 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0))))))).y))))), mix(vec2(_GLF_FUZZED(79.96), _GLF_FUZZED(40.47)), vec2((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-87.62)), vec2(_GLF_FUZZED(vec2(-8.3, -8.2).g), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))[0], (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(-87.62, mix(float(_GLF_FUZZED(15.93)), float(-87.62), bool(true))))), vec2(_GLF_FUZZED(vec2(-8.3, -8.2).g), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) || false)))))))[1]), bvec2(true, true))).x, (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, _GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, bool(bool(true)))), true), bvec3(bvec3(bvec3(true, true, true)))))) ? injectionSwitch.x : _GLF_FUZZED(sinh(-6130.4260)), (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, _GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, bool(bool(true)))), true), bvec3(bvec3(bvec3(true, true, true)))))) ? injectionSwitch.x : _GLF_FUZZED(sinh(-6130.4260))) / 1.0))) > injectionSwitch.y), bool(bvec3((_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, mix(float(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(54.50)), float(injectionSwitch.x), bool(true))), injectionSwitch.x))), float(_GLF_FUZZED(-46.82)), bool(false))) : _GLF_FUZZED(_GLF_IDENTITY(sinh(-6130.4260), 1.0 * (sinh(-6130.4260)))))) > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))), false, false))))))))))))) || false))) || ((injectionSwitch.x > injectionSwitch.y))))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y))), false, _GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) && true) && true)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))).y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(false, false || (false)) || (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * sqrt(1.0)), bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), max(_GLF_IDENTITY((injectionSwitch.y), clamp((injectionSwitch.y), _GLF_IDENTITY((injectionSwitch.y), clamp(_GLF_IDENTITY((injectionSwitch.y), ((injectionSwitch.y)) / 1.0), (injectionSwitch.y), (injectionSwitch.y))), (injectionSwitch.y))), (injectionSwitch.y))) / 1.0))))), (bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, _GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, bool(bool(true))), true, _GLF_IDENTITY(true, (true) || false), true)), false || (bool(bvec4(_GLF_IDENTITY(true, bool(bool(true))), true, true, true)))))) && true)), (bool(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), (_GLF_IDENTITY(true, (true) && true)) && true)) && true))) || false)), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, _GLF_IDENTITY((true) && true, ((true) && true) || false))), (bool(_GLF_IDENTITY(true, (true) && true))) || false))) || false)), (injectionSwitch.x < injectionSwitch.y))))) && true)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * sqrt(1.0)), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))), false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))), false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), max(_GLF_IDENTITY((injectionSwitch.y), clamp((injectionSwitch.y), _GLF_IDENTITY((injectionSwitch.y), clamp(_GLF_IDENTITY((injectionSwitch.y), ((injectionSwitch.y)) / 1.0), (injectionSwitch.y), (injectionSwitch.y))), (injectionSwitch.y))), (injectionSwitch.y))) / 1.0))))), (bool(bvec4(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0))).x > injectionSwitch.y, true, false, _GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, bool(bool(true))), true, _GLF_IDENTITY(true, (true) || false), true)), false || _GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(true, bool(bool(true))), true, true, true))), bool(_GLF_IDENTITY(bool((bool(bvec4(_GLF_IDENTITY(true, bool(bool(true))), true, true, true)))), true && (_GLF_IDENTITY(bool((bool(bvec4(_GLF_IDENTITY(true, bool(bool(true))), true, true, true)))), bool(bvec2(bool((bool(bvec4(_GLF_IDENTITY(true, bool(bool(true))), true, true, true)))), true)))))))))) && true)), (bool(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), (_GLF_IDENTITY(true, (true) && true)) && true)) && true))) || false)), (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, _GLF_IDENTITY((true) && true, ((true) && true) || false))), (bool(_GLF_IDENTITY(true, (true) && true))) || false), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(true, _GLF_IDENTITY((true) && true, ((true) && true) || false))), (bool(_GLF_IDENTITY(true, (true) && true))) || false)))))) || false)), (injectionSwitch.x < injectionSwitch.y))))) && true)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_12num_workgroupsubgroup_idvirtual_gidworkgroup_id.z = virtual_gid, (GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_12num_workgroupsubgroup_idvirtual_gidworkgroup_id.z = virtual_gid) << uint(_GLF_ZERO(0.0, injectionSwitch.x)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), ! (_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), (! (false)) || false)))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 1.0)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 atomicStore(write_val, uint(GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_12num_workgroupsubgroup_idvirtual_gidworkgroup_id.z), 4, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, min(_GLF_IDENTITY(64, min(64, 64)), _GLF_IDENTITY(64, clamp(64, _GLF_IDENTITY(64, max(64, 64)), 64)))), (_GLF_IDENTITY(_GLF_IDENTITY(64, min(64, _GLF_IDENTITY(64, _GLF_IDENTITY(clamp(64, _GLF_IDENTITY(64, max(64, _GLF_IDENTITY(64, ~ (~ (64))))), 64), (_GLF_IDENTITY(clamp(64, _GLF_IDENTITY(64, max(64, 64)), 64), clamp(clamp(64, _GLF_IDENTITY(64, max(64, 64)), 64), clamp(64, _GLF_IDENTITY(64, max(64, 64)), 64), clamp(64, _GLF_IDENTITY(64, max(64, 64)), 64)))) * 1)))), (_GLF_IDENTITY(_GLF_IDENTITY(64, min(64, _GLF_IDENTITY(64, clamp(64, _GLF_IDENTITY(64, max(64, 64)), 64)))), ~ (~ (_GLF_IDENTITY(64, min(_GLF_IDENTITY(_GLF_IDENTITY(64, ~ (~ (_GLF_IDENTITY(64, ~ (~ (64)))))), min(_GLF_IDENTITY(64, 0 + (64)), 64)), _GLF_IDENTITY(64, clamp(64, _GLF_IDENTITY(64, max(_GLF_IDENTITY(64, clamp(_GLF_IDENTITY(64, (false ? _GLF_FUZZED(56812) : 64)), 64, 64)), 64)), 64)))))))) ^ 0)) >> 0), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(64, min(64, _GLF_IDENTITY(64, clamp(64, _GLF_IDENTITY(64, max(64, 64)), 64)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, (64) / ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))), min(64, _GLF_IDENTITY(64, clamp(64, _GLF_IDENTITY(_GLF_IDENTITY(64, max(64, 64)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(64, max(64, 64)), min(_GLF_IDENTITY(64, max(64, 64)), _GLF_IDENTITY(64, max(64, 64)))), _GLF_IDENTITY(64, max(64, 64)), _GLF_IDENTITY(64, max(64, 64)))), 64)))), (_GLF_IDENTITY(_GLF_IDENTITY(64, min(64, _GLF_IDENTITY(_GLF_IDENTITY(64, clamp(64, _GLF_IDENTITY(64, max(64, 64)), 64)), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(64, clamp(64, _GLF_IDENTITY(64, max(64, 64)), 64)), (_GLF_IDENTITY(64, clamp(64, _GLF_IDENTITY(64, max(64, 64)), 64))) | (_GLF_IDENTITY(64, clamp(64, _GLF_IDENTITY(64, max(64, 64)), 64)))))))), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(64, min(64, _GLF_IDENTITY(64, clamp(64, _GLF_IDENTITY(_GLF_IDENTITY(64, clamp(64, _GLF_IDENTITY(64, (_GLF_IDENTITY(64, (false ? _GLF_FUZZED(-17268) : 64))) | (64)), 64)), max(64, 64)), 64)))))), (1 | 1) * (~ (~ (_GLF_IDENTITY(64, min(64, _GLF_IDENTITY(64, clamp(64, _GLF_IDENTITY(_GLF_IDENTITY(64, clamp(64, _GLF_IDENTITY(64, (_GLF_IDENTITY(64, (false ? _GLF_FUZZED(-17268) : 64))) | (64)), 64)), max(64, 64)), 64)))))))))) ^ 0)) >> 0, 0 + (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, (64) / ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))), min(64, _GLF_IDENTITY(64, clamp(64, _GLF_IDENTITY(_GLF_IDENTITY(64, max(64, 64)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(64, max(64, 64)), min(_GLF_IDENTITY(64, max(64, 64)), _GLF_IDENTITY(64, max(64, 64)))), _GLF_IDENTITY(64, max(64, 64)), _GLF_IDENTITY(64, max(64, 64)))), 64)))), (_GLF_IDENTITY(_GLF_IDENTITY(64, min(64, _GLF_IDENTITY(_GLF_IDENTITY(64, clamp(64, _GLF_IDENTITY(64, max(64, 64)), 64)), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(64, clamp(64, _GLF_IDENTITY(64, max(64, 64)), 64)), (_GLF_IDENTITY(64, clamp(64, _GLF_IDENTITY(64, max(64, 64)), 64))) | (_GLF_IDENTITY(64, clamp(64, _GLF_IDENTITY(64, max(64, 64)), 64)))))))), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(64, min(64, _GLF_IDENTITY(64, clamp(64, _GLF_IDENTITY(_GLF_IDENTITY(64, clamp(64, _GLF_IDENTITY(64, (_GLF_IDENTITY(64, (false ? _GLF_FUZZED(-17268) : 64))) | (64)), 64)), max(64, 64)), 64)))))), (1 | 1) * (~ (~ (_GLF_IDENTITY(64, min(64, _GLF_IDENTITY(64, clamp(64, _GLF_IDENTITY(_GLF_IDENTITY(64, clamp(64, _GLF_IDENTITY(64, (_GLF_IDENTITY(64, (false ? _GLF_FUZZED(-17268) : 64))) | (64)), 64)), max(64, 64)), 64)))))))))) ^ 0)) >> 0, min((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, (64) / ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))), min(64, _GLF_IDENTITY(64, clamp(64, _GLF_IDENTITY(_GLF_IDENTITY(64, max(64, 64)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(64, max(64, 64)), min(_GLF_IDENTITY(64, max(64, 64)), _GLF_IDENTITY(64, max(64, 64)))), _GLF_IDENTITY(64, max(64, 64)), _GLF_IDENTITY(64, max(64, 64)))), 64)))), (_GLF_IDENTITY(_GLF_IDENTITY(64, min(64, _GLF_IDENTITY(_GLF_IDENTITY(64, clamp(64, _GLF_IDENTITY(64, max(64, 64)), 64)), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(64, clamp(64, _GLF_IDENTITY(64, max(64, 64)), 64)), (_GLF_IDENTITY(64, clamp(64, _GLF_IDENTITY(64, max(64, 64)), 64))) | (_GLF_IDENTITY(64, clamp(64, _GLF_IDENTITY(64, max(64, 64)), 64)))))))), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(64, min(64, _GLF_IDENTITY(64, clamp(64, _GLF_IDENTITY(_GLF_IDENTITY(64, clamp(64, _GLF_IDENTITY(64, (_GLF_IDENTITY(64, (false ? _GLF_FUZZED(-17268) : 64))) | (64)), 64)), max(64, 64)), 64)))))), (1 | 1) * (~ (~ (_GLF_IDENTITY(64, min(64, _GLF_IDENTITY(64, clamp(64, _GLF_IDENTITY(_GLF_IDENTITY(64, clamp(64, _GLF_IDENTITY(64, (_GLF_IDENTITY(64, (false ? _GLF_FUZZED(-17268) : 64))) | (64)), 64)), max(64, 64)), 64)))))))))) ^ 0)) >> 0, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, (64) / ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))), min(64, _GLF_IDENTITY(64, clamp(64, _GLF_IDENTITY(_GLF_IDENTITY(64, max(64, 64)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(64, max(64, 64)), min(_GLF_IDENTITY(64, max(64, 64)), _GLF_IDENTITY(64, max(64, 64)))), _GLF_IDENTITY(64, max(64, 64)), _GLF_IDENTITY(64, max(64, 64)))), 64)))), (_GLF_IDENTITY(_GLF_IDENTITY(64, min(64, _GLF_IDENTITY(_GLF_IDENTITY(64, clamp(64, _GLF_IDENTITY(64, max(64, 64)), 64)), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(64, clamp(64, _GLF_IDENTITY(64, max(64, 64)), 64)), (_GLF_IDENTITY(64, clamp(64, _GLF_IDENTITY(64, max(64, 64)), 64))) | (_GLF_IDENTITY(64, clamp(64, _GLF_IDENTITY(64, max(64, 64)), 64)))))))), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(64, min(64, _GLF_IDENTITY(64, clamp(64, _GLF_IDENTITY(_GLF_IDENTITY(64, clamp(64, _GLF_IDENTITY(64, (_GLF_IDENTITY(64, (false ? _GLF_FUZZED(-17268) : 64))) | (64)), 64)), max(64, 64)), 64)))))), (1 | 1) * (~ (~ (_GLF_IDENTITY(64, min(64, _GLF_IDENTITY(64, clamp(64, _GLF_IDENTITY(_GLF_IDENTITY(64, clamp(64, _GLF_IDENTITY(64, (_GLF_IDENTITY(64, (false ? _GLF_FUZZED(-17268) : 64))) | (64)), 64)), max(64, 64)), 64)))))))))) ^ 0)) >> 0)))))))), 0);
 if(_GLF_DEAD(false))
  barrier();
 _GLF_IDENTITY(_GLF_IDENTITY(buf[GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_12num_workgroupsubgroup_idvirtual_gidworkgroup_id.z] = uint(subgroupAllEqual(_GLF_IDENTITY(write_val, (true ? write_val : _GLF_FUZZED(workgroup_id))))), (buf[GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_12num_workgroupsubgroup_idvirtual_gidworkgroup_id.z] = uint(subgroupAllEqual(_GLF_IDENTITY(write_val, (true ? write_val : _GLF_FUZZED(workgroup_id)))))) / 1u), (buf[GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_12num_workgroupsubgroup_idvirtual_gidworkgroup_id.z] = uint(subgroupAllEqual(write_val))) | (0u & 7220u));
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), true, true, false)))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), ! (! (bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))))))))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), ! (! (bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))))))))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! _GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), ! (! ((! ((injectionSwitch.x > injectionSwitch.y))))))))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), ! (! (bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))))))), ! (! (! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), ! (! (bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 0.0, 1.0, 0.0))) > injectionSwitch.y)))))))))))))))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y))))))), false))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(8.9) : injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))) || false)))
  barrier();
}
