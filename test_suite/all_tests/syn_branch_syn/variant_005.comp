#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 0) uniform buf0 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec3 GLF_merged3_0_1_13_1_1_13_2_1_14subgroup_sizetotal_threadsworkgroup_size;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), false)), _GLF_IDENTITY((bool(bvec2(_GLF_DEAD(false), false))) && true, ! (_GLF_IDENTITY(! ((bool(bvec2(_GLF_DEAD(false), false))) && true), ! (! (! ((bool(bvec2(_GLF_DEAD(false), false))) && true)))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) || false))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))), _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, false || (false)), true))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))), false)), bool(bvec3(bool(bvec2(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, _GLF_IDENTITY(false, (false) && true), true), _GLF_IDENTITY(bvec3(bvec3(bvec3(true, _GLF_IDENTITY(false, (false) && true), true))), bvec3(bvec3(bvec3(bvec3(bvec3(true, _GLF_IDENTITY(false, (false) && true), true)))))))))))))), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)) && true))), false, true))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false)), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false)), bvec2(bvec4(bvec2(false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false)), true, true))), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false)), bvec2(bvec4(bvec2(false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false)), true, true))), false)))))), bvec2(bvec2(bvec2(false, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) || false)))))))), false)), bool(bvec3(bool(bvec2(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))), false)), false, true))), ! (! (_GLF_IDENTITY(bool(bvec2(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))), false)), bool(bvec3(bool(bvec2(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))), false)), false, true))))))))))), (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool((_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-1220.8043), _GLF_FUZZED(3.1)), bvec2(false, false))))).y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-1220.8043), _GLF_FUZZED(3.1)), bvec2(false, false))))).y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y))), false || ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-1220.8043), _GLF_FUZZED(3.1)), bvec2(false, false))))).y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y)))))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bool((_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-1220.8043), _GLF_FUZZED(3.1)), bvec2(false, false))))).y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-12.79)), vec2(_GLF_FUZZED(8648.7123), (injectionSwitch)[1]), bvec2(false, true))), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-1220.8043), _GLF_FUZZED(3.1)), bvec2(false, false))))).y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y))), false || ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-1220.8043), _GLF_FUZZED(3.1)), _GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), false))))))).y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y)))))))))))))), ! (! (bool(bool((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y))))))))))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool((_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-1220.8043), _GLF_FUZZED(3.1)), bvec2(false, false))))).y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-1220.8043), _GLF_FUZZED(3.1)), bvec2(false, false))))).y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y))), false || ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-1220.8043), _GLF_FUZZED(3.1)), bvec2(false, false))))).y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y)))))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bool((_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-1220.8043), _GLF_FUZZED(3.1)), bvec2(false, false))))).y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-12.79)), vec2(_GLF_FUZZED(8648.7123), (injectionSwitch)[1]), bvec2(false, true))), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-1220.8043), _GLF_FUZZED(3.1)), bvec2(false, false))))).y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y))), false || ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-1220.8043), _GLF_FUZZED(3.1)), _GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), false))))))).y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y)))))))))))))), ! (! (bool(bool((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y))))))))))), false, true)))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  barrier();
 GLF_merged3_0_1_13_1_1_13_2_1_14subgroup_sizetotal_threadsworkgroup_size.x = subgroup_size;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, (1.0) + 0.0)) * (injectionSwitch), clamp(mat2(_GLF_IDENTITY(1.0, (1.0) + 0.0)) * (injectionSwitch), mat2(_GLF_IDENTITY(1.0, (1.0) + 0.0)) * (injectionSwitch), mat2(_GLF_IDENTITY(1.0, (1.0) + 0.0)) * (injectionSwitch)))).y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) + 0.0)) * (injectionSwitch)).y)), (! ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch, mat2(_GLF_IDENTITY(1.0, (1.0) + 0.0)) * (injectionSwitch)).y))) || false))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 0.0))).x > injectionSwitch.y))))
  barrier();
 uint gid = _GLF_IDENTITY(gl_GlobalInvocationID, (gl_GlobalInvocationID) * _GLF_IDENTITY(uvec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)), clamp(uvec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)), uvec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(6.1))))), uvec3(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))).x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(6.4)), float(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED((vec2(-7467.8845, -42.48))))).y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY(true && (! (_GLF_DEAD(false))), bool(bvec4(_GLF_IDENTITY(true && (! (_GLF_DEAD(false))), true && (_GLF_IDENTITY(true && (! (_GLF_DEAD(false))), ! (! (true && (! (_GLF_DEAD(false)))))))), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(mat4(injectionSwitch, cos(0.0), 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(0.0, 0.0))) - 0.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 0.0, 0.0, 0.0), (_GLF_IDENTITY(mat4(injectionSwitch, cos(0.0), 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(0.0, 0.0))) - 0.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 0.0, 0.0, 0.0), transpose(transpose(_GLF_IDENTITY(mat4(injectionSwitch, cos(0.0), 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(0.0, 0.0))) - 0.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 0.0, 0.0, 0.0), (true ? mat4(injectionSwitch, cos(0.0), 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(0.0, 0.0))) - 0.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 0.0, 0.0, 0.0) : _GLF_FUZZED(mat4(-529.425, 8.3, -190.756, 188.203, 1.7, 952.480, -31.45, 228.895, 97.17, -8.3, 424.783, -9.5, -6636.4481, 1.8, 65.02, 98.99)))))))) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY((false ? _GLF_FUZZED(mat4(7440.5264, 8.5, -2.5, 4.1, 86.16, -90.51, 4351.7710, -6472.5361, 30.01, 4.7, -70.88, 14.24, 248.648, -3849.4542, 6.5, -8.2)) : mat4(injectionSwitch, cos(0.0), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0)), ((false ? _GLF_FUZZED(mat4(7440.5264, 8.5, -2.5, 4.1, 86.16, -90.51, 4351.7710, -6472.5361, 30.01, 4.7, -70.88, 14.24, 248.648, -3849.4542, 6.5, -8.2)) : mat4(injectionSwitch, cos(0.0), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0))) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))).y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), bool(bool(bool(false)))), false || (bool(false))), (_GLF_IDENTITY(bool(false), false || (_GLF_IDENTITY(bool(false), (bool(false)) && _GLF_IDENTITY(true, bool(bvec4(true, true, _GLF_IDENTITY(false, true && (false)), false))))))) && true))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-1955.4310, 271.411)))).x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(568.310))))), _GLF_IDENTITY(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), (false ? _GLF_FUZZED(-5734.5796) : clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))))) > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, (injectionSwitch.x > injectionSwitch.y) || false))))), (_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), ! _GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), bool(bvec4((! ((injectionSwitch.x > injectionSwitch.y))), false, false, true))), true, false)))), false || _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(bvec3(((injectionSwitch.x > injectionSwitch.y)), false, false)))) && true)))) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x));
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged3_0_1_13_1_1_13_2_1_14subgroup_sizetotal_threadsworkgroup_size.z = workgroup_size;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(mat2(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch) * mat2(1.0))), 1.0, 1.0))), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch) * mat2(1.0)))).x > injectionSwitch.y)), ! _GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY((! ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || _GLF_IDENTITY(false, (false) && true), true && (_GLF_IDENTITY((! ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false, ! (! ((! ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)))))))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), bool(bool(_GLF_IDENTITY(false, (false) || false)))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, bool(bool((false) || false))))))), (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) || false)), (bool(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((false) || false))))) && _GLF_IDENTITY(true, (true) || false)), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) || false)), (bool(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((false) || false))))) && _GLF_IDENTITY(true, (true) || false))))))) && true)), ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, bool(bool((false) || false))))))), (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) || false)), (bool(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((false) || false))))) && _GLF_IDENTITY(true, (true) || false)), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) || false)), (bool(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((false) || false))))) && _GLF_IDENTITY(true, (true) || false))))))) && true))) && true)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false)))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, true))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(false, false, true)))))))), _GLF_IDENTITY(bool(bvec4(! (_GLF_DEAD(false)), false, true, false)), ! (! (bool(bvec4(! (_GLF_DEAD(false)), false, true, false)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint total_threads = num_workgroup * GLF_merged3_0_1_13_1_1_13_2_1_14subgroup_sizetotal_threadsworkgroup_size.z;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(mix(_GLF_IDENTITY(-9.1, float(vec2(-9.1, 1.0))), 7.7, true))))))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false))))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 _GLF_IDENTITY(GLF_merged3_0_1_13_1_1_13_2_1_14subgroup_sizetotal_threadsworkgroup_size.y = _GLF_IDENTITY(total_threads, _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(total_threads, max(total_threads, total_threads))), clamp(0u ^ (_GLF_IDENTITY(total_threads, max(total_threads, total_threads))), 0u ^ (_GLF_IDENTITY(total_threads, max(total_threads, total_threads))), 0u ^ (_GLF_IDENTITY(total_threads, max(total_threads, total_threads)))))), ~ (~ (_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_13_2_1_14subgroup_sizetotal_threadsworkgroup_size.y = _GLF_IDENTITY(total_threads, _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(total_threads, max(total_threads, total_threads))), clamp(0u ^ (_GLF_IDENTITY(total_threads, max(total_threads, total_threads))), 0u ^ (_GLF_IDENTITY(total_threads, max(total_threads, total_threads))), 0u ^ (_GLF_IDENTITY(total_threads, max(total_threads, total_threads)))))), (GLF_merged3_0_1_13_1_1_13_2_1_14subgroup_sizetotal_threadsworkgroup_size.y = _GLF_IDENTITY(total_threads, _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(total_threads, max(total_threads, total_threads))), clamp(0u ^ (_GLF_IDENTITY(total_threads, max(total_threads, total_threads))), 0u ^ (_GLF_IDENTITY(total_threads, max(total_threads, total_threads))), 0u ^ (_GLF_IDENTITY(total_threads, max(total_threads, total_threads))))))) - 0u))));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, tan(0.0) + (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) - 0.0))))))) > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > _GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(0.0))))), ! (! _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), clamp((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))))) * _GLF_ONE(1.0, injectionSwitch.y))) > injectionSwitch.y))), bool(_GLF_IDENTITY(bool((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), ((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) * _GLF_ONE(1.0, injectionSwitch.y))) > injectionSwitch.y)))), (bool((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), ((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) * _GLF_ONE(1.0, injectionSwitch.y))) > injectionSwitch.y))))) && true))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(-8757.9580)), bool(false))), injectionSwitch.x))), (0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), vec2(mat4x3(max(injectionSwitch, injectionSwitch), 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)))).x, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), mix(float(_GLF_FUZZED(-1.8)), float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), bool(true)))), float(_GLF_FUZZED(-8757.9580)), bool(false))), injectionSwitch.x), sin(0.0) + (max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), mix(float(_GLF_FUZZED(-1.8)), float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), bool(true)))), float(_GLF_FUZZED(-8757.9580)), bool(false))), injectionSwitch.x)))))) - 0.0)) > injectionSwitch.y))))))), true && (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > _GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y : _GLF_FUZZED(0.0))))), ! (! _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), ((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) * _GLF_ONE(1.0, injectionSwitch.y))) > injectionSwitch.y))), bool(_GLF_IDENTITY(bool((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), ((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) * _GLF_ONE(1.0, injectionSwitch.y))) > injectionSwitch.y)))), (bool((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(0.0 + _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), ((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) * _GLF_ONE(1.0, injectionSwitch.y)), float(mat2x3(0.0 + _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), ((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) * _GLF_ONE(1.0, injectionSwitch.y)), 1.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), 0.0)))))) > injectionSwitch.y))))) && true))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(-8757.9580)), bool(false))), injectionSwitch.x))), (0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), mix(float(_GLF_FUZZED(-1.8)), float(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(9.6) : injectionSwitch.x)), injectionSwitch.x))), bool(true)))), float(_GLF_FUZZED(-8757.9580)), bool(false))), injectionSwitch.x)))) - 0.0)) > injectionSwitch.y))))))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), ! (! (! ((false))))))) || false))))), ! (! (! _GLF_IDENTITY(_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), (_GLF_IDENTITY(! _GLF_IDENTITY(((false)), false || (_GLF_IDENTITY(((false)), (((false))) || false))), bool(bvec4(! (_GLF_IDENTITY((false), ((false)) && true)), false, false, true)))) && true))), ! (! (_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), (_GLF_IDENTITY(! _GLF_IDENTITY(((false)), false || (_GLF_IDENTITY(((false)), (((false))) || false))), bool(bvec4(! (_GLF_IDENTITY((false), ((false)) && true)), false, false, true)))) && true)))))))))))), (true && _GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! _GLF_IDENTITY((! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false)))))), bool(bool((! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false))))))))))))), bool(bool((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! _GLF_IDENTITY((! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false)))))), bool(bool((! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false))))))))))))))))) || _GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (false) && true))), _GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) || false), (_GLF_IDENTITY(! (false), (! (false)) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) || false), (_GLF_IDENTITY(! (false), (! (false)) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true, false, false))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 _GLF_IDENTITY(buf[gid] = _GLF_IDENTITY(1, (1) | _GLF_IDENTITY(0, (0) * int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))))), (buf[gid] = _GLF_IDENTITY(1, (1) | _GLF_IDENTITY(0, (0) * int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)), mix(float(max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), float(_GLF_FUZZED(-48.87)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))) - 0u);
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && true) && true))))
  barrier();
 if(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + 1 < GLF_merged3_0_1_13_1_1_13_2_1_14subgroup_sizetotal_threadsworkgroup_size.x)
  {
   int i = 0;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) && true), false || (false))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), ! (! (_GLF_IDENTITY((_GLF_DEAD(false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) || false), (_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) || false)) && _GLF_IDENTITY(true, bool(bvec3(true, true, true)))))))))) && true))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(false, true, false))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(false, true, false))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, true, false)))), true && ((_GLF_IDENTITY(false, bool(bvec3(false, true, false))))))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(false, true, false))))), false), false, false)))))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(false, true, false))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(false, true, false))))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(false, true, false))))), false), false, false))))))), (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(false, true, false))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(false, true, false))))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(false, true, false))))), false), false, false)))))))) && true)), (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), true, true, false))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(false, true, false))))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))))), false), false, false))))))), (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(false, true, false))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(false, true, false))))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(false, true, false))))), false), false, false))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(false, true, false))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(false, true, false))))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(false, true, false))))), false), false, false))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(false, true, false))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(false, true, false))))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(false, true, false))))), false), false, false))))), false)))))))) && true))) || false))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)))))))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))), bool(bvec3(bool(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))), false, false)))), bool(bool(bool(bool(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))))), false || _GLF_IDENTITY((bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_IDENTITY(true, ! (! (true)))))), false || (_GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_IDENTITY(true, ! (! (true))))))))))), false || ((bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_IDENTITY(true, ! (! (true)))))), false || (_GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_IDENTITY(true, ! (! (true)))))))))))))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! _GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true), true && (_GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)))), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), ! _GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ((_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bool(! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))) && true))))))))))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true), bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true), true)))))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(6.5)), bool(false))))))))) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), ! (! (bool(bvec3(false, false, true)))))), ! (! ((_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))) || _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (! (false))))))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(acos(vec2(-3239.8349, 3152.3452))))), vec2(injectionSwitch[0], injectionSwitch[1])).y)), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_ZERO(0.0, injectionSwitch.x), 0.0))).x > injectionSwitch.y)), false)))), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), (bool(bool((injectionSwitch.x > injectionSwitch.y)))) || false))), false)))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-5236.3920) : injectionSwitch.y)), bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))) && (injectionSwitch.x > injectionSwitch.y)))))), false || (false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, 0.0, log(1.0), 1.0, 0.0, 1.0, 0.0, tan(length(vec2(0.0, 0.0)))))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), min(max(injectionSwitch.y, injectionSwitch.y), _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), float(mat3x2(max(injectionSwitch.y, injectionSwitch.y), 0.0, tan(0.0), 1.0, 0.0, 0.0)))))))) && (injectionSwitch.x > injectionSwitch.y)))))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(5.0) : injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 1.0, 0.0))))), bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))) && (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y)))))))), true), bvec2(bvec4(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(5.0) : injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 1.0, 0.0))))), bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))) && (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y)))))))), true), true, false)))), false || (bool(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))) && (injectionSwitch.x > injectionSwitch.y)))))))), true)))))), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x < injectionSwitch.y)) && (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > injectionSwitch.y))))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))), false)), ! (! (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-4.4)), vec2(_GLF_FUZZED((+ -615.988)), (injectionSwitch)[1]), bvec2(false, true))).y))), (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false || (bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-4.4)), vec2(_GLF_FUZZED((+ -615.988)), (injectionSwitch)[1]), bvec2(false, true))).y))), (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), true && (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) < injectionSwitch.y)), true && (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) < injectionSwitch.y)), (! ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) < injectionSwitch.y))) && true)))))) && _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) && true))))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, 1.0, 0.0, 0.0, 0.0, tan(0.0), 1.0, 1.0))))), false), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, 1.0, 0.0, 0.0, 0.0, tan(0.0), 1.0, 1.0))))), false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), bool(bvec2(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, _GLF_ZERO(0.0, injectionSwitch.x) + (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)), 1.0, 0.0, 0.0, 0.0, tan(0.0), 1.0, 1.0))))), false)), true))))))) || _GLF_IDENTITY(false, (false) || false)))) || false)), ((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, cos(0.0) * (injectionSwitch.x)) > injectionSwitch.y)), false)))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), min(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), min(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))) && (injectionSwitch.x > injectionSwitch.y))))))))), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false)), (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(2.5), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(1608.4835)), bvec2(true, false))).x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false)), false || (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(2.5), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(1608.4835)), bvec2(true, false))).x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false))))) || false)), false))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > injectionSwitch.y))))))), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), true && (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)))).y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) < injectionSwitch.y))))) && (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)))).y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) < injectionSwitch.y))))) && (injectionSwitch.x > injectionSwitch.y))))))), (bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)))).y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) < injectionSwitch.y))))) && (injectionSwitch.x > injectionSwitch.y)))))))) && true)))), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, tan(0.0), 1.0, 1.0))))), false)), bool(bvec2(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, float(mat2x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, 1.0, 0.0, 0.0, 0.0, tan(0.0), 1.0, 1.0))))), false)), true))))))) || _GLF_IDENTITY(false, (false) || false)))) || false))) && true)))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((-8813.5831 / 1534.3532))), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   _GLF_IDENTITY(buf[(gid + 1) % GLF_merged3_0_1_13_1_1_13_2_1_14subgroup_sizetotal_threadsworkgroup_size.y] = 2, (_GLF_IDENTITY(buf[(gid + 1) % GLF_merged3_0_1_13_1_1_13_2_1_14subgroup_sizetotal_threadsworkgroup_size.y] = 2, (buf[(gid + 1) % GLF_merged3_0_1_13_1_1_13_2_1_14subgroup_sizetotal_threadsworkgroup_size.y] = _GLF_IDENTITY(2, ~ (~ (2)))) - (0u >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) >> 0u))))) / uint(_GLF_ONE(1.0, injectionSwitch.y)));
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   _GLF_IDENTITY(_GLF_IDENTITY(buf[(gid + 1) % GLF_merged3_0_1_13_1_1_13_2_1_14subgroup_sizetotal_threadsworkgroup_size.y] = 2, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0u & 36764u, _GLF_IDENTITY((_GLF_IDENTITY(0u & 36764u, (0u & _GLF_IDENTITY(36764u, ~ (~ (36764u)))) | 0u)), clamp((_GLF_IDENTITY(0u & 36764u, (0u & _GLF_IDENTITY(36764u, min(36764u, _GLF_IDENTITY(36764u, (36764u) | (36764u))))) | 0u)), (_GLF_IDENTITY(0u & 36764u, _GLF_IDENTITY((0u & _GLF_IDENTITY(36764u, clamp(36764u, _GLF_IDENTITY(36764u, clamp(36764u, 36764u, _GLF_IDENTITY(36764u, (36764u) ^ 0u))), 36764u))), max(_GLF_IDENTITY((0u & _GLF_IDENTITY(36764u, clamp(36764u, _GLF_IDENTITY(36764u, clamp(36764u, 36764u, _GLF_IDENTITY(36764u, (36764u) ^ 0u))), 36764u))), ((0u & _GLF_IDENTITY(36764u, clamp(36764u, _GLF_IDENTITY(36764u, clamp(36764u, 36764u, _GLF_IDENTITY(36764u, (36764u) ^ 0u))), 36764u)))) >> 0u), (0u & _GLF_IDENTITY(36764u, clamp(36764u, _GLF_IDENTITY(36764u, clamp(36764u, 36764u, _GLF_IDENTITY(36764u, (36764u) ^ 0u))), 36764u))))) | 0u)), (_GLF_IDENTITY(0u & 36764u, _GLF_IDENTITY((0u & 36764u) | 0u, ~ (~ ((0u & 36764u) | 0u))))))) ^ 0u)), clamp((_GLF_IDENTITY(0u & 36764u, _GLF_IDENTITY((_GLF_IDENTITY(0u & 36764u, (0u & 36764u) | 0u)), clamp((_GLF_IDENTITY(0u & 36764u, (_GLF_IDENTITY(0u, min(0u, 0u)) & _GLF_IDENTITY(36764u, min(36764u, 36764u))) | 0u)), (_GLF_IDENTITY(0u & 36764u, (0u & _GLF_IDENTITY(36764u, clamp(36764u, 36764u, _GLF_IDENTITY(36764u, (_GLF_IDENTITY(36764u, max(36764u, 36764u))) | 0u)))) | 0u)), (_GLF_IDENTITY(0u & 36764u, (0u & 36764u) | 0u)))) ^ 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) + 0u) & 36764u, _GLF_IDENTITY((_GLF_IDENTITY(0u & 36764u, (0u & 36764u) | _GLF_IDENTITY(0u, min(0u, 0u)))), clamp((_GLF_IDENTITY(0u & _GLF_IDENTITY(36764u, (36764u) | 0u), (0u & _GLF_IDENTITY(_GLF_IDENTITY(36764u, (36764u) | 0u), min(36764u, 36764u))) | 0u)), (_GLF_IDENTITY(0u & 36764u, (0u & _GLF_IDENTITY(36764u, clamp(36764u, 36764u, 36764u))) | 0u)), (_GLF_IDENTITY(0u & 36764u, _GLF_IDENTITY((0u & 36764u) | 0u, min((0u & 36764u) | 0u, (0u & 36764u) | 0u)))))) ^ 0u)), (_GLF_IDENTITY(0u & 36764u, _GLF_IDENTITY((_GLF_IDENTITY(0u & 36764u, (0u & 36764u) | 0u)), clamp((_GLF_IDENTITY(0u & 36764u, (0u & _GLF_IDENTITY(36764u, _GLF_IDENTITY(min(36764u, 36764u), 0u ^ (min(36764u, 36764u))))) | _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | (0u))) ^ 0u))), (_GLF_IDENTITY(0u & 36764u, (0u & _GLF_IDENTITY(_GLF_IDENTITY(36764u, _GLF_IDENTITY((false ? _GLF_FUZZED(gid) : 36764u), ((false ? _GLF_FUZZED(gid) : 36764u)) | (_GLF_IDENTITY((false ? _GLF_FUZZED(gid) : 36764u), ((false ? _GLF_FUZZED(gid) : 36764u)) >> 0u)))), clamp(36764u, 36764u, 36764u))) | 0u)), (_GLF_IDENTITY(0u & 36764u, (0u & 36764u) | 0u)))) ^ 0u)))), _GLF_IDENTITY(clamp((0u & 36764u), _GLF_IDENTITY((0u & 36764u), min((0u & 36764u), _GLF_IDENTITY((0u & 36764u), max((0u & 36764u), (0u & 36764u))))), (0u & 36764u)), 0u ^ (_GLF_IDENTITY(clamp((0u & 36764u), (0u & 36764u), (0u & 36764u)), min(clamp((0u & 36764u), (0u & 36764u), (0u & 36764u)), _GLF_IDENTITY(clamp((0u & 36764u), (0u & 36764u), (0u & 36764u)), (true ? clamp((0u & 36764u), (0u & 36764u), (0u & 36764u)) : _GLF_FUZZED(subgroup_size)))))))) ^ (buf[(gid + 1) % GLF_merged3_0_1_13_1_1_13_2_1_14subgroup_sizetotal_threadsworkgroup_size.y] = _GLF_IDENTITY(2, _GLF_IDENTITY(int(_GLF_IDENTITY(int(2), 0 + (int(2)))), (int(_GLF_IDENTITY(int(2), 0 + (int(2))))) - 0)))), (_GLF_IDENTITY(_GLF_IDENTITY(buf[(gid + 1) % GLF_merged3_0_1_13_1_1_13_2_1_14subgroup_sizetotal_threadsworkgroup_size.y] = 2, _GLF_IDENTITY((_GLF_IDENTITY(0u & 36764u, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0u & 36764u, (0u & 36764u) | 0u)), min((_GLF_IDENTITY(0u & 36764u, _GLF_IDENTITY((0u & 36764u) | 0u, ((0u & 36764u) | 0u) >> 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uvec2(0u, uint(_GLF_ONE(1.0, injectionSwitch.y))))) & 36764u, (0u & 36764u) | 0u)))), clamp((_GLF_IDENTITY(0u & 36764u, _GLF_IDENTITY((0u & 36764u) | 0u, uint(uvec4((0u & 36764u) | 0u, 0u, 1u, 1u))))), (_GLF_IDENTITY(0u & 36764u, (0u & 36764u) | 0u)), (_GLF_IDENTITY(0u & 36764u, _GLF_IDENTITY((0u & 36764u), ((0u & 36764u)) / (0u ^ 1u)) | 0u)))) ^ 0u)), _GLF_IDENTITY(clamp((0u & 36764u), (0u & 36764u), (0u & 36764u)), 0u ^ (clamp((0u & 36764u), (0u & _GLF_IDENTITY(_GLF_IDENTITY(36764u, min(36764u, 36764u)), min(_GLF_IDENTITY(36764u, min(36764u, 36764u)), _GLF_IDENTITY(36764u, min(36764u, 36764u))))), _GLF_IDENTITY((0u & 36764u), ~ (~ ((0u & 36764u)))))))) ^ _GLF_IDENTITY((buf[(gid + 1) % GLF_merged3_0_1_13_1_1_13_2_1_14subgroup_sizetotal_threadsworkgroup_size.y] = 2), (true ? (buf[(gid + 1) % GLF_merged3_0_1_13_1_1_13_2_1_14subgroup_sizetotal_threadsworkgroup_size.y] = 2) : _GLF_FUZZED(subgroup_size)))), (_GLF_IDENTITY(_GLF_IDENTITY(buf[(gid + 1) % GLF_merged3_0_1_13_1_1_13_2_1_14subgroup_sizetotal_threadsworkgroup_size.y] = 2, _GLF_IDENTITY((_GLF_IDENTITY(0u & 36764u, _GLF_IDENTITY((_GLF_IDENTITY(0u & 36764u, (0u & 36764u) | 0u)), clamp((_GLF_IDENTITY(0u & 36764u, (0u & 36764u) | 0u)), (_GLF_IDENTITY(0u & 36764u, _GLF_IDENTITY((0u & 36764u) | 0u, (_GLF_IDENTITY((0u & 36764u) | 0u, ((0u & 36764u) | 0u) | (_GLF_IDENTITY((0u & 36764u) | 0u, clamp((0u & 36764u) | 0u, (0u & 36764u) | 0u, (0u & 36764u) | 0u))))) / 1u))), (_GLF_IDENTITY(0u & 36764u, (0u & _GLF_IDENTITY(36764u, (36764u) << 0u)) | 0u)))) ^ 0u)), _GLF_IDENTITY(clamp((0u & 36764u), (_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | 0u)) ^ 0u) & 36764u, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | 0u)) ^ 0u) & 36764u) - 0u)), (0u & _GLF_IDENTITY(36764u, clamp(36764u, 36764u, _GLF_IDENTITY(36764u, (_GLF_IDENTITY(36764u, 1u * _GLF_IDENTITY((36764u), min((36764u), (36764u))))) - 0u))))), 0u ^ _GLF_IDENTITY((clamp((0u & 36764u), (_GLF_IDENTITY(0u, (0u) >> 0u) & _GLF_IDENTITY(36764u, clamp(36764u, 36764u, 36764u))), (0u & 36764u))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (clamp((0u & 36764u), (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uvec2(0u, 0u)))) >> 0u) & _GLF_IDENTITY(36764u, clamp(36764u, 36764u, 36764u))), (0u & 36764u))) : _GLF_FUZZED(subgroup_local_id))))) ^ (buf[(gid + 1) % GLF_merged3_0_1_13_1_1_13_2_1_14subgroup_sizetotal_threadsworkgroup_size.y] = 2)), (_GLF_IDENTITY(buf[(gid + 1) % GLF_merged3_0_1_13_1_1_13_2_1_14subgroup_sizetotal_threadsworkgroup_size.y] = 2, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0u & 36764u, _GLF_IDENTITY((_GLF_IDENTITY(0u & _GLF_IDENTITY(36764u, (36764u) | (36764u)), (0u & 36764u) | 0u)), clamp((_GLF_IDENTITY(0u & 36764u, (0u & 36764u) | 0u)), (_GLF_IDENTITY(0u & 36764u, (0u & _GLF_IDENTITY(36764u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((++ workgroup_size)) : _GLF_IDENTITY(36764u, min(36764u, 36764u))))) | 0u)), (_GLF_IDENTITY(0u & 36764u, (0u & _GLF_IDENTITY(36764u, min(_GLF_IDENTITY(36764u, (36764u) >> 0u), 36764u))) | 0u)))) ^ 0u), 0u | (_GLF_IDENTITY(0u & 36764u, _GLF_IDENTITY((_GLF_IDENTITY(0u & 36764u, (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)) & 36764u) | 0u)), clamp((_GLF_IDENTITY(0u & 36764u, (0u & 36764u) | 0u)), (_GLF_IDENTITY(0u & 36764u, (0u & 36764u) | 0u)), (_GLF_IDENTITY(0u & 36764u, (0u & 36764u) | 0u)))) ^ _GLF_IDENTITY(0u, (0u) >> (0u >> _GLF_IDENTITY(uint(4u), uint(_GLF_IDENTITY(4u, (4u) * 1u))))))))), _GLF_IDENTITY(_GLF_IDENTITY(clamp((0u & 36764u), (0u & 36764u), (0u & 36764u)), 0u ^ (clamp((0u & 36764u), (0u & 36764u), (0u & 36764u)))), max(_GLF_IDENTITY(clamp((_GLF_IDENTITY(0u & 36764u, (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(_GLF_IDENTITY(0u & 36764u, (0u & 36764u) - 0u), (_GLF_IDENTITY(0u & 36764u, clamp(0u & 36764u, 0u & 36764u, 0u & 36764u))) - 0u)))), (0u & 36764u), (0u & 36764u)), 0u ^ (clamp((0u & 36764u), (0u & 36764u), (0u & 36764u)))), _GLF_IDENTITY(_GLF_IDENTITY(clamp((_GLF_IDENTITY(0u, (0u) ^ 0u) & 36764u), (0u & 36764u), (0u & 36764u)), 0u ^ (clamp((0u & 36764u), (0u & 36764u), (0u & 36764u)))), (_GLF_IDENTITY(clamp((0u & 36764u), (0u & 36764u), (0u & 36764u)), 0u ^ (clamp((0u & 36764u), (0u & 36764u), (_GLF_IDENTITY(0u & 36764u, (0u & 36764u) + 0u)))))) | 0u)))) ^ (buf[(gid + 1) % GLF_merged3_0_1_13_1_1_13_2_1_14subgroup_sizetotal_threadsworkgroup_size.y] = 2))) >> 0u)) ^ 0u)) >> uint(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 0.0)), injectionSwitch.x)));
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), (_GLF_IDENTITY(true && (false), true && (true && (false)))) || false)), false)))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), (bool(bool(_GLF_DEAD(false)))) || false)))
        barrier();
       barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, true && (false))), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, true && (false))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))) || (_GLF_IDENTITY(false, true && (false)))))))))))
  barrier();
}
