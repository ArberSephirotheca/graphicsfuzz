#version 460
struct _GLF_struct_1 {
 uvec4 _f0;
 uvec4 _f1;
} ;

struct _GLF_struct_0 {
 int _f0;
 ivec4 _f1;
 ivec2 _f2;
 uint _f3;
} ;

struct _GLF_struct_2 {
 uvec3 _f0;
 _GLF_struct_0 _f1;
 _GLF_struct_1 _f2;
 uint next_virtual_gid;
} ;

struct _GLF_struct_3 {
 ivec2 _f0;
 int _f1;
 _GLF_struct_2 _f2;
 bvec3 _f3;
} ;

layout(set = 0, binding = 0) uniform buf0 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 _GLF_struct_3 _GLF_struct_replacement_3 = _GLF_struct_3(ivec2(1), 1, _GLF_struct_2(uvec3(1u), _GLF_struct_0(1, ivec4(1), ivec2(1), 1u), _GLF_struct_1(uvec4(1u), uvec4(1u)), workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size)), bvec3(true));
 buf[virtual_gid] = 1;
 if(subgroup_local_id + 1 < subgroup_size)
  {
   int i = 0;
   buf[_GLF_struct_replacement_3._f2.next_virtual_gid] = 2;
  }
 else
  {
   buf[_GLF_struct_replacement_3._f2.next_virtual_gid] = 2;
  }
}
