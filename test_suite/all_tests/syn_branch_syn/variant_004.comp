#version 460
struct _GLF_struct_2 {
 vec2 _f0;
 uvec2 _f1;
 mat3x2 _f2;
 bvec3 _f3;
} ;

struct _GLF_struct_1 {
 mat4 _f0;
 bool _f1;
 mat3x2 _f2;
 mat3 _f3;
 vec3 _f4;
 int _f5;
} ;

struct _GLF_struct_0 {
 mat3x4 _f0;
 uint subgroup_size;
} ;

struct _GLF_struct_3 {
 _GLF_struct_0 _f0;
 mat4 _f1;
 _GLF_struct_1 _f2;
 _GLF_struct_2 _f3;
} ;

struct _GLF_struct_4 {
 mat3x4 _f0;
 ivec2 _f1;
 uvec4 _f2;
 uvec3 _f3;
 _GLF_struct_3 _f4;
} ;

layout(set = 0, binding = 0) uniform buf0 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 _GLF_struct_4 _GLF_struct_replacement_4 = _GLF_struct_4(mat3x4(1.0), ivec2(1), uvec4(1u), uvec3(1u), _GLF_struct_3(_GLF_struct_0(mat3x4(1.0), gl_SubgroupSize), mat4(1.0), _GLF_struct_1(mat4(1.0), true, mat3x2(1.0), mat3(1.0), vec3(1.0), 1), _GLF_struct_2(vec2(1.0), uvec2(1u), mat3x2(1.0), bvec3(true))));
 uint gid = gl_GlobalInvocationID.x;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint total_threads = num_workgroup * workgroup_size;
 buf[gid] = 1;
 if(subgroup_local_id + 1 < _GLF_struct_replacement_4._f4._f0.subgroup_size)
  {
   int i = 0;
   buf[(gid + 1) % total_threads] = 2;
  }
 else
  {
   buf[(gid + 1) % total_threads] = 2;
  }
}
