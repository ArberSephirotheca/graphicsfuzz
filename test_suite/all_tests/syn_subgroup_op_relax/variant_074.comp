#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), bool(bvec3(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), false, false)))))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-3.4) : injectionSwitch.x))) * round(length(normalize(1.0)))), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))), _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, float(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-9.9)), float(injectionSwitch.x), bool(true))))))) * 1.0), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), max(_GLF_IDENTITY(float(mat4x2(injectionSwitch.x, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - length(vec2(0.0, 0.0))), 0.0, 1.0)), clamp(float(mat4x2(injectionSwitch.x, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), float(mat4x2(injectionSwitch.x, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), float(mat4x2(injectionSwitch.x, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)))), float(mat4x2(injectionSwitch.x, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0))))), 0.0, 1.0, 1.0, 0.0, log(1.0), _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0))), 1.0)), 1.0, 1.0, 1.0, 0.0, 0.0), (mat3x4(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4x2(injectionSwitch.x, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), max(float(mat4x2(injectionSwitch.x, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), float(mat4x2(injectionSwitch.x, 1.0, _GLF_IDENTITY(0.0, (0.0) - log(1.0)), 1.0, 0.0, 0.0, 0.0, 1.0))))), 0.0, 1.0, 1.0, 0.0, log(1.0), 1.0, 1.0, 1.0, 1.0, 0.0, 0.0)) + mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))) > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-2197.3978) : _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, true)))), ! (! (bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, true))))))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x)) > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), (min(injectionSwitch.x, injectionSwitch.x)) / 1.0)) > injectionSwitch.y), true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), (min(injectionSwitch.x, injectionSwitch.x)) / 1.0)) > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), (min(injectionSwitch.x, injectionSwitch.x)) / 1.0)) > injectionSwitch.y))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), mix(vec2(_GLF_FUZZED(3.9), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-63.01)), bvec2(true, false))).x, injectionSwitch.x)) > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))) || false), ! (! ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))))) && true, _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x)) > injectionSwitch.y))))))) && true, ((_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x)) > injectionSwitch.y))))))) && true) && true)), ((_GLF_IDENTITY((_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x)) > injectionSwitch.y))))))) && true, ((_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x)) > injectionSwitch.y))))))) && true) && true))) || false) || false)) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((injectionSwitch.x < injectionSwitch.y), false, false), bvec3(bvec3(bvec3((injectionSwitch.x < injectionSwitch.y), false, false))))), (bool(_GLF_IDENTITY(bvec3((injectionSwitch.x < injectionSwitch.y), false, false), bvec3(bvec3(bvec3((injectionSwitch.x < injectionSwitch.y), false, false)))))) && true))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x)) > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), (min(injectionSwitch.x, injectionSwitch.x)) / 1.0)) > injectionSwitch.y), true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), (min(injectionSwitch.x, injectionSwitch.x)) / 1.0)) > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), (min(injectionSwitch.x, injectionSwitch.x)) / 1.0)) > injectionSwitch.y))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), mix(vec2(_GLF_FUZZED(3.9), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-63.01)), bvec2(true, false))).x, injectionSwitch.x)) > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))) || false), ! (! ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))))) && true, _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x)) > injectionSwitch.y))))))) && true, ((_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x)) > injectionSwitch.y))))))) && true) && true)), ((_GLF_IDENTITY((_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x)) > injectionSwitch.y))))))) && true, ((_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x)) > injectionSwitch.y))))))) && true) && true))) || false) || false)) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((injectionSwitch.x < injectionSwitch.y), false, false), bvec3(bvec3(bvec3((injectionSwitch.x < injectionSwitch.y), false, false))))), (bool(_GLF_IDENTITY(bvec3((injectionSwitch.x < injectionSwitch.y), false, false), bvec3(bvec3(bvec3((injectionSwitch.x < injectionSwitch.y), false, false)))))) && true))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x)) > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), (min(injectionSwitch.x, injectionSwitch.x)) / 1.0)) > injectionSwitch.y), true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), (min(injectionSwitch.x, injectionSwitch.x)) / 1.0)) > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), (min(injectionSwitch.x, injectionSwitch.x)) / 1.0)) > injectionSwitch.y))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), mix(vec2(_GLF_FUZZED(3.9), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-63.01)), bvec2(true, false))).x, injectionSwitch.x)) > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))) || false), ! (! ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))))) && true, _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x)) > injectionSwitch.y))))))) && true, ((_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x)) > injectionSwitch.y))))))) && true) && true)), ((_GLF_IDENTITY((_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x)) > injectionSwitch.y))))))) && true, ((_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x)) > injectionSwitch.y))))))) && true) && true))) || false) || false)) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((injectionSwitch.x < injectionSwitch.y), false, false), bvec3(bvec3(bvec3((injectionSwitch.x < injectionSwitch.y), false, false))))), (bool(_GLF_IDENTITY(bvec3((injectionSwitch.x < injectionSwitch.y), false, false), bvec3(bvec3(bvec3((injectionSwitch.x < injectionSwitch.y), false, false)))))) && true))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x)) > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), (min(injectionSwitch.x, injectionSwitch.x)) / 1.0)) > injectionSwitch.y), true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), (min(injectionSwitch.x, injectionSwitch.x)) / 1.0)) > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), (min(injectionSwitch.x, injectionSwitch.x)) / 1.0)) > injectionSwitch.y))))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x < injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), mix(vec2(_GLF_FUZZED(3.9), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-63.01)), bvec2(true, false))).x, injectionSwitch.x)) > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))) || false), ! (! ((_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))))) && true, _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x)) > injectionSwitch.y))))))) && true, ((_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x)) > injectionSwitch.y))))))) && true) && true)), ((_GLF_IDENTITY((_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x)) > injectionSwitch.y))))))) && true, ((_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x)) > injectionSwitch.y))))))) && true) && true))) || false) || false)) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((injectionSwitch.x < injectionSwitch.y), false, false), bvec3(bvec3(_GLF_IDENTITY(bvec3((injectionSwitch.x < injectionSwitch.y), false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3((injectionSwitch.x < injectionSwitch.y), false, false), false)), bvec3(bvec3(bvec3(bvec4(bvec3((injectionSwitch.x < injectionSwitch.y), false, false), false)))))))))), (bool(_GLF_IDENTITY(bvec3((injectionSwitch.x < injectionSwitch.y), false, false), bvec3(bvec3(bvec3((injectionSwitch.x < injectionSwitch.y), false, false)))))) && true))))))))))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, 0.0, 1.0, determinant(mat4(0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0, sqrt(0.0), 0.0, log(1.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))) > _GLF_IDENTITY(injectionSwitch, vec2(vec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(vec2(1.0, 1.0), mix(vec2((vec2(1.0, 1.0))[0], (vec2(1.0, 1.0))[1]), vec2(_GLF_IDENTITY(_GLF_FUZZED((- -1603.8267)), max(_GLF_FUZZED((- -1603.8267)), _GLF_FUZZED((- -1603.8267)))), _GLF_FUZZED(-8271.2734)), bvec2(false, false)))), 1.0, 0.0))).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) / 1u);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, (true ? _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), (false ? _GLF_FUZZED(uvec3(44485u, 61064u, 96526u)) : ~ (gl_WorkGroupSize))))).x)) : _GLF_FUZZED(subgroup_size)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x)) > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)))))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (_GLF_IDENTITY(! (false), (! (false)) && true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)), false || ((! (false)))) && true))), _GLF_IDENTITY(true, bool(bvec2(true, true))) && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(_GLF_IDENTITY(true, bool(bvec4(true, true, false, true))), (injectionSwitch.x < injectionSwitch.y))), ! (_GLF_IDENTITY(! (false), (! _GLF_IDENTITY((false), true && ((false)))) && _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, (true) || false)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y))))), ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bool((false)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)) && (bool((false)))))) || false)))
      {
       if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))), (_GLF_DEAD(false)) && true))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), ! (! (false || (false)))))), false || (! (_GLF_IDENTITY(false, false || (false)))))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, true && (true)) && (false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, true)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true && ((injectionSwitch.x > injectionSwitch.y)), (true && ((injectionSwitch.x > injectionSwitch.y))) && true)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), _GLF_TRUE(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec3(bvec2(true, false), true))))))), (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-37.31, -4469.6470)) : injectionSwitch)).x < injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, cos(0.0), 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 0.0), min(vec4(0.0, 0.0, 1.0, 0.0), _GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0) * (vec4(0.0, 0.0, 1.0, 0.0)))))), dot(vec4(0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)), vec4(0.0, 0.0, 1.0, 0.0))), 0.0, 0.0, 1.0, 1.0)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-51.50)), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)))), (true ? max(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-51.50)), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)))) : _GLF_FUZZED(-552.951)))) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), vec2(mat3x4(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0)), sqrt(1.0), 0.0, 1.0, 1.0, round(length(normalize(_GLF_ONE(1.0, injectionSwitch.y)))), _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, min(1.0, 1.0)))), 1.0, 0.0, determinant(_GLF_IDENTITY(mat3(determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, sqrt(1.0), 0.0, 0.0), mat3(_GLF_IDENTITY(mat3x4(mat3(determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, sqrt(1.0), 0.0, 0.0)), transpose(transpose(mat3x4(mat3(determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, sqrt(1.0), 0.0, 0.0)))))))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0)), dot(vec3(0.0, 0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-842.917)))), vec3(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), 0.0, 1.0))))))[1], 0.0 + ((injectionSwitch)[1]))), vec2(_GLF_FUZZED(-674.198), _GLF_FUZZED(-3.6)), bvec2(false, false))).x > injectionSwitch.y) && true)))))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((subgroup_local_id), ~ (_GLF_IDENTITY(~ ((subgroup_local_id)), (0u ^ 0u) + (~ ((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, (1u) * 1u)))) | (0u >> _GLF_IDENTITY(uint(1u), uint(1u)))))) * (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))) ^ 0u))))))))), (~ _GLF_IDENTITY((subgroup_local_id), ~ (_GLF_IDENTITY(~ ((subgroup_local_id)), (0u ^ 0u) + (~ ((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(1u, (1u) | (1u)) * (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))) ^ 0u)))))))))) ^ 0u))), subgroup_local_id)), subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, (workgroup_base) >> (0u << _GLF_IDENTITY(uint(4u), uint(4u)))) + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(813.132) : _GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, cos(0.0), 1.0, tan(0.0), 0.0, 1.0)))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, _GLF_IDENTITY(1.0, (1.0) - length(vec2(0.0, 0.0))))), mix(vec2(_GLF_FUZZED(7.3), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))[1]), vec2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))[0], _GLF_FUZZED(-995.910)), bvec2(true, false))).y, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, _GLF_IDENTITY(1.0, (1.0) - length(vec2(0.0, 0.0))))), mix(vec2(_GLF_FUZZED(7.3), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))[1]), vec2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))[0], _GLF_FUZZED(-995.910)), bvec2(true, false))).y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, _GLF_IDENTITY(1.0, (1.0) - length(vec2(0.0, 0.0))))), mix(vec2(_GLF_FUZZED(7.3), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))[1]), vec2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))[0], _GLF_FUZZED(-995.910)), bvec2(true, false))).y) - 0.0)) - 0.0))))), false, true, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec2(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec2(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec2(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec2(bvec2(true, true))))))))))))))))))))
  barrier();
 buf[virtual_gid] = 1;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))) && true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))))))))
  barrier();
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(2), 4, _GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(-37718))), 0);
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   subgroupAll(false);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])))).y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, 0u | (next_virtual_gid))], uint(2), 4, 64, 0);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(float(injectionSwitch.y), (float(injectionSwitch.y)) * 1.0)))))))), bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(float(injectionSwitch.y), (float(injectionSwitch.y)) * 1.0)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec3(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), false, false))), false))))), false, true)))) && true)))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY(_GLF_IDENTITY((false), false || ((false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), false || ((false)))))))) || _GLF_IDENTITY(false, true && (false)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, int(ivec2(0, 1)))], injectionSwitch[1]))) + sin(vec2(0.0, 0.0))).x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(true);
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY(false, (false) || false)))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(clamp(_GLF_IDENTITY(mat2(1.0), mat2(_GLF_IDENTITY(mat4x3(mat2(1.0)), (mat4x3(mat2(_GLF_IDENTITY(1.0, min(1.0, 1.0))))) * mat4(1.0)))) * (injectionSwitch), mat2(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec3(1.0, 0.0, 1.0), vec3(mat4x2(_GLF_IDENTITY(vec3(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(3.9))), 0.0, 1.0), min(vec3(1.0, 0.0, 1.0), _GLF_IDENTITY(vec3(1.0, 0.0, 1.0), mix(vec3(_GLF_FUZZED(41.44), _GLF_FUZZED((false ? -9.6 : -7.5)), _GLF_FUZZED(1.2)), vec3((vec3(1.0, 0.0, 1.0))[0], (vec3(1.0, 0.0, 1.0))[1], _GLF_IDENTITY((vec3(1.0, 0.0, 1.0))[2], clamp((vec3(1.0, 0.0, 1.0))[2], (vec3(1.0, 0.0, 1.0))[2], (vec3(1.0, 0.0, 1.0))[2]))), bvec3(true, true, true))))), 1.0, 0.0, 1.0, 0.0, 1.0))))), 1.0, _GLF_IDENTITY(1.0, float(mat3(1.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(1.0, float(mat4x3(1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(sqrt(0.0), 1.0, 0.0), vec3(determinant(mat2(0.0, _GLF_IDENTITY(0.0, float(mat2(0.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), 0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(abs(0.0), sqrt(0.0), 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(abs(0.0), sqrt(0.0), 0.0)))))), 1.0, 0.0)), 1.0, length(vec3(0.0, 0.0, 0.0)))), max(_GLF_IDENTITY(dot(vec3(sqrt(0.0), 1.0, 0.0), vec3(determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0, length(vec3(0.0, 0.0, 0.0)))), (_GLF_IDENTITY(dot(vec3(sqrt(0.0), 1.0, 0.0), vec3(determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0, length(vec3(0.0, 0.0, 0.0)))), (true ? dot(vec3(sqrt(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, float(mat3x4(0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0))) : _GLF_FUZZED(-5.1)))))), 1.0, 0.0), vec3(determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0, length(vec3(0.0, 0.0, 0.0)))) : _GLF_FUZZED(7376.0433)))) / round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), _GLF_IDENTITY(dot(vec3(sqrt(0.0), 1.0, 0.0), vec3(determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0, length(vec3(0.0, 0.0, 0.0)))), float(float(dot(vec3(sqrt(0.0), 1.0, 0.0), vec3(determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0, length(vec3(0.0, 0.0, 0.0))))))))), dot(vec3(sqrt(0.0), 1.0, 0.0), _GLF_IDENTITY(vec3(determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0, length(vec3(0.0, 0.0, 0.0))), mix(vec3((vec3(determinant(mat2(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)))), 1.0, length(vec3(0.0, 0.0, 0.0))))[0], _GLF_FUZZED(-0.6), _GLF_FUZZED(3943.3745)), vec3(_GLF_FUZZED(-27.61), (vec3(determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0, length(vec3(0.0, 0.0, 0.0))))[1], (vec3(determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0, length(vec3(0.0, 0.0, 0.0))))[2]), bvec3(false, true, true))))), 1.0, 1.0, 0.0))), 0.0, 0.0)))))) * (injectionSwitch), mat2(_GLF_IDENTITY(1.0, (1.0) - 0.0)) * (injectionSwitch)), (false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(-534.569, -66.75)), _GLF_IDENTITY(clamp(_GLF_FUZZED(vec2(-534.569, -66.75)), _GLF_FUZZED(vec2(_GLF_IDENTITY(-534.569, round(length(normalize(vec2(1.0, 1.0)))) * (_GLF_IDENTITY(-534.569, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-9.3) : _GLF_IDENTITY(-534.569, float(mat3x2(-534.569, 1.0, 0.0, 1.0, 1.0, 0.0))))))), -66.75)), _GLF_FUZZED(vec2(-534.569, -66.75))), clamp(clamp(_GLF_FUZZED(vec2(-534.569, -66.75)), _GLF_FUZZED(vec2(_GLF_IDENTITY(-534.569, round(length(normalize(vec2(1.0, 1.0)))) * (_GLF_IDENTITY(-534.569, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-9.3) : _GLF_IDENTITY(-534.569, float(mat3x2(-534.569, 1.0, 0.0, 1.0, 1.0, 0.0))))))), -66.75)), _GLF_FUZZED(vec2(-534.569, -66.75))), clamp(_GLF_FUZZED(vec2(-534.569, -66.75)), _GLF_FUZZED(vec2(_GLF_IDENTITY(-534.569, round(length(normalize(vec2(_GLF_IDENTITY(1.0, float(vec3(1.0, sqrt(0.0), _GLF_ONE(1.0, injectionSwitch.y)))), 1.0)))) * (_GLF_IDENTITY(-534.569, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-9.3) : _GLF_IDENTITY(-534.569, float(mat3x2(-534.569, 1.0, 0.0, 1.0, 1.0, 0.0))))))), -66.75)), _GLF_FUZZED(vec2(-534.569, -66.75))), clamp(_GLF_FUZZED(vec2(-534.569, -66.75)), _GLF_FUZZED(vec2(_GLF_IDENTITY(-534.569, round(length(normalize(vec2(1.0, 1.0)))) * (_GLF_IDENTITY(-534.569, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-9.3) : _GLF_IDENTITY(-534.569, float(mat3x2(-534.569, 1.0, 0.0, 1.0, 1.0, 0.0))))))), -66.75)), _GLF_FUZZED(vec2(-534.569, -66.75)))))) : clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))))), injectionSwitch)).x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(clamp(_GLF_IDENTITY(mat2(1.0), mat2(_GLF_IDENTITY(mat4x3(mat2(1.0)), (mat4x3(mat2(_GLF_IDENTITY(1.0, min(1.0, 1.0))))) * mat4(1.0)))) * (injectionSwitch), mat2(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec3(1.0, 0.0, 1.0), vec3(mat4x2(_GLF_IDENTITY(vec3(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(3.9))), 0.0, 1.0), min(vec3(1.0, 0.0, 1.0), _GLF_IDENTITY(vec3(1.0, 0.0, 1.0), mix(vec3(_GLF_FUZZED(41.44), _GLF_FUZZED((false ? -9.6 : -7.5)), _GLF_FUZZED(1.2)), vec3((vec3(1.0, 0.0, 1.0))[0], (vec3(1.0, 0.0, 1.0))[1], _GLF_IDENTITY((vec3(1.0, 0.0, 1.0))[2], clamp((vec3(1.0, 0.0, 1.0))[2], (vec3(1.0, 0.0, 1.0))[2], (vec3(1.0, 0.0, 1.0))[2]))), bvec3(true, true, true))))), 1.0, 0.0, 1.0, 0.0, 1.0))))), 1.0, _GLF_IDENTITY(1.0, float(mat3(1.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(1.0, float(mat4x3(1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(sqrt(0.0), 1.0, 0.0), vec3(determinant(mat2(0.0, _GLF_IDENTITY(0.0, float(mat2(0.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), 0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(abs(0.0), sqrt(0.0), 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(abs(0.0), sqrt(0.0), 0.0)))))), 1.0, 0.0)), 1.0, length(vec3(0.0, 0.0, 0.0)))), max(_GLF_IDENTITY(dot(vec3(sqrt(0.0), 1.0, 0.0), vec3(determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0, length(vec3(0.0, 0.0, 0.0)))), (_GLF_IDENTITY(dot(vec3(sqrt(0.0), 1.0, 0.0), vec3(determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0, length(vec3(0.0, 0.0, 0.0)))), (true ? dot(vec3(sqrt(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, float(mat3x4(0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0))) : _GLF_FUZZED(-5.1)))))), 1.0, 0.0), vec3(determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0, length(vec3(0.0, 0.0, 0.0)))) : _GLF_FUZZED(7376.0433)))) / round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), _GLF_IDENTITY(dot(vec3(sqrt(0.0), 1.0, 0.0), vec3(determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0, length(vec3(0.0, 0.0, 0.0)))), float(float(dot(vec3(sqrt(0.0), 1.0, 0.0), vec3(determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0, length(vec3(0.0, 0.0, 0.0))))))))), dot(vec3(sqrt(0.0), 1.0, 0.0), _GLF_IDENTITY(vec3(determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0, length(vec3(0.0, 0.0, 0.0))), mix(vec3((vec3(determinant(mat2(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)))), 1.0, length(vec3(0.0, 0.0, 0.0))))[0], _GLF_FUZZED(-0.6), _GLF_FUZZED(3943.3745)), vec3(_GLF_FUZZED(-27.61), (vec3(determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0, length(vec3(0.0, 0.0, 0.0))))[1], (vec3(determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0, length(vec3(0.0, 0.0, 0.0))))[2]), bvec3(false, true, true))))), 1.0, 1.0, 0.0))), 0.0, 0.0)))))) * (injectionSwitch), mat2(_GLF_IDENTITY(1.0, (1.0) - 0.0)) * (injectionSwitch)), (false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(-534.569, -66.75)), _GLF_IDENTITY(clamp(_GLF_FUZZED(vec2(-534.569, -66.75)), _GLF_FUZZED(vec2(_GLF_IDENTITY(-534.569, round(length(normalize(vec2(1.0, 1.0)))) * (_GLF_IDENTITY(-534.569, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-9.3) : _GLF_IDENTITY(-534.569, float(mat3x2(-534.569, 1.0, 0.0, 1.0, 1.0, 0.0))))))), -66.75)), _GLF_FUZZED(vec2(-534.569, -66.75))), clamp(clamp(_GLF_FUZZED(vec2(-534.569, -66.75)), _GLF_FUZZED(vec2(_GLF_IDENTITY(-534.569, round(length(normalize(vec2(1.0, 1.0)))) * (_GLF_IDENTITY(-534.569, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-9.3) : _GLF_IDENTITY(-534.569, float(mat3x2(-534.569, 1.0, 0.0, 1.0, 1.0, 0.0))))))), -66.75)), _GLF_FUZZED(vec2(-534.569, -66.75))), clamp(_GLF_FUZZED(vec2(-534.569, -66.75)), _GLF_FUZZED(vec2(_GLF_IDENTITY(-534.569, round(length(normalize(vec2(_GLF_IDENTITY(1.0, float(vec3(1.0, sqrt(0.0), _GLF_ONE(1.0, injectionSwitch.y)))), 1.0)))) * (_GLF_IDENTITY(-534.569, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-9.3) : _GLF_IDENTITY(-534.569, float(mat3x2(-534.569, 1.0, 0.0, 1.0, 1.0, 0.0))))))), -66.75)), _GLF_FUZZED(vec2(-534.569, -66.75))), clamp(_GLF_FUZZED(vec2(-534.569, -66.75)), _GLF_FUZZED(vec2(_GLF_IDENTITY(-534.569, round(length(normalize(vec2(1.0, 1.0)))) * (_GLF_IDENTITY(-534.569, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-9.3) : _GLF_IDENTITY(-534.569, float(mat3x2(-534.569, 1.0, 0.0, 1.0, 1.0, 0.0))))))), -66.75)), _GLF_FUZZED(vec2(-534.569, -66.75)))))) : clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))))), injectionSwitch)).x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(clamp(_GLF_IDENTITY(mat2(1.0), mat2(_GLF_IDENTITY(mat4x3(mat2(1.0)), (mat4x3(mat2(_GLF_IDENTITY(1.0, min(1.0, 1.0))))) * mat4(1.0)))) * (injectionSwitch), mat2(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec3(1.0, 0.0, 1.0), vec3(mat4x2(_GLF_IDENTITY(vec3(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(3.9))), 0.0, 1.0), min(vec3(1.0, 0.0, 1.0), _GLF_IDENTITY(vec3(1.0, 0.0, 1.0), mix(vec3(_GLF_FUZZED(41.44), _GLF_FUZZED((false ? -9.6 : -7.5)), _GLF_FUZZED(1.2)), vec3((vec3(1.0, 0.0, 1.0))[0], (vec3(1.0, 0.0, 1.0))[1], _GLF_IDENTITY((vec3(1.0, 0.0, 1.0))[2], clamp((vec3(1.0, 0.0, 1.0))[2], (vec3(1.0, 0.0, 1.0))[2], (vec3(1.0, 0.0, 1.0))[2]))), bvec3(true, true, true))))), 1.0, 0.0, 1.0, 0.0, 1.0))))), 1.0, _GLF_IDENTITY(1.0, float(mat3(1.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(1.0, float(mat4x3(1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(sqrt(0.0), 1.0, 0.0), vec3(determinant(mat2(0.0, _GLF_IDENTITY(0.0, float(mat2(0.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), 0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(abs(0.0), sqrt(0.0), 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(abs(0.0), sqrt(0.0), 0.0)))))), 1.0, 0.0)), 1.0, length(vec3(0.0, 0.0, 0.0)))), max(_GLF_IDENTITY(dot(vec3(sqrt(0.0), 1.0, 0.0), vec3(determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0, length(vec3(0.0, 0.0, 0.0)))), (_GLF_IDENTITY(dot(vec3(sqrt(0.0), 1.0, 0.0), vec3(determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0, length(vec3(0.0, 0.0, 0.0)))), (true ? dot(vec3(sqrt(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, float(mat3x4(0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0))) : _GLF_FUZZED(-5.1)))))), 1.0, 0.0), vec3(determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0, length(vec3(0.0, 0.0, 0.0)))) : _GLF_FUZZED(7376.0433)))) / round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), _GLF_IDENTITY(dot(vec3(sqrt(0.0), 1.0, 0.0), vec3(determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0, length(vec3(0.0, 0.0, 0.0)))), float(float(dot(vec3(sqrt(0.0), 1.0, 0.0), vec3(determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0, length(vec3(0.0, 0.0, 0.0))))))))), dot(vec3(sqrt(0.0), 1.0, 0.0), _GLF_IDENTITY(vec3(determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0, length(vec3(0.0, 0.0, 0.0))), mix(vec3((vec3(determinant(mat2(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)))), 1.0, length(vec3(0.0, 0.0, 0.0))))[0], _GLF_FUZZED(-0.6), _GLF_FUZZED(3943.3745)), vec3(_GLF_FUZZED(-27.61), (vec3(determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0, length(vec3(0.0, 0.0, 0.0))))[1], (vec3(determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0, length(vec3(0.0, 0.0, 0.0))))[2]), bvec3(false, true, true))))), 1.0, 1.0, 0.0))), 0.0, 0.0)))))) * (injectionSwitch), mat2(_GLF_IDENTITY(1.0, (1.0) - 0.0)) * (injectionSwitch)), (false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(-534.569, -66.75)), _GLF_IDENTITY(clamp(_GLF_FUZZED(vec2(-534.569, -66.75)), _GLF_FUZZED(vec2(_GLF_IDENTITY(-534.569, round(length(normalize(vec2(1.0, 1.0)))) * (_GLF_IDENTITY(-534.569, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-9.3) : _GLF_IDENTITY(-534.569, float(mat3x2(-534.569, 1.0, 0.0, 1.0, 1.0, 0.0))))))), -66.75)), _GLF_FUZZED(vec2(-534.569, -66.75))), clamp(clamp(_GLF_FUZZED(vec2(-534.569, -66.75)), _GLF_FUZZED(vec2(_GLF_IDENTITY(-534.569, round(length(normalize(vec2(1.0, 1.0)))) * (_GLF_IDENTITY(-534.569, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-9.3) : _GLF_IDENTITY(-534.569, float(mat3x2(-534.569, 1.0, 0.0, 1.0, 1.0, 0.0))))))), -66.75)), _GLF_FUZZED(vec2(-534.569, -66.75))), clamp(_GLF_FUZZED(vec2(-534.569, -66.75)), _GLF_FUZZED(vec2(_GLF_IDENTITY(-534.569, round(length(normalize(vec2(_GLF_IDENTITY(1.0, float(vec3(1.0, sqrt(0.0), _GLF_ONE(1.0, injectionSwitch.y)))), 1.0)))) * (_GLF_IDENTITY(-534.569, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-9.3) : _GLF_IDENTITY(-534.569, float(mat3x2(-534.569, 1.0, 0.0, 1.0, 1.0, 0.0))))))), -66.75)), _GLF_FUZZED(vec2(-534.569, -66.75))), clamp(_GLF_FUZZED(vec2(-534.569, -66.75)), _GLF_FUZZED(vec2(_GLF_IDENTITY(-534.569, round(length(normalize(vec2(1.0, 1.0)))) * (_GLF_IDENTITY(-534.569, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-9.3) : _GLF_IDENTITY(-534.569, float(mat3x2(-534.569, 1.0, 0.0, 1.0, 1.0, 0.0))))))), -66.75)), _GLF_FUZZED(vec2(-534.569, -66.75)))))) : clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))))), injectionSwitch)).x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(clamp(_GLF_IDENTITY(mat2(1.0), mat2(_GLF_IDENTITY(mat4x3(mat2(1.0)), (mat4x3(mat2(_GLF_IDENTITY(1.0, min(1.0, 1.0))))) * mat4(1.0)))) * (injectionSwitch), mat2(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec3(1.0, 0.0, 1.0), vec3(mat4x2(_GLF_IDENTITY(vec3(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(3.9))), 0.0, 1.0), min(vec3(1.0, 0.0, 1.0), _GLF_IDENTITY(vec3(1.0, 0.0, 1.0), mix(vec3(_GLF_FUZZED(41.44), _GLF_FUZZED((false ? -9.6 : -7.5)), _GLF_FUZZED(1.2)), vec3((vec3(1.0, 0.0, 1.0))[0], (vec3(1.0, 0.0, 1.0))[1], _GLF_IDENTITY((vec3(1.0, 0.0, 1.0))[2], clamp((vec3(1.0, 0.0, 1.0))[2], (vec3(1.0, 0.0, 1.0))[2], (vec3(1.0, 0.0, 1.0))[2]))), bvec3(true, true, true))))), 1.0, 0.0, 1.0, 0.0, 1.0))))), 1.0, _GLF_IDENTITY(1.0, float(mat3(1.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(1.0, float(mat4x3(1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(sqrt(0.0), 1.0, 0.0), vec3(determinant(mat2(0.0, _GLF_IDENTITY(0.0, float(mat2(0.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), 0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(abs(0.0), sqrt(0.0), 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(abs(0.0), sqrt(0.0), 0.0)))))), 1.0, 0.0)), 1.0, length(vec3(0.0, 0.0, 0.0)))), max(_GLF_IDENTITY(dot(vec3(sqrt(0.0), 1.0, 0.0), vec3(determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0, length(vec3(0.0, 0.0, 0.0)))), (_GLF_IDENTITY(dot(vec3(sqrt(0.0), 1.0, 0.0), vec3(determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0, length(vec3(0.0, 0.0, 0.0)))), (true ? dot(vec3(sqrt(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, float(mat3x4(0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0))) : _GLF_FUZZED(-5.1)))))), 1.0, 0.0), vec3(determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0, length(vec3(0.0, 0.0, 0.0)))) : _GLF_FUZZED(7376.0433)))) / round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), _GLF_IDENTITY(dot(vec3(sqrt(0.0), 1.0, 0.0), vec3(determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0, length(vec3(0.0, 0.0, 0.0)))), float(float(dot(vec3(sqrt(0.0), 1.0, 0.0), vec3(determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0, length(vec3(0.0, 0.0, 0.0))))))))), dot(vec3(sqrt(0.0), 1.0, 0.0), _GLF_IDENTITY(vec3(determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0, length(vec3(0.0, 0.0, 0.0))), mix(vec3((vec3(determinant(mat2(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)))), 1.0, length(vec3(0.0, 0.0, 0.0))))[0], _GLF_FUZZED(-0.6), _GLF_FUZZED(3943.3745)), vec3(_GLF_FUZZED(-27.61), (vec3(determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0, length(vec3(0.0, 0.0, 0.0))))[1], (vec3(determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0, length(vec3(0.0, 0.0, 0.0))))[2]), bvec3(false, true, true))))), 1.0, 1.0, 0.0))), 0.0, 0.0)))))) * (injectionSwitch), mat2(_GLF_IDENTITY(1.0, (1.0) - 0.0)) * (injectionSwitch)), (false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(-534.569, -66.75)), _GLF_IDENTITY(clamp(_GLF_FUZZED(vec2(-534.569, -66.75)), _GLF_FUZZED(vec2(_GLF_IDENTITY(-534.569, round(length(normalize(vec2(1.0, 1.0)))) * (_GLF_IDENTITY(-534.569, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-9.3) : _GLF_IDENTITY(-534.569, float(mat3x2(-534.569, 1.0, 0.0, 1.0, 1.0, 0.0))))))), -66.75)), _GLF_FUZZED(vec2(-534.569, -66.75))), clamp(clamp(_GLF_FUZZED(vec2(-534.569, -66.75)), _GLF_FUZZED(vec2(_GLF_IDENTITY(-534.569, round(length(normalize(vec2(1.0, 1.0)))) * (_GLF_IDENTITY(-534.569, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-9.3) : _GLF_IDENTITY(-534.569, float(mat3x2(-534.569, 1.0, 0.0, 1.0, 1.0, 0.0))))))), -66.75)), _GLF_FUZZED(vec2(-534.569, -66.75))), clamp(_GLF_FUZZED(vec2(-534.569, -66.75)), _GLF_FUZZED(vec2(_GLF_IDENTITY(-534.569, round(length(normalize(vec2(_GLF_IDENTITY(1.0, float(vec3(1.0, sqrt(0.0), _GLF_ONE(1.0, injectionSwitch.y)))), 1.0)))) * (_GLF_IDENTITY(-534.569, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-9.3) : _GLF_IDENTITY(-534.569, float(mat3x2(-534.569, 1.0, 0.0, 1.0, 1.0, 0.0))))))), -66.75)), _GLF_FUZZED(vec2(-534.569, -66.75))), clamp(_GLF_FUZZED(vec2(-534.569, -66.75)), _GLF_FUZZED(vec2(_GLF_IDENTITY(-534.569, round(length(normalize(vec2(1.0, 1.0)))) * (_GLF_IDENTITY(-534.569, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-9.3) : _GLF_IDENTITY(-534.569, float(mat3x2(-534.569, 1.0, 0.0, 1.0, 1.0, 0.0))))))), -66.75)), _GLF_FUZZED(vec2(-534.569, -66.75)))))) : clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))))), injectionSwitch)).x > injectionSwitch.y))) && true), false, true, false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), false)))))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), false || (bool(bvec2(false, false)))))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
}
