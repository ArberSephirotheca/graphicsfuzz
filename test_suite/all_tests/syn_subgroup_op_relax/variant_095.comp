#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_31 {
 uint num_workgroup;
 mat4x3 _f0;
} ;

struct _GLF_struct_28 {
 int _f0;
 bvec3 _f1;
 mat4x2 _f2;
 bvec2 _f3;
 ivec3 _f4;
} ;

struct _GLF_struct_29 {
 bvec4 _f0;
 _GLF_struct_28 _f1;
} ;

struct _GLF_struct_26 {
 mat4 _f0;
 int _f1;
 uint _f2;
 uvec4 _f3;
} ;

struct _GLF_struct_25 {
 mat3x2 _f0;
 uvec2 _f1;
} ;

struct _GLF_struct_27 {
 _GLF_struct_25 _f0;
 _GLF_struct_26 _f1;
} ;

struct _GLF_struct_23 {
 mat2 _f0;
 int _f1;
} ;

struct _GLF_struct_22 {
 uvec4 _f0;
 ivec3 _f1;
 bvec3 _f2;
 ivec2 _f3;
 mat2x3 _f4;
} ;

struct _GLF_struct_24 {
 uvec3 _f0;
 _GLF_struct_22 _f1;
 _GLF_struct_23 _f2;
 float _f3;
 mat4x3 _f4;
} ;

struct _GLF_struct_20 {
 vec3 _f0;
 ivec2 _f1;
 uint _f2;
} ;

struct _GLF_struct_19 {
 vec4 _f0;
 ivec4 _f1;
} ;

struct _GLF_struct_18 {
 uint _f0;
 vec2 _f1;
 mat3 _f2;
 bool _f3;
} ;

struct _GLF_struct_21 {
 _GLF_struct_18 _f0;
 _GLF_struct_19 _f1;
 uint workgroup_id;
 mat3x2 _f2;
 mat3 _f3;
 _GLF_struct_20 _f4;
 vec3 _f5;
} ;

struct _GLF_struct_30 {
 _GLF_struct_21 _f0;
 _GLF_struct_24 _f1;
 _GLF_struct_27 _f2;
 mat2x4 _f3;
 _GLF_struct_29 _f4;
} ;

struct _GLF_struct_15 {
 mat3x4 _f0;
} ;

struct _GLF_struct_16 {
 _GLF_struct_15 _f0;
 uint subgroup_id;
 mat4x2 _f1;
} ;

struct _GLF_struct_13 {
 vec3 _f0;
} ;

struct _GLF_struct_12 {
 mat4x2 _f0;
 int _f1;
 bvec2 _f2;
 int _f3;
 ivec3 _f4;
 vec3 _f5;
 bvec2 _f6;
} ;

struct _GLF_struct_14 {
 _GLF_struct_12 _f0;
 _GLF_struct_13 _f1;
} ;

struct _GLF_struct_10 {
 vec3 _f0;
 bvec3 _f1;
 float _f2;
 int _f3;
} ;

struct _GLF_struct_11 {
 _GLF_struct_10 _f0;
} ;

struct _GLF_struct_8 {
 vec4 _f0;
 mat3 _f1;
 bvec2 _f2;
 mat2x3 _f3;
 mat4x3 _f4;
 mat3x4 _f5;
} ;

struct _GLF_struct_7 {
 mat2x4 _f0;
 mat4x2 _f1;
 bvec3 _f2;
 bvec4 _f3;
 mat3x2 _f4;
 float _f5;
} ;

struct _GLF_struct_9 {
 uint _f0;
 mat4x2 _f1;
 uvec3 _f2;
 _GLF_struct_7 _f3;
 bvec3 _f4;
 _GLF_struct_8 _f5;
} ;

struct _GLF_struct_17 {
 _GLF_struct_9 _f0;
 _GLF_struct_11 _f1;
 _GLF_struct_14 _f2;
 _GLF_struct_16 _f3;
 mat4x2 _f4;
 int _f5;
} ;

struct _GLF_struct_4 {
 mat3x4 _f0;
 uint subgroup_size;
} ;

struct _GLF_struct_5 {
 mat3x2 _f0;
 _GLF_struct_4 _f1;
 mat3x2 _f2;
} ;

struct _GLF_struct_2 {
 ivec3 _f0;
 ivec3 _f1;
 vec4 _f2;
 ivec4 _f3;
 bvec4 _f4;
 mat2x3 _f5;
} ;

struct _GLF_struct_3 {
 mat2x3 _f0;
 _GLF_struct_2 _f1;
 uint _f2;
 vec4 _f3;
} ;

struct _GLF_struct_0 {
 mat4 _f0;
 mat3x2 _f1;
 uvec2 _f2;
 mat3x4 _f3;
 mat2x3 _f4;
 vec4 _f5;
} ;

struct _GLF_struct_1 {
 bvec4 _f0;
 mat4 _f1;
 mat2x3 _f2;
 ivec3 _f3;
 _GLF_struct_0 _f4;
} ;

struct _GLF_struct_6 {
 _GLF_struct_1 _f0;
 _GLF_struct_3 _f1;
 bvec3 _f2;
 ivec4 _f3;
 _GLF_struct_5 _f4;
} ;

layout(set = 0, binding = 0) uniform buf0 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 _GLF_struct_17 _GLF_struct_replacement_17 = _GLF_struct_17(_GLF_struct_9(1u, mat4x2(1.0), uvec3(1u), _GLF_struct_7(mat2x4(1.0), mat4x2(1.0), bvec3(true), bvec4(true), mat3x2(1.0), 1.0), bvec3(true), _GLF_struct_8(vec4(1.0), mat3(1.0), bvec2(true), mat2x3(1.0), mat4x3(1.0), mat3x4(1.0))), _GLF_struct_11(_GLF_struct_10(vec3(1.0), bvec3(true), 1.0, 1)), _GLF_struct_14(_GLF_struct_12(mat4x2(1.0), 1, bvec2(true), 1, ivec3(1), vec3(1.0), bvec2(true)), _GLF_struct_13(vec3(1.0))), _GLF_struct_16(_GLF_struct_15(mat3x4(1.0)), gl_SubgroupID, mat4x2(1.0)), mat4x2(1.0), 1);
 _GLF_struct_6 _GLF_struct_replacement_6 = _GLF_struct_6(_GLF_struct_1(bvec4(true), mat4(1.0), mat2x3(1.0), ivec3(1), _GLF_struct_0(mat4(1.0), mat3x2(1.0), uvec2(1u), mat3x4(1.0), mat2x3(1.0), vec4(1.0))), _GLF_struct_3(mat2x3(1.0), _GLF_struct_2(ivec3(1), ivec3(1), vec4(1.0), ivec4(1), bvec4(true), mat2x3(1.0)), 1u, vec4(1.0)), bvec3(true), ivec4(1), _GLF_struct_5(mat3x2(1.0), _GLF_struct_4(mat3x4(1.0), gl_SubgroupSize), mat3x2(1.0)));
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 _GLF_struct_31 _GLF_struct_replacement_31 = _GLF_struct_31(gl_NumWorkGroups.x, mat4x3(1.0));
 uint workgroup_size = gl_WorkGroupSize.x;
 _GLF_struct_30 _GLF_struct_replacement_30 = _GLF_struct_30(_GLF_struct_21(_GLF_struct_18(1u, vec2(1.0), mat3(1.0), true), _GLF_struct_19(vec4(1.0), ivec4(1)), gl_WorkGroupID.x, mat3x2(1.0), mat3(1.0), _GLF_struct_20(vec3(1.0), ivec2(1), 1u), vec3(1.0)), _GLF_struct_24(uvec3(1u), _GLF_struct_22(uvec4(1u), ivec3(1), bvec3(true), ivec2(1), mat2x3(1.0)), _GLF_struct_23(mat2(1.0), 1), 1.0, mat4x3(1.0)), _GLF_struct_27(_GLF_struct_25(mat3x2(1.0), uvec2(1u)), _GLF_struct_26(mat4(1.0), 1, 1u, uvec4(1u))), mat2x4(1.0), _GLF_struct_29(bvec4(true), _GLF_struct_28(1, bvec3(true), mat4x2(1.0), bvec2(true), ivec3(1))));
 uint workgroup_base = workgroup_size * _GLF_struct_replacement_30._f0.workgroup_id;
 uint virtual_gid = workgroup_base + _GLF_struct_replacement_17._f3.subgroup_id * _GLF_struct_replacement_6._f4._f1.subgroup_size + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + _GLF_struct_replacement_17._f3.subgroup_id * _GLF_struct_replacement_6._f4._f1.subgroup_size + ((subgroup_local_id + 1) % _GLF_struct_replacement_6._f4._f1.subgroup_size);
 buf[virtual_gid] = 1;
 if(_GLF_DEAD(false))
  return;
 if(subgroup_local_id + 1 < _GLF_struct_replacement_6._f4._f1.subgroup_size)
  {
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 0);
   if(_GLF_DEAD(false))
    return;
   subgroupAll(false);
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 0);
   subgroupAll(true);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
}
