#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_25 {
 bvec3 _f0;
 mat3 _f1;
 float _f2;
 bvec4 _f3;
 mat2x4 _f4;
 mat2x4 _f5;
 bool _f6;
} ;

struct _GLF_struct_26 {
 ivec3 _f0;
 mat3x2 _f1;
 _GLF_struct_25 _f2;
} ;

struct _GLF_struct_23 {
 mat3x4 _f0;
 uvec4 _f1;
 bvec3 _f2;
 float _f3;
 bvec2 _f4;
} ;

struct _GLF_struct_22 {
 mat3x2 _f0;
} ;

struct _GLF_struct_21 {
 int _f0;
 mat4x3 _f1;
 float _f2;
} ;

struct _GLF_struct_20 {
 ivec4 _f0;
 uint _f1;
 mat2x4 _f2;
 vec2 _f3;
 mat4x2 _f4;
 bvec4 _f5;
 mat4 _f6;
} ;

struct _GLF_struct_24 {
 _GLF_struct_20 _f0;
 _GLF_struct_21 _f1;
 _GLF_struct_22 _f2;
 uint subgroup_local_id;
 _GLF_struct_23 _f3;
 ivec3 _f4;
} ;

struct _GLF_struct_18 {
 mat2x4 _f0;
 float _f1;
 uvec4 _f2;
} ;

struct _GLF_struct_19 {
 vec3 _f0;
 mat3x4 _f1;
 _GLF_struct_18 _f2;
 uint _f3;
 mat4x3 _f4;
} ;

struct _GLF_struct_27 {
 _GLF_struct_19 _f0;
 _GLF_struct_24 _f1;
 bool _f2;
 _GLF_struct_26 _f3;
 mat2x4 _f4;
 mat3x2 _f5;
} ;

struct _GLF_struct_15 {
 uint _f0;
 mat4x2 _f1;
 uvec3 _f2;
 vec4 _f3;
} ;

struct _GLF_struct_14 {
 uvec4 _f0;
 uvec3 _f1;
 uvec4 _f2;
 bvec4 _f3;
 mat3 _f4;
 bvec4 _f5;
} ;

struct _GLF_struct_16 {
 ivec2 _f0;
 uvec4 _f1;
 _GLF_struct_14 _f2;
 _GLF_struct_15 _f3;
 uint workgroup_base;
} ;

struct _GLF_struct_17 {
 _GLF_struct_16 _f0;
} ;

struct _GLF_struct_11 {
 mat3x4 _f0;
 mat3 _f1;
 mat2 _f2;
 ivec3 _f3;
} ;

struct _GLF_struct_12 {
 ivec2 _f0;
 _GLF_struct_11 _f1;
 bvec2 _f2;
 bool _f3;
 vec2 _f4;
 bvec3 _f5;
} ;

struct _GLF_struct_10 {
 uvec2 _f0;
 uvec3 _f1;
} ;

struct _GLF_struct_8 {
 bvec4 _f0;
 mat3 _f1;
 int _f2;
 mat3 _f3;
 mat4x2 _f4;
 mat2 _f5;
 mat3x4 _f6;
} ;

struct _GLF_struct_9 {
 mat4 _f0;
 _GLF_struct_8 _f1;
} ;

struct _GLF_struct_13 {
 mat3x4 _f0;
 mat4 _f1;
 _GLF_struct_9 _f2;
 _GLF_struct_10 _f3;
 mat2x4 _f4;
 _GLF_struct_12 _f5;
 mat2 _f6;
 uvec2 GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id;
} ;

struct _GLF_struct_5 {
 mat4 _f0;
 bvec4 _f1;
 mat2x4 _f2;
 float _f3;
} ;

struct _GLF_struct_4 {
 mat2x3 _f0;
 bvec3 _f1;
 mat3x4 _f2;
} ;

struct _GLF_struct_3 {
 vec3 _f0;
} ;

struct _GLF_struct_6 {
 _GLF_struct_3 _f0;
 uint subgroup_size;
 _GLF_struct_4 _f1;
 _GLF_struct_5 _f2;
} ;

struct _GLF_struct_7 {
 _GLF_struct_6 _f0;
} ;

struct _GLF_struct_0 {
 bvec2 _f0;
 ivec2 _f1;
 ivec3 _f2;
} ;

struct _GLF_struct_1 {
 _GLF_struct_0 _f0;
 uvec4 _f1;
} ;

struct _GLF_struct_2 {
 ivec4 _f0;
 uint workgroup_size;
 _GLF_struct_1 _f1;
 ivec4 _f2;
 mat3 _f3;
 mat2x3 _f4;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec2 GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gid;
 _GLF_struct_13 _GLF_struct_replacement_13;
 uint subgroup_id = gl_SubgroupID;
 _GLF_struct_replacement_13.GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id.y = subgroup_id;
 _GLF_struct_7 _GLF_struct_replacement_7 = _GLF_struct_7(_GLF_struct_6(_GLF_struct_3(vec3(1.0)), gl_SubgroupSize, _GLF_struct_4(mat2x3(1.0), bvec3(true), mat3x4(1.0)), _GLF_struct_5(mat4(1.0), bvec4(true), mat2x4(1.0), 1.0)));
 _GLF_struct_27 _GLF_struct_replacement_27 = _GLF_struct_27(_GLF_struct_19(vec3(1.0), mat3x4(1.0), _GLF_struct_18(mat2x4(1.0), 1.0, uvec4(1u)), 1u, mat4x3(1.0)), _GLF_struct_24(_GLF_struct_20(ivec4(1), 1u, mat2x4(1.0), vec2(1.0), mat4x2(1.0), bvec4(true), mat4(1.0)), _GLF_struct_21(1, mat4x3(1.0), 1.0), _GLF_struct_22(mat3x2(1.0)), gl_SubgroupInvocationID, _GLF_struct_23(mat3x4(1.0), uvec4(1u), bvec3(true), 1.0, bvec2(true)), ivec3(1)), true, _GLF_struct_26(ivec3(1), mat3x2(1.0), _GLF_struct_25(bvec3(true), mat3(1.0), 1.0, bvec4(true), mat2x4(1.0), mat2x4(1.0), true)), mat2x4(1.0), mat3x2(1.0));
 uint num_workgroup = gl_NumWorkGroups.x;
 GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gid.x = num_workgroup;
 _GLF_struct_2 _GLF_struct_replacement_2 = _GLF_struct_2(ivec4(1), gl_WorkGroupSize.x, _GLF_struct_1(_GLF_struct_0(bvec2(true), ivec2(1), ivec3(1)), uvec4(1u)), ivec4(1), mat3(1.0), mat2x3(1.0));
 uint workgroup_id = gl_WorkGroupID.x;
 _GLF_struct_17 _GLF_struct_replacement_17 = _GLF_struct_17(_GLF_struct_16(ivec2(1), uvec4(1u), _GLF_struct_14(uvec4(1u), uvec3(1u), uvec4(1u), bvec4(true), mat3(1.0), bvec4(true)), _GLF_struct_15(1u, mat4x2(1.0), uvec3(1u), vec4(1.0)), _GLF_struct_replacement_2.workgroup_size * workgroup_id));
 uint virtual_gid = _GLF_struct_replacement_17._f0.workgroup_base + _GLF_struct_replacement_13.GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id.y * _GLF_struct_replacement_7._f0.subgroup_size + _GLF_struct_replacement_27._f1.subgroup_local_id;
 GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gid.y = virtual_gid;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))
  barrier();
 uint next_virtual_gid = _GLF_struct_replacement_17._f0.workgroup_base + _GLF_struct_replacement_13.GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id.y * _GLF_struct_replacement_7._f0.subgroup_size + ((_GLF_struct_replacement_27._f1.subgroup_local_id + 1) % _GLF_struct_replacement_7._f0.subgroup_size);
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_replacement_13.GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id.x = next_virtual_gid;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 buf[GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gid.y] = 1;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_struct_replacement_27._f1.subgroup_local_id + 1 < _GLF_struct_replacement_7._f0.subgroup_size)
  {
   atomicStore(buf[_GLF_struct_replacement_13.GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id.x], uint(2), 4, 64, 0);
   subgroupAll(false);
  }
 else
  {
   atomicStore(buf[_GLF_struct_replacement_13.GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id.x], uint(2), 4, 64, 0);
   subgroupAll(true);
  }
}
