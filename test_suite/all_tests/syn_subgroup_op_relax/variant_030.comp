#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_DEAD(false), false), _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))), bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(false, (false) || false)), false), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(_GLF_DEAD(false), false), false)), bvec3(bvec3(bvec3(bvec3(bvec2(_GLF_DEAD(false), false), false))))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(false, (false) || false)), false), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(_GLF_DEAD(false), false), false)), bvec3(bvec3(bvec3(bvec3(bvec2(_GLF_DEAD(false), false), false))))))), true))), true)))), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_DEAD(false), false), _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(false, (false) || false)), false), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(_GLF_DEAD(false), false), false)), bvec3(bvec3(bvec3(bvec3(bvec2(_GLF_DEAD(false), false), false))))))), true)))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED((injectionSwitch + 1.8)))))).x < injectionSwitch.y)))), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_DEAD(false), false), _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(false, (false) || false)), false), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(_GLF_DEAD(false), false), false)), bvec3(bvec3(bvec3(bvec3(bvec2(_GLF_DEAD(false), false), _GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))))))), true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_DEAD(false), false), _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(false, (false) || false)), false), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(_GLF_DEAD(false), false), false)), bvec3(bvec3(bvec3(bvec3(bvec2(_GLF_DEAD(false), false), _GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))))))), true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), bvec2(bvec3(bvec2(bvec2(bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_DEAD(false), false), false)), bvec2(bvec4(bvec2(bvec3(bvec2(_GLF_DEAD(false), false), false)), true, true))))))), _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(false, (false) || false)), false), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(_GLF_DEAD(false), false), false)), bvec3(bvec3(bvec3(bvec3(bvec2(_GLF_DEAD(false), false), false))))))), true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false)))))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bvec2(false, _GLF_IDENTITY(true, ! (! (true)))))), true, false, false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))) || false)) || false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec4(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, true, false)), bool(bvec3(bool(bvec4(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))), false, true, false)), false, false)))), (_GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, true, false)), ! (! (bool(bvec4(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, true, false))))), bool(bvec3(bool(bvec4(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sin(vec2(0.0, 0.0))).x > injectionSwitch.y)))))), false, true, false)), false, false))))) || false)))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).y))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))) || false))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, true)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), true && (_GLF_IDENTITY((_GLF_DEAD(false)), (_GLF_IDENTITY((_GLF_DEAD(false)), false || ((_GLF_DEAD(false))))) && true))) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true), true && (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))), ((_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))) || false)))), false || (! (_GLF_DEAD(false)))))))))
          barrier();
         barrier();
        }
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), false || (! (_GLF_IDENTITY(false, ! (! (false)))))))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y)))) && true))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)))))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false, false, false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uvec2 GLF_merged2_0_1_3_1_1_17gidsubgroup_local_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(7351.0876), _GLF_FUZZED(8.4)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), injectionSwitch)).y, min(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(7351.0876), _GLF_FUZZED(8.4)), vec2(mat3x4(vec2(_GLF_FUZZED(7351.0876), _GLF_FUZZED(8.4)), 1.0, 1.0, cos(0.0), 0.0, 1.0, 1.0, 1.0, log(1.0), sqrt(0.0), 0.0))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(7351.0876), _GLF_FUZZED(8.4)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), injectionSwitch)).y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), (_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, bool(bvec2(true, false)))))) || false))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, true)), bool(bool(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, true))))))))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))
  barrier();
 uint gid = _GLF_IDENTITY(gl_GlobalInvocationID.x, min(gl_GlobalInvocationID.x, _GLF_IDENTITY(gl_GlobalInvocationID.x, (true ? _GLF_IDENTITY(gl_GlobalInvocationID.x, (_GLF_IDENTITY(gl_GlobalInvocationID.x, (_GLF_IDENTITY(gl_GlobalInvocationID, (_GLF_IDENTITY(_GLF_IDENTITY(gl_GlobalInvocationID, uvec3(gl_GlobalInvocationID[0], gl_GlobalInvocationID[1], gl_GlobalInvocationID[2])), uvec3(uvec4(gl_GlobalInvocationID, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))) * vec2(1.0, 1.0)))).x)))))) | uvec3(0u, 0u, 0u)).x) / 1u)) << 0u) : _GLF_FUZZED(subgroup_id)))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) && true, _GLF_IDENTITY(bool(bool((_GLF_DEAD(false)) && true)), (bool(bool((_GLF_DEAD(false)) && true))) && true)))))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), false || ((injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   for(int _injected_loop_counter = _GLF_IDENTITY(((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec3(1, 0, _GLF_IDENTITY(1, min(1, 1)))), _GLF_IDENTITY((_GLF_IDENTITY(int(ivec3(1, 0, 1)), int(ivec4(int(ivec3(1, 0, 1)), 1, 1, 1)))), ((_GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(1, 0, 1), (ivec3(1, 0, 1)) ^ ivec3(0, 0, 0))), int(ivec4(int(ivec3(1, 0, 1)), 1, 1, 1))))) | ((_GLF_IDENTITY(int(ivec3(1, 0, 1)), int(ivec4(int(ivec3(1, 0, 1)), 1, _GLF_IDENTITY(1, (1) << ((76205 & 0) << _GLF_IDENTITY(int(3), int(3)))), 1)))))) / 1))) * 1) << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(ivec3(int(0), 1, 0)), min(int(ivec3(int(0), 1, 0)), int(ivec3(int(0), 1, _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, int(ivec3(0, 1, _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(abs(-30271))))))), _GLF_IDENTITY(0, clamp(0, 0, 0))))))))))), (true ? ((_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec3(1, 0, _GLF_IDENTITY(1, min(1, 1)))), _GLF_IDENTITY((_GLF_IDENTITY(int(ivec3(1, 0, 1)), int(ivec4(int(ivec3(1, 0, 1)), 1, 1, 1)))), ((_GLF_IDENTITY(int(ivec3(1, 0, 1)), int(ivec4(int(ivec3(1, 0, 1)), 1, 1, 1))))) | ((_GLF_IDENTITY(int(ivec3(1, 0, 1)), int(ivec4(int(ivec3(1, 0, 1)), 1, 1, 1)))))) / 1)), max(_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec3(1, 0, _GLF_IDENTITY(1, min(1, 1)))), _GLF_IDENTITY((_GLF_IDENTITY(int(ivec3(1, 0, 1)), int(ivec4(int(ivec3(1, 0, 1)), 1, 1, 1)))), ((_GLF_IDENTITY(int(ivec3(1, 0, 1)), int(ivec4(int(ivec3(1, 0, 1)), 1, 1, 1))))) | ((_GLF_IDENTITY(int(ivec3(1, 0, 1)), int(ivec4(int(ivec3(1, 0, 1)), 1, 1, 1)))))) / 1)), _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec3(1, 0, _GLF_IDENTITY(1, min(1, 1)))), _GLF_IDENTITY((_GLF_IDENTITY(int(ivec3(1, 0, 1)), int(ivec4(int(ivec3(1, 0, 1)), 1, 1, 1)))), ((_GLF_IDENTITY(int(ivec3(1, 0, 1)), int(ivec4(int(ivec3(1, 0, 1)), 1, 1, 1))))) | ((_GLF_IDENTITY(int(ivec3(1, 0, 1)), int(ivec4(int(ivec3(1, 0, 1)), 1, 1, 1)))))) / 1)), ~ (~ (_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec3(1, 0, _GLF_IDENTITY(1, min(1, 1)))), _GLF_IDENTITY((_GLF_IDENTITY(int(ivec3(1, 0, 1)), int(ivec4(int(ivec3(1, 0, 1)), 1, 1, 1)))), ((_GLF_IDENTITY(int(ivec3(1, 0, 1)), int(ivec4(int(ivec3(1, 0, 1)), 1, 1, 1))))) | ((_GLF_IDENTITY(int(ivec3(1, 0, 1)), int(ivec4(int(ivec3(1, 0, 1)), 1, 1, 1)))))) / 1)))))))) * 1) << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(ivec3(int(0), 1, 0)), min(int(ivec3(int(0), 1, 0)), int(ivec3(int(0), 1, _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, int(ivec3(0, 1, _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(abs(-30271))))))), _GLF_IDENTITY(0, clamp(0, 0, 0))))))))))) : _GLF_FUZZED(bitfieldReverse(84763)))); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 >> _GLF_IDENTITY(int(5), int(5)))); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false, false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, false)), ! (! (bool(bvec4(false, false, false, false))))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)) || false))
  barrier();
 GLF_merged2_0_1_3_1_1_17gidsubgroup_local_id.x = gid;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(fma(vec4(-8.6, -9.8, -1.8, -600.256)[1], -450.780, -1.3)) : injectionSwitch.x)), min(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(fma(_GLF_IDENTITY(vec4(-8.6, -9.8, -1.8, -600.256), (vec4(-8.6, -9.8, -1.8, -600.256)) + vec4(0.0, 0.0, 0.0, 0.0))[1], -450.780, -1.3)) : injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED(fma(_GLF_IDENTITY(vec4(-8.6, -9.8, -1.8, _GLF_IDENTITY(-600.256, clamp(_GLF_IDENTITY(-600.256, _GLF_IDENTITY(float(vec4(-600.256, 0.0, 1.0, 1.0)), max(float(vec4(-600.256, 0.0, 1.0, 1.0)), float(vec4(-600.256, 0.0, 1.0, 1.0))))), -600.256, -600.256)))[1], float(mat2x4(_GLF_IDENTITY(vec4(-8.6, -9.8, -1.8, -600.256)[1], float(_GLF_IDENTITY(mat3(vec4(-8.6, -9.8, -1.8, -600.256)[1], 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0), transpose(transpose(mat3(vec4(-8.6, -9.8, -1.8, -600.256)[1], 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0)))))), abs(0.0), 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), determinant(mat2(1.0, 0.0, 1.0, 1.0)), sqrt(cos(0.0)), 1.0, 1.0))), -450.780, -1.3)) : injectionSwitch.x, min(false ? _GLF_FUZZED(fma(_GLF_IDENTITY(vec4(-8.6, -9.8, -1.8, _GLF_IDENTITY(-600.256, clamp(_GLF_IDENTITY(-600.256, _GLF_IDENTITY(float(vec4(-600.256, 0.0, 1.0, 1.0)), max(float(vec4(-600.256, 0.0, 1.0, 1.0)), float(vec4(-600.256, 0.0, 1.0, 1.0))))), -600.256, -600.256)))[1], float(mat2x4(_GLF_IDENTITY(vec4(-8.6, -9.8, -1.8, -600.256)[1], float(_GLF_IDENTITY(mat3(vec4(-8.6, -9.8, -1.8, -600.256)[1], 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0), transpose(transpose(mat3(vec4(-8.6, -9.8, -1.8, -600.256)[1], 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0)))))), abs(0.0), 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), determinant(mat2(1.0, 0.0, 1.0, 1.0)), sqrt(cos(0.0)), 1.0, 1.0))), -450.780, -1.3)) : injectionSwitch.x, false ? _GLF_FUZZED(fma(_GLF_IDENTITY(vec4(-8.6, -9.8, -1.8, _GLF_IDENTITY(-600.256, clamp(_GLF_IDENTITY(-600.256, _GLF_IDENTITY(float(vec4(-600.256, 0.0, 1.0, 1.0)), max(float(vec4(-600.256, 0.0, 1.0, 1.0)), float(vec4(-600.256, 0.0, 1.0, 1.0))))), -600.256, -600.256)))[1], float(mat2x4(_GLF_IDENTITY(vec4(-8.6, -9.8, -1.8, -600.256)[1], float(_GLF_IDENTITY(mat3(vec4(-8.6, -9.8, -1.8, -600.256)[1], 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0), transpose(transpose(mat3(vec4(-8.6, -9.8, -1.8, -600.256)[1], 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0)))))), abs(0.0), 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), determinant(mat2(1.0, 0.0, 1.0, 1.0)), sqrt(cos(0.0)), 1.0, 1.0))), -450.780, -1.3)) : injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(fma(_GLF_IDENTITY(vec4(-8.6, -9.8, -1.8, -600.256)[1], float(mat2x4(_GLF_IDENTITY(vec4(-8.6, -9.8, -1.8, -600.256)[1], float(_GLF_IDENTITY(mat3(vec4(-8.6, -9.8, -1.8, -600.256)[1], 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0), transpose(transpose(mat3(vec4(-8.6, -9.8, -1.8, -600.256)[1], 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0)))))), abs(0.0), 0.0, 1.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), sqrt(cos(0.0)), 1.0, 1.0))), -450.780, -1.3)) : injectionSwitch.x) - 0.0, max(_GLF_IDENTITY((false ? _GLF_FUZZED(fma(_GLF_IDENTITY(vec4(-8.6, -9.8, -1.8, -600.256)[1], float(mat2x4(_GLF_IDENTITY(vec4(-8.6, -9.8, -1.8, -600.256)[1], float(_GLF_IDENTITY(mat3(vec4(-8.6, -9.8, -1.8, -600.256)[1], 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0), transpose(transpose(mat3(vec4(-8.6, -9.8, -1.8, -600.256)[1], 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0)))))), abs(0.0), 0.0, 1.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), sqrt(cos(0.0)), 1.0, 1.0))), -450.780, -1.3)) : injectionSwitch.x) - 0.0, max((false ? _GLF_FUZZED(fma(_GLF_IDENTITY(vec4(-8.6, -9.8, -1.8, -600.256)[1], float(mat2x4(_GLF_IDENTITY(vec4(-8.6, -9.8, -1.8, -600.256)[1], float(_GLF_IDENTITY(mat3(vec4(-8.6, -9.8, -1.8, -600.256)[1], 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0), transpose(transpose(mat3(vec4(-8.6, -9.8, -1.8, -600.256)[1], 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0)))))), abs(0.0), 0.0, 1.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), sqrt(cos(0.0)), 1.0, 1.0))), -450.780, -1.3)) : injectionSwitch.x) - 0.0, _GLF_IDENTITY((false ? _GLF_FUZZED(fma(_GLF_IDENTITY(vec4(-8.6, -9.8, -1.8, -600.256)[1], float(mat2x4(_GLF_IDENTITY(vec4(-8.6, -9.8, -1.8, -600.256)[1], float(_GLF_IDENTITY(mat3(vec4(-8.6, -9.8, -1.8, -600.256)[1], 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0), transpose(transpose(mat3(vec4(-8.6, -9.8, -1.8, -600.256)[1], 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0)))))), abs(0.0), 0.0, 1.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), sqrt(cos(0.0)), 1.0, 1.0))), -450.780, -1.3)) : injectionSwitch.x) - 0.0, float(vec4((false ? _GLF_FUZZED(fma(_GLF_IDENTITY(vec4(-8.6, -9.8, -1.8, -600.256)[1], float(mat2x4(_GLF_IDENTITY(vec4(-8.6, -9.8, -1.8, -600.256)[1], float(_GLF_IDENTITY(mat3(vec4(-8.6, -9.8, -1.8, -600.256)[1], 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0), transpose(transpose(mat3(vec4(-8.6, -9.8, -1.8, -600.256)[1], 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0)))))), abs(0.0), 0.0, 1.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), sqrt(cos(0.0)), 1.0, 1.0))), -450.780, -1.3)) : injectionSwitch.x) - 0.0, 1.0, 0.0, 0.0))))), (false ? _GLF_FUZZED(fma(_GLF_IDENTITY(vec4(-8.6, -9.8, -1.8, -600.256)[1], float(mat2x4(_GLF_IDENTITY(vec4(-8.6, -9.8, -1.8, -600.256)[1], float(_GLF_IDENTITY(mat3(vec4(-8.6, -9.8, -1.8, -600.256)[1], 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0), transpose(transpose(mat3(vec4(-8.6, -9.8, -1.8, -600.256)[1], 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0)))))), abs(0.0), 0.0, 1.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), sqrt(cos(0.0)), 1.0, 1.0))), -450.780, -1.3)) : injectionSwitch.x) - 0.0)), clamp(_GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(fma(_GLF_IDENTITY(vec4(-8.6, -9.8, -1.8, -600.256)[1], float(mat2x4(_GLF_IDENTITY(vec4(-8.6, -9.8, -1.8, -600.256)[1], float(_GLF_IDENTITY(mat3(vec4(-8.6, -9.8, -1.8, -600.256)[1], 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0), transpose(transpose(mat3(vec4(-8.6, -9.8, -1.8, -600.256)[1], 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0)))))), abs(0.0), 0.0, 1.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), sqrt(cos(0.0)), 1.0, 1.0))), -450.780, -1.3)) : injectionSwitch.x) - 0.0, max(_GLF_IDENTITY((false ? _GLF_FUZZED(fma(_GLF_IDENTITY(vec4(-8.6, -9.8, -1.8, -600.256)[1], float(mat2x4(_GLF_IDENTITY(vec4(-8.6, -9.8, -1.8, -600.256)[1], float(_GLF_IDENTITY(mat3(vec4(-8.6, -9.8, -1.8, -600.256)[1], 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0), transpose(transpose(mat3(vec4(-8.6, -9.8, -1.8, -600.256)[1], 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0)))))), abs(0.0), 0.0, 1.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), sqrt(cos(0.0)), 1.0, 1.0))), -450.780, -1.3)) : injectionSwitch.x) - 0.0, max((false ? _GLF_FUZZED(fma(_GLF_IDENTITY(vec4(-8.6, -9.8, -1.8, -600.256)[1], float(mat2x4(_GLF_IDENTITY(vec4(-8.6, -9.8, -1.8, -600.256)[1], float(_GLF_IDENTITY(mat3(vec4(-8.6, -9.8, -1.8, -600.256)[1], 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0), transpose(transpose(mat3(vec4(-8.6, -9.8, -1.8, -600.256)[1], 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0)))))), abs(0.0), 0.0, 1.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), sqrt(cos(0.0)), 1.0, 1.0))), -450.780, -1.3)) : injectionSwitch.x) - 0.0, _GLF_IDENTITY((false ? _GLF_FUZZED(fma(_GLF_IDENTITY(vec4(-8.6, -9.8, -1.8, -600.256)[1], float(mat2x4(_GLF_IDENTITY(vec4(-8.6, -9.8, -1.8, -600.256)[1], float(_GLF_IDENTITY(mat3(vec4(-8.6, -9.8, -1.8, -600.256)[1], 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0), transpose(transpose(mat3(vec4(-8.6, -9.8, -1.8, -600.256)[1], 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0)))))), abs(0.0), 0.0, 1.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), sqrt(cos(0.0)), 1.0, 1.0))), -450.780, -1.3)) : injectionSwitch.x) - 0.0, float(vec4((false ? _GLF_FUZZED(fma(_GLF_IDENTITY(vec4(-8.6, -9.8, -1.8, -600.256)[1], float(mat2x4(_GLF_IDENTITY(vec4(-8.6, -9.8, -1.8, -600.256)[1], float(_GLF_IDENTITY(mat3(vec4(-8.6, -9.8, -1.8, -600.256)[1], 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0), transpose(transpose(mat3(vec4(-8.6, -9.8, -1.8, -600.256)[1], 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0)))))), abs(0.0), 0.0, 1.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), sqrt(cos(0.0)), 1.0, 1.0))), -450.780, -1.3)) : injectionSwitch.x) - 0.0, 1.0, 0.0, 0.0))))), (false ? _GLF_FUZZED(fma(_GLF_IDENTITY(vec4(-8.6, -9.8, -1.8, -600.256)[1], float(mat2x4(_GLF_IDENTITY(vec4(-8.6, -9.8, -1.8, -600.256)[1], float(_GLF_IDENTITY(mat3(vec4(-8.6, -9.8, -1.8, -600.256)[1], 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0), transpose(transpose(mat3(vec4(-8.6, -9.8, -1.8, -600.256)[1], 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0)))))), abs(0.0), 0.0, 1.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), sqrt(cos(0.0)), 1.0, 1.0))), -450.780, -1.3)) : injectionSwitch.x) - 0.0)), (_GLF_IDENTITY((false ? _GLF_FUZZED(fma(_GLF_IDENTITY(vec4(-8.6, -9.8, -1.8, -600.256)[1], float(mat2x4(_GLF_IDENTITY(vec4(-8.6, -9.8, -1.8, -600.256)[1], float(_GLF_IDENTITY(mat3(vec4(-8.6, -9.8, -1.8, -600.256)[1], 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0), transpose(transpose(mat3(vec4(-8.6, -9.8, -1.8, -600.256)[1], 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0)))))), abs(0.0), 0.0, 1.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), sqrt(cos(0.0)), 1.0, 1.0))), -450.780, -1.3)) : injectionSwitch.x) - 0.0, max(_GLF_IDENTITY((false ? _GLF_FUZZED(fma(_GLF_IDENTITY(vec4(-8.6, -9.8, -1.8, -600.256)[1], float(mat2x4(_GLF_IDENTITY(vec4(-8.6, -9.8, -1.8, -600.256)[1], float(_GLF_IDENTITY(mat3(vec4(-8.6, -9.8, -1.8, -600.256)[1], 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0), transpose(transpose(mat3(vec4(-8.6, -9.8, -1.8, -600.256)[1], 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0)))))), abs(0.0), 0.0, 1.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), sqrt(cos(0.0)), 1.0, 1.0))), -450.780, -1.3)) : injectionSwitch.x) - 0.0, max((false ? _GLF_FUZZED(fma(_GLF_IDENTITY(vec4(-8.6, -9.8, -1.8, -600.256)[1], float(mat2x4(_GLF_IDENTITY(vec4(-8.6, -9.8, -1.8, -600.256)[1], float(_GLF_IDENTITY(mat3(vec4(-8.6, -9.8, -1.8, -600.256)[1], 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0), transpose(transpose(mat3(vec4(-8.6, -9.8, -1.8, -600.256)[1], 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0)))))), abs(0.0), 0.0, 1.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), sqrt(cos(0.0)), 1.0, 1.0))), -450.780, -1.3)) : injectionSwitch.x) - 0.0, _GLF_IDENTITY((false ? _GLF_FUZZED(fma(_GLF_IDENTITY(vec4(-8.6, -9.8, -1.8, -600.256)[1], float(mat2x4(_GLF_IDENTITY(vec4(-8.6, -9.8, -1.8, -600.256)[1], float(_GLF_IDENTITY(mat3(vec4(-8.6, -9.8, -1.8, -600.256)[1], 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0), transpose(transpose(mat3(vec4(-8.6, -9.8, -1.8, -600.256)[1], 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0)))))), abs(0.0), 0.0, 1.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), sqrt(cos(0.0)), 1.0, 1.0))), -450.780, -1.3)) : injectionSwitch.x) - 0.0, float(vec4((false ? _GLF_FUZZED(fma(_GLF_IDENTITY(vec4(-8.6, -9.8, -1.8, -600.256)[1], float(mat2x4(_GLF_IDENTITY(vec4(-8.6, -9.8, -1.8, -600.256)[1], float(_GLF_IDENTITY(mat3(vec4(-8.6, -9.8, -1.8, -600.256)[1], 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0), transpose(transpose(mat3(vec4(-8.6, -9.8, -1.8, -600.256)[1], 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0)))))), abs(0.0), 0.0, 1.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), sqrt(cos(0.0)), 1.0, 1.0))), -450.780, -1.3)) : injectionSwitch.x) - 0.0, 1.0, 0.0, 0.0))))), (false ? _GLF_FUZZED(fma(_GLF_IDENTITY(vec4(-8.6, -9.8, -1.8, -600.256)[1], float(mat2x4(_GLF_IDENTITY(vec4(-8.6, -9.8, -1.8, -600.256)[1], float(_GLF_IDENTITY(mat3(vec4(-8.6, -9.8, -1.8, -600.256)[1], 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0), transpose(transpose(mat3(vec4(-8.6, -9.8, -1.8, -600.256)[1], 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0)))))), abs(0.0), 0.0, 1.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), sqrt(cos(0.0)), 1.0, 1.0))), -450.780, -1.3)) : injectionSwitch.x) - 0.0))) + 0.0), _GLF_IDENTITY((false ? _GLF_FUZZED(fma(_GLF_IDENTITY(vec4(-8.6, -9.8, -1.8, -600.256)[1], float(mat2x4(_GLF_IDENTITY(vec4(-8.6, -9.8, -1.8, -600.256)[1], float(_GLF_IDENTITY(mat3(vec4(-8.6, -9.8, -1.8, -600.256)[1], 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0), transpose(transpose(mat3(vec4(-8.6, -9.8, -1.8, -600.256)[1], 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0)))))), abs(0.0), 0.0, 1.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), sqrt(cos(0.0)), 1.0, 1.0))), -450.780, -1.3)) : injectionSwitch.x) - 0.0, max(_GLF_IDENTITY((false ? _GLF_FUZZED(fma(_GLF_IDENTITY(vec4(-8.6, -9.8, -1.8, -600.256)[1], float(mat2x4(_GLF_IDENTITY(vec4(-8.6, -9.8, -1.8, -600.256)[1], float(_GLF_IDENTITY(mat3(vec4(-8.6, -9.8, -1.8, -600.256)[1], 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0), transpose(transpose(mat3(vec4(-8.6, -9.8, -1.8, -600.256)[1], 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0)))))), abs(0.0), 0.0, 1.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), sqrt(cos(0.0)), 1.0, 1.0))), -450.780, -1.3)) : injectionSwitch.x) - 0.0, max((false ? _GLF_FUZZED(fma(_GLF_IDENTITY(vec4(-8.6, -9.8, -1.8, -600.256)[1], float(mat2x4(_GLF_IDENTITY(vec4(-8.6, -9.8, -1.8, -600.256)[1], float(_GLF_IDENTITY(mat3(vec4(-8.6, -9.8, -1.8, -600.256)[1], 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0), transpose(transpose(mat3(vec4(-8.6, -9.8, -1.8, -600.256)[1], 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0)))))), abs(0.0), 0.0, 1.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), sqrt(cos(0.0)), 1.0, 1.0))), -450.780, -1.3)) : injectionSwitch.x) - 0.0, _GLF_IDENTITY((false ? _GLF_FUZZED(fma(_GLF_IDENTITY(vec4(-8.6, -9.8, -1.8, -600.256)[1], float(mat2x4(_GLF_IDENTITY(vec4(-8.6, -9.8, -1.8, -600.256)[1], float(_GLF_IDENTITY(mat3(vec4(-8.6, -9.8, -1.8, -600.256)[1], 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0), transpose(transpose(mat3(vec4(-8.6, -9.8, -1.8, -600.256)[1], 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0)))))), abs(0.0), 0.0, 1.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), sqrt(cos(0.0)), 1.0, 1.0))), -450.780, -1.3)) : injectionSwitch.x) - 0.0, float(vec4((false ? _GLF_FUZZED(fma(_GLF_IDENTITY(vec4(-8.6, -9.8, -1.8, -600.256)[1], float(mat2x4(_GLF_IDENTITY(vec4(-8.6, -9.8, -1.8, -600.256)[1], float(_GLF_IDENTITY(mat3(vec4(-8.6, -9.8, -1.8, -600.256)[1], 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0), transpose(transpose(mat3(vec4(-8.6, -9.8, -1.8, -600.256)[1], 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0)))))), abs(0.0), 0.0, 1.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), sqrt(cos(0.0)), 1.0, 1.0))), -450.780, -1.3)) : injectionSwitch.x) - 0.0, 1.0, 0.0, 0.0))))), (false ? _GLF_FUZZED(fma(_GLF_IDENTITY(vec4(-8.6, -9.8, -1.8, -600.256)[1], float(mat2x4(_GLF_IDENTITY(vec4(-8.6, -9.8, -1.8, -600.256)[1], float(_GLF_IDENTITY(mat3(vec4(-8.6, -9.8, -1.8, -600.256)[1], 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0), transpose(transpose(mat3(vec4(-8.6, -9.8, -1.8, -600.256)[1], 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0)))))), abs(0.0), 0.0, 1.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), sqrt(cos(0.0)), 1.0, 1.0))), -450.780, -1.3)) : injectionSwitch.x) - 0.0)), _GLF_IDENTITY((false ? _GLF_FUZZED(fma(_GLF_IDENTITY(vec4(-8.6, -9.8, -1.8, -600.256)[1], float(mat2x4(_GLF_IDENTITY(vec4(-8.6, -9.8, -1.8, -600.256)[1], float(_GLF_IDENTITY(mat3(vec4(-8.6, -9.8, -1.8, -600.256)[1], 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0), transpose(transpose(mat3(vec4(-8.6, -9.8, -1.8, -600.256)[1], 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0)))))), abs(0.0), 0.0, 1.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), sqrt(cos(0.0)), 1.0, 1.0))), -450.780, -1.3)) : injectionSwitch.x) - 0.0, max(_GLF_IDENTITY((false ? _GLF_FUZZED(fma(_GLF_IDENTITY(vec4(-8.6, -9.8, -1.8, -600.256)[1], float(mat2x4(_GLF_IDENTITY(vec4(-8.6, -9.8, -1.8, -600.256)[1], float(_GLF_IDENTITY(mat3(vec4(-8.6, -9.8, -1.8, -600.256)[1], 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0), transpose(transpose(mat3(vec4(-8.6, -9.8, -1.8, -600.256)[1], 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0)))))), abs(0.0), 0.0, 1.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), sqrt(cos(0.0)), 1.0, 1.0))), -450.780, -1.3)) : injectionSwitch.x) - 0.0, max((false ? _GLF_FUZZED(fma(_GLF_IDENTITY(vec4(-8.6, -9.8, -1.8, -600.256)[1], float(mat2x4(_GLF_IDENTITY(vec4(-8.6, -9.8, -1.8, -600.256)[1], float(_GLF_IDENTITY(mat3(vec4(-8.6, -9.8, -1.8, -600.256)[1], 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0), transpose(transpose(mat3(vec4(-8.6, -9.8, -1.8, -600.256)[1], 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0)))))), abs(0.0), 0.0, 1.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), sqrt(cos(0.0)), 1.0, 1.0))), -450.780, -1.3)) : injectionSwitch.x) - 0.0, _GLF_IDENTITY((false ? _GLF_FUZZED(fma(_GLF_IDENTITY(vec4(-8.6, -9.8, -1.8, -600.256)[1], float(mat2x4(_GLF_IDENTITY(vec4(-8.6, -9.8, -1.8, -600.256)[1], float(_GLF_IDENTITY(mat3(vec4(-8.6, -9.8, -1.8, -600.256)[1], 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0), transpose(transpose(mat3(vec4(-8.6, -9.8, -1.8, -600.256)[1], 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0)))))), abs(0.0), 0.0, 1.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), sqrt(cos(0.0)), 1.0, 1.0))), -450.780, -1.3)) : injectionSwitch.x) - 0.0, float(vec4((false ? _GLF_FUZZED(fma(_GLF_IDENTITY(vec4(-8.6, -9.8, -1.8, -600.256)[1], float(mat2x4(_GLF_IDENTITY(vec4(-8.6, -9.8, -1.8, -600.256)[1], float(_GLF_IDENTITY(mat3(vec4(-8.6, -9.8, -1.8, -600.256)[1], 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0), transpose(transpose(mat3(vec4(-8.6, -9.8, -1.8, -600.256)[1], 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0)))))), abs(0.0), 0.0, 1.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), sqrt(cos(0.0)), 1.0, 1.0))), -450.780, -1.3)) : injectionSwitch.x) - 0.0, 1.0, 0.0, 0.0))))), (false ? _GLF_FUZZED(fma(_GLF_IDENTITY(vec4(-8.6, -9.8, -1.8, -600.256)[1], float(mat2x4(_GLF_IDENTITY(vec4(-8.6, -9.8, -1.8, -600.256)[1], float(_GLF_IDENTITY(mat3(vec4(-8.6, -9.8, -1.8, -600.256)[1], 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0), transpose(transpose(mat3(vec4(-8.6, -9.8, -1.8, -600.256)[1], 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0)))))), abs(0.0), 0.0, 1.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), sqrt(cos(0.0)), 1.0, 1.0))), -450.780, -1.3)) : injectionSwitch.x) - 0.0))))))), clamp(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(fma(_GLF_IDENTITY(vec4(-8.6, -9.8, -1.8, -600.256), vec4(mat2x3(vec4(-8.6, -9.8, -1.8, -600.256), round(length(normalize(vec2(1.0, 1.0)))), 0.0)))[_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-89151) : 1))], -450.780, -1.3)) : injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(false ? _GLF_FUZZED(fma(vec4(-8.6, -9.8, -1.8, -600.256)[1], -450.780, -1.3)) : injectionSwitch.x, float(float(false ? _GLF_FUZZED(fma(vec4(-8.6, -9.8, -1.8, -600.256)[1], -450.780, -1.3)) : injectionSwitch.x))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(fma(vec4(-8.6, -9.8, -1.8, -600.256)[1], -450.780, -1.3)) : injectionSwitch.x)), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(fma(vec4(-8.6, -9.8, -1.8, -600.256)[1], -450.780, _GLF_IDENTITY(-1.3, max(-1.3, -1.3)))) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY((false ? _GLF_FUZZED(fma(vec4(-8.6, -9.8, -1.8, -600.256)[1], -450.780, -1.3)) : injectionSwitch.x), min((false ? _GLF_FUZZED(fma(vec4(-8.6, -9.8, -1.8, -600.256)[1], -450.780, -1.3)) : injectionSwitch.x), (false ? _GLF_FUZZED(fma(vec4(-8.6, -9.8, -1.8, -600.256)[1], -450.780, -1.3)) : injectionSwitch.x)))) : _GLF_FUZZED(-9.9))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(fma(vec4(-8.6, -9.8, -1.8, -600.256)[1], -450.780, -1.3)) : injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((false ? _GLF_FUZZED(fma(vec4(-8.6, -9.8, _GLF_IDENTITY(-1.8, min(_GLF_IDENTITY(-1.8, mix(float(-1.8), float(_GLF_FUZZED(-5.3)), bool(false))), -1.8)), -600.256)[1], -450.780, -1.3)) : injectionSwitch.x), clamp((false ? _GLF_FUZZED(fma(vec4(-8.6, -9.8, _GLF_IDENTITY(-1.8, min(_GLF_IDENTITY(-1.8, mix(float(-1.8), float(_GLF_FUZZED(-5.3)), bool(false))), -1.8)), -600.256)[1], -450.780, -1.3)) : injectionSwitch.x), (false ? _GLF_FUZZED(fma(vec4(-8.6, -9.8, _GLF_IDENTITY(-1.8, min(_GLF_IDENTITY(-1.8, mix(float(-1.8), float(_GLF_FUZZED(-5.3)), bool(false))), -1.8)), -600.256)[1], -450.780, -1.3)) : injectionSwitch.x), _GLF_IDENTITY((false ? _GLF_FUZZED(fma(vec4(-8.6, -9.8, _GLF_IDENTITY(-1.8, min(_GLF_IDENTITY(-1.8, mix(float(-1.8), float(_GLF_FUZZED(-5.3)), bool(false))), -1.8)), -600.256)[1], -450.780, -1.3)) : injectionSwitch.x), float(mat3((false ? _GLF_FUZZED(fma(vec4(-8.6, -9.8, _GLF_IDENTITY(-1.8, min(_GLF_IDENTITY(-1.8, mix(float(-1.8), float(_GLF_FUZZED(-5.3)), bool(false))), -1.8)), -600.256)[1], -450.780, -1.3)) : injectionSwitch.x), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0))))))) / _GLF_IDENTITY(dot(vec4(log(1.0), 0.0, 0.0, 1.0), vec4(0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0)), dot(vec4(log(1.0), 0.0, 0.0, 1.0), vec4(0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0)))))), _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(fma(vec4(-8.6, -9.8, -1.8, -600.256)[1], -450.780, -1.3)) : injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(fma(vec4(-8.6, -9.8, -1.8, _GLF_IDENTITY(-600.256, _GLF_IDENTITY(float(mat3x2(-600.256, 0.0, 1.0, 0.0, abs(1.0), length(vec3(0.0, 0.0, 0.0)))), mix(float(float(mat3x2(-600.256, 0.0, 1.0, 0.0, abs(1.0), length(vec3(0.0, 0.0, 0.0))))), float(_GLF_FUZZED(-0.0)), bool(false)))))[1], _GLF_IDENTITY(-450.780, mix(float(_GLF_FUZZED(float(13189))), float(_GLF_IDENTITY(-450.780, (-450.780) / 1.0)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), -1.3)) : _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-3.8)), float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-319.223)), float(injectionSwitch.x), bool(true)))), bool(true))))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, (false ? _GLF_FUZZED(fma(vec4(-8.6, -9.8, -1.8, -600.256)[1], _GLF_IDENTITY(-450.780, clamp(_GLF_IDENTITY(-450.780, _GLF_IDENTITY((-450.780) * 1.0, (false ? _GLF_FUZZED(-4.0) : (-450.780) * 1.0))), _GLF_IDENTITY(-450.780, (_GLF_IDENTITY(-450.780, clamp(-450.780, -450.780, -450.780))) - abs(0.0)), _GLF_IDENTITY(_GLF_IDENTITY(-450.780, (false ? _GLF_FUZZED(32.26) : -450.780)), mix(float(_GLF_FUZZED((false ? -16.40 : 7097.3089))), float(_GLF_IDENTITY(_GLF_IDENTITY(-450.780, (false ? _GLF_FUZZED(32.26) : -450.780)), max(_GLF_IDENTITY(_GLF_IDENTITY(-450.780, (false ? _GLF_FUZZED(32.26) : -450.780)), (true ? _GLF_IDENTITY(-450.780, (false ? _GLF_FUZZED(32.26) : -450.780)) : _GLF_FUZZED(-58.48))), _GLF_IDENTITY(-450.780, (false ? _GLF_FUZZED(32.26) : -450.780))))), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(injectionSwitch.x < injectionSwitch.y, true, true, false)))))))))), -1.3)) : injectionSwitch.x)))))), (false ? _GLF_FUZZED(-1.5) : _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, float(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x, 1.0, 1.0, 0.0, 0.0, cos(0.0), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_IDENTITY(_GLF_FUZZED(8.6), min(_GLF_FUZZED(8.6), _GLF_FUZZED(8.6))) : injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_IDENTITY(_GLF_FUZZED(8.6), min(_GLF_FUZZED(8.6), _GLF_FUZZED(8.6))) : injectionSwitch.x))) / 1.0))))))) > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), ! (! (bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))), (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_IDENTITY(_GLF_FUZZED(fma(vec4(-8.6, -9.8, _GLF_IDENTITY(-1.8, mix(float(-1.8), float(_GLF_FUZZED((- 923.221))), bool(false))), -600.256)[1], -450.780, -1.3)), (_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(fma(vec4(-8.6, -9.8, _GLF_IDENTITY(-1.8, mix(float(-1.8), float(_GLF_FUZZED((- 923.221))), bool(false))), -600.256)[1], -450.780, -1.3), _GLF_IDENTITY(float(mat4(fma(vec4(-8.6, -9.8, _GLF_IDENTITY(-1.8, mix(float(-1.8), float(_GLF_FUZZED((- 923.221))), bool(false))), -600.256)[1], -450.780, -1.3), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0)), float(mat2(float(mat4(fma(vec4(-8.6, -9.8, _GLF_IDENTITY(-1.8, mix(float(-1.8), float(_GLF_FUZZED((- 923.221))), bool(false))), -600.256)[1], -450.780, -1.3), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0)), 0.0, 0.0, 0.0))))), (_GLF_FUZZED(fma(vec4(-8.6, -9.8, _GLF_IDENTITY(-1.8, mix(float(-1.8), float(_GLF_FUZZED((- 923.221))), bool(false))), -600.256)[1], -450.780, -1.3))) - 0.0)) + abs(0.0)) : injectionSwitch.x)), (false ? _GLF_FUZZED(-1.5) : injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(24.62)), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, bool(bool(true)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(false, true && (false)))))))
      barrier();
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))) * cos(vec2(0.0, 0.0))).x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))))))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x)) > injectionSwitch.y)))), (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), (injectionSwitch.x) - 0.0), injectionSwitch.x)) > injectionSwitch.y)))), (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(4.7, -3272.5959)))).y))))) && true)), ! (! (! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x)) > injectionSwitch.y)))), (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (false ? _GLF_FUZZED(vec2(-82.98, -44.96)) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) - sqrt(vec2(0.0, 0.0))), injectionSwitch)).x, max(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-82.98, -44.96)) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) - sqrt(vec2(0.0, 0.0))), injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-82.98, -44.96)) : injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 1.0))), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0)), min(vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 1.0))), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0)), vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 1.0))), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0))))), injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) - sqrt(vec2(0.0, 0.0))), injectionSwitch)).x)) > injectionSwitch.y))))) && true))))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(_GLF_IDENTITY(-6.1, (_GLF_IDENTITY(-6.1, (-6.1) / 1.0)) / 1.0))), float(injectionSwitch.y), bool(true))), min(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(_GLF_IDENTITY(-6.1, (_GLF_IDENTITY(-6.1, (-6.1) / 1.0)) / 1.0))), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(_GLF_IDENTITY(-6.1, (_GLF_IDENTITY(-6.1, (-6.1) / 1.0)) / 1.0))), float(injectionSwitch.y), bool(true))))))))), (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(220.712)), bool(false))))))))), ! (_GLF_IDENTITY(! ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(220.712)), bool(false)))))))))), (_GLF_IDENTITY(! ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(220.712)), bool(false)))))))))), ! (! (! ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(220.712)), bool(false)))))))))))))) || false))), true && (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x2(injectionSwitch.y, 1.0, 0.0, 0.0, 1.0, 0.0), mat2(1.0) * (mat3x2(injectionSwitch.y, 1.0, 0.0, 0.0, 1.0, 0.0))))), clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mat2(1.0) * (mat2(1.0) * (injectionSwitch)))).y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(220.712)), bool(false)))))))))))) && true))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, true))), (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true && (bool(bool(_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))))), (! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (! ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))) && true)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(_GLF_IDENTITY(-6.1, (_GLF_IDENTITY(-6.1, (-6.1) / 1.0)) / 1.0))), float(injectionSwitch.y), bool(true))))))), (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(220.712)), bool(false))))))))), true && (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x2(injectionSwitch.y, 1.0, 0.0, 0.0, 1.0, 0.0), mat2(1.0) * (mat3x2(injectionSwitch.y, 1.0, 0.0, 0.0, 1.0, 0.0))))), clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(220.712)), bool(false)))))))))))) && true))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, true))), (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, true))), (injectionSwitch.x > injectionSwitch.y)), true, false)))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(step(-87.22, injectionSwitch))))) / sqrt(vec2(1.0, 1.0))).x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(step(-87.22, injectionSwitch))))) / sqrt(vec2(1.0, 1.0))).x > injectionSwitch.y)))), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true, false))))))), bool(bool(_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)))))))), false || (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))), (! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))), ! (! (! ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (_GLF_IDENTITY(! ((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).x) / 1.0) > injectionSwitch.y))))), ! (! (! ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true))))))) || false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-4.3), _GLF_FUZZED(-1.3)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), injectionSwitch)).y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), _GLF_IDENTITY(false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))
  barrier();
 GLF_merged2_0_1_3_1_1_17gidsubgroup_local_id.y = _GLF_IDENTITY(subgroup_local_id, 0u + _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))))), 0u | ((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))))))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(mat2x4((injectionSwitch) * mat2(1.0), 1.0, 1.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(_GLF_IDENTITY(1.0, (1.0) - sqrt(0.0)), 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(_GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(1.0, float(vec2(1.0, 0.0))) : _GLF_FUZZED(-5.1))), 0.0, 0.0))), 0.0, 0.0)))).y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
    barrier();
   barrier();
  }
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _GLF_IDENTITY(_injected_loop_counter ++, (false ? _GLF_FUZZED(-1704) : _GLF_IDENTITY(_injected_loop_counter ++, ~ (~ (_GLF_IDENTITY(_injected_loop_counter ++, (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))) ? _GLF_FUZZED(44642) : _injected_loop_counter ++, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), (! (false)) && true)))))), ! (_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), (! (false)) || false))))) ? _GLF_FUZZED(44642) : _injected_loop_counter ++), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), (! (false)) || false))), (_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), (! (false)) || _GLF_IDENTITY(false, (false) && true))))) || false))) ? _GLF_FUZZED(44642) : _injected_loop_counter ++)), (~ ((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! _GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), ! (! ((false)))), false, true))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), ! (_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), (! (false)) || false))))) ? _GLF_FUZZED(44642) : _injected_loop_counter ++))) << 0))) | 0)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), injectionSwitch.y, injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), injectionSwitch.y, injectionSwitch.y)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), injectionSwitch.y, injectionSwitch.y))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-18.05) : _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y) - 0.0))), float(vec2(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-18.05) : _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), 0.0)))))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED((true ? injectionSwitch : asinh(injectionSwitch))))).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(GLF_merged2_0_1_3_1_1_17gidsubgroup_local_id.y + 1 < subgroup_size)
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     atomicStore(buf[GLF_merged2_0_1_3_1_1_17gidsubgroup_local_id.x + 1], uint(2), 4, 64, 0);
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), ! _GLF_IDENTITY((! (false || (false))), bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(! _GLF_IDENTITY((false || (false)), _GLF_IDENTITY(! (_GLF_IDENTITY(! ((false || (false))), true && (_GLF_IDENTITY(! _GLF_IDENTITY(((_GLF_IDENTITY(false || (false), ! (! (false || (false)))))), true && _GLF_IDENTITY((((_GLF_IDENTITY(_GLF_IDENTITY(false || (false), ! (! (false || (false)))), (_GLF_IDENTITY(false || (false), ! (! (false || (false))))) && true)))), bool(bool((((_GLF_IDENTITY(_GLF_IDENTITY(false || (false), ! (! (false || (false)))), (_GLF_IDENTITY(false || (false), ! (! (false || (false))))) && true)))))))), ! (! (! ((false || (false))))))))), bool(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY(! ((false || (false))), true && (_GLF_IDENTITY(! ((false || (false))), ! (! (! ((false || (false)))))))), bool(bvec2(_GLF_IDENTITY(! ((false || (false))), true && (_GLF_IDENTITY(! ((false || (false))), ! (! (! ((false || (false)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false, true)))), bool(_GLF_IDENTITY(bool(! _GLF_IDENTITY((false || (false)), _GLF_IDENTITY(! (_GLF_IDENTITY(! ((false || (false))), true && (_GLF_IDENTITY(! _GLF_IDENTITY(((_GLF_IDENTITY(false || (false), ! (! (false || (false)))))), true && _GLF_IDENTITY((((_GLF_IDENTITY(_GLF_IDENTITY(false || (false), ! (! (false || (false)))), (_GLF_IDENTITY(false || (false), ! (! (false || (false))))) && true)))), bool(bool((((_GLF_IDENTITY(_GLF_IDENTITY(false || (false), ! (! (false || (false)))), (_GLF_IDENTITY(false || (false), ! (! (false || (false))))) && true)))))))), ! (! (! ((false || (false))))))))), bool(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY(! ((false || (false))), true && (_GLF_IDENTITY(! ((false || (false))), ! (! (! ((false || (false)))))))), bool(bvec2(_GLF_IDENTITY(! ((false || (false))), true && (_GLF_IDENTITY(! ((false || (false))), ! (! (! ((false || (false)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false, true))))), ! (! (bool(! _GLF_IDENTITY((false || (false)), _GLF_IDENTITY(! (_GLF_IDENTITY(! ((false || (false))), true && (_GLF_IDENTITY(! _GLF_IDENTITY(((_GLF_IDENTITY(false || (false), ! (! (false || (false)))))), true && _GLF_IDENTITY((((_GLF_IDENTITY(_GLF_IDENTITY(false || (false), ! (! (false || (false)))), (_GLF_IDENTITY(false || (false), ! (! (false || (false))))) && true)))), bool(bool((((_GLF_IDENTITY(_GLF_IDENTITY(false || (false), ! (! (false || (false)))), (_GLF_IDENTITY(false || (false), ! (! (false || (false))))) && true)))))))), ! (! (! ((false || (false))))))))), bool(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY(! ((false || (false))), true && (_GLF_IDENTITY(! ((false || (false))), ! (! (! ((false || (false)))))))), bool(bvec2(_GLF_IDENTITY(! ((false || (false))), true && (_GLF_IDENTITY(! ((false || (false))), ! (! (! ((false || (false)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false, true))))))))))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY((! (false || _GLF_IDENTITY((false), ((false)) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x < injectionSwitch.y, false)), ! (! (bool(bvec2(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y, false))))))))))), false || ((! (false || _GLF_IDENTITY((false), ((false)) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x < injectionSwitch.y, false)), ! (! (bool(bvec2(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(false, ! (! (false)))))))))))))))), true))))))))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec3(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false))), bvec2(_GLF_IDENTITY(bvec2(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))), bvec2(bvec2(bvec2(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))))))))))))))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
            barrier();
           barrier();
          }
         if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, false)))) && true))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(true && (! (false)), false || (_GLF_IDENTITY(true && (! (false)), bool(bool(true && (! (false))))))))))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(_GLF_IDENTITY(5.0, float(_GLF_IDENTITY(float(5.0), clamp(float(5.0), float(5.0), float(5.0))))), 3410.4011)))).y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(9.9) : injectionSwitch.y))))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), false || (_GLF_IDENTITY(bool(_GLF_DEAD(false)), false || (bool(_GLF_DEAD(false)))))))))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
             barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))).y))) && true)))))
          barrier();
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(vec2(7.4, -372.333), (vec2(7.4, -372.333)) / vec2(1.0, 1.0))) : injectionSwitch), min((false ? _GLF_FUZZED(_GLF_IDENTITY(vec2(7.4, -372.333), (vec2(7.4, -372.333)) / vec2(1.0, 1.0))) : injectionSwitch), _GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(vec2(7.4, -372.333), (vec2(7.4, -372.333)) / vec2(1.0, 1.0))) : injectionSwitch), exp(vec2(0.0, 0.0)) * (_GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(vec2(7.4, -372.333), (vec2(7.4, -372.333)) / vec2(1.0, 1.0))) : injectionSwitch), mix(vec2(((false ? _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(vec2(7.4, -372.333), (vec2(7.4, -372.333)) / vec2(1.0, 1.0))), clamp(_GLF_FUZZED(_GLF_IDENTITY(vec2(7.4, -372.333), (vec2(7.4, -372.333)) / vec2(1.0, 1.0))), _GLF_FUZZED(_GLF_IDENTITY(vec2(7.4, -372.333), (vec2(7.4, -372.333)) / vec2(1.0, 1.0))), _GLF_FUZZED(_GLF_IDENTITY(vec2(7.4, -372.333), (vec2(7.4, -372.333)) / vec2(1.0, 1.0))))) : injectionSwitch))[0], ((false ? _GLF_FUZZED(_GLF_IDENTITY(vec2(7.4, -372.333), (vec2(7.4, -372.333)) / vec2(1.0, 1.0))) : injectionSwitch))[1]), vec2(_GLF_FUZZED(80.20), _GLF_FUZZED(-2884.9868)), bvec2(false, false)))))))).x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY(vec2(7.4, -372.333), (vec2(7.4, -372.333)) / vec2(1.0, 1.0))) : injectionSwitch)).x, min(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY(vec2(7.4, -372.333), (vec2(7.4, -372.333)) / vec2(1.0, 1.0))) : injectionSwitch)).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY(vec2(7.4, -372.333), (vec2(7.4, -372.333)) / vec2(1.0, 1.0))) : injectionSwitch)).x, min(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY(vec2(_GLF_IDENTITY(7.4, float(mat2x4(7.4, sqrt(0.0), 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0))), 0.0))), -372.333), (vec2(7.4, -372.333)) / vec2(1.0, 1.0))) : injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY(vec2(7.4, -372.333), (vec2(7.4, -372.333)) / vec2(1.0, 1.0))) : injectionSwitch)).x)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY(vec2(7.4, -372.333), (vec2(7.4, -372.333)) / vec2(1.0, 1.0))) : injectionSwitch)).x, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY(vec2(7.4, _GLF_IDENTITY(-372.333, mix(float(-372.333), float(_GLF_FUZZED((- -3604.9648))), bool(false)))), (vec2(7.4, -372.333)) / vec2(1.0, 1.0))) : injectionSwitch)).x) - 0.0), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY(vec2(7.4, -372.333), (vec2(7.4, -372.333)) / vec2(1.0, 1.0))) : injectionSwitch)).x)) > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     subgroupAll(true);
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     atomicStore(buf[(GLF_merged2_0_1_3_1_1_17gidsubgroup_local_id.x + 1) % subgroup_size], uint(2), 4, 64, 0);
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((! (true)), true), _GLF_IDENTITY(bvec2(bvec2(bvec2((! (true)), true))), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2((! (true)), true)), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2((! (true)), true)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2((! (true)), true)), bvec2(bvec2(bvec2(bvec2((! (true)), true))))), false, false))), true))))), bvec2(bvec4(bvec2(bvec2(bvec2(bvec2((! (true)), true)))), false, true))))))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(1.0, (1.0) / exp(0.0)), 1.0, _GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, 1.0)), injectionSwitch.y), 0.0, 0.0, 0.0, 0.0), mat4x2(mat4(mat4x2(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(injectionSwitch.y), min(float(injectionSwitch.y), float(injectionSwitch.y))), float(_GLF_FUZZED(1372.9121)), bool(false))))), 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 0.0)))))))) || (bool(bvec2((! (true)), true)))))), false || (_GLF_IDENTITY(true, ! (! _GLF_IDENTITY(_GLF_IDENTITY((true), _GLF_TRUE(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) < injectionSwitch.y)) && ((true))), (_GLF_IDENTITY((true), _GLF_TRUE(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) < injectionSwitch.y)) && ((true)))) && true)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), bvec2(bvec3(bvec2(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), true))), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), bvec2(bvec3(bvec2(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), true)))), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), bvec2(bvec3(bvec2(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), true)))))), bvec2(bvec4(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), bvec2(bvec3(bvec2(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), true)))))), true, false))))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), bvec2(bvec3(bvec2(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), true)))), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), bvec2(bvec3(bvec2(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), true)))))), bvec2(bvec4(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), bvec2(bvec3(bvec2(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), true)))))), true, false)))))))))), true && (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), bvec2(bvec3(bvec2(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), true))), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), bvec2(bvec3(bvec2(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), true)))), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), bvec2(bvec3(bvec2(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), true)))))), bvec2(bvec4(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), bvec2(bvec3(bvec2(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), true)))))), true, false))))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), bvec2(bvec3(bvec2(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), true)))), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), bvec2(bvec3(bvec2(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), true)))))), bvec2(bvec4(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), bvec2(bvec3(bvec2(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), true)))))), true, false)))))))))))))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, _GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), false, true, false))), false)), ! (! (bool(bvec4(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), max(max(injectionSwitch.y, injectionSwitch.y), max(injectionSwitch.y, injectionSwitch.y)))), true, false, false))))))))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-9.7)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       subgroupAll(true);
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-8038.9971)), float(injectionSwitch.y), bool(true))), injectionSwitch.y, injectionSwitch.y))))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), injectionSwitch)))).y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
          barrier();
        }
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false)))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), bool(bool(bool(bvec2(false, false))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3(injectionSwitch.y, 1.0, 0.0, tan(0.0), 1.0, 1.0, 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), (true ? mat3(injectionSwitch.y, 1.0, 0.0, tan(0.0), 1.0, 1.0, 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))) : _GLF_FUZZED((mat3(3.5, -7.6, -7976.1414, -0.2, -674.982, -8551.3626, 787.691, 3595.9888, 4.0) + -7.8))))), min(float(_GLF_IDENTITY(mat3(injectionSwitch.y, 1.0, 0.0, tan(0.0), 1.0, 1.0, 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), (true ? mat3(injectionSwitch.y, 1.0, 0.0, tan(0.0), 1.0, 1.0, 0.0, 1.0, round(_GLF_IDENTITY(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))), min(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))), length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))))) : _GLF_FUZZED((mat3(3.5, -7.6, -7976.1414, -0.2, -674.982, -8551.3626, 787.691, 3595.9888, 4.0) + -7.8))))), float(_GLF_IDENTITY(mat3(injectionSwitch.y, 1.0, 0.0, tan(0.0), 1.0, 1.0, 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), (true ? _GLF_IDENTITY(mat3(injectionSwitch.y, 1.0, 0.0, tan(0.0), 1.0, 1.0, 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), mat3(1.0) * (mat3(injectionSwitch.y, 1.0, 0.0, tan(0.0), 1.0, 1.0, 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))))) : _GLF_FUZZED((mat3(3.5, -7.6, -7976.1414, -0.2, -674.982, -8551.3626, 787.691, 3595.9888, 4.0) + -7.8))))))))))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y) || false)))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), true && (_GLF_IDENTITY(false, true && (false)))), false, false, false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), ! (! (_GLF_IDENTITY(bool(bvec3(false, false, true)), _GLF_IDENTITY((bool(bvec3(false, false, true))), ! (! (_GLF_IDENTITY((bool(bvec3(false, false, true))), ! (_GLF_IDENTITY(! ((bool(bvec3(false, false, true)))), bool(bvec4(! ((bool(bvec3(false, false, true)))), false, true, true)))))))) && true)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false, true))))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, true))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
}
