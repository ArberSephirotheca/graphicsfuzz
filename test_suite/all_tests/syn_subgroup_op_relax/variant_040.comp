#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint gid = _GLF_IDENTITY(gl_GlobalInvocationID, (_GLF_IDENTITY(gl_GlobalInvocationID, uvec3(uvec4(gl_GlobalInvocationID, 1u)))) << uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 0.0))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) - vec2(0.0, 0.0), vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * ((injectionSwitch) - _GLF_IDENTITY(vec2(0.0, _GLF_IDENTITY(0.0, (0.0) * determinant(mat2(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), abs(1.0), 0.0, 1.0)))), max(vec2(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) * determinant(mat2(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), abs(1.0), 0.0, 1.0)), min((0.0) * determinant(mat2(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), abs(1.0), 0.0, 1.0)), (0.0) * determinant(mat2(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), abs(1.0), 0.0, 1.0)))))), vec2(0.0, _GLF_IDENTITY(0.0, (0.0) * determinant(mat2(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), abs(1.0), 0.0, 1.0))))))))), injectionSwitch)).x), _GLF_ZERO(0.0, injectionSwitch.x))).x;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, exp(0.0), 1.0, 0.0, 0.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0))))).y), bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, exp(0.0), 1.0, 0.0, 0.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0))))).y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ! (! ((false))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).x > injectionSwitch.y) || false)))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (false ? _GLF_FUZZED(1209.1416) : injectionSwitch[1])))).y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat3(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0))), injectionSwitch.y))), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat3(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0))), injectionSwitch.y))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))) || false), _GLF_IDENTITY(! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(3280.2467)), float(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(1.5)))), bool(true))), float(vec2(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(3280.2467)), float(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(1.5)))), bool(true))), abs(1.0))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(90.22)), float(injectionSwitch.y), bool(true)))) + 0.0)))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(_GLF_IDENTITY(90.22, exp(0.0) * (90.22)))), float(injectionSwitch.y), bool(true)))) + 0.0))))), _GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(90.22)), float(injectionSwitch.y), bool(true)))) + 0.0)))))) && true, ! (! (_GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(90.22)), float(injectionSwitch.y), bool(true)))) + 0.0)))))) && true, true && ((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(90.22)), float(injectionSwitch.y), bool(true)))) + 0.0)))))) && true)))))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((96.89 * (+ 8.3)))), bool(false))))).y, clamp(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(353.428), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(5.6)), bvec2(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], (false ? _GLF_FUZZED(-5.7) : (injectionSwitch)[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(4535.2961), _GLF_FUZZED(-51.14)), bvec2(false, false))).x < injectionSwitch.y)), _GLF_IDENTITY(false, false || (false)))))) * mat2(1.0)).y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((96.89 * (+ 8.3)))), bool(false))))).y, clamp(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(353.428), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(5.6)), bvec2(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], (false ? _GLF_FUZZED(-5.7) : (injectionSwitch)[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(4535.2961), _GLF_FUZZED(-51.14)), bvec2(false, false))).x < injectionSwitch.y)), _GLF_IDENTITY(false, false || (false)))))) * mat2(1.0)).y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)))), ! (! (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((96.89 * (+ 8.3)))), bool(false))))).y, clamp(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(353.428), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(5.6)), bvec2(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], (false ? _GLF_FUZZED(-5.7) : (injectionSwitch)[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(4535.2961), _GLF_FUZZED(-51.14)), bvec2(false, false))).x < injectionSwitch.y)), _GLF_IDENTITY(false, false || (false)))))) * mat2(1.0)).y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)))))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((96.89 * (+ 8.3)))), bool(false))))).y, clamp(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(353.428), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(5.6)), bvec2(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], (false ? _GLF_FUZZED(-5.7) : (injectionSwitch)[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(4535.2961), _GLF_FUZZED(-51.14)), bvec2(false, false))).x < injectionSwitch.y)), _GLF_IDENTITY(false, false || (false)))))) * mat2(1.0)).y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)))), ! (! (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((96.89 * (+ 8.3)))), bool(false))))).y, clamp(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(353.428), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(5.6)), bvec2(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], (false ? _GLF_FUZZED(-5.7) : (injectionSwitch)[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(4535.2961), _GLF_FUZZED(-51.14)), bvec2(false, false))).x < injectionSwitch.y)), _GLF_IDENTITY(false, false || (false)))))) * mat2(1.0)).y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))))))), ! (! (! (bool(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((96.89 * (+ 8.3)))), bool(false))))).y, clamp(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(353.428), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(5.6)), bvec2(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], (false ? _GLF_FUZZED(-5.7) : (injectionSwitch)[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(4535.2961), _GLF_FUZZED(-51.14)), bvec2(false, false))).x < injectionSwitch.y)), _GLF_IDENTITY(false, false || (false)))))) * mat2(1.0)).y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)))), ! (! (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((96.89 * (+ 8.3)))), bool(false))))).y, clamp(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(353.428), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(5.6)), bvec2(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], (false ? _GLF_FUZZED(-5.7) : (injectionSwitch)[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(4535.2961), _GLF_FUZZED(-51.14)), bvec2(false, false))).x < injectionSwitch.y)), _GLF_IDENTITY(false, false || (false)))))) * mat2(1.0)).y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)))))))))))))))), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).y, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sin(vec2(0.0, 0.0))))))))) * mat2(1.0)).y, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))), (injectionSwitch) * mat2(1.0)), vec2(0.0, 0.0) + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))), (injectionSwitch) * mat2(1.0)))).y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(39.60) : _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), min(_GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), vec2(mat2x4(clamp(injectionSwitch, injectionSwitch, injectionSwitch), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0))), clamp(injectionSwitch, injectionSwitch, injectionSwitch)))))))) * mat2(1.0)).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), mat2(1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))) : _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))))), (injectionSwitch) * mat2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) / sqrt(1.0)))))).y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y), mix(float(_GLF_FUZZED(-26.06)), float(_GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))))) * mat2(1.0), mix(vec2(((_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))))) * mat2(1.0))[0], _GLF_IDENTITY(_GLF_FUZZED((-807.996 / 743.147)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-712.121) : _GLF_FUZZED((-807.996 / 743.147))))), vec2(_GLF_FUZZED(-151.580), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), vec2(vec2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))))) * mat2(1.0))[1]), bvec2(false, true)))).y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y), min(clamp(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))))) * mat2(1.0)).y, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * mat2(_GLF_IDENTITY(1.0, min(1.0, 1.0))), mix(vec2(((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) * mat2(1.0))[0], _GLF_FUZZED(95.50)), vec2(_GLF_FUZZED(8.3), ((injectionSwitch) * mat2(1.0))[1]), bvec2(false, true))), vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * mat2(_GLF_IDENTITY(1.0, min(1.0, 1.0))), mix(vec2(((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) * mat2(1.0))[0], _GLF_FUZZED(95.50)), vec2(_GLF_FUZZED(8.3), ((injectionSwitch) * mat2(1.0))[1]), bvec2(false, true))), max(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * mat2(_GLF_IDENTITY(1.0, min(1.0, 1.0))), mix(vec2(((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) * mat2(1.0))[0], _GLF_FUZZED(95.50)), vec2(_GLF_FUZZED(8.3), ((injectionSwitch) * mat2(1.0))[1]), bvec2(false, true))), mat2(1.0) * (_GLF_IDENTITY((injectionSwitch) * mat2(_GLF_IDENTITY(1.0, min(1.0, 1.0))), mix(vec2(((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) * mat2(1.0))[0], _GLF_FUZZED(95.50)), vec2(_GLF_FUZZED(8.3), ((injectionSwitch) * mat2(1.0))[1]), bvec2(false, true))))), _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_IDENTITY(1.0, min(1.0, 1.0))), mix(vec2(((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) * mat2(1.0))[0], _GLF_FUZZED(95.50)), vec2(_GLF_FUZZED(8.3), ((injectionSwitch) * mat2(1.0))[1]), bvec2(false, true)))))))).y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y), clamp(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))), (false ? _GLF_FUZZED(acos(vec2(-1317.7695, 1725.9649))) : vec2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))))))) * mat2(1.0)).y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch))), mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(-166.877, mix(float(-166.877), float(_GLF_FUZZED(-34.02)), bool(false)))), ((injectionSwitch))[1]), vec2(_GLF_IDENTITY(((injectionSwitch))[0], clamp(((_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, sqrt(0.0), 1.0, 0.0, 0.0, round(length(normalize(1.0))), exp(0.0), 0.0, 0.0, sqrt(round(length(normalize(1.0)))), 1.0, 1.0, 1.0, 0.0)))))[0], ((injectionSwitch))[0], ((injectionSwitch))[0])), _GLF_FUZZED(6836.0086)), bvec2(true, false))) * mat2(1.0)).y)))), bool(true)))))))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) * _GLF_ONE(1.0, injectionSwitch.y), min((injectionSwitch.x) * _GLF_ONE(1.0, injectionSwitch.y), (injectionSwitch.x) * _GLF_ONE(1.0, injectionSwitch.y)))), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true) ? 0.0 : _GLF_FUZZED(vec4(-8387.8428, 8.2, -6.8, -493.535)[0]), min(_GLF_IDENTITY(true, (true) && true) ? 0.0 : _GLF_FUZZED(vec4(-8387.8428, 8.2, -6.8, -493.535)[0]), _GLF_IDENTITY(true, (true) && true) ? 0.0 : _GLF_FUZZED(vec4(-8387.8428, 8.2, _GLF_IDENTITY(-6.8, max(-6.8, -6.8)), -493.535)[0]))))), 0.0, 1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(vec2(0.0, 1.0)))) / 1.0), 1.0, 0.0, _GLF_IDENTITY(dot(vec4(sqrt(0.0), 1.0, 0.0, 0.0), vec4(1.0, 0.0, 1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(sqrt(0.0), 1.0, 0.0, 0.0), vec4(vec4(vec4(sqrt(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(2.9)), bool(false))), _GLF_IDENTITY(0.0, (0.0) / 1.0)))), 1.0, 0.0, 0.0)))), vec4(1.0, 0.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)), float(mat4x3(dot(vec4(sqrt(0.0), 1.0, 0.0, 0.0), vec4(1.0, 0.0, 1.0, 1.0)), 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(float(1.0)), clamp(float(float(1.0)), float(float(1.0)), float(float(1.0))))), 1.0)), 1.0, 1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)), 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 0.0))), (true ? _GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(sqrt(0.0), 1.0, 0.0, 0.0), vec4(vec4(_GLF_IDENTITY(vec4(_GLF_IDENTITY(sqrt(0.0), 0.0 + (sqrt(0.0))), 1.0, 0.0, 0.0), mat4(1.0) * (vec4(_GLF_IDENTITY(sqrt(0.0), 0.0 + (sqrt(0.0))), 1.0, 0.0, 0.0)))))), vec4(1.0, 0.0, 1.0, 1.0)), float(mat4x3(dot(vec4(sqrt(0.0), 1.0, 0.0, 0.0), vec4(1.0, 0.0, 1.0, 1.0)), 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, max(1.0, 1.0))), float(_GLF_FUZZED((false ? 6.1 : 8.4))), bool(_GLF_IDENTITY(false, ! (! (false)))))), 1.0, 1.0)), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0))) : _GLF_FUZZED(_GLF_IDENTITY(6.1, (_GLF_IDENTITY(6.1, float(_GLF_IDENTITY(mat4(6.1, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) + 0.0), _GLF_IDENTITY(1.0, float(mat4x3(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 0.0, 1.0))))), 1.0, 0.0, abs(1.0), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, abs(0.0)), (true ? mat4(6.1, 1.0, 1.0, 0.0, abs(1.0), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, abs(0.0)) : _GLF_FUZZED(mat4(579.830, -1.6, -698.858, -8528.9719, 3.3, 1.9, -222.182, 471.471, -699.217, -49.62, -658.629, 4.5, -1.5, 8.9, -4.2, 538.681))))))) / 1.0))))), 0.0, 0.0, 1.0, 1.0))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 0.0, 0.0)), (vec2(mat2(injectionSwitch, 0.0, 0.0))) * vec2(1.0, 1.0))))), vec2(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 0.0, 0.0)), (vec2(mat2(injectionSwitch, 0.0, 0.0))) * vec2(1.0, 1.0))))), 1.0, 1.0), mat2(mat3(mat2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 0.0, 0.0)), (vec2(mat2(injectionSwitch, 0.0, 0.0))) * _GLF_IDENTITY(vec2(1.0, 1.0), clamp(vec2(1.0, 1.0), _GLF_IDENTITY(vec2(1.0, 1.0), mat2(1.0) * (vec2(1.0, 1.0))), vec2(1.0, 1.0))))))), 1.0, 1.0))))))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 0.0, 0.0)), (vec2(mat2(injectionSwitch, 0.0, 0.0))) * vec2(1.0, 1.0))))), vec2(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 0.0, 0.0)), (vec2(mat2(injectionSwitch, 0.0, 0.0))) * vec2(1.0, 1.0))))), 1.0, 1.0), mat2(mat3(mat2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 0.0, 0.0)), (vec2(mat2(injectionSwitch, 0.0, 0.0))) * vec2(1.0, 1.0))))), 1.0, 1.0))))))), vec2(mat4x2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 0.0, 0.0)), (vec2(mat2(injectionSwitch, 0.0, 0.0))) * vec2(1.0, 1.0))))), vec2(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 0.0, 0.0)), (vec2(mat2(injectionSwitch, 0.0, 0.0))) * vec2(1.0, 1.0))))), 1.0, 1.0), mat2(mat3(mat2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 0.0, 0.0)), (vec2(mat2(injectionSwitch, 0.0, 0.0))) * vec2(1.0, 1.0))))), 1.0, 1.0))))))), 1.0, 1.0, 1.0, 1.0, 1.0, 0.0))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 0.0, 0.0)), (vec2(mat2(injectionSwitch, 0.0, 0.0))) * vec2(1.0, 1.0))))), vec2(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 0.0, 0.0)), (vec2(mat2(injectionSwitch, 0.0, 0.0))) * vec2(1.0, 1.0))))), 1.0, 1.0), mat2(mat3(mat2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 0.0, 0.0)), (vec2(mat2(injectionSwitch, 0.0, 0.0))) * vec2(1.0, 1.0))))), 1.0, 1.0))))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 0.0, 0.0)), (vec2(mat2(injectionSwitch, 0.0, 0.0))) * vec2(1.0, 1.0))))), vec2(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 0.0, 0.0)), (vec2(mat2(injectionSwitch, 0.0, 0.0))) * vec2(1.0, 1.0))))), 1.0, 1.0), mat2(mat3(mat2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 0.0, 0.0)), (vec2(mat2(injectionSwitch, 0.0, 0.0))) * vec2(1.0, 1.0))))), 1.0, 1.0))))))))) * mat2(1.0), _GLF_IDENTITY(mat2(1.0) * (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 0.0, 0.0)), (vec2(mat2(injectionSwitch, 0.0, 0.0))) * vec2(1.0, 1.0))))), vec2(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 0.0, 0.0)), (vec2(mat2(injectionSwitch, 0.0, 0.0))) * vec2(1.0, 1.0))))), 1.0, 1.0), mat2(mat3(mat2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 0.0, 0.0)), (vec2(mat2(injectionSwitch, 0.0, 0.0))) * _GLF_IDENTITY(vec2(1.0, 1.0), clamp(vec2(1.0, 1.0), _GLF_IDENTITY(vec2(1.0, 1.0), mat2(1.0) * (vec2(1.0, 1.0))), vec2(1.0, 1.0))))))), 1.0, 1.0))))))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 0.0, 0.0)), (vec2(mat2(injectionSwitch, 0.0, 0.0))) * vec2(1.0, 1.0))))), vec2(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 0.0, 0.0)), (vec2(mat2(injectionSwitch, 0.0, 0.0))) * vec2(1.0, 1.0))))), 1.0, 1.0), mat2(mat3(mat2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 0.0, 0.0)), (vec2(mat2(injectionSwitch, 0.0, 0.0))) * vec2(1.0, 1.0))))), 1.0, 1.0))))))), vec2(mat4x2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 0.0, 0.0)), (vec2(mat2(injectionSwitch, 0.0, 0.0))) * vec2(1.0, 1.0))))), vec2(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 0.0, 0.0)), (vec2(mat2(injectionSwitch, 0.0, 0.0))) * vec2(1.0, 1.0))))), 1.0, 1.0), mat2(mat3(mat2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 0.0, 0.0)), (vec2(mat2(injectionSwitch, 0.0, 0.0))) * vec2(1.0, 1.0))))), 1.0, 1.0))))))), 1.0, 1.0, 1.0, 1.0, 1.0, 0.0))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 0.0, 0.0)), (vec2(mat2(injectionSwitch, 0.0, 0.0))) * vec2(1.0, 1.0))))), vec2(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 0.0, 0.0)), (vec2(mat2(injectionSwitch, 0.0, 0.0))) * vec2(1.0, 1.0))))), 1.0, 1.0), mat2(mat3(mat2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 0.0, 0.0)), (vec2(mat2(injectionSwitch, 0.0, 0.0))) * vec2(1.0, 1.0))))), 1.0, 1.0))))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 0.0, 0.0)), (vec2(mat2(injectionSwitch, 0.0, 0.0))) * vec2(1.0, 1.0))))), vec2(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 0.0, 0.0)), (vec2(mat2(injectionSwitch, 0.0, 0.0))) * vec2(1.0, 1.0))))), 1.0, 1.0), mat2(mat3(mat2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 0.0, 0.0)), (vec2(mat2(injectionSwitch, 0.0, 0.0))) * vec2(1.0, 1.0))))), 1.0, 1.0))))))))) * mat2(1.0)), (mat2(1.0) * (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 0.0, 0.0)), (vec2(mat2(injectionSwitch, 0.0, 0.0))) * vec2(1.0, 1.0))))), vec2(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 0.0, 0.0)), (vec2(mat2(injectionSwitch, 0.0, 0.0))) * vec2(1.0, 1.0))))), 1.0, 1.0), mat2(mat3(mat2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 0.0, 0.0)), (vec2(mat2(injectionSwitch, 0.0, 0.0))) * _GLF_IDENTITY(vec2(1.0, 1.0), clamp(vec2(1.0, 1.0), _GLF_IDENTITY(vec2(1.0, 1.0), mat2(1.0) * (vec2(1.0, 1.0))), vec2(1.0, 1.0))))))), 1.0, 1.0))))))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 0.0, 0.0)), (vec2(mat2(injectionSwitch, 0.0, 0.0))) * vec2(1.0, 1.0))))), vec2(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 0.0, 0.0)), (vec2(mat2(injectionSwitch, 0.0, 0.0))) * vec2(1.0, 1.0))))), 1.0, 1.0), mat2(mat3(mat2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 0.0, 0.0)), (vec2(mat2(injectionSwitch, 0.0, 0.0))) * vec2(1.0, 1.0))))), 1.0, 1.0))))))), vec2(mat4x2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 0.0, 0.0)), (vec2(mat2(injectionSwitch, 0.0, 0.0))) * vec2(1.0, 1.0))))), vec2(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 0.0, 0.0)), (vec2(mat2(injectionSwitch, 0.0, 0.0))) * vec2(1.0, 1.0))))), 1.0, 1.0), mat2(mat3(mat2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 0.0, 0.0)), (vec2(mat2(injectionSwitch, 0.0, 0.0))) * vec2(1.0, 1.0))))), 1.0, 1.0))))))), 1.0, 1.0, 1.0, 1.0, 1.0, 0.0))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 0.0, 0.0)), (vec2(mat2(injectionSwitch, 0.0, 0.0))) * vec2(1.0, 1.0))))), vec2(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 0.0, 0.0)), (vec2(mat2(injectionSwitch, 0.0, 0.0))) * vec2(1.0, 1.0))))), 1.0, 1.0), mat2(mat3(mat2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 0.0, 0.0)), (vec2(mat2(injectionSwitch, 0.0, 0.0))) * vec2(1.0, 1.0))))), 1.0, 1.0))))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 0.0, 0.0)), (vec2(mat2(injectionSwitch, 0.0, 0.0))) * vec2(1.0, 1.0))))), vec2(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 0.0, 0.0)), (vec2(mat2(injectionSwitch, 0.0, 0.0))) * vec2(1.0, 1.0))))), 1.0, 1.0), mat2(mat3(mat2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 0.0, 0.0)), (vec2(mat2(injectionSwitch, 0.0, 0.0))) * vec2(1.0, 1.0))))), 1.0, 1.0))))))))) * mat2(1.0))) + vec2(0.0, 0.0)))).y, 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (false ? _GLF_IDENTITY(_GLF_FUZZED(-6316.3123), clamp(_GLF_IDENTITY(_GLF_FUZZED(-6316.3123), (_GLF_IDENTITY(_GLF_FUZZED(-6316.3123), 1.0 * (_GLF_FUZZED(-6316.3123)))) / 1.0), _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-6316.3123, clamp(_GLF_IDENTITY(-6316.3123, max(-6316.3123, -6316.3123)), -6316.3123, -6316.3123))), (false ? _GLF_FUZZED(359.191) : _GLF_FUZZED(-6316.3123))), _GLF_IDENTITY(_GLF_FUZZED(-6316.3123), max(_GLF_FUZZED(-6316.3123), _GLF_FUZZED(-6316.3123))))) : 1.0)), 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), mix(float((1.0)), float(_GLF_FUZZED((+ 59.89))), bool(false))) * 1.0))))).y, mix(float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-6316.3123) : 1.0)), 1.0, _GLF_IDENTITY(1.0, (1.0) * 1.0)))), _GLF_IDENTITY(vec2(mat4(_GLF_IDENTITY((injectionSwitch) * mat2(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-6316.3123) : 1.0)), 1.0, _GLF_IDENTITY(1.0, (1.0) * 1.0)))), vec2(mat3(_GLF_IDENTITY((injectionSwitch) * mat2(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-6316.3123) : 1.0)), 1.0, _GLF_IDENTITY(1.0, (1.0) * 1.0)))), mat2(1.0) * ((injectionSwitch) * mat2(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-6316.3123) : 1.0)), 1.0, _GLF_IDENTITY(1.0, (1.0) * 1.0)))))), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0))), 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, log(1.0), _GLF_IDENTITY(dot(vec3(0.0, cos(0.0), 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, cos(0.0), 0.0), vec3(0.0, 1.0, 0.0))), length(0.0), cos(0.0), 1.0, round(length(normalize(1.0))), log(1.0), _GLF_ZERO(0.0, injectionSwitch.x))), (vec2(mat4(_GLF_IDENTITY((injectionSwitch) * mat2(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-6316.3123) : 1.0)), 1.0, _GLF_IDENTITY(1.0, (1.0) * 1.0)))), vec2(mat3(_GLF_IDENTITY((injectionSwitch) * mat2(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-6316.3123) : 1.0)), 1.0, _GLF_IDENTITY(1.0, (1.0) * 1.0)))), mat2(1.0) * ((injectionSwitch) * mat2(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-6316.3123) : 1.0)), 1.0, _GLF_IDENTITY(1.0, (1.0) * 1.0)))))), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0))), 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, log(1.0), _GLF_IDENTITY(dot(vec3(0.0, cos(0.0), 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, cos(0.0), 0.0), vec3(0.0, 1.0, 0.0))), length(0.0), cos(0.0), 1.0, round(length(normalize(1.0))), log(1.0), _GLF_ZERO(0.0, injectionSwitch.x)))) - tan(vec2(0.0, 0.0))))).y), float(_GLF_FUZZED(935.435)), bool(false))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), mat2(mat3(mat2(1.0))))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), max(max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch))))) * mat2(1.0), ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) * mat2(1.0)) * vec2(1.0, 1.0))), (injectionSwitch) * mat2(1.0)).y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED(mat2(-6101.8983, 7.2, -2.4, 6214.9982)) : mat2(1.0)))).y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)))))), bool(bvec4((! (_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * _GLF_ONE(1.0, injectionSwitch.y)), 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(0.0))), 0.0)), _GLF_IDENTITY(dot(vec4(sqrt(0.0), 1.0, 0.0, 0.0), vec4(1.0, 0.0, 1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(sqrt(0.0), 1.0, 0.0, 0.0), vec4(vec4(vec4(sqrt(0.0), 1.0, 0.0, 0.0)))), vec4(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(7390.2710)), bool(false))))), 0.0, 1.0, 1.0)), float(mat4x3(dot(vec4(_GLF_IDENTITY(sqrt(0.0), min(sqrt(0.0), sqrt(0.0))), 1.0, 0.0, 0.0), vec4(1.0, 0.0, 1.0, 1.0)), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0))), (true ? _GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(sqrt(0.0), 1.0, 0.0, 0.0), vec4(vec4(vec4(sqrt(0.0), 1.0, 0.0, 0.0)))), _GLF_IDENTITY(vec4(1.0, 0.0, 1.0, 1.0), max(vec4(1.0, 0.0, 1.0, 1.0), _GLF_IDENTITY(vec4(1.0, 0.0, 1.0, 1.0), min(vec4(1.0, 0.0, 1.0, 1.0), vec4(1.0, 0.0, 1.0, 1.0)))))), float(mat4x3(dot(vec4(sqrt(0.0), 1.0, 0.0, 0.0), vec4(1.0, 0.0, 1.0, 1.0)), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0))) : _GLF_FUZZED(6.1)))), 0.0, 0.0, 1.0, 1.0))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 0.0, 0.0)), (vec2(mat2(injectionSwitch, 0.0, 0.0))) * vec2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-0.6)), bool(false))), 1.0)))))) * mat2(1.0)).y, 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-6316.3123) : 1.0)), _GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) - 0.0), _GLF_IDENTITY((1.0), mix(float((1.0)), float(_GLF_FUZZED((+ 59.89))), bool(false))) * 1.0))))).y, mix(float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-6316.3123) : 1.0)), (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-6316.3123) : 1.0))) * 1.0), 1.0, _GLF_IDENTITY(1.0, (1.0) * 1.0))))).y), float(_GLF_FUZZED(935.435)), bool(false))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), (injectionSwitch) * mat2(1.0)).y, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(vec3(-2.0, -2063.5139, -0.1).p), ((injectionSwitch))[1]), vec2(((injectionSwitch))[0], _GLF_FUZZED(4.6)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))) * _GLF_IDENTITY(mat2(1.0), (_GLF_IDENTITY(false ? _GLF_FUZZED(mat2(-6101.8983, 7.2, -2.4, 6214.9982)) : mat2(1.0), (false ? _GLF_FUZZED(mat2(-6101.8983, 7.2, -2.4, 6214.9982)) : mat2(1.0)) - mat2(0.0, 0.0, 0.0, 0.0))))).y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)))))), false, false, false))))) || _GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) && true), true && ((false))) && true))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | (0u & 151076u));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint total_threads = num_workgroup * _GLF_IDENTITY(workgroup_size, (workgroup_size) | (_GLF_IDENTITY(workgroup_size, 1u * (workgroup_size))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(1306.5874)), bool(false))), injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)))) || false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1)) < _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(_GLF_IDENTITY(~ (~ ((subgroup_size))), _GLF_IDENTITY((~ (~ ((subgroup_size)))) / _GLF_IDENTITY(1u, 0u | (_GLF_IDENTITY(1u, _GLF_IDENTITY((1u) ^ 0u, ((1u) ^ 0u) | 0u)))), clamp(_GLF_IDENTITY((~ (_GLF_IDENTITY(~ ((subgroup_size)), (_GLF_IDENTITY(~ ((subgroup_size)), (true ? ~ ((subgroup_size)) : _GLF_FUZZED(gid)))) | (_GLF_IDENTITY(~ ((subgroup_size)), (~ ((subgroup_size))) ^ 0u))))) / 1u, max((~ (~ ((_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(atomicExchange(workgroup_size, total_threads)))))))) / _GLF_IDENTITY(1u, (1u) / 1u), (~ (~ ((subgroup_size)))) / 1u)), _GLF_IDENTITY((~ (~ ((subgroup_size)))) / 1u, (_GLF_IDENTITY((~ (~ ((subgroup_size)))) / 1u, clamp((~ (~ ((subgroup_size)))) / 1u, (_GLF_IDENTITY(~ (~ ((subgroup_size))), (~ (~ ((subgroup_size)))) | (~ (~ ((subgroup_size)))))) / 1u, (~ (~ ((subgroup_size)))) / 1u))) | _GLF_IDENTITY((_GLF_IDENTITY((~ (~ ((subgroup_size)))) / 1u, ((~ (~ ((subgroup_size)))) / 1u) << 0u)), min((_GLF_IDENTITY((~ (~ ((subgroup_size)))) / 1u, ((~ (~ ((subgroup_size)))) / 1u) << 0u)), (_GLF_IDENTITY((~ (~ ((subgroup_size)))) / 1u, ((~ (~ ((subgroup_size)))) / 1u) << 0u))))), _GLF_IDENTITY((~ (~ ((subgroup_size)))), ((~ (~ ((subgroup_size))))) * 1u) / 1u))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (~ ((subgroup_size))), _GLF_IDENTITY((~ (~ ((subgroup_size)))) / _GLF_IDENTITY(1u, 0u | (_GLF_IDENTITY(1u, _GLF_IDENTITY((1u) ^ 0u, ((1u) ^ 0u) | 0u)))), clamp(_GLF_IDENTITY((~ (_GLF_IDENTITY(~ ((subgroup_size)), (_GLF_IDENTITY(~ ((subgroup_size)), (true ? ~ ((subgroup_size)) : _GLF_FUZZED(gid)))) | (_GLF_IDENTITY(~ ((subgroup_size)), (~ ((subgroup_size))) ^ 0u))))) / 1u, max((~ (~ ((_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(atomicExchange(workgroup_size, total_threads)))))))) / _GLF_IDENTITY(1u, (1u) / 1u), (~ (~ ((subgroup_size)))) / 1u)), _GLF_IDENTITY((~ (~ ((subgroup_size)))) / 1u, (_GLF_IDENTITY((~ (~ ((subgroup_size)))) / 1u, clamp((~ (~ ((subgroup_size)))) / 1u, (_GLF_IDENTITY(~ (~ ((subgroup_size))), (~ (~ ((subgroup_size)))) | (~ (~ ((subgroup_size)))))) / 1u, (~ (~ ((subgroup_size)))) / 1u))) | _GLF_IDENTITY((_GLF_IDENTITY((~ (~ ((subgroup_size)))) / 1u, ((~ (~ ((subgroup_size)))) / 1u) << 0u)), min((_GLF_IDENTITY((~ (~ ((subgroup_size)))) / 1u, ((~ (~ ((subgroup_size)))) / 1u) << 0u)), (_GLF_IDENTITY((~ (~ ((subgroup_size)))) / 1u, ((~ (~ ((subgroup_size)))) / 1u) << 0u))))), _GLF_IDENTITY((~ (~ ((subgroup_size)))), ((~ (~ ((subgroup_size))))) * 1u) / 1u))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (~ ((subgroup_size))), _GLF_IDENTITY((~ (~ ((subgroup_size)))) / _GLF_IDENTITY(1u, 0u | (_GLF_IDENTITY(1u, _GLF_IDENTITY((1u) ^ 0u, ((1u) ^ 0u) | 0u)))), clamp(_GLF_IDENTITY((~ (_GLF_IDENTITY(~ ((subgroup_size)), (_GLF_IDENTITY(~ ((subgroup_size)), (true ? ~ ((subgroup_size)) : _GLF_FUZZED(gid)))) | (_GLF_IDENTITY(~ ((subgroup_size)), (~ ((subgroup_size))) ^ 0u))))) / 1u, max((~ (~ ((_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(atomicExchange(workgroup_size, total_threads)))))))) / _GLF_IDENTITY(1u, (1u) / 1u), (~ (~ ((subgroup_size)))) / 1u)), _GLF_IDENTITY((~ (~ ((subgroup_size)))) / 1u, (_GLF_IDENTITY((~ (~ ((subgroup_size)))) / 1u, clamp((~ (~ ((subgroup_size)))) / 1u, (_GLF_IDENTITY(~ (~ ((subgroup_size))), (~ (~ ((subgroup_size)))) | (~ (~ ((subgroup_size)))))) / 1u, (~ (~ ((subgroup_size)))) / 1u))) | _GLF_IDENTITY((_GLF_IDENTITY((~ (~ ((subgroup_size)))) / 1u, ((~ (~ ((subgroup_size)))) / 1u) << 0u)), min((_GLF_IDENTITY((~ (~ ((subgroup_size)))) / 1u, ((~ (~ ((subgroup_size)))) / 1u) << 0u)), (_GLF_IDENTITY((~ (~ ((subgroup_size)))) / 1u, ((~ (~ ((subgroup_size)))) / 1u) << 0u))))), _GLF_IDENTITY((~ (~ ((subgroup_size)))), ((~ (~ ((subgroup_size))))) * 1u) / 1u))), 1u * (_GLF_IDENTITY(~ (~ ((subgroup_size))), _GLF_IDENTITY((~ (~ ((subgroup_size)))) / _GLF_IDENTITY(1u, 0u | (_GLF_IDENTITY(1u, _GLF_IDENTITY((1u) ^ 0u, ((1u) ^ 0u) | 0u)))), clamp(_GLF_IDENTITY((~ (_GLF_IDENTITY(~ ((subgroup_size)), (_GLF_IDENTITY(~ ((subgroup_size)), (true ? ~ ((subgroup_size)) : _GLF_FUZZED(gid)))) | (_GLF_IDENTITY(~ ((subgroup_size)), (~ ((subgroup_size))) ^ 0u))))) / 1u, max((~ (~ ((_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(atomicExchange(workgroup_size, total_threads)))))))) / _GLF_IDENTITY(1u, (1u) / 1u), (~ (~ ((subgroup_size)))) / 1u)), _GLF_IDENTITY((~ (~ ((subgroup_size)))) / 1u, (_GLF_IDENTITY((~ (~ ((subgroup_size)))) / 1u, clamp((~ (~ ((subgroup_size)))) / 1u, (_GLF_IDENTITY(~ (~ ((subgroup_size))), (~ (~ ((subgroup_size)))) | (~ (~ ((subgroup_size)))))) / 1u, (~ (~ ((subgroup_size)))) / 1u))) | _GLF_IDENTITY((_GLF_IDENTITY((~ (~ ((subgroup_size)))) / 1u, ((~ (~ ((subgroup_size)))) / 1u) << 0u)), min((_GLF_IDENTITY((~ (~ ((subgroup_size)))) / 1u, ((~ (~ ((subgroup_size)))) / 1u) << 0u)), (_GLF_IDENTITY((~ (~ ((subgroup_size)))) / 1u, ((~ (~ ((subgroup_size)))) / 1u) << 0u))))), _GLF_IDENTITY((~ (~ ((subgroup_size)))), ((~ (~ ((subgroup_size))))) * 1u) / 1u)))))) / 1u)) | 0u)) | 0u), (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), ~ _GLF_IDENTITY((~ ((subgroup_size))), max((~ ((subgroup_size))), (~ ((subgroup_size)))))) | 0u)) / _GLF_IDENTITY(1u, (1u) / 1u)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), 0.0, 1.0, 1.0, sin(0.0)), (mat3x2(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), sin(0.0))) - mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), max(vec2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), 0.0, 1.0, 1.0, sin(0.0)), (mat3x2(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), 0.0, 1.0, 1.0, sin(0.0))) - mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), vec2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, sin(0.0)), (mat3x2(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), 0.0, 1.0, 1.0, _GLF_IDENTITY(sin(0.0), min(_GLF_IDENTITY(sin(0.0), clamp(sin(0.0), sin(0.0), sin(0.0))), sin(0.0))))) - mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))), 1.0, 1.0, 1.0, 1.0, sqrt(0.0), tan(0.0), 1.0, 1.0, 1.0, 1.0))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   atomicStore(buf[(gid + 1) % total_threads], _GLF_IDENTITY(uint(2), (uint(2)) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), 4, 64, 0);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), ! (! ((injectionSwitch.x > injectionSwitch.y))))) || false)), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))), false || (_GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, true, false))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-9285.2307), _GLF_FUZZED((4.6 * -423.274))), bvec2(false, false))).y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], max(_GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])), injectionSwitch[1])))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   subgroupAll(false);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)) || false)) && true)), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)) || false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)) || false)))) && true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), true && (bool(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, 0.0, 0.0, exp(0.0), 0.0, 1.0, 0.0), (mat4x2(injectionSwitch, 0.0, 0.0, exp(0.0), 0.0, 1.0, 0.0)) - mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))).y), ((injectionSwitch.x > injectionSwitch.y)) && true)) || false)) && true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))) || (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false)))))), true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))))), (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false)))))), true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false)))))))))) && true)))))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0))).y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 else
  {
   atomicStore(buf[(gid + 1) % _GLF_IDENTITY(total_threads, _GLF_IDENTITY((total_threads) << (0u << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), min(uint(1u), uint(1u))), clamp(_GLF_IDENTITY(uint(1u), ~ _GLF_IDENTITY((~ (uint(1u))), 1u * ((~ (uint(1u)))))), uint(1u), uint(_GLF_IDENTITY(1u, (1u) | (1u))))))), max((total_threads) << (_GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, (0u) | 0u) : _GLF_FUZZED(subgroup_size))) << _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), (_GLF_IDENTITY(uint(1u), 0u ^ (uint(1u)))) * 1u), _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) >> 0u), 0u ^ (_GLF_IDENTITY(1u, (1u) | (1u))))), min(uint(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) >> 0u), 0u ^ (_GLF_IDENTITY(1u, (1u) | (1u))))), uint(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) >> 0u), 0u ^ (_GLF_IDENTITY(1u, (1u) | (1u))))))), clamp(_GLF_IDENTITY(uint(1u), _GLF_IDENTITY(~ (~ (uint(1u))), (~ (~ (uint(1u)))) >> 0u)), uint(1u), uint(1u))))), _GLF_IDENTITY(_GLF_IDENTITY((total_threads) << (0u << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), ~ (~ (uint(1u)))), (_GLF_IDENTITY(uint(1u), ~ (~ (uint(1u))))) | 0u), _GLF_IDENTITY(uint(1u), 0u | (_GLF_IDENTITY(uint(1u), uint(uvec2(uint(1u), 1u))))), uint(1u))))), min((total_threads) << (_GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), (_GLF_IDENTITY(0u, min(0u, 0u))) / 1u) << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), ~ (~ (uint(1u)))), ~ (~ (uint(1u)))), _GLF_IDENTITY(uint(1u), 0u | (_GLF_IDENTITY(uint(1u), min(uint(1u), uint(1u))))), _GLF_IDENTITY(uint(1u), min(uint(1u), uint(1u))))))), (total_threads) << (0u << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), clamp(_GLF_IDENTITY(uint(1u), _GLF_IDENTITY(~ (~ (uint(1u))), (_GLF_IDENTITY(~ (~ (uint(1u))), (~ (~ (uint(1u)))) | (~ (~ (uint(1u)))))) | (~ (~ (uint(1u)))))), uint(1u), uint(1u))))))), max(_GLF_IDENTITY((total_threads) << (0u << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), ~ (~ (uint(1u)))), (_GLF_IDENTITY(uint(1u), ~ (~ (uint(1u))))) | 0u), _GLF_IDENTITY(uint(1u), 0u | (_GLF_IDENTITY(uint(1u), uint(uvec2(uint(1u), 1u))))), uint(1u))))), min((total_threads) << (_GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), (_GLF_IDENTITY(0u, min(0u, 0u))) / 1u) << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), ~ (~ (uint(1u)))), ~ (~ (uint(1u)))), _GLF_IDENTITY(uint(1u), 0u | (_GLF_IDENTITY(uint(1u), min(uint(1u), uint(1u))))), _GLF_IDENTITY(uint(1u), min(uint(1u), uint(1u))))))), (total_threads) << (0u << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), clamp(_GLF_IDENTITY(uint(1u), _GLF_IDENTITY(~ (~ (uint(1u))), (_GLF_IDENTITY(~ (~ (uint(1u))), (~ (~ (uint(1u)))) | (~ (~ (uint(1u)))))) | (~ (~ (uint(1u)))))), uint(1u), uint(1u))))))), _GLF_IDENTITY((total_threads) << (0u << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), ~ (~ (uint(1u)))), (_GLF_IDENTITY(uint(1u), ~ (~ (uint(1u))))) | 0u), _GLF_IDENTITY(uint(1u), 0u | (_GLF_IDENTITY(uint(1u), uint(uvec2(uint(1u), 1u))))), uint(1u))))), min((total_threads) << (_GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), (_GLF_IDENTITY(0u, min(0u, 0u))) / 1u) << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), ~ (~ (uint(1u)))), ~ (~ (uint(1u)))), _GLF_IDENTITY(uint(1u), 0u | (_GLF_IDENTITY(uint(1u), min(uint(1u), uint(1u))))), _GLF_IDENTITY(uint(1u), min(uint(1u), uint(1u))))))), (total_threads) << (0u << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), clamp(_GLF_IDENTITY(uint(1u), _GLF_IDENTITY(~ (~ (uint(1u))), (_GLF_IDENTITY(~ (~ (uint(1u))), (~ (~ (uint(1u)))) | (~ (~ (uint(1u)))))) | (~ (~ (uint(1u)))))), uint(1u), uint(1u))))))))))))], _GLF_IDENTITY(_GLF_IDENTITY(uint(2), (uint(2)) / 1u), (uint(_GLF_IDENTITY(2, min(2, 2)))) | (_GLF_IDENTITY(uint(2), clamp(uint(2), uint(2), uint(2))))), _GLF_IDENTITY(4, (4) - int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 0);
   subgroupAll(true);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (true) && true))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
}
