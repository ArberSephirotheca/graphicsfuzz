#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))) || (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), false, true, true)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uvec3 GLF_merged3_0_1_13_1_1_17_2_1_12num_workgroupsubgroup_local_idworkgroup_id;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY((! (_GLF_DEAD(false))), bool(_GLF_IDENTITY(bvec2((! (_GLF_DEAD(false))), true), bvec2(bvec2(bvec2((! (_GLF_DEAD(false))), true)))))) && true)))), (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)) || (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true)))), (false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true))))) && true)) && true)))
  return;
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 GLF_merged3_0_1_13_1_1_17_2_1_12num_workgroupsubgroup_local_idworkgroup_id.y = subgroup_local_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, uint(_GLF_IDENTITY(uvec3(gl_NumWorkGroups.x, 0u, _GLF_IDENTITY((_GLF_IDENTITY(0u ^ _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), _GLF_IDENTITY(1u, 0u + (1u)))), min(0u ^ _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), _GLF_IDENTITY(1u, 0u + (1u)))), 0u ^ _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), _GLF_IDENTITY(1u, 0u + (1u))))))), 0u + (_GLF_IDENTITY((_GLF_IDENTITY(0u ^ _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), _GLF_IDENTITY(1u, 0u + (1u)))), min(0u ^ _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), _GLF_IDENTITY(1u, 0u + (1u)))), 0u ^ _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), _GLF_IDENTITY(1u, 0u + (1u))))))), min((_GLF_IDENTITY(0u ^ _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), _GLF_IDENTITY(1u, 0u + (1u)))), min(0u ^ _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), _GLF_IDENTITY(1u, 0u + (1u)))), 0u ^ _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), _GLF_IDENTITY(1u, 0u + (1u))))))), (_GLF_IDENTITY(0u ^ _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), _GLF_IDENTITY(1u, 0u + (1u)))), min(0u ^ _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), _GLF_IDENTITY(1u, 0u + (1u)))), 0u ^ _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), _GLF_IDENTITY(1u, 0u + (1u)))))))))))), (_GLF_IDENTITY(uvec3(gl_NumWorkGroups.x, 0u, (_GLF_IDENTITY(0u ^ 1u, max(0u ^ 1u, _GLF_IDENTITY(0u ^ 1u, ~ (~ (0u ^ 1u))))))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(gl_NumWorkGroups.x, 0u, (0u ^ 1u)), (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(gl_NumWorkGroups.x, 0u, (0u ^ 1u)), max(_GLF_IDENTITY(uvec3(gl_NumWorkGroups.x, 0u, _GLF_IDENTITY((0u ^ 1u), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(0u ^ 1u, max(_GLF_IDENTITY(0u ^ 1u, (true ? 0u ^ 1u : _GLF_FUZZED(subgroup_size))), _GLF_IDENTITY(0u ^ 1u, (false ? _GLF_FUZZED(subgroup_id) : 0u ^ 1u))))), 0u ^ (_GLF_IDENTITY((0u ^ 1u), min((_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) - 0u)))) | 0u) ^ 1u), (0u ^ 1u))))))))), (uvec3(gl_NumWorkGroups.x, 0u, (0u ^ 1u))) << uvec3(0u, 0u, 0u)), uvec3(gl_NumWorkGroups.x, 0u, (0u ^ 1u)))), (_GLF_IDENTITY(uvec3(gl_NumWorkGroups.x, 0u, (0u ^ 1u)), max(_GLF_IDENTITY(uvec3(gl_NumWorkGroups.x, 0u, _GLF_IDENTITY((0u ^ 1u), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(0u ^ 1u, max(_GLF_IDENTITY(0u ^ 1u, (true ? 0u ^ 1u : _GLF_FUZZED(subgroup_size))), _GLF_IDENTITY(0u ^ 1u, (false ? _GLF_FUZZED(subgroup_id) : 0u ^ 1u))))), 0u ^ (_GLF_IDENTITY((0u ^ 1u), min((_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) - 0u)))) | 0u) ^ 1u), (0u ^ 1u))))))))), (uvec3(gl_NumWorkGroups.x, 0u, (0u ^ 1u))) << uvec3(0u, 0u, 0u)), uvec3(gl_NumWorkGroups.x, 0u, (0u ^ 1u))))) ^ uvec3(0u, 0u, 0u))) | uvec3(0u, 0u, 0u)), _GLF_IDENTITY((uvec3(_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(_GLF_IDENTITY(uint(uint(gl_NumWorkGroups.x)), clamp(uint(uint(gl_NumWorkGroups.x)), uint(uint(gl_NumWorkGroups.x)), _GLF_IDENTITY(uint(uint(gl_NumWorkGroups.x)), 0u ^ (uint(uint(gl_NumWorkGroups.x)))))), max(uint(uint(gl_NumWorkGroups.x)), uint(uint(gl_NumWorkGroups.x))))), _GLF_IDENTITY(0u, (0u) ^ (0u << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(1u), (uint(1u)) | (uint(1u)))), (~ (_GLF_IDENTITY(uint(1u), (uint(1u)) | (uint(1u))))) ^ 0u)))))), (0u ^ 1u))) + uvec3(0u, 0u, 0u), (_GLF_IDENTITY((uvec3(_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(_GLF_IDENTITY(uint(uint(gl_NumWorkGroups.x)), clamp(uint(uint(gl_NumWorkGroups.x)), uint(uint(gl_NumWorkGroups.x)), _GLF_IDENTITY(uint(uint(gl_NumWorkGroups.x)), 0u ^ (uint(uint(gl_NumWorkGroups.x)))))), max(uint(uint(gl_NumWorkGroups.x)), uint(uint(gl_NumWorkGroups.x))))), _GLF_IDENTITY(0u, (0u) ^ (0u << _GLF_IDENTITY(uint(1u), uint(1u)))), (0u ^ 1u))) + uvec3(0u, 0u, 0u), ~ (~ (_GLF_IDENTITY((uvec3(_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(_GLF_IDENTITY(uint(uint(gl_NumWorkGroups.x)), clamp(uint(uint(gl_NumWorkGroups.x)), uint(uint(gl_NumWorkGroups.x)), _GLF_IDENTITY(uint(uint(gl_NumWorkGroups.x)), 0u ^ (uint(uint(gl_NumWorkGroups.x)))))), max(uint(uint(gl_NumWorkGroups.x)), uint(uint(gl_NumWorkGroups.x))))), _GLF_IDENTITY(0u, (0u) ^ (0u << _GLF_IDENTITY(uint(1u), uint(1u)))), (0u ^ 1u))) + uvec3(0u, 0u, 0u), clamp((uvec3(_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(_GLF_IDENTITY(uint(uint(gl_NumWorkGroups.x)), clamp(uint(uint(gl_NumWorkGroups.x)), uint(uint(gl_NumWorkGroups.x)), _GLF_IDENTITY(uint(uint(gl_NumWorkGroups.x)), 0u ^ (uint(uint(gl_NumWorkGroups.x)))))), max(uint(uint(gl_NumWorkGroups.x)), uint(uint(gl_NumWorkGroups.x))))), _GLF_IDENTITY(0u, (0u) ^ (0u << _GLF_IDENTITY(uint(1u), uint(1u)))), (0u ^ 1u))) + uvec3(0u, 0u, 0u), (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? gl_NumWorkGroups.x : _GLF_FUZZED(subgroup_local_id))), _GLF_IDENTITY(_GLF_IDENTITY(uint(uint(gl_NumWorkGroups.x)), clamp(uint(uint(gl_NumWorkGroups.x)), uint(uint(gl_NumWorkGroups.x)), _GLF_IDENTITY(uint(uint(gl_NumWorkGroups.x)), 0u ^ (uint(uint(gl_NumWorkGroups.x)))))), max(uint(uint(gl_NumWorkGroups.x)), uint(uint(gl_NumWorkGroups.x))))), _GLF_IDENTITY(0u, (0u) ^ _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(1u), uint(1u))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : (0u << _GLF_IDENTITY(uint(1u), uint(1u)))))), (0u ^ 1u))) + uvec3(0u, 0u, 0u), (uvec3(_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(_GLF_IDENTITY(uint(uint(gl_NumWorkGroups.x)), clamp(uint(uint(gl_NumWorkGroups.x)), uint(uint(gl_NumWorkGroups.x)), _GLF_IDENTITY(uint(uint(gl_NumWorkGroups.x)), 0u ^ (uint(uint(gl_NumWorkGroups.x)))))), max(uint(uint(gl_NumWorkGroups.x)), uint(uint(gl_NumWorkGroups.x))))), _GLF_IDENTITY(0u, (0u) ^ (0u << _GLF_IDENTITY(uint(1u), uint(1u)))), (0u ^ 1u))) + uvec3(0u, 0u, 0u))))))) << uvec3(0u, 0u, 0u)))) | (uvec3(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) >> 0u), _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) | 0u), 0u, 0u)), _GLF_IDENTITY((0u ^ 1u), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) ^ 0u), _GLF_IDENTITY(0u, 1u * (_GLF_IDENTITY(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_local_id) : 0u)), (0u) | (0u)))))) ^ _GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, min(1u, 1u)))), max(_GLF_IDENTITY(0u ^ 1u, clamp(0u ^ 1u, 0u ^ 1u, 0u ^ 1u)), 0u ^ 1u))), ((_GLF_IDENTITY(0u ^ 1u, max(_GLF_IDENTITY(0u ^ 1u, clamp(0u ^ 1u, 0u ^ 1u, 0u ^ 1u)), 0u ^ 1u)))) << 0u), ((0u ^ 1u)) >> 0u)) << 0u))))) - uvec3(0u, 0u, 0u)))), ~ (~ (_GLF_IDENTITY(gl_NumWorkGroups.x, uint(_GLF_IDENTITY(uvec3(gl_NumWorkGroups.x, 0u, _GLF_IDENTITY((_GLF_IDENTITY(0u ^ _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), _GLF_IDENTITY(1u, 0u + (1u)))), min(0u ^ _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), _GLF_IDENTITY(1u, 0u + (1u)))), 0u ^ _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), _GLF_IDENTITY(1u, 0u + (1u))))))), _GLF_IDENTITY(0u, ~ (~ (0u))) + (_GLF_IDENTITY((_GLF_IDENTITY(0u ^ _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), _GLF_IDENTITY(1u, 0u + (1u)))), min(0u ^ _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), _GLF_IDENTITY(1u, 0u + (1u)))), 0u ^ _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), _GLF_IDENTITY(1u, 0u + (1u))))))), min((_GLF_IDENTITY(0u ^ _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), _GLF_IDENTITY(1u, 0u + (1u)))), min(0u ^ _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), _GLF_IDENTITY(1u, 0u + (1u)))), 0u ^ _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), _GLF_IDENTITY(1u, 0u + (1u))))))), (_GLF_IDENTITY(0u ^ _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), _GLF_IDENTITY(1u, 0u + (1u)))), min(0u ^ _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), _GLF_IDENTITY(1u, 0u + (1u)))), 0u ^ _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), _GLF_IDENTITY(1u, 0u + (1u)))))))))))), (_GLF_IDENTITY(uvec3(gl_NumWorkGroups.x, 0u, (_GLF_IDENTITY(0u ^ 1u, max(0u ^ 1u, _GLF_IDENTITY(0u ^ 1u, ~ (~ (0u ^ 1u))))))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(gl_NumWorkGroups.x, 0u, (0u ^ 1u)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uvec3(gl_NumWorkGroups.x, 0u, (0u ^ 1u)), max(_GLF_IDENTITY(uvec3(gl_NumWorkGroups.x, 0u, _GLF_IDENTITY((0u ^ 1u), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(0u ^ 1u, max(_GLF_IDENTITY(0u ^ 1u, (true ? 0u ^ 1u : _GLF_FUZZED(subgroup_size))), _GLF_IDENTITY(0u ^ 1u, (false ? _GLF_FUZZED(subgroup_id) : 0u ^ 1u))))), 0u ^ (_GLF_IDENTITY((0u ^ 1u), min((_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) - 0u)))) | 0u) ^ 1u), (0u ^ 1u))))))), min(~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(0u ^ 1u, max(_GLF_IDENTITY(0u ^ 1u, (true ? 0u ^ 1u : _GLF_FUZZED(subgroup_size))), _GLF_IDENTITY(0u ^ 1u, (false ? _GLF_FUZZED(subgroup_id) : 0u ^ 1u))))), 0u ^ (_GLF_IDENTITY((0u ^ 1u), min((_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) - 0u)))) | 0u) ^ 1u), (0u ^ 1u))))))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(0u ^ 1u, max(_GLF_IDENTITY(0u ^ 1u, (true ? 0u ^ 1u : _GLF_FUZZED(subgroup_size))), _GLF_IDENTITY(0u ^ 1u, (false ? _GLF_FUZZED(subgroup_id) : 0u ^ 1u))))), 0u ^ (_GLF_IDENTITY((0u ^ 1u), min((_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) - 0u)))) | 0u) ^ 1u), (0u ^ 1u))))))))))), (uvec3(gl_NumWorkGroups.x, 0u, (0u ^ 1u))) << uvec3(0u, 0u, 0u)), uvec3(gl_NumWorkGroups.x, 0u, (0u ^ 1u)))), (_GLF_IDENTITY(uvec3(gl_NumWorkGroups.x, 0u, (0u ^ 1u)), max(_GLF_IDENTITY(uvec3(gl_NumWorkGroups.x, 0u, _GLF_IDENTITY((0u ^ 1u), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(0u ^ 1u, max(_GLF_IDENTITY(0u ^ 1u, (_GLF_IDENTITY(true, false || (true)) ? 0u ^ 1u : _GLF_FUZZED(subgroup_size))), _GLF_IDENTITY(0u ^ 1u, (false ? _GLF_FUZZED(subgroup_id) : 0u ^ 1u))))), 0u ^ (_GLF_IDENTITY((0u ^ 1u), min((_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) - 0u)))) | 0u) ^ 1u), (0u ^ 1u))))))))), _GLF_IDENTITY((uvec3(gl_NumWorkGroups.x, 0u, (0u ^ 1u))), ((uvec3(gl_NumWorkGroups.x, 0u, (0u ^ 1u)))) ^ uvec3(0u, 0u, 0u)) << _GLF_IDENTITY(uvec3(0u, 0u, 0u), max(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u)))), uvec3(gl_NumWorkGroups.x, 0u, (0u ^ 1u))))) ^ uvec3(0u, 0u, 0u))), clamp((_GLF_IDENTITY(_GLF_IDENTITY(uvec3(gl_NumWorkGroups.x, 0u, (0u ^ 1u)), max(_GLF_IDENTITY(uvec3(gl_NumWorkGroups.x, 0u, _GLF_IDENTITY((0u ^ 1u), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(0u ^ 1u, max(_GLF_IDENTITY(0u ^ 1u, (true ? 0u ^ 1u : _GLF_FUZZED(subgroup_size))), _GLF_IDENTITY(0u ^ 1u, (false ? _GLF_FUZZED(subgroup_id) : 0u ^ 1u))))), 0u ^ (_GLF_IDENTITY((0u ^ 1u), min((_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) - 0u)))) | 0u) ^ 1u), (0u ^ 1u))))))), min(~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(0u ^ 1u, max(_GLF_IDENTITY(0u ^ 1u, (true ? 0u ^ 1u : _GLF_FUZZED(subgroup_size))), _GLF_IDENTITY(0u ^ 1u, (false ? _GLF_FUZZED(subgroup_id) : 0u ^ 1u))))), 0u ^ (_GLF_IDENTITY((0u ^ 1u), min((_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) - 0u)))) | 0u) ^ 1u), (0u ^ 1u))))))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(0u ^ 1u, max(_GLF_IDENTITY(0u ^ 1u, (true ? 0u ^ 1u : _GLF_FUZZED(subgroup_size))), _GLF_IDENTITY(0u ^ 1u, (false ? _GLF_FUZZED(subgroup_id) : 0u ^ 1u))))), 0u ^ (_GLF_IDENTITY((0u ^ 1u), min((_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) - 0u)))) | 0u) ^ 1u), (0u ^ 1u))))))))))), (uvec3(gl_NumWorkGroups.x, 0u, (0u ^ 1u))) << uvec3(0u, 0u, 0u)), uvec3(gl_NumWorkGroups.x, 0u, (0u ^ 1u)))), (_GLF_IDENTITY(uvec3(gl_NumWorkGroups.x, 0u, (0u ^ 1u)), max(_GLF_IDENTITY(uvec3(gl_NumWorkGroups.x, 0u, _GLF_IDENTITY((0u ^ 1u), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(0u ^ 1u, max(_GLF_IDENTITY(0u ^ 1u, (_GLF_IDENTITY(true, false || (true)) ? 0u ^ 1u : _GLF_FUZZED(subgroup_size))), _GLF_IDENTITY(0u ^ 1u, (false ? _GLF_FUZZED(subgroup_id) : 0u ^ 1u))))), 0u ^ (_GLF_IDENTITY((0u ^ 1u), min((_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) - 0u)))) | 0u) ^ 1u), (0u ^ 1u))))))))), _GLF_IDENTITY((uvec3(gl_NumWorkGroups.x, 0u, (0u ^ 1u))), ((uvec3(gl_NumWorkGroups.x, 0u, (0u ^ 1u)))) ^ uvec3(0u, 0u, 0u)) << _GLF_IDENTITY(uvec3(0u, 0u, 0u), max(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u)))), uvec3(gl_NumWorkGroups.x, 0u, (0u ^ 1u))))) ^ uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(gl_NumWorkGroups.x, 0u, (0u ^ 1u)), max(_GLF_IDENTITY(uvec3(gl_NumWorkGroups.x, 0u, _GLF_IDENTITY((0u ^ 1u), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(0u ^ 1u, max(_GLF_IDENTITY(0u ^ 1u, (true ? 0u ^ 1u : _GLF_FUZZED(subgroup_size))), _GLF_IDENTITY(0u ^ 1u, (false ? _GLF_FUZZED(subgroup_id) : 0u ^ 1u))))), 0u ^ (_GLF_IDENTITY((0u ^ 1u), min((_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) - 0u)))) | 0u) ^ 1u), (0u ^ 1u))))))), min(~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(0u ^ 1u, max(_GLF_IDENTITY(0u ^ 1u, (true ? 0u ^ 1u : _GLF_FUZZED(subgroup_size))), _GLF_IDENTITY(0u ^ 1u, (false ? _GLF_FUZZED(subgroup_id) : 0u ^ 1u))))), 0u ^ (_GLF_IDENTITY((0u ^ 1u), min((_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) - 0u)))) | 0u) ^ 1u), (0u ^ 1u))))))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(0u ^ 1u, max(_GLF_IDENTITY(0u ^ 1u, (true ? 0u ^ 1u : _GLF_FUZZED(subgroup_size))), _GLF_IDENTITY(0u ^ 1u, (false ? _GLF_FUZZED(subgroup_id) : 0u ^ 1u))))), 0u ^ (_GLF_IDENTITY((0u ^ 1u), min((_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) - 0u)))) | 0u) ^ 1u), (0u ^ 1u))))))))))), (uvec3(gl_NumWorkGroups.x, 0u, (0u ^ 1u))) << uvec3(0u, 0u, 0u)), uvec3(gl_NumWorkGroups.x, 0u, (0u ^ 1u)))), (_GLF_IDENTITY(uvec3(gl_NumWorkGroups.x, 0u, (0u ^ 1u)), max(_GLF_IDENTITY(uvec3(gl_NumWorkGroups.x, 0u, _GLF_IDENTITY((0u ^ 1u), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(0u ^ 1u, max(_GLF_IDENTITY(0u ^ 1u, (_GLF_IDENTITY(true, false || (true)) ? 0u ^ 1u : _GLF_FUZZED(subgroup_size))), _GLF_IDENTITY(0u ^ 1u, (false ? _GLF_FUZZED(subgroup_id) : 0u ^ 1u))))), 0u ^ (_GLF_IDENTITY((0u ^ 1u), min((_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) - 0u)))) | 0u) ^ 1u), (0u ^ 1u))))))))), _GLF_IDENTITY((uvec3(gl_NumWorkGroups.x, 0u, (0u ^ 1u))), ((uvec3(gl_NumWorkGroups.x, 0u, (0u ^ 1u)))) ^ uvec3(0u, 0u, 0u)) << _GLF_IDENTITY(uvec3(0u, 0u, 0u), max(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u)))), uvec3(gl_NumWorkGroups.x, 0u, (0u ^ 1u))))) ^ uvec3(0u, 0u, 0u))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uvec3(gl_NumWorkGroups.x, 0u, (0u ^ 1u)), max(_GLF_IDENTITY(uvec3(gl_NumWorkGroups.x, 0u, _GLF_IDENTITY((0u ^ 1u), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(0u ^ 1u, max(_GLF_IDENTITY(0u ^ 1u, (true ? 0u ^ 1u : _GLF_FUZZED(subgroup_size))), _GLF_IDENTITY(0u ^ 1u, (false ? _GLF_FUZZED(subgroup_id) : 0u ^ 1u))))), 0u ^ (_GLF_IDENTITY((0u ^ 1u), min((_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) - 0u)))) | 0u) ^ 1u), (0u ^ 1u))))))), min(~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(0u ^ 1u, max(_GLF_IDENTITY(0u ^ 1u, (true ? 0u ^ 1u : _GLF_FUZZED(subgroup_size))), _GLF_IDENTITY(0u ^ 1u, (false ? _GLF_FUZZED(subgroup_id) : 0u ^ 1u))))), 0u ^ (_GLF_IDENTITY((0u ^ 1u), min((_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) - 0u)))) | 0u) ^ 1u), (0u ^ 1u))))))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(0u ^ 1u, max(_GLF_IDENTITY(0u ^ 1u, (true ? 0u ^ 1u : _GLF_FUZZED(subgroup_size))), _GLF_IDENTITY(0u ^ 1u, (false ? _GLF_FUZZED(subgroup_id) : 0u ^ 1u))))), 0u ^ (_GLF_IDENTITY((0u ^ 1u), min((_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) - 0u)))) | 0u) ^ 1u), (0u ^ 1u))))))))))), (uvec3(gl_NumWorkGroups.x, 0u, (0u ^ 1u))) << uvec3(0u, 0u, 0u)), uvec3(gl_NumWorkGroups.x, 0u, (0u ^ 1u)))), (_GLF_IDENTITY(uvec3(gl_NumWorkGroups.x, 0u, (0u ^ 1u)), max(_GLF_IDENTITY(uvec3(gl_NumWorkGroups.x, 0u, _GLF_IDENTITY((0u ^ 1u), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(0u ^ 1u, max(_GLF_IDENTITY(0u ^ 1u, (_GLF_IDENTITY(true, false || (true)) ? 0u ^ 1u : _GLF_FUZZED(subgroup_size))), _GLF_IDENTITY(0u ^ 1u, (false ? _GLF_FUZZED(subgroup_id) : 0u ^ 1u))))), 0u ^ (_GLF_IDENTITY((0u ^ 1u), min((_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) - 0u)))) | 0u) ^ 1u), (0u ^ 1u))))))))), _GLF_IDENTITY((uvec3(gl_NumWorkGroups.x, 0u, (0u ^ 1u))), ((uvec3(gl_NumWorkGroups.x, 0u, (0u ^ 1u)))) ^ uvec3(0u, 0u, 0u)) << _GLF_IDENTITY(uvec3(0u, 0u, 0u), max(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u)))), uvec3(gl_NumWorkGroups.x, 0u, (0u ^ 1u))))) ^ uvec3(0u, 0u, 0u))), min((_GLF_IDENTITY(_GLF_IDENTITY(uvec3(gl_NumWorkGroups.x, 0u, (0u ^ 1u)), max(_GLF_IDENTITY(uvec3(gl_NumWorkGroups.x, 0u, _GLF_IDENTITY((0u ^ 1u), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(0u ^ 1u, max(_GLF_IDENTITY(0u ^ 1u, (true ? 0u ^ 1u : _GLF_FUZZED(subgroup_size))), _GLF_IDENTITY(0u ^ 1u, (false ? _GLF_FUZZED(subgroup_id) : 0u ^ 1u))))), 0u ^ (_GLF_IDENTITY((0u ^ 1u), min((_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) - 0u)))) | 0u) ^ 1u), (0u ^ 1u))))))), min(~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(0u ^ 1u, max(_GLF_IDENTITY(0u ^ 1u, (true ? 0u ^ 1u : _GLF_FUZZED(subgroup_size))), _GLF_IDENTITY(0u ^ 1u, (false ? _GLF_FUZZED(subgroup_id) : 0u ^ 1u))))), 0u ^ (_GLF_IDENTITY((0u ^ 1u), min((_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) - 0u)))) | 0u) ^ 1u), (0u ^ 1u))))))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(0u ^ 1u, max(_GLF_IDENTITY(0u ^ 1u, (true ? 0u ^ 1u : _GLF_FUZZED(subgroup_size))), _GLF_IDENTITY(0u ^ 1u, (false ? _GLF_FUZZED(subgroup_id) : 0u ^ 1u))))), 0u ^ (_GLF_IDENTITY((0u ^ 1u), min((_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) - 0u)))) | 0u) ^ 1u), (0u ^ 1u))))))))))), (uvec3(gl_NumWorkGroups.x, 0u, (0u ^ 1u))) << uvec3(0u, 0u, 0u)), uvec3(gl_NumWorkGroups.x, 0u, (0u ^ 1u)))), (_GLF_IDENTITY(uvec3(gl_NumWorkGroups.x, 0u, (0u ^ 1u)), max(_GLF_IDENTITY(uvec3(gl_NumWorkGroups.x, 0u, _GLF_IDENTITY((0u ^ 1u), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(0u ^ 1u, max(_GLF_IDENTITY(0u ^ 1u, (_GLF_IDENTITY(true, false || (true)) ? 0u ^ 1u : _GLF_FUZZED(subgroup_size))), _GLF_IDENTITY(0u ^ 1u, (false ? _GLF_FUZZED(subgroup_id) : 0u ^ 1u))))), 0u ^ (_GLF_IDENTITY((0u ^ 1u), min((_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) - 0u)))) | 0u) ^ 1u), (0u ^ 1u))))))))), _GLF_IDENTITY((uvec3(gl_NumWorkGroups.x, 0u, (0u ^ 1u))), ((uvec3(gl_NumWorkGroups.x, 0u, (0u ^ 1u)))) ^ uvec3(0u, 0u, 0u)) << _GLF_IDENTITY(uvec3(0u, 0u, 0u), max(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u)))), uvec3(gl_NumWorkGroups.x, 0u, (0u ^ 1u))))) ^ uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(gl_NumWorkGroups.x, 0u, (0u ^ 1u)), max(_GLF_IDENTITY(uvec3(gl_NumWorkGroups.x, 0u, _GLF_IDENTITY((0u ^ 1u), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(0u ^ 1u, max(_GLF_IDENTITY(0u ^ 1u, (true ? 0u ^ 1u : _GLF_FUZZED(subgroup_size))), _GLF_IDENTITY(0u ^ 1u, (false ? _GLF_FUZZED(subgroup_id) : 0u ^ 1u))))), 0u ^ (_GLF_IDENTITY((0u ^ 1u), min((_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) - 0u)))) | 0u) ^ 1u), (0u ^ 1u))))))), min(~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(0u ^ 1u, max(_GLF_IDENTITY(0u ^ 1u, (true ? 0u ^ 1u : _GLF_FUZZED(subgroup_size))), _GLF_IDENTITY(0u ^ 1u, (false ? _GLF_FUZZED(subgroup_id) : 0u ^ 1u))))), 0u ^ (_GLF_IDENTITY((0u ^ 1u), min((_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) - 0u)))) | 0u) ^ 1u), (0u ^ 1u))))))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(0u ^ 1u, max(_GLF_IDENTITY(0u ^ 1u, (true ? 0u ^ 1u : _GLF_FUZZED(subgroup_size))), _GLF_IDENTITY(0u ^ 1u, (false ? _GLF_FUZZED(subgroup_id) : 0u ^ 1u))))), 0u ^ (_GLF_IDENTITY((0u ^ 1u), min((_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) - 0u)))) | 0u) ^ 1u), (0u ^ 1u))))))))))), (uvec3(gl_NumWorkGroups.x, 0u, (0u ^ 1u))) << uvec3(0u, 0u, 0u)), uvec3(gl_NumWorkGroups.x, 0u, (0u ^ 1u)))), (_GLF_IDENTITY(uvec3(gl_NumWorkGroups.x, 0u, (0u ^ 1u)), max(_GLF_IDENTITY(uvec3(gl_NumWorkGroups.x, 0u, _GLF_IDENTITY((0u ^ 1u), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(0u ^ 1u, max(_GLF_IDENTITY(0u ^ 1u, (_GLF_IDENTITY(true, false || (true)) ? 0u ^ 1u : _GLF_FUZZED(subgroup_size))), _GLF_IDENTITY(0u ^ 1u, (false ? _GLF_FUZZED(subgroup_id) : 0u ^ 1u))))), 0u ^ (_GLF_IDENTITY((0u ^ 1u), min((_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) - 0u)))) | 0u) ^ 1u), (0u ^ 1u))))))))), _GLF_IDENTITY((uvec3(gl_NumWorkGroups.x, 0u, (0u ^ 1u))), ((uvec3(gl_NumWorkGroups.x, 0u, (0u ^ 1u)))) ^ uvec3(0u, 0u, 0u)) << _GLF_IDENTITY(uvec3(0u, 0u, 0u), max(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u)))), uvec3(gl_NumWorkGroups.x, 0u, (0u ^ 1u))))) ^ uvec3(0u, 0u, 0u))))))) | uvec3(0u, 0u, 0u)), _GLF_IDENTITY((uvec3(_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(_GLF_IDENTITY(uint(uint(gl_NumWorkGroups.x)), _GLF_IDENTITY(clamp(uint(uint(gl_NumWorkGroups.x)), uint(uint(gl_NumWorkGroups.x)), _GLF_IDENTITY(uint(uint(gl_NumWorkGroups.x)), 0u ^ (uint(uint(gl_NumWorkGroups.x))))), ~ (_GLF_IDENTITY(~ (clamp(uint(uint(gl_NumWorkGroups.x)), uint(uint(gl_NumWorkGroups.x)), _GLF_IDENTITY(uint(uint(gl_NumWorkGroups.x)), 0u ^ (uint(uint(gl_NumWorkGroups.x)))))), (_GLF_IDENTITY(~ (clamp(uint(uint(gl_NumWorkGroups.x)), uint(uint(gl_NumWorkGroups.x)), _GLF_IDENTITY(uint(uint(gl_NumWorkGroups.x)), 0u ^ (uint(uint(gl_NumWorkGroups.x)))))), 0u + (~ (clamp(uint(uint(gl_NumWorkGroups.x)), uint(uint(gl_NumWorkGroups.x)), _GLF_IDENTITY(uint(uint(gl_NumWorkGroups.x)), 0u ^ (uint(uint(gl_NumWorkGroups.x))))))))) ^ 0u)))), max(uint(uint(gl_NumWorkGroups.x)), uint(uint(gl_NumWorkGroups.x))))), _GLF_IDENTITY(0u, (0u) ^ (0u << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(1u), (uint(1u)) | (uint(1u)))), (~ (_GLF_IDENTITY(uint(1u), (uint(1u)) | (uint(1u))))) ^ 0u)))))), (0u ^ 1u))) + uvec3(0u, 0u, 0u), (_GLF_IDENTITY((uvec3(_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(_GLF_IDENTITY(uint(uint(gl_NumWorkGroups.x)), clamp(uint(uint(gl_NumWorkGroups.x)), uint(uint(gl_NumWorkGroups.x)), _GLF_IDENTITY(uint(uint(gl_NumWorkGroups.x)), 0u ^ (uint(uint(gl_NumWorkGroups.x)))))), max(uint(uint(gl_NumWorkGroups.x)), uint(uint(gl_NumWorkGroups.x))))), _GLF_IDENTITY(0u, (0u) ^ (0u << _GLF_IDENTITY(uint(1u), uint(1u)))), (0u ^ 1u))) + uvec3(0u, 0u, 0u), ~ (~ (_GLF_IDENTITY((uvec3(_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(_GLF_IDENTITY(uint(uint(_GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (_GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups)))))).x)), _GLF_IDENTITY(clamp(uint(uint(gl_NumWorkGroups.x)), uint(uint(gl_NumWorkGroups.x)), _GLF_IDENTITY(uint(uint(gl_NumWorkGroups.x)), 0u ^ (uint(uint(gl_NumWorkGroups.x))))), 0u ^ (clamp(uint(uint(gl_NumWorkGroups.x)), uint(uint(gl_NumWorkGroups.x)), _GLF_IDENTITY(uint(uint(gl_NumWorkGroups.x)), 0u ^ (uint(uint(gl_NumWorkGroups.x)))))))), max(uint(uint(gl_NumWorkGroups.x)), uint(uint(gl_NumWorkGroups.x))))), _GLF_IDENTITY(0u, (0u) ^ (0u << _GLF_IDENTITY(uint(1u), uint(1u)))), (0u ^ 1u))) + uvec3(0u, 0u, 0u), clamp((uvec3(_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(gl_NumWorkGroups.x), (true ? uint(gl_NumWorkGroups.x) : _GLF_FUZZED(subgroup_id)))), clamp(uint(uint(gl_NumWorkGroups.x)), uint(_GLF_IDENTITY(uint(gl_NumWorkGroups.x), (uint(gl_NumWorkGroups.x)) | (uint(gl_NumWorkGroups.x)))), _GLF_IDENTITY(uint(uint(gl_NumWorkGroups.x)), 0u ^ (uint(uint(gl_NumWorkGroups.x)))))), max(uint(uint(gl_NumWorkGroups.x)), uint(uint(gl_NumWorkGroups.x))))), _GLF_IDENTITY(0u, (0u) ^ (0u << _GLF_IDENTITY(uint(1u), uint(1u)))), (0u ^ 1u))) + uvec3(0u, 0u, 0u), (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? gl_NumWorkGroups.x : _GLF_FUZZED(subgroup_local_id))), _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(gl_NumWorkGroups.x), min(_GLF_IDENTITY(uint(gl_NumWorkGroups.x), (false ? _GLF_FUZZED(171050u) : uint(gl_NumWorkGroups.x))), uint(gl_NumWorkGroups.x)))), clamp(uint(uint(gl_NumWorkGroups.x)), uint(uint(gl_NumWorkGroups.x)), _GLF_IDENTITY(uint(uint(gl_NumWorkGroups.x)), 0u ^ (uint(uint(gl_NumWorkGroups.x)))))), max(uint(uint(gl_NumWorkGroups.x)), uint(uint(gl_NumWorkGroups.x))))), _GLF_IDENTITY(0u, (0u) ^ _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(1u), uint(1u))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : (_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(min(102724u, 118339u)))) << _GLF_IDENTITY(uint(1u), uint(1u)))))), (0u ^ 1u))) + uvec3(0u, 0u, 0u), (uvec3(_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(_GLF_IDENTITY(uint(uint(gl_NumWorkGroups.x)), clamp(uint(uint(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) + uvec3(0u, 0u, 0u))) - uvec3(0u, 0u, 0u)).x)), uint(uint(gl_NumWorkGroups.x)), _GLF_IDENTITY(uint(uint(gl_NumWorkGroups.x)), 0u ^ (uint(uint(gl_NumWorkGroups.x)))))), max(uint(uint(gl_NumWorkGroups.x)), uint(uint(gl_NumWorkGroups.x))))), _GLF_IDENTITY(0u, _GLF_IDENTITY((0u) ^ (0u << _GLF_IDENTITY(uint(1u), uint(1u))), ((0u) ^ (0u << _GLF_IDENTITY(uint(1u), uint(1u)))) ^ (0u >> _GLF_IDENTITY(uint(5u), uint(5u))))), (0u ^ 1u))) + uvec3(0u, 0u, 0u))))))) << uvec3(0u, 0u, 0u)))) | (uvec3(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) >> 0u), _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) | 0u), 0u, 0u)), _GLF_IDENTITY((0u ^ 1u), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) ^ 0u), _GLF_IDENTITY(0u, 1u * (_GLF_IDENTITY(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_local_id) : 0u)), (0u) | (0u)))))) ^ _GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, 1u)), (_GLF_IDENTITY(1u, min(1u, 1u))) / 1u))), max(_GLF_IDENTITY(0u ^ 1u, clamp(0u ^ 1u, 0u ^ 1u, 0u ^ 1u)), _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, max(0u, 0u)))) ^ 1u))), ((_GLF_IDENTITY(0u ^ 1u, max(_GLF_IDENTITY(0u ^ 1u, clamp(0u ^ 1u, 0u ^ 1u, 0u ^ 1u)), 0u ^ 1u)))) << 0u), ((0u ^ 1u)) >> 0u)) << 0u))))) - uvec3(0u, 0u, 0u)))))))) >> _GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, min(0u, 0u))))));
 _GLF_IDENTITY(GLF_merged3_0_1_13_1_1_17_2_1_12num_workgroupsubgroup_local_idworkgroup_id.x = _GLF_IDENTITY(num_workgroup, uint(uvec4(num_workgroup, 0u, 1u, 1u))), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(GLF_merged3_0_1_13_1_1_17_2_1_12num_workgroupsubgroup_local_idworkgroup_id.x = _GLF_IDENTITY(num_workgroup, _GLF_IDENTITY((num_workgroup) | (num_workgroup), (false ? _GLF_FUZZED(subgroup_id) : (num_workgroup) | (num_workgroup)))), (GLF_merged3_0_1_13_1_1_17_2_1_12num_workgroupsubgroup_local_idworkgroup_id.x = num_workgroup) ^ 0u)));
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(injectionSwitch, tan(0.0), 1.0), (mat2(injectionSwitch, tan(0.0), 1.0)) - mat2(0.0, 0.0, 0.0, 0.0))))) / abs(vec2(1.0, 1.0))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))), true, true))), true))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_DEAD(false))), (_GLF_IDENTITY(! (! (_GLF_DEAD(false))), (! (! (_GLF_DEAD(false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true)))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), true)), false || (_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), true)), (bool(bvec2(_GLF_DEAD(false), true))) && true)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))) && true)))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) - uvec3(0u, 0u, 0u)).x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, 1.0, 1.0, 0.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, cos(0.0), 0.0))) > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec4(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false, false)), (bool(bvec4(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false, false))) && true)))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))))))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))))).x > injectionSwitch.y))))
    return;
  }
 GLF_merged3_0_1_13_1_1_17_2_1_12num_workgroupsubgroup_local_idworkgroup_id.z = _GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id)));
 uint workgroup_base = workgroup_size * GLF_merged3_0_1_13_1_1_17_2_1_12num_workgroupsubgroup_local_idworkgroup_id.z;
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) - 0u) + GLF_merged3_0_1_13_1_1_17_2_1_12num_workgroupsubgroup_local_idworkgroup_id.y;
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)) * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), ((subgroup_size)) >> (155262u & 0u)) - 0u) + (_GLF_IDENTITY((GLF_merged3_0_1_13_1_1_17_2_1_12num_workgroupsubgroup_local_idworkgroup_id.y + 1), max((_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_17_2_1_12num_workgroupsubgroup_local_idworkgroup_id.y, 1u * (GLF_merged3_0_1_13_1_1_17_2_1_12num_workgroupsubgroup_local_idworkgroup_id.y)) + 1), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_17_2_1_12num_workgroupsubgroup_local_idworkgroup_id.y, (GLF_merged3_0_1_13_1_1_17_2_1_12num_workgroupsubgroup_local_idworkgroup_id.y) << _GLF_IDENTITY(0u, (0u) - 0u)) + 1), ((_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_17_2_1_12num_workgroupsubgroup_local_idworkgroup_id.y, (GLF_merged3_0_1_13_1_1_17_2_1_12num_workgroupsubgroup_local_idworkgroup_id.y) << _GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) ^ 0u), 0u)), (0u) - 0u)) + 1)) / 1u), ((GLF_merged3_0_1_13_1_1_17_2_1_12num_workgroupsubgroup_local_idworkgroup_id.y + 1)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))) % subgroup_size);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), true)), ! (! (bool(bvec2(_GLF_DEAD(false), true)))))))
  return;
 _GLF_IDENTITY(buf[virtual_gid] = 1, ~ (~ (buf[virtual_gid] = 1)));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (false)))))
  return;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_17_2_1_12num_workgroupsubgroup_local_idworkgroup_id, min(_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_17_2_1_12num_workgroupsubgroup_local_idworkgroup_id, min(GLF_merged3_0_1_13_1_1_17_2_1_12num_workgroupsubgroup_local_idworkgroup_id, GLF_merged3_0_1_13_1_1_17_2_1_12num_workgroupsubgroup_local_idworkgroup_id)), GLF_merged3_0_1_13_1_1_17_2_1_12num_workgroupsubgroup_local_idworkgroup_id)).y, (_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_17_2_1_12num_workgroupsubgroup_local_idworkgroup_id.y, (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))) ? GLF_merged3_0_1_13_1_1_17_2_1_12num_workgroupsubgroup_local_idworkgroup_id.y : _GLF_FUZZED(subgroup_id), 1u * (true ? GLF_merged3_0_1_13_1_1_17_2_1_12num_workgroupsubgroup_local_idworkgroup_id.y : _GLF_FUZZED(subgroup_id)))))) | (_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_17_2_1_12num_workgroupsubgroup_local_idworkgroup_id.y, min(GLF_merged3_0_1_13_1_1_17_2_1_12num_workgroupsubgroup_local_idworkgroup_id.y, GLF_merged3_0_1_13_1_1_17_2_1_12num_workgroupsubgroup_local_idworkgroup_id.y)))) + 1 < subgroup_size, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_17_2_1_12num_workgroupsubgroup_local_idworkgroup_id, min(GLF_merged3_0_1_13_1_1_17_2_1_12num_workgroupsubgroup_local_idworkgroup_id, GLF_merged3_0_1_13_1_1_17_2_1_12num_workgroupsubgroup_local_idworkgroup_id)).y, (_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_17_2_1_12num_workgroupsubgroup_local_idworkgroup_id.y, (true ? GLF_merged3_0_1_13_1_1_17_2_1_12num_workgroupsubgroup_local_idworkgroup_id.y : _GLF_FUZZED(subgroup_id)))) | (_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_17_2_1_12num_workgroupsubgroup_local_idworkgroup_id.y, min(GLF_merged3_0_1_13_1_1_17_2_1_12num_workgroupsubgroup_local_idworkgroup_id.y, GLF_merged3_0_1_13_1_1_17_2_1_12num_workgroupsubgroup_local_idworkgroup_id.y)))) + 1 < subgroup_size, _GLF_IDENTITY(true, false || (true)))), (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_17_2_1_12num_workgroupsubgroup_local_idworkgroup_id, min(GLF_merged3_0_1_13_1_1_17_2_1_12num_workgroupsubgroup_local_idworkgroup_id, GLF_merged3_0_1_13_1_1_17_2_1_12num_workgroupsubgroup_local_idworkgroup_id)), (_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_17_2_1_12num_workgroupsubgroup_local_idworkgroup_id, min(GLF_merged3_0_1_13_1_1_17_2_1_12num_workgroupsubgroup_local_idworkgroup_id, GLF_merged3_0_1_13_1_1_17_2_1_12num_workgroupsubgroup_local_idworkgroup_id))) + uvec3(0u, 0u, 0u)).y, (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_17_2_1_12num_workgroupsubgroup_local_idworkgroup_id.y, (GLF_merged3_0_1_13_1_1_17_2_1_12num_workgroupsubgroup_local_idworkgroup_id.y) - 0u), (true ? GLF_merged3_0_1_13_1_1_17_2_1_12num_workgroupsubgroup_local_idworkgroup_id.y : _GLF_FUZZED(subgroup_id)))) | (_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_17_2_1_12num_workgroupsubgroup_local_idworkgroup_id.y, min(_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_17_2_1_12num_workgroupsubgroup_local_idworkgroup_id, (true ? _GLF_IDENTITY(GLF_merged3_0_1_13_1_1_17_2_1_12num_workgroupsubgroup_local_idworkgroup_id, uvec3(GLF_merged3_0_1_13_1_1_17_2_1_12num_workgroupsubgroup_local_idworkgroup_id[0], GLF_merged3_0_1_13_1_1_17_2_1_12num_workgroupsubgroup_local_idworkgroup_id[1], GLF_merged3_0_1_13_1_1_17_2_1_12num_workgroupsubgroup_local_idworkgroup_id[2])) : _GLF_FUZZED(GLF_merged3_0_1_13_1_1_17_2_1_12num_workgroupsubgroup_local_idworkgroup_id))).y, GLF_merged3_0_1_13_1_1_17_2_1_12num_workgroupsubgroup_local_idworkgroup_id.y)))), (false ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base))) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_17_2_1_12num_workgroupsubgroup_local_idworkgroup_id, min(GLF_merged3_0_1_13_1_1_17_2_1_12num_workgroupsubgroup_local_idworkgroup_id, GLF_merged3_0_1_13_1_1_17_2_1_12num_workgroupsubgroup_local_idworkgroup_id)), (_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_17_2_1_12num_workgroupsubgroup_local_idworkgroup_id, min(GLF_merged3_0_1_13_1_1_17_2_1_12num_workgroupsubgroup_local_idworkgroup_id, GLF_merged3_0_1_13_1_1_17_2_1_12num_workgroupsubgroup_local_idworkgroup_id))) + uvec3(0u, 0u, 0u)).y, (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_17_2_1_12num_workgroupsubgroup_local_idworkgroup_id.y, _GLF_IDENTITY((GLF_merged3_0_1_13_1_1_17_2_1_12num_workgroupsubgroup_local_idworkgroup_id.y) - 0u, ~ (~ ((GLF_merged3_0_1_13_1_1_17_2_1_12num_workgroupsubgroup_local_idworkgroup_id.y) - 0u)))), (true ? GLF_merged3_0_1_13_1_1_17_2_1_12num_workgroupsubgroup_local_idworkgroup_id.y : _GLF_FUZZED(subgroup_id)))) | (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_17_2_1_12num_workgroupsubgroup_local_idworkgroup_id.y, ~ (~ (GLF_merged3_0_1_13_1_1_17_2_1_12num_workgroupsubgroup_local_idworkgroup_id.y))), min(_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_17_2_1_12num_workgroupsubgroup_local_idworkgroup_id, (true ? _GLF_IDENTITY(GLF_merged3_0_1_13_1_1_17_2_1_12num_workgroupsubgroup_local_idworkgroup_id, uvec3(GLF_merged3_0_1_13_1_1_17_2_1_12num_workgroupsubgroup_local_idworkgroup_id[0], GLF_merged3_0_1_13_1_1_17_2_1_12num_workgroupsubgroup_local_idworkgroup_id[1], GLF_merged3_0_1_13_1_1_17_2_1_12num_workgroupsubgroup_local_idworkgroup_id[2])) : _GLF_FUZZED(GLF_merged3_0_1_13_1_1_17_2_1_12num_workgroupsubgroup_local_idworkgroup_id))).y, GLF_merged3_0_1_13_1_1_17_2_1_12num_workgroupsubgroup_local_idworkgroup_id.y)))))) + 1 < subgroup_size, _GLF_IDENTITY(true, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec2(! (false), true)), ! (! (bool(bvec2(! (false), true)))))))) || (true))))) || false)))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 0);
   subgroupAll(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bool((false)), ! (! (bool((false))))))), (! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bool((false)), ! (! (bool((false)))))))) || false)), _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-3.9) : injectionSwitch.x)) > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, false))))) || (! (! (false))))), bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bool((false)), ! (! (bool((false))))))), (! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bool((false)), ! (! (bool((false)))))))) || false)), _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-3.9) : injectionSwitch.x)) > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, false))))) || (! (! (false)))))))));
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3x4(injectionSwitch.x, 0.0, 1.0, exp(0.0), 1.0, 0.0, 1.0, abs(0.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0)), min(float(mat3x4(injectionSwitch.x, 0.0, 1.0, exp(0.0), 1.0, 0.0, 1.0, abs(0.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0)), float(mat3x4(injectionSwitch.x, 0.0, 1.0, exp(0.0), 1.0, 0.0, 1.0, abs(0.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0))))))) > injectionSwitch.y))))
    return;
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(_GLF_IDENTITY(2, _GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, 0 | (0)))) + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((2), 0 | (_GLF_IDENTITY((2), ((2)) >> int(_GLF_ZERO(0.0, injectionSwitch.x))))), 1 * (_GLF_IDENTITY((2), 0 | (_GLF_IDENTITY((2), ((2)) >> int(_GLF_ZERO(0.0, injectionSwitch.x))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((2), 0 | (_GLF_IDENTITY((2), ((2)) >> int(_GLF_ZERO(0.0, injectionSwitch.x))))), 1 * (_GLF_IDENTITY((2), 0 | (_GLF_IDENTITY((2), ((2)) >> int(_GLF_ZERO(0.0, injectionSwitch.x))))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY((2), 0 | (_GLF_IDENTITY((2), ((2)) >> int(_GLF_ZERO(0.0, injectionSwitch.x))))), 1 * (_GLF_IDENTITY((2), 0 | (_GLF_IDENTITY((2), ((2)) >> int(_GLF_ZERO(0.0, injectionSwitch.x))))))), _GLF_IDENTITY(_GLF_IDENTITY((2), 0 | (_GLF_IDENTITY((2), ((2)) >> int(_GLF_ZERO(0.0, injectionSwitch.x))))), 1 * (_GLF_IDENTITY((2), 0 | (_GLF_IDENTITY((2), ((2)) >> int(_GLF_ZERO(0.0, injectionSwitch.x))))))), _GLF_IDENTITY(_GLF_IDENTITY((2), 0 | (_GLF_IDENTITY((2), ((2)) >> int(_GLF_ZERO(0.0, injectionSwitch.x))))), 1 * (_GLF_IDENTITY((2), 0 | (_GLF_IDENTITY((2), ((2)) >> int(_GLF_ZERO(0.0, injectionSwitch.x)))))))))) - (0 & -18957)))), max(uint(_GLF_IDENTITY(2, 0 + (2))), _GLF_IDENTITY(uint(_GLF_IDENTITY(2, 0 + (2))), uint(uvec4(_GLF_IDENTITY(uint(_GLF_IDENTITY(2, 0 + (2))), (false ? _GLF_FUZZED(num_workgroup) : uint(_GLF_IDENTITY(2, 0 + (2))))), 0u, 1u, 0u))))), 4, 64, 0);
   if(_GLF_DEAD(false))
    return;
   subgroupAll(true);
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (! (false)))), false || (! (false))), bool(bvec2(! (false), false)))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(6.7)), bool(false))), injectionSwitch.x)) > injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * cos(0.0))), float(_GLF_FUZZED((3573.4147))), bool(false))))) > injectionSwitch.y))))
  return;
}
