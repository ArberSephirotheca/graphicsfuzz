#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_35 {
 mat3x2 _f0;
 bool _f1;
 mat2x3 _f2;
 float _f3;
 bvec2 _f4;
 uint _f5;
} ;

struct _GLF_struct_34 {
 mat3 _f0;
 mat3x2 _f1;
} ;

struct _GLF_struct_36 {
 _GLF_struct_34 _f0;
 vec2 _f1;
 _GLF_struct_35 _f2;
} ;

struct _GLF_struct_32 {
 bool _f0;
 ivec2 _f1;
 uvec3 _f2;
} ;

struct _GLF_struct_33 {
 mat3x2 _f0;
 uint gid;
 _GLF_struct_32 _f1;
 ivec2 _f2;
} ;

struct _GLF_struct_30 {
 mat4x2 _f0;
 uvec2 _f1;
 float _f2;
 uvec3 _f3;
} ;

struct _GLF_struct_29 {
 uvec4 _f0;
 vec4 _f1;
 bool _f2;
 uvec4 _f3;
 bvec4 _f4;
 vec2 _f5;
 mat2 _f6;
} ;

struct _GLF_struct_28 {
 ivec2 _f0;
 mat2x4 _f1;
 mat2x3 _f2;
 mat2 _f3;
 mat3x4 _f4;
 ivec2 _f5;
 ivec3 _f6;
} ;

struct _GLF_struct_31 {
 _GLF_struct_28 _f0;
 mat3x2 _f1;
 mat4 _f2;
 vec4 _f3;
 _GLF_struct_29 _f4;
 _GLF_struct_30 _f5;
 ivec3 _f6;
} ;

struct _GLF_struct_26 {
 mat2x4 _f0;
 vec4 _f1;
 uvec3 _f2;
} ;

struct _GLF_struct_25 {
 mat2 _f0;
} ;

struct _GLF_struct_24 {
 mat2 _f0;
 vec2 _f1;
 mat2 _f2;
 vec2 _f3;
 uvec4 _f4;
 uint _f5;
 bvec4 _f6;
} ;

struct _GLF_struct_23 {
 float _f0;
 mat4 _f1;
 bvec2 _f2;
} ;

struct _GLF_struct_27 {
 _GLF_struct_23 _f0;
 _GLF_struct_24 _f1;
 _GLF_struct_25 _f2;
 _GLF_struct_26 _f3;
 mat2x3 _f4;
} ;

struct _GLF_struct_37 {
 uint _f0;
 _GLF_struct_27 _f1;
 _GLF_struct_31 _f2;
 _GLF_struct_33 _f3;
 _GLF_struct_36 _f4;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
struct _GLF_struct_22 {
 ivec2 _f0;
 uint num_workgroup;
 vec2 _f1;
} ;

struct _GLF_struct_19 {
 mat2x3 _f0;
} ;

struct _GLF_struct_18 {
 uvec4 _f0;
 mat4x2 _f1;
 mat4x2 _f2;
 bvec3 _f3;
 uint _f4;
} ;

struct _GLF_struct_20 {
 _GLF_struct_18 _f0;
 mat4x2 _f1;
 bool _f2;
 _GLF_struct_19 _f3;
} ;

struct _GLF_struct_16 {
 ivec2 _f0;
} ;

struct _GLF_struct_15 {
 mat2x3 _f0;
 bvec2 _f1;
} ;

struct _GLF_struct_14 {
 uvec2 _f0;
 bvec4 _f1;
 mat2x4 _f2;
 mat2x3 _f3;
 bvec2 _f4;
 float _f5;
} ;

struct _GLF_struct_17 {
 bool _f0;
 _GLF_struct_14 _f1;
 _GLF_struct_15 _f2;
 _GLF_struct_16 _f3;
} ;

struct _GLF_struct_12 {
 uvec4 _f0;
 mat4 _f1;
 uvec4 _f2;
 vec4 _f3;
 uvec2 _f4;
 int _f5;
} ;

struct _GLF_struct_11 {
 uint _f0;
 mat4x2 _f1;
 bool _f2;
} ;

struct _GLF_struct_10 {
 uint _f0;
 mat3x4 _f1;
 ivec3 _f2;
 int _f3;
 uvec4 _f4;
 ivec3 _f5;
} ;

struct _GLF_struct_9 {
 mat3x4 _f0;
 bvec3 _f1;
 ivec2 _f2;
 bvec3 _f3;
 bool _f4;
 bvec3 _f5;
} ;

struct _GLF_struct_13 {
 bool _f0;
 _GLF_struct_9 _f1;
 _GLF_struct_10 _f2;
 _GLF_struct_11 _f3;
 mat2x3 _f4;
 _GLF_struct_12 _f5;
} ;

struct _GLF_struct_7 {
 vec2 _f0;
 mat4x2 _f1;
 uvec4 _f2;
 int _f3;
 mat3x2 _f4;
} ;

struct _GLF_struct_8 {
 mat2x3 _f0;
 uvec2 _f1;
 _GLF_struct_7 _f2;
 uint subgroup_id;
} ;

struct _GLF_struct_5 {
 mat3x4 _f0;
 uvec2 _f1;
 bvec4 _f2;
 mat4x2 _f3;
 ivec2 _f4;
 uvec2 _f5;
} ;

struct _GLF_struct_4 {
 ivec2 _f0;
 ivec3 _f1;
} ;

struct _GLF_struct_6 {
 _GLF_struct_4 _f0;
 mat3 _f1;
 mat3x2 _f2;
 _GLF_struct_5 _f3;
} ;

struct _GLF_struct_2 {
 vec4 _f0;
 vec3 _f1;
 mat2x4 _f2;
 uvec3 _f3;
 vec3 _f4;
} ;

struct _GLF_struct_1 {
 ivec2 _f0;
} ;

struct _GLF_struct_0 {
 mat2 _f0;
 mat2x4 _f1;
 mat2 _f2;
 float _f3;
 uvec4 _f4;
 uvec4 _f5;
 vec3 _f6;
} ;

struct _GLF_struct_3 {
 _GLF_struct_0 _f0;
 mat3x4 _f1;
 bool _f2;
 uvec2 _f3;
 _GLF_struct_1 _f4;
 _GLF_struct_2 _f5;
} ;

struct _GLF_struct_21 {
 _GLF_struct_3 _f0;
 _GLF_struct_6 _f1;
 _GLF_struct_8 _f2;
 _GLF_struct_13 _f3;
 _GLF_struct_17 _f4;
 _GLF_struct_20 _f5;
 bvec3 _f6;
} ;

#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 _GLF_struct_21 _GLF_struct_replacement_21 = _GLF_struct_21(_GLF_struct_3(_GLF_struct_0(mat2(1.0), mat2x4(1.0), mat2(1.0), 1.0, uvec4(1u), uvec4(1u), vec3(1.0)), mat3x4(1.0), true, uvec2(1u), _GLF_struct_1(ivec2(1)), _GLF_struct_2(vec4(1.0), vec3(1.0), mat2x4(1.0), uvec3(1u), vec3(1.0))), _GLF_struct_6(_GLF_struct_4(ivec2(1), ivec3(1)), mat3(1.0), mat3x2(1.0), _GLF_struct_5(mat3x4(1.0), uvec2(1u), bvec4(true), mat4x2(1.0), ivec2(1), uvec2(1u))), _GLF_struct_8(mat2x3(1.0), uvec2(1u), _GLF_struct_7(vec2(1.0), mat4x2(1.0), uvec4(1u), 1, mat3x2(1.0)), gl_SubgroupID), _GLF_struct_13(true, _GLF_struct_9(mat3x4(1.0), bvec3(true), ivec2(1), bvec3(true), true, bvec3(true)), _GLF_struct_10(1u, mat3x4(1.0), ivec3(1), 1, uvec4(1u), ivec3(1)), _GLF_struct_11(1u, mat4x2(1.0), true), mat2x3(1.0), _GLF_struct_12(uvec4(1u), mat4(1.0), uvec4(1u), vec4(1.0), uvec2(1u), 1)), _GLF_struct_17(true, _GLF_struct_14(uvec2(1u), bvec4(true), mat2x4(1.0), mat2x3(1.0), bvec2(true), 1.0), _GLF_struct_15(mat2x3(1.0), bvec2(true)), _GLF_struct_16(ivec2(1))), _GLF_struct_20(_GLF_struct_18(uvec4(1u), mat4x2(1.0), mat4x2(1.0), bvec3(true), 1u), mat4x2(1.0), true, _GLF_struct_19(mat2x3(1.0))), bvec3(true));
 uint subgroup_size = gl_SubgroupSize;
 _GLF_struct_37 _GLF_struct_replacement_37 = _GLF_struct_37(1u, _GLF_struct_27(_GLF_struct_23(1.0, mat4(1.0), bvec2(true)), _GLF_struct_24(mat2(1.0), vec2(1.0), mat2(1.0), vec2(1.0), uvec4(1u), 1u, bvec4(true)), _GLF_struct_25(mat2(1.0)), _GLF_struct_26(mat2x4(1.0), vec4(1.0), uvec3(1u)), mat2x3(1.0)), _GLF_struct_31(_GLF_struct_28(ivec2(1), mat2x4(1.0), mat2x3(1.0), mat2(1.0), mat3x4(1.0), ivec2(1), ivec3(1)), mat3x2(1.0), mat4(1.0), vec4(1.0), _GLF_struct_29(uvec4(1u), vec4(1.0), true, uvec4(1u), bvec4(true), vec2(1.0), mat2(1.0)), _GLF_struct_30(mat4x2(1.0), uvec2(1u), 1.0, uvec3(1u)), ivec3(1)), _GLF_struct_33(mat3x2(1.0), gl_GlobalInvocationID.x, _GLF_struct_32(true, ivec2(1), uvec3(1u)), ivec2(1)), _GLF_struct_36(_GLF_struct_34(mat3(1.0), mat3x2(1.0)), vec2(1.0), _GLF_struct_35(mat3x2(1.0), true, mat2x3(1.0), 1.0, bvec2(true), 1u)));
 uint subgroup_local_id = gl_SubgroupInvocationID;
 _GLF_struct_22 _GLF_struct_replacement_22 = _GLF_struct_22(ivec2(1), gl_NumWorkGroups.x, vec2(1.0));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint total_threads = _GLF_struct_replacement_22.num_workgroup * workgroup_size;
 if(_GLF_DEAD(false))
  return;
 if(subgroup_local_id + 1 < subgroup_size)
  {
   atomicStore(buf[(_GLF_struct_replacement_37._f3.gid + 1) % total_threads], uint(2), 4, 64, 0);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   subgroupAll(false);
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   atomicStore(buf[(_GLF_struct_replacement_37._f3.gid + 1) % total_threads], uint(2), 4, 64, 0);
   subgroupAll(true);
  }
}
