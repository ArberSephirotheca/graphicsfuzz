#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec3 GLF_merged2_0_2_55_2_1_3GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_sizegid;
 uvec3 GLF_merged2_0_2_55_2_1_11GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_sizesubgroup_id;
 uvec2 GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size;
 GLF_merged2_0_2_55_2_1_3GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_sizegid.xy = GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size;
 GLF_merged2_0_2_55_2_1_11GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_sizesubgroup_id.xy = GLF_merged2_0_2_55_2_1_3GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_sizegid.xy;
 uvec2 GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id;
 uint subgroup_id = gl_SubgroupID;
 GLF_merged2_0_2_55_2_1_11GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_sizesubgroup_id.z = subgroup_id;
 GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.x = GLF_merged2_0_2_55_2_1_11GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_sizesubgroup_id.z;
 uint subgroup_size = gl_SubgroupSize;
 GLF_merged2_0_2_55_2_1_11GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_sizesubgroup_id.xy.y = subgroup_size;
 uint gid = gl_GlobalInvocationID.x;
 GLF_merged2_0_2_55_2_1_3GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_sizegid.z = gid;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 GLF_merged2_0_2_55_2_1_11GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_sizesubgroup_id.xy.x = subgroup_local_id;
 GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y = GLF_merged2_0_2_55_2_1_11GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_sizesubgroup_id.xy.x;
 buf[GLF_merged2_0_2_55_2_1_3GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_sizegid.z] = 1;
 if(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y + 1 < GLF_merged2_0_2_55_2_1_11GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_sizesubgroup_id.xy.y)
  {
   atomicStore(buf[GLF_merged2_0_2_55_2_1_3GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_sizegid.z + 1], uint(2), 4, 64, 4);
  }
 else
  {
   atomicStore(buf[(GLF_merged2_0_2_55_2_1_3GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_sizegid.z + 1) % GLF_merged2_0_2_55_2_1_11GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_sizesubgroup_id.xy.y], uint(2), 4, 64, 4);
  }
 if(_GLF_DEAD(false))
  return;
}
