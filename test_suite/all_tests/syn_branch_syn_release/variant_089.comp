#version 460
struct _GLF_struct_7 {
 bvec3 _f0;
 mat3x2 _f1;
 mat2 _f2;
 mat2 _f3;
} ;

struct _GLF_struct_6 {
 mat4x2 _f0;
 ivec4 _f1;
 uvec3 _f2;
 float _f3;
 ivec4 _f4;
} ;

struct _GLF_struct_5 {
 mat3x4 _f0;
} ;

struct _GLF_struct_4 {
 uint _f0;
 mat4 _f1;
 bool _f2;
} ;

struct _GLF_struct_8 {
 _GLF_struct_4 _f0;
 _GLF_struct_5 _f1;
 mat3x2 _f2;
 _GLF_struct_6 _f3;
 _GLF_struct_7 _f4;
} ;

struct _GLF_struct_3 {
 vec4 _f0;
} ;

struct _GLF_struct_1 {
 vec2 _f0;
} ;

struct _GLF_struct_0 {
 bool _f0;
} ;

struct _GLF_struct_2 {
 _GLF_struct_0 _f0;
 _GLF_struct_1 _f1;
 uint _f2;
} ;

struct _GLF_struct_9 {
 _GLF_struct_2 _f0;
 uint subgroup_local_id;
 uint _f1;
 _GLF_struct_3 _f2;
 uvec3 _f3;
 _GLF_struct_8 _f4;
} ;

layout(set = 0, binding = 0) uniform buf0 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 _GLF_struct_9 _GLF_struct_replacement_9 = _GLF_struct_9(_GLF_struct_2(_GLF_struct_0(true), _GLF_struct_1(vec2(1.0)), 1u), gl_SubgroupInvocationID, 1u, _GLF_struct_3(vec4(1.0)), uvec3(1u), _GLF_struct_8(_GLF_struct_4(1u, mat4(1.0), true), _GLF_struct_5(mat3x4(1.0)), mat3x2(1.0), _GLF_struct_6(mat4x2(1.0), ivec4(1), uvec3(1u), 1.0, ivec4(1)), _GLF_struct_7(bvec3(true), mat3x2(1.0), mat2(1.0), mat2(1.0))));
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + _GLF_struct_replacement_9.subgroup_local_id;
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((_GLF_struct_replacement_9.subgroup_local_id + 1) % subgroup_size);
 buf[virtual_gid] = 1;
 if(_GLF_struct_replacement_9.subgroup_local_id + 1 < subgroup_size)
  {
   int i = 0;
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
  }
 else
  {
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
  }
}
