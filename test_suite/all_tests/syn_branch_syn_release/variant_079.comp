#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_1 {
 bvec3 _f0;
 mat3x4 _f1;
} ;

struct _GLF_struct_0 {
 mat4 _f0;
 ivec3 _f1;
} ;

struct _GLF_struct_2 {
 _GLF_struct_0 _f0;
 _GLF_struct_1 _f1;
 bvec2 _f2;
 mat2 _f3;
 uint num_workgroup;
} ;

struct _GLF_struct_3 {
 vec4 _f0;
 _GLF_struct_2 _f1;
} ;

layout(set = 0, binding = 0) uniform buf0 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, ~ (~ (1)))); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))), injectionSwitch)).y))))
          barrier();
        }
       else
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, (_GLF_IDENTITY((false) || false, (_GLF_IDENTITY((false) || false, true && ((false) || false))) && true)) || false)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), 0.0, 1.0, sin(0.0), 0.0, 1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY((vec2(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), (injectionSwitch) * vec2(1.0, 1.0)), 0.0, 1.0, sin(0.0), 0.0, 1.0, 1.0))), clamp(_GLF_IDENTITY((vec2(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), (injectionSwitch) * vec2(1.0, 1.0)), 0.0, 1.0, sin(0.0), 0.0, 1.0, 1.0))), clamp((vec2(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), (injectionSwitch) * vec2(1.0, 1.0)), 0.0, 1.0, sin(0.0), 0.0, 1.0, 1.0))), (vec2(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), (injectionSwitch) * vec2(1.0, 1.0)), 0.0, 1.0, sin(0.0), 0.0, 1.0, 1.0))), (vec2(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), (injectionSwitch) * vec2(1.0, 1.0)), 0.0, 1.0, sin(0.0), 0.0, 1.0, 1.0))))), (vec2(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), (injectionSwitch) * vec2(1.0, 1.0)), 0.0, 1.0, sin(0.0), 0.0, 1.0, 1.0))), _GLF_IDENTITY((vec2(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), (injectionSwitch) * vec2(1.0, 1.0)), 0.0, 1.0, sin(0.0), 0.0, 1.0, 1.0))), min((vec2(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), (injectionSwitch) * vec2(1.0, 1.0)), 0.0, 1.0, sin(0.0), 0.0, 1.0, 1.0))), (vec2(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), (injectionSwitch) * vec2(1.0, 1.0)), 0.0, 1.0, sin(0.0), 0.0, 1.0, 1.0))))))) / vec2(1.0, 1.0), (true ? _GLF_IDENTITY((vec2(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), (injectionSwitch) * vec2(1.0, 1.0)), 0.0, 1.0, sin(0.0), 0.0, 1.0, 1.0))), clamp(_GLF_IDENTITY((vec2(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), (injectionSwitch) * vec2(1.0, 1.0)), 0.0, 1.0, sin(0.0), 0.0, 1.0, 1.0))), clamp((vec2(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), (injectionSwitch) * vec2(1.0, 1.0)), 0.0, 1.0, sin(0.0), 0.0, 1.0, 1.0))), (vec2(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2(_GLF_FUZZED(-9.3), (mat2(1.0) * (injectionSwitch))[1]), vec2((mat2(1.0) * (injectionSwitch))[0], _GLF_FUZZED(float(true))), bvec2(true, false))), _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (false ? _GLF_FUZZED(vec2(-53.80, -8691.8578)) : mat2(1.0) * (injectionSwitch)))))), (injectionSwitch) * vec2(1.0, 1.0)), 0.0, 1.0, sin(0.0), 0.0, 1.0, 1.0))), (vec2(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), (injectionSwitch) * vec2(1.0, 1.0)), 0.0, 1.0, sin(0.0), 0.0, 1.0, 1.0))))), (_GLF_IDENTITY(vec2(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), (injectionSwitch) * vec2(1.0, 1.0)), 0.0, 1.0, sin(0.0), 0.0, 1.0, 1.0)), exp(vec2(0.0, 0.0)) * (vec2(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), (injectionSwitch) * vec2(1.0, 1.0)), 0.0, 1.0, sin(0.0), 0.0, 1.0, 1.0))))), _GLF_IDENTITY((vec2(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), (injectionSwitch) * vec2(1.0, 1.0)), 0.0, 1.0, sin(0.0), 0.0, 1.0, 1.0))), min((vec2(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), (injectionSwitch) * vec2(1.0, 1.0)), 0.0, 1.0, sin(0.0), 0.0, 1.0, 1.0))), (vec2(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch)), _GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0))) * (injectionSwitch)), (injectionSwitch) * vec2(1.0, 1.0)), 0.0, 1.0, sin(0.0), 0.0, 1.0, 1.0))))))) / vec2(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-624.350)), float(1.0), bool(true)))) : _GLF_FUZZED(injectionSwitch))))), cos(vec2(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4x2(0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)), float(mat2(float(mat4x2(0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-69.03)), bool(false))), 1.0, 0.0, 1.0, 1.0)), 1.0, 0.0, exp(0.0))))), _GLF_IDENTITY(0.0, (0.0) / 1.0))) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, 1.0, _GLF_IDENTITY(abs(1.0), (false ? _GLF_FUZZED(float(false)) : abs(1.0))), 1.0, 0.0, 0.0, 0.0, 0.0)), min(vec2(mat3(injectionSwitch, 1.0, abs(1.0), 1.0, 0.0, 0.0, 0.0, 0.0)), vec2(mat3(injectionSwitch, 1.0, _GLF_IDENTITY(abs(1.0), min(abs(1.0), _GLF_IDENTITY(abs(1.0), sin(0.0) + (abs(1.0))))), 1.0, 0.0, 0.0, 0.0, 0.0))))), min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, 1.0, _GLF_IDENTITY(abs(1.0), (false ? _GLF_FUZZED(float(false)) : abs(1.0))), 1.0, 0.0, 0.0, 0.0, 0.0)), min(vec2(mat3(injectionSwitch, 1.0, abs(1.0), 1.0, 0.0, 0.0, 0.0, 0.0)), vec2(mat3(injectionSwitch, 1.0, _GLF_IDENTITY(abs(1.0), min(abs(1.0), _GLF_IDENTITY(abs(1.0), sin(0.0) + (abs(1.0))))), 1.0, 0.0, 0.0, 0.0, 0.0))))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, 1.0, _GLF_IDENTITY(abs(1.0), (false ? _GLF_FUZZED(float(false)) : abs(1.0))), 1.0, 0.0, 0.0, 0.0, 0.0)), min(vec2(mat3(injectionSwitch, 1.0, abs(1.0), 1.0, 0.0, 0.0, 0.0, 0.0)), vec2(mat3(injectionSwitch, 1.0, _GLF_IDENTITY(abs(1.0), min(abs(1.0), _GLF_IDENTITY(abs(1.0), sin(0.0) + (abs(1.0))))), 1.0, 0.0, 0.0, 0.0, 0.0))))))))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(injectionSwitch.y), 1.0 * (float(injectionSwitch.y))), float(_GLF_FUZZED(339.412)), bool(false))), mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), 1.0 * (float(injectionSwitch.y))), float(_GLF_FUZZED(339.412)), bool(false)))), float(_GLF_FUZZED((2.8 * 16.77))), bool(false))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, cos(vec2(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4x2(0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(177.154)), float(0.0), bool(true))), 1.0, 0.0, 1.0, 1.0)), float(mat2(float(mat4x2(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(7.1))), (_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(7.1)))) / 1.0))), 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(_GLF_IDENTITY(float(0.0), max(float(0.0), float(0.0))), float(_GLF_FUZZED(-6.3)), bool(false))), 1.0, 1.0)), 1.0, 0.0, exp(0.0))))), 0.0)) * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(abs(1.0), (false ? _GLF_FUZZED(float(false)) : abs(1.0))), float(mat3(_GLF_IDENTITY(_GLF_IDENTITY(abs(1.0), (false ? _GLF_FUZZED(float(false)) : abs(1.0))), 0.0 + (_GLF_IDENTITY(abs(1.0), (false ? _GLF_FUZZED(float(false)) : abs(_GLF_IDENTITY(1.0, float(mat2x4(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, float(mat3x2(1.0, 1.0, 0.0, 0.0, 0.0, 0.0))))), 1.0, 1.0, 0.0, 0.0, 1.0, determinant(mat3(sin(0.0), 0.0, 1.0, 0.0, tan(0.0), 0.0, log(1.0), 0.0, 0.0)), 1.0)))))))), 1.0, 1.0, exp(0.0), 1.0, 1.0, tan(0.0), 1.0, 1.0))), 1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))) ? _GLF_FUZZED(-7.1) : 0.0)), 0.0, 0.0, 0.0), transpose(transpose(mat3(injectionSwitch, 1.0, _GLF_IDENTITY(abs(1.0), (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) || false), true))) ? _GLF_FUZZED(float(false)) : abs(1.0))), 1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)))) ? _GLF_FUZZED(-7.1) : 0.0)), 0.0, 0.0, 0.0))))), min(vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, abs(1.0), 1.0, 0.0, 0.0, 0.0, 0.0), transpose(transpose(mat3(injectionSwitch, 1.0, abs(1.0), 1.0, 0.0, 0.0, 0.0, 0.0))))), vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, abs(1.0), 1.0, 0.0, 0.0, 0.0, 0.0), _GLF_IDENTITY(mat3(_GLF_IDENTITY(mat4(mat3(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 1.0, abs(1.0), 1.0, 0.0, 0.0, 0.0, 0.0)), transpose(_GLF_IDENTITY(transpose(mat4(mat3(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 1.0, abs(1.0), 1.0, 0.0, 0.0, 0.0, 0.0))), transpose(transpose(transpose(mat4(mat3(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 1.0, abs(1.0), 1.0, 0.0, 0.0, 0.0, 0.0))))))))), (false ? _GLF_FUZZED(mat3(7.2, -55.72, -4989.8733, -4784.0405, 88.41, -82.38, -80.32, -551.737, -1.4)) : mat3(_GLF_IDENTITY(mat4(mat3(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 1.0, abs(1.0), 1.0, 0.0, 0.0, 0.0, 0.0)), transpose(_GLF_IDENTITY(transpose(mat4(mat3(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 1.0, abs(1.0), 1.0, 0.0, 0.0, 0.0, 0.0))), transpose(transpose(transpose(mat4(mat3(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 1.0, abs(1.0), 1.0, 0.0, 0.0, 0.0, 0.0)))))))))))))))))).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(339.412)), _GLF_IDENTITY(_GLF_IDENTITY(bool(false), true && (bool(false))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(bool(false), false || (bool(false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), (bool(bvec4(_GLF_IDENTITY(bool(false), false || (bool(false))), true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)), true))) && true)))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, cos(vec2(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4x2(0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)), _GLF_IDENTITY(float(_GLF_IDENTITY(mat2(float(mat4x2(0.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)), 1.0, 0.0, exp(0.0)), transpose(transpose(_GLF_IDENTITY(mat2(float(mat4x2(0.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)), 1.0, 0.0, exp(0.0)), (mat2(float(mat4x2(0.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)), 1.0, 0.0, exp(0.0))) - _GLF_IDENTITY(mat2(0.0, 0.0, 0.0, 0.0), transpose(transpose(_GLF_IDENTITY(mat2(0.0, 0.0, 0.0, 0.0), transpose(transpose(_GLF_IDENTITY(mat2(0.0, 0.0, 0.0, 0.0), mat2(1.0) * (mat2(0.0, 0.0, 0.0, 0.0)))))))))))))), float(_GLF_IDENTITY(mat3(float(_GLF_IDENTITY(mat2(float(mat4x2(0.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)), 1.0, 0.0, exp(0.0)), transpose(transpose(_GLF_IDENTITY(mat2(float(mat4x2(0.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)), 1.0, 0.0, exp(0.0)), (mat2(float(mat4x2(0.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)), 1.0, 0.0, exp(0.0))) - _GLF_IDENTITY(mat2(0.0, 0.0, 0.0, 0.0), transpose(transpose(_GLF_IDENTITY(mat2(0.0, 0.0, 0.0, 0.0), transpose(transpose(_GLF_IDENTITY(mat2(0.0, 0.0, 0.0, 0.0), mat2(1.0) * (mat2(0.0, 0.0, 0.0, 0.0)))))))))))))), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0), (true ? mat3(float(_GLF_IDENTITY(mat2(float(mat4x2(0.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)), 1.0, 0.0, exp(0.0)), transpose(transpose(_GLF_IDENTITY(mat2(float(mat4x2(0.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)), 1.0, 0.0, exp(0.0)), (mat2(float(mat4x2(0.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)), 1.0, 0.0, exp(0.0))) - _GLF_IDENTITY(mat2(0.0, 0.0, 0.0, 0.0), transpose(transpose(_GLF_IDENTITY(mat2(0.0, 0.0, 0.0, 0.0), transpose(transpose(_GLF_IDENTITY(mat2(0.0, 0.0, 0.0, 0.0), mat2(1.0) * (mat2(0.0, 0.0, 0.0, 0.0)))))))))))))), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0) : _GLF_FUZZED(mat3(7.7, -6.1, -6.1, 7619.5031, -7.7, 2.3, -2124.7177, -59.84, 61.01)))))))), 0.0)) * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, 1.0, _GLF_IDENTITY(abs(1.0), _GLF_IDENTITY((false ? _GLF_FUZZED(float(false)) : abs(1.0)), ((false ? _GLF_FUZZED(float(false)) : abs(1.0))) + 0.0)), 1.0, 0.0, 0.0, 0.0, 0.0)), min(vec2(mat3(injectionSwitch, 1.0, abs(1.0), 1.0, 0.0, 0.0, 0.0, 0.0)), vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, abs(1.0), _GLF_IDENTITY(1.0, float(mat3x4(1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, abs(1.0))), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, abs(1.0)))), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0))), 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0))), 0.0), (false ? _GLF_FUZZED(mat3(vec3(-9282.6967, -54.90, 0.1), vec3(30.06, -6.5, -8.5), vec3(502.274, 59.27, -7.5))) : mat3(injectionSwitch, 1.0, abs(1.0), _GLF_IDENTITY(1.0, float(mat3x4(1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, abs(1.0))), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, abs(1.0)))), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0))), 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0))), 0.0))))))))).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(339.412)), bool(false))), ! (! (_GLF_IDENTITY(injectionSwitch, cos(_GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4x2(0.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-9361.8673))))), 0.0, 1.0, 0.0, 1.0, 1.0)), float(mat2(float(mat4x2(0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)), 1.0, 0.0, exp(0.0))))), 0.0), _GLF_IDENTITY((vec2(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4x2(0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)), float(mat2(float(mat4x2(0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)), 1.0, 0.0, exp(0.0))))), 0.0)), mix(vec2(_GLF_FUZZED(4314.5614), ((vec2(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4x2(0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)), float(mat2(float(mat4x2(0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)), 1.0, 0.0, exp(0.0))))), 0.0)))[1]), vec2(_GLF_IDENTITY(((vec2(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4x2(0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)), float(mat2(float(mat4x2(0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)), 1.0, 0.0, exp(0.0))))), 0.0)))[0], max(((vec2(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4x2(0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)), float(mat2(float(mat4x2(0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)), 1.0, 0.0, exp(0.0))))), 0.0)))[0], ((vec2(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4x2(0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)), float(mat2(float(mat4x2(0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)), 1.0, 0.0, exp(0.0))))), 0.0)))[0])), _GLF_FUZZED(-4.6)), bvec2(true, false))) / vec2(1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-26.44))), 1.0))))) * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, 1.0, _GLF_IDENTITY(abs(1.0), (false ? _GLF_IDENTITY(_GLF_FUZZED(float(false)), max(_GLF_IDENTITY(_GLF_FUZZED(float(false)), _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(float(false)), clamp(_GLF_FUZZED(float(false)), _GLF_FUZZED(float(false)), _GLF_FUZZED(float(false)))), min(_GLF_IDENTITY(_GLF_FUZZED(float(false)), clamp(_GLF_FUZZED(float(false)), _GLF_FUZZED(float(false)), _GLF_FUZZED(float(false)))), _GLF_IDENTITY(_GLF_FUZZED(float(false)), clamp(_GLF_FUZZED(float(false)), _GLF_FUZZED(float(false)), _GLF_FUZZED(float(false)))))), 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0, 1.0, 1.0, 0.0, 0.0)), max(float(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(float(false)), clamp(_GLF_FUZZED(float(false)), _GLF_FUZZED(float(false)), _GLF_FUZZED(float(false)))), min(_GLF_IDENTITY(_GLF_FUZZED(float(false)), clamp(_GLF_FUZZED(float(false)), _GLF_FUZZED(float(false)), _GLF_FUZZED(float(false)))), _GLF_IDENTITY(_GLF_FUZZED(float(false)), clamp(_GLF_FUZZED(float(false)), _GLF_FUZZED(float(false)), _GLF_FUZZED(float(false)))))), 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0, 1.0, 1.0, 0.0, 0.0)), float(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(float(false)), clamp(_GLF_FUZZED(float(false)), _GLF_FUZZED(float(false)), _GLF_FUZZED(float(false)))), min(_GLF_IDENTITY(_GLF_FUZZED(float(false)), clamp(_GLF_FUZZED(float(false)), _GLF_FUZZED(float(false)), _GLF_FUZZED(float(false)))), _GLF_IDENTITY(_GLF_FUZZED(float(false)), clamp(_GLF_FUZZED(float(false)), _GLF_FUZZED(float(false)), _GLF_FUZZED(float(false)))))), 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0, 1.0, 1.0, 0.0, 0.0))))), _GLF_IDENTITY(_GLF_FUZZED(float(false)), max(_GLF_FUZZED(float(false)), _GLF_FUZZED(float(false)))))) : abs(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(948.856) : _GLF_IDENTITY(1.0, (1.0) + 0.0)))))), 1.0, 0.0, 0.0, 0.0, 0.0)), min(vec2(mat3(injectionSwitch, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3x4(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (mat3x4(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)) * mat3(1.0)))))), abs(1.0), 1.0, 0.0, 0.0, 0.0, 0.0)), vec2(mat3(injectionSwitch, 1.0, abs(1.0), 1.0, 0.0, 0.0, 0.0, 0.0))))))).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(339.412)), bool(false)))))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, cos(vec2(_GLF_IDENTITY(0.0, _GLF_IDENTITY(_GLF_IDENTITY(float(mat4x2(0.0, 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-7.2))), 0.0, 1.0, 0.0, 1.0, 1.0)), float(_GLF_IDENTITY(mat2(float(mat4x2(0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)), 1.0, 0.0, exp(0.0)), transpose(transpose(mat2(float(mat4x2(0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)), 1.0, 0.0, exp(0.0))))))), clamp(_GLF_IDENTITY(float(mat4x2(0.0, 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-7.2))), 0.0, 1.0, 0.0, 1.0, 1.0)), float(mat2(float(mat4x2(0.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(574.602)), bool(false))), _GLF_IDENTITY(0.0, (0.0) * 1.0))), 0.0)), 1.0, 1.0)), 1.0, 0.0, exp(0.0)))), _GLF_IDENTITY(_GLF_IDENTITY(float(mat4x2(0.0, 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-7.2))), 0.0, 1.0, 0.0, 1.0, 1.0)), float(mat2(float(mat4x2(0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)), 1.0, 0.0, exp(0.0)))), float(float(_GLF_IDENTITY(float(mat4x2(0.0, 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-7.2))), 0.0, 1.0, 0.0, 1.0, 1.0)), float(mat2(float(mat4x2(0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)), 1.0, 0.0, exp(0.0))))))), _GLF_IDENTITY(float(mat4x2(0.0, 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-7.2))), 0.0, 1.0, 0.0, 1.0, 1.0)), float(mat2(float(mat4x2(0.0, 1.0, _GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, float(mat3x4(1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0))))), 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 1.0, 1.0)), 1.0, 0.0, exp(0.0))))))), _GLF_IDENTITY(0.0, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-7.5)), bool(false))), _GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 0.0, 0.0, 1.0, 0.0)))))), min(float(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-7.5)), bool(false))), _GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 0.0, 0.0, 1.0, 0.0)))))), float(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-7.5)), bool(false))), _GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 0.0, 0.0, 1.0, 0.0)))))))), float(_GLF_IDENTITY(_GLF_FUZZED(-461.874), (_GLF_FUZZED(-461.874)) - 0.0)), bool(false))))) * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), (true ? _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-60.63))) : _GLF_FUZZED(-1818.5869))), _GLF_IDENTITY(_GLF_IDENTITY(abs(1.0), (false ? _GLF_FUZZED(float(false)) : abs(1.0))), mix(float(_GLF_FUZZED(-4695.4634)), float(_GLF_IDENTITY(abs(1.0), (false ? _GLF_FUZZED(float(false)) : abs(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(vec2(585.538, 5145.5630).g)), bool(false))))))), bool(true))), 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(float(0.0), max(float(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) + log(1.0)), 0.0, 0.0))), float(0.0)))), (false ? _GLF_FUZZED(332.088) : float(_GLF_IDENTITY(float(0.0), max(float(0.0), float(0.0))))))), 0.0)), min(vec2(mat3(injectionSwitch, 1.0, abs(1.0), 1.0, 0.0, 0.0, 0.0, 0.0)), vec2(mat3(injectionSwitch, 1.0, abs(1.0), 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0))))))).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(339.412)), bool(false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, cos(vec2(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4x2(0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)), float(_GLF_IDENTITY(_GLF_IDENTITY(mat2(float(mat4x2(0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)), 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(exp(0.0), 0.0 + (_GLF_IDENTITY(exp(0.0), 0.0 + (exp(0.0)))))), mat2(mat2(_GLF_IDENTITY(mat2(float(mat4x2(0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)), 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(exp(_GLF_IDENTITY(0.0, 0.0 + (0.0))), 0.0 + (_GLF_IDENTITY(exp(0.0), 0.0 + (exp(0.0)))))), (false ? _GLF_FUZZED(mat2(-9.8, -694.253, -937.087, 807.996)) : mat2(float(mat4x2(0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)), 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(exp(_GLF_IDENTITY(0.0, 1.0 * (0.0))), 0.0 + (_GLF_IDENTITY(exp(0.0), 0.0 + (exp(0.0))))))))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? mat2(float(mat4x2(0.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (1.0) + abs(0.0)), 1.0)), 1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), clamp(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), (false ? _GLF_FUZZED(6215.2701) : _GLF_IDENTITY(0.0, min(0.0, 0.0)))))), exp(0.0)) : _GLF_FUZZED(mat2(50.15, 87.31, -3.2, -5158.9105))))))), 0.0)) * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, 1.0, _GLF_IDENTITY(abs(1.0), (false ? _GLF_FUZZED(float(false)) : abs(1.0))), 1.0, 0.0, 0.0, 0.0, 0.0)), min(vec2(mat3(injectionSwitch, 1.0, _GLF_IDENTITY(abs(1.0), (abs(1.0)) * 1.0), 1.0, 0.0, 0.0, 0.0, 0.0)), vec2(mat3(injectionSwitch, 1.0, abs(1.0), 1.0, 0.0, 0.0, 0.0, 0.0))))))), (_GLF_IDENTITY(injectionSwitch, cos(vec2(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4x2(0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)), float(_GLF_IDENTITY(_GLF_IDENTITY(mat2(float(mat4x2(0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)), 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(exp(0.0), _GLF_IDENTITY(0.0 + (_GLF_IDENTITY(exp(0.0), 0.0 + (exp(0.0)))), (_GLF_IDENTITY(0.0 + (_GLF_IDENTITY(exp(0.0), 0.0 + (exp(0.0)))), clamp(_GLF_IDENTITY(0.0 + (_GLF_IDENTITY(exp(0.0), 0.0 + (exp(0.0)))), min(0.0 + (_GLF_IDENTITY(exp(0.0), 0.0 + (exp(0.0)))), 0.0 + (_GLF_IDENTITY(exp(0.0), 0.0 + (exp(0.0)))))), 0.0 + (_GLF_IDENTITY(exp(0.0), 0.0 + (exp(0.0)))), _GLF_IDENTITY(0.0 + (_GLF_IDENTITY(exp(0.0), 0.0 + (exp(0.0)))), 1.0 * (0.0 + (_GLF_IDENTITY(exp(0.0), 0.0 + (exp(0.0))))))))) * 1.0))), mat2(mat2(_GLF_IDENTITY(mat2(float(mat4x2(0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)), 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(min(0.0, 0.0), _GLF_IDENTITY(float(vec2(min(0.0, 0.0), 1.0)), min(float(vec2(min(0.0, 0.0), 1.0)), float(vec2(min(0.0, 0.0), 1.0)))))), _GLF_IDENTITY(exp(_GLF_IDENTITY(0.0, 0.0 + (0.0))), 0.0 + (_GLF_IDENTITY(exp(0.0), 0.0 + (exp(0.0)))))), (false ? _GLF_FUZZED(mat2(-9.8, -694.253, -937.087, 807.996)) : mat2(float(mat4x2(0.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(94.32)), float(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), bool(true))), 0.0, 1.0, 0.0, 1.0, 1.0)), 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(exp(_GLF_IDENTITY(0.0, 1.0 * (0.0))), 0.0 + (_GLF_IDENTITY(exp(0.0), 0.0 + (exp(0.0))))))))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? mat2(float(mat4x2(0.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-7272.7339) : 0.0)), _GLF_IDENTITY(1.0, (1.0) + abs(0.0)), 1.0)), 1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), clamp(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), (false ? _GLF_FUZZED(6215.2701) : _GLF_IDENTITY(0.0, min(0.0, 0.0)))))), exp(0.0)) : _GLF_FUZZED(mat2(50.15, _GLF_IDENTITY(87.31, float(mat3x4(_GLF_IDENTITY(87.31, (true ? 87.31 : _GLF_FUZZED(78.46))), 1.0, 1.0, 1.0, 0.0, sqrt(0.0), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0))), -3.2, -5158.9105))))))), 0.0)) * _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, 1.0, _GLF_IDENTITY(abs(1.0), (false ? _GLF_FUZZED(float(false)) : abs(1.0))), 1.0, 0.0, 0.0, 0.0, 0.0)), min(vec2(mat3(injectionSwitch, 1.0, _GLF_IDENTITY(abs(1.0), (abs(1.0)) * _GLF_IDENTITY(1.0, 0.0 + (1.0))), 1.0, 0.0, 0.0, 0.0, 0.0)), vec2(mat3(injectionSwitch, 1.0, abs(1.0), 1.0, 0.0, 0.0, 0.0, 0.0)))))), mix(vec2(((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, 1.0, _GLF_IDENTITY(abs(1.0), (false ? _GLF_FUZZED(float(false)) : abs(1.0))), 1.0, 0.0, 0.0, 0.0, 0.0)), min(vec2(mat3(injectionSwitch, 1.0, _GLF_IDENTITY(abs(1.0), (abs(1.0)) * _GLF_IDENTITY(1.0, 0.0 + (1.0))), 1.0, 0.0, 0.0, 0.0, 0.0)), vec2(mat3(injectionSwitch, 1.0, abs(1.0), 1.0, 0.0, 0.0, 0.0, 0.0)))))))[0], _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, 1.0, _GLF_IDENTITY(abs(1.0), (false ? _GLF_FUZZED(float(false)) : abs(1.0))), 1.0, 0.0, 0.0, 0.0, 0.0)), min(vec2(mat3(injectionSwitch, 1.0, _GLF_IDENTITY(abs(1.0), (abs(1.0)) * _GLF_IDENTITY(1.0, 0.0 + (1.0))), 1.0, 0.0, 0.0, 0.0, 0.0)), vec2(mat3(injectionSwitch, 1.0, abs(1.0), 1.0, 0.0, 0.0, 0.0, 0.0)))))))[1], float(mat2(((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, 1.0, _GLF_IDENTITY(abs(1.0), (false ? _GLF_FUZZED(float(false)) : abs(1.0))), 1.0, 0.0, 0.0, 0.0, 0.0)), min(vec2(mat3(injectionSwitch, 1.0, _GLF_IDENTITY(abs(1.0), (abs(1.0)) * _GLF_IDENTITY(1.0, 0.0 + (1.0))), 1.0, 0.0, 0.0, 0.0, 0.0)), vec2(mat3(injectionSwitch, 1.0, abs(1.0), 1.0, 0.0, 0.0, 0.0, 0.0)))))))[1], 1.0, 1.0, 0.0)))), vec2(_GLF_FUZZED(-2.4), _GLF_FUZZED(6.1)), bvec2(false, false))))) - vec2(0.0, 0.0)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-3390.8554)), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(339.412)), bool(false)), _GLF_IDENTITY(dot(vec2(determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))), vec2(0.0, 0.0)), dot(vec2(determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))), vec2(0.0, 0.0))) + (mix(float(injectionSwitch.y), float(_GLF_FUZZED(339.412)), bool(false)))))))), false, true), true))))), _GLF_IDENTITY(false, true && (false)), false)))))))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true), true)))), bool(bool(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true), true)))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec3(_GLF_IDENTITY(false, false || (false)), false, true))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))))), false, true)), (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, false || (false)))), false || (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), false || (_GLF_IDENTITY(false, false || (false))))))))), _GLF_IDENTITY(false, true && (false)), true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, false || (false)))), false || (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), false || (_GLF_IDENTITY(false, false || (false))))))))), _GLF_IDENTITY(false, true && (false)), true))))) && true))))
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 barrier();
                }
              }
             for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (int(5)) >> 0))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, ~ (~ (0))), 0)) >> _GLF_IDENTITY(int(8), int(_GLF_IDENTITY(8, (_GLF_IDENTITY(8, max(8, 8))) | (8)))))); _injected_loop_counter --)
              {
               barrier();
              }
             if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), (bool(bvec3(false, true, false))) && true))))
                barrier();
               barrier();
              }
            }
          }
         for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), 1 * (_GLF_IDENTITY(int(2), (int(2)) | 0))))) >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(2), max(_GLF_IDENTITY(int(2), clamp(_GLF_IDENTITY(int(2), (true ? int(2) : _GLF_IDENTITY(_GLF_FUZZED(28598), 0 | (_GLF_FUZZED(28598))))), int(2), int(2))), int(2))), int(2)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(2), max(_GLF_IDENTITY(int(2), clamp(_GLF_IDENTITY(int(2), (true ? int(2) : _GLF_FUZZED(_GLF_IDENTITY(28598, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(28598, 1, 0), (_GLF_IDENTITY(ivec3(28598, 1, 0), (ivec3(28598, 1, 0)) | ivec3(0, 0, 0))) / ivec3(1, 1, 1))), min(int(_GLF_IDENTITY(ivec3(28598, 1, 0), (_GLF_IDENTITY(ivec3(28598, 1, 0), (ivec3(28598, 1, 0)) | ivec3(0, 0, 0))) / ivec3(1, 1, 1))), int(_GLF_IDENTITY(ivec3(28598, 1, 0), (_GLF_IDENTITY(ivec3(28598, 1, 0), (ivec3(28598, 1, 0)) | ivec3(0, 0, 0))) / ivec3(1, 1, 1))))))))), int(2), int(2))), int(2))), int(2)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(int(2), max(_GLF_IDENTITY(int(2), clamp(_GLF_IDENTITY(int(2), (true ? int(2) : _GLF_FUZZED(28598))), int(2), int(2))), int(_GLF_IDENTITY(2, clamp(2, 2, 2))))), int(2)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(2), max(_GLF_IDENTITY(int(2), clamp(_GLF_IDENTITY(int(2), (true ? int(2) : _GLF_FUZZED(28598))), int(2), int(2))), int(2))), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(int(2), max(_GLF_IDENTITY(int(2), clamp(_GLF_IDENTITY(int(2), (true ? int(2) : _GLF_FUZZED(28598))), int(2), int(2))), int(2))), 1), ~ (~ (ivec2(_GLF_IDENTITY(int(2), max(_GLF_IDENTITY(int(2), clamp(_GLF_IDENTITY(int(2), (true ? int(2) : _GLF_FUZZED(28598))), int(2), int(2))), int(2))), 1))))), (int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(int(2), max(_GLF_IDENTITY(int(2), clamp(_GLF_IDENTITY(int(2), (true ? int(2) : _GLF_FUZZED(28598))), int(2), int(2))), int(2))), 1), ~ (~ (ivec2(_GLF_IDENTITY(int(2), max(_GLF_IDENTITY(int(2), clamp(_GLF_IDENTITY(int(2), (true ? int(2) : _GLF_FUZZED(28598))), int(2), int(2))), int(2))), 1)))))) | 0)), int(2)), _GLF_IDENTITY(_GLF_IDENTITY(int(2), max(_GLF_IDENTITY(int(2), clamp(_GLF_IDENTITY(int(2), (true ? int(2) : _GLF_IDENTITY(_GLF_FUZZED(28598), (_GLF_FUZZED(28598)) | (_GLF_IDENTITY(_GLF_FUZZED(28598), (_GLF_IDENTITY(_GLF_FUZZED(28598), clamp(_GLF_FUZZED(28598), _GLF_FUZZED(28598), _GLF_FUZZED(28598)))) ^ 0))))), int(2), int(2))), _GLF_IDENTITY(int(2), max(int(2), int(2))))), int(2))))) ^ _GLF_IDENTITY(0, 0 | (0)))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true)))), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true)))))))), bool(bvec4(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true)))), bvec3(bvec3(bvec3(false, true, true))))), false, false, false))))))
            {
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && true) || false))))
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                  }
                 else
                  {
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     barrier();
                    }
                  }
                 barrier();
                }
               barrier();
              }
            }
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           barrier();
          }
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), _GLF_IDENTITY((_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)) || false, ! (_GLF_IDENTITY(! ((_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)) || false), true && (! ((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < 1, bool(bool(_injected_loop_counter < 1))))) || false))))))), true && (bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)) || false)))))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), ! (! (bool(bool(_GLF_DEAD(false))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_3 _GLF_struct_replacement_3 = _GLF_struct_3(vec4(1.0), _GLF_struct_2(_GLF_struct_0(_GLF_IDENTITY(mat4(1.0), (_GLF_IDENTITY(mat4(1.0), (mat4(1.0)) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))) / mat4(1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, 0.0 + (1.0))) * _GLF_IDENTITY(dot(vec3(cos(0.0), abs(0.0), 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(cos(0.0), abs(0.0), 0.0), vec3(1.0, 0.0, 0.0)))), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)), _GLF_IDENTITY(ivec3(1), ivec3(0, 0, 0) ^ (ivec3(1)))), _GLF_struct_1(_GLF_IDENTITY(bvec3(true), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(true), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec4(bvec3(true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bvec3(bvec4(bvec3(bvec3(true)), _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, false, true)))))))))), false)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(true), bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(true)), bvec3(bvec4(bvec3(bvec3(true)), false))), bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(true)), bvec3(bvec4(bvec3(bvec3(true)), false))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(true)), bvec3(bvec4(bvec3(bvec3(true)), false))))))))))), false)))))), mat3x4(1.0)), bvec2(_GLF_IDENTITY(true, (true) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-440.422)), float(injectionSwitch.y), bool(true)))))) && true))), mat2(1.0), gl_NumWorkGroups.x));
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)))), (~ _GLF_IDENTITY((~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)))), ((~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))))) / uvec3(1u, 1u, 1u))) + uvec3(0u, 0u, 0u)), (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(_GLF_IDENTITY(0u, 1u * (0u)), 0u, 0u)))), min(_GLF_IDENTITY(_GLF_IDENTITY(~ (~ _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))), ((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize)), (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)))) | uvec3(0u, 0u, 0u))), (true ? ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))), ((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) | (gl_WorkGroupSize), uvec3(uvec4((gl_WorkGroupSize) | (gl_WorkGroupSize), 1u)))), (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)))) | uvec3(0u, 0u, 0u))) : _GLF_FUZZED(uvec3(8388u, 4978u, 54742u)))), (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))), (~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)))) ^ uvec3(0u, 0u, 0u))) * uvec3(1u, 1u, 1u)))) | (~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)), (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)), max(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)), _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (0u))) | (0u)))), 0u, 0u)))))))), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(_GLF_IDENTITY(0u, (0u) / 1u), 0u, 0u)))), (~ (~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))))) | _GLF_IDENTITY((_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) ^ (0u ^ 0u)))))), clamp(~ (~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)))), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)))), uvec3(uvec4(~ (~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)))), 1u))), ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))))))), uvec3(0u, 0u, 0u) + ((_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)))), _GLF_IDENTITY(clamp(~ (~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)))), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)))), uvec3(uvec4(~ (~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)))), 1u))), ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))))), ~ (~ (clamp(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))), uvec3(0u, 0u, 0u) ^ (~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)))))), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)))), uvec3(uvec4(~ (~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)))), 1u))), ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)))))))))))))))) | _GLF_IDENTITY((~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))), _GLF_IDENTITY((~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)))), (_GLF_IDENTITY(false ? _GLF_FUZZED((+ min(uvec3(46086u, 69542u, 139032u), subgroup_size))) : (~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)))), max(false ? _GLF_FUZZED((+ min(uvec3(46086u, 69542u, 139032u), subgroup_size))) : (~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)))), false ? _GLF_FUZZED((+ min(uvec3(46086u, 69542u, 139032u), subgroup_size))) : (~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)))))))) << uvec3(0u, 0u, 0u)))), (_GLF_IDENTITY((~ (~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))))), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, (1u) | (1u)), 1u, 1u), ~ (~ (uvec3(1u, 1u, 1u)))) * _GLF_IDENTITY(((~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) | (gl_WorkGroupSize)), (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)))))), ~ (~ (_GLF_IDENTITY(((~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3(~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)))), (uvec3(~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))))) >> uvec3(0u, 0u, 0u))), clamp(uvec3(_GLF_IDENTITY(uvec3(~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)))), (uvec3(~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))))) >> uvec3(0u, 0u, 0u))), uvec3(_GLF_IDENTITY(uvec3(~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)))), (uvec3(~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))))) >> uvec3(0u, 0u, 0u))), uvec3(_GLF_IDENTITY(uvec3(~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)))), (uvec3(~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))))) >> uvec3(0u, 0u, 0u))))))))), uvec3(0u, 0u, 0u) ^ (((~ (~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))))))))))))) - uvec3(0u, 0u, 0u)))).x;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(max(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_id, 0u | (_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, (subgroup_id) - _GLF_IDENTITY(0u, uint(uint(0u)))), subgroup_id)))) * subgroup_size))), subgroup_id * subgroup_size), (max(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_id, 0u | (_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u), subgroup_id)))) * subgroup_size))), subgroup_id * subgroup_size)) ^ 0u)), ~ (~ (workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> (0u & 139671u)), max(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id))) / 1u) * subgroup_size))), subgroup_id * subgroup_size))))) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u), (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u)) ^ 0u);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     barrier();
    }
   else
    {
    }
  }
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u), (true ? subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u) : _GLF_FUZZED(workgroup_id))) + _GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((1) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) | 0), _GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (1))))) ^ 0)), ~ _GLF_IDENTITY((~ ((1) | (1))), 0 ^ ((~ ((1) | (1)))))))) % subgroup_size), (((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, int(ivec4(1, 0, 0, 1))), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) | (1))))) | _GLF_IDENTITY((_GLF_IDENTITY(1, 0 ^ (1))), (_GLF_IDENTITY((1), int(ivec2((1), 0)))) | 0))) % subgroup_size)) >> 0u);
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 0.0, 0.0, 0.0, 0.0, determinant(mat3(0.0, 1.0, sqrt(1.0), 0.0, sqrt(0.0), 1.0, 0.0, length(vec2(0.0, 0.0)), 0.0)), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0)))))) && true)))
  barrier();
 _GLF_IDENTITY(buf[virtual_gid] = _GLF_IDENTITY(1, min(1, 1)), ~ (~ (buf[virtual_gid] = _GLF_IDENTITY(1, min(1, 1)))));
 if(_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec4(subgroup_local_id + 1, 1u, 1u, _GLF_IDENTITY(0u, (0u) | 0u)))) < subgroup_size)
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), ! (! (! (false))))), ! (! (_GLF_IDENTITY(! (! (false)), (! (! _GLF_IDENTITY((false), true && ((false))))) || false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
     else
      {
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   do
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))))
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
   int i = 0;
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      {
       do
        {
         do
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_DEAD(false))
          barrier();
         do
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
   else
    {
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     do
      {
       do
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         else
          {
           atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
          }
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))); _injected_loop_counter ++)
          {
           do
            {
             if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), true && ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY((vec2(vec3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y)))) * mat2(1.0), (false ? _GLF_FUZZED(vec2(-50.30, -92.40)) : (vec2(vec3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y)))) * mat2(1.0))))).y, (injectionSwitch.x > injectionSwitch.y) || false)))))))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 barrier();
                }
               if(_GLF_DEAD(false))
                {
                 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                  {
                   barrier();
                  }
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           else
            {
            }
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false, false))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
            barrier();
           if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(bvec2(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, true), false, true))))))))))) || false)))
              barrier();
             barrier();
            }
           else
            {
            }
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
            barrier();
          }
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).y, injectionSwitch.y)))))), ! (! (bool(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).y, injectionSwitch.y))))))))))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))))))))
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           do
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
              barrier();
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))));
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           else
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               barrier();
              }
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             for(int _injected_loop_counter = (_GLF_IDENTITY((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5)), ((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(_GLF_IDENTITY(5, 0 + (5))), int(5))) >> _GLF_IDENTITY(int(5), int(5))) * 1)); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (true ? _injected_loop_counter : _GLF_FUZZED(_GLF_IDENTITY(ivec3(-19541, -1709, 70601), _GLF_IDENTITY((ivec3(-19541, -1709, 70601)), ivec3(1, 1, 1) * ((ivec3(-19541, -1709, 70601)))) | (ivec3(-19541, -1709, 70601))).b))) != 0); _GLF_IDENTITY(_injected_loop_counter --, ~ (~ (_injected_loop_counter --))))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
            }
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], (false ? _GLF_FUZZED(-93.38) : (injectionSwitch)[0])), (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) - vec2(0.0, 0.0)))[1]), vec2(_GLF_FUZZED(-71.23), _GLF_FUZZED(8.9)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))).x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(61.01), (injectionSwitch)[_GLF_IDENTITY(1, (1) | 0)]), vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_FUZZED(924.788)), float((injectionSwitch)[_GLF_IDENTITY(0, (0) | (0))]), bool(true))), _GLF_FUZZED(-654.089)), bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec3(bvec3(true, false, false))))), (bool(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec3(bvec3(true, false, false)))))) || false)), true, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec3(bvec3(true, false, false))))), (bool(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec3(bvec3(true, false, false)))))) || false)), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec3(bvec3(true, false, false))))), (bool(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec3(bvec3(true, false, false)))))) || false)), true, true), false))))))), (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec3(bvec3(true, false, false))))), (bool(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec3(bvec3(true, false, false)))))) || false)), true, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec3(bvec3(true, false, false))))), (bool(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec3(bvec3(true, false, false)))))) || false)), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec3(bvec3(true, false, false))))), (bool(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec3(bvec3(true, false, false)))))) || false)), true, true), false)))))))) && true)), false))).y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], (false ? _GLF_FUZZED(-93.38) : (injectionSwitch)[0])), (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) - vec2(0.0, 0.0)))[1]), vec2(_GLF_FUZZED(-71.23), _GLF_FUZZED(8.9)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))).x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(61.01), (injectionSwitch)[_GLF_IDENTITY(1, (1) | 0)]), vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_FUZZED(924.788)), float((injectionSwitch)[_GLF_IDENTITY(0, (0) | (0))]), bool(true))), _GLF_FUZZED(-654.089)), bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec3(bvec3(true, false, false))))), (bool(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec3(bvec3(true, false, false)))))) || false)), true, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec3(bvec3(true, false, false))))), (bool(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec3(bvec3(true, false, false)))))) || false)), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec3(bvec3(true, false, false))))), (bool(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec3(bvec3(true, false, false)))))) || false)), true, true), false))))))), (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec3(bvec3(true, false, false))))), (bool(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec3(bvec3(true, false, false)))))) || false)), true, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec3(bvec3(true, false, false))))), (bool(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec3(bvec3(true, false, false)))))) || false)), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec3(bvec3(true, false, false))))), (bool(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec3(bvec3(true, false, false)))))) || false)), true, true), false)))))))) && true)), false))).y, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], (false ? _GLF_FUZZED(-93.38) : (injectionSwitch)[0])), (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) - vec2(0.0, 0.0)))[1]), vec2(_GLF_FUZZED(-71.23), _GLF_FUZZED(8.9)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))).x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(61.01), (injectionSwitch)[_GLF_IDENTITY(1, (1) | 0)]), vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_FUZZED(924.788)), float((injectionSwitch)[_GLF_IDENTITY(0, (0) | (0))]), bool(true))), _GLF_FUZZED(-654.089)), bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec3(bvec3(true, false, false))))), (bool(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec3(bvec3(true, false, false)))))) || false)), true, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec3(bvec3(true, false, false))))), (bool(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec3(bvec3(true, false, false)))))) || false)), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec3(bvec3(true, false, false))))), (bool(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec3(bvec3(true, false, false)))))) || false)), true, true), false))))))), (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec3(bvec3(true, false, false))))), (bool(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec3(bvec3(true, false, false)))))) || false)), true, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec3(bvec3(true, false, false))))), (bool(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec3(bvec3(true, false, false)))))) || false)), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec3(bvec3(true, false, false))))), (bool(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec3(bvec3(true, false, false)))))) || false)), true, true), false)))))))) && true)), false))).y, true, false)), true && (bool(bvec3(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], (false ? _GLF_FUZZED(-93.38) : (injectionSwitch)[0])), (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) - vec2(0.0, 0.0)))[1]), vec2(_GLF_FUZZED(-71.23), _GLF_FUZZED(8.9)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))).x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(61.01), (injectionSwitch)[_GLF_IDENTITY(1, (1) | 0)]), vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_FUZZED(924.788)), float((injectionSwitch)[_GLF_IDENTITY(0, (0) | (0))]), bool(true))), _GLF_FUZZED(-654.089)), bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec3(bvec3(true, false, false))))), (bool(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec3(bvec3(true, false, false)))))) || false)), true, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec3(bvec3(true, false, false))))), (bool(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec3(bvec3(true, false, false)))))) || false)), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec3(bvec3(true, false, false))))), (bool(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec3(bvec3(true, false, false)))))) || false)), true, true), false))))))), (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec3(bvec3(true, false, false))))), (bool(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec3(bvec3(true, false, false)))))) || false)), true, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec3(bvec3(true, false, false))))), (bool(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec3(bvec3(true, false, false)))))) || false)), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec3(bvec3(true, false, false))))), (bool(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec3(bvec3(true, false, false)))))) || false)), true, true), false)))))))) && true)), false))).y, true, false)))))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true)), bvec2(bvec4(bvec2(false, false), false, true)))))) || false) ? _GLF_FUZZED(-93.38) : (injectionSwitch)[0], max(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true)), bvec2(bvec4(bvec2(false, false), false, true)))))) || false) ? _GLF_FUZZED(-93.38) : (injectionSwitch)[0], _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true)), bvec2(bvec4(bvec2(false, false), false, true)))))) || false) ? _GLF_FUZZED(-93.38) : (injectionSwitch)[0])))), (injectionSwitch)[1]), vec2(_GLF_IDENTITY(_GLF_FUZZED(-71.23), max(_GLF_FUZZED(-71.23), _GLF_FUZZED(-71.23))), _GLF_FUZZED(8.9)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(61.01, clamp(61.01, 61.01, _GLF_IDENTITY(61.01, 0.0 + (61.01))))), (injectionSwitch)[_GLF_IDENTITY(1, (1) | 0)]), vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_FUZZED(924.788)), float((injectionSwitch)[0]), bool(true))), _GLF_FUZZED(-654.089)), bvec2(true, false))), (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(61.01), (injectionSwitch)[_GLF_IDENTITY(1, (1) | 0)]), vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_FUZZED(924.788)), float((injectionSwitch)[0]), bool(true))), _GLF_FUZZED(-654.089)), bvec2(true, false)))) * mat2(1.0)).y), ((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(0, (0) >> int(_GLF_ZERO(0.0, injectionSwitch.x)))], (false ? _GLF_FUZZED(-93.38) : (injectionSwitch)[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-71.23), _GLF_FUZZED(8.9)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))) / vec2(1.0, 1.0)).y)), false))).x > _GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(61.01), (injectionSwitch)[_GLF_IDENTITY(1, (1) | 0)]), max(_GLF_IDENTITY(vec2(_GLF_FUZZED(61.01), (injectionSwitch)[_GLF_IDENTITY(1, (1) | 0)]), max(vec2(_GLF_FUZZED(61.01), (injectionSwitch)[_GLF_IDENTITY(1, (1) | 0)]), vec2(_GLF_FUZZED(61.01), (injectionSwitch)[_GLF_IDENTITY(1, (1) | 0)]))), vec2(_GLF_FUZZED(61.01), (injectionSwitch)[_GLF_IDENTITY(1, (1) | 0)]))), vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_FUZZED(924.788)), float((injectionSwitch)[0]), bool(true))), _GLF_FUZZED(-654.089)), bvec2(true, false))).y)) && true))))))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((68.73 - -1186.6069)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-5.3)), bvec2(true, _GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))).y))) && true)))
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   barrier();
                  }
                 barrier();
                }
               if(_GLF_DEAD(false))
                barrier();
              }
             else
              {
               do
                {
                 barrier();
                }
               while(_GLF_WRAPPED_LOOP(false));
               if(_GLF_DEAD(false))
                {
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                  }
                 barrier();
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))), injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], injectionSwitch[0])))), injectionSwitch[1])), injectionSwitch)).x > injectionSwitch.y))))
                {
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                  }
                 else
                  {
                   barrier();
                  }
                }
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
                  {
                  }
                 else
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec4(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false)))), bool(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(1340.7635)), bool(false))), 1.0), (vec2(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(1340.7635)), bool(false))), 1.0)) * vec2(1.0, 1.0)))), (injectionSwitch.x) / 1.0) < _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-746.666)), vec2(_GLF_FUZZED(9.6), (injectionSwitch)[1]), bvec2(false, true))).y))), bvec2(bvec4(bvec2(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true, false)))), true, false)))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, sqrt(1.0) * (injectionSwitch.y))), float(_GLF_FUZZED(-4.7)), bool(false)))))), bvec2(bvec4(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, _GLF_IDENTITY(false, (false) && true))))), ! (! (bool(_GLF_IDENTITY(bvec2(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) < injectionSwitch.y))), bvec2(bvec4(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false))))))))), true, false))))))
                  {
                  }
                 else
                  {
                   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(406.924, -7949.9135)) : injectionSwitch)).x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))) && true))
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     if(_GLF_DEAD(false))
                      barrier();
                     barrier();
                    }
                   barrier();
                   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), ((false)) || false)))))))
                    {
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), _GLF_IDENTITY(true, (true) || false) && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), (_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))) || false))))
                        barrier();
                       for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 ^ 0)); _injected_loop_counter --)
                        {
                         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false)))))
                          {
                          }
                         else
                          {
                           for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                            {
                             barrier();
                             if(_GLF_DEAD(false))
                              barrier();
                            }
                          }
                        }
                      }
                     barrier();
                    }
                  }
                }
               if(_GLF_DEAD(false))
                barrier();
              }
            }
          }
         else
          {
          }
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(float(157688u))), float(injectionSwitch.y), bool(true))), (injectionSwitch.y) * _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec3(1.0, 1.0, 1.0)), clamp(float(vec3(1.0, 1.0, 1.0)), float(vec3(1.0, 1.0, 1.0)), float(vec3(1.0, 1.0, 1.0)))))))))), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))).y, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))), mat2(1.0) * (vec2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))))))).y) * 1.0)))))))))), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))), bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))))))), true, true))))
          {
           if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)), (injectionSwitch), (injectionSwitch))) * vec2(1.0, 1.0)).y))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), false || (_GLF_IDENTITY((true), true && ((true))))))), (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y) && true)))), _GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(vec2(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)), min(_GLF_IDENTITY(vec2(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)), vec2(mat3x2(vec2(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)), 1.0, 0.0, 0.0, 1.0))), vec2(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0))))).y))))), bool(bvec4(! (! (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(vec2(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)), min(_GLF_IDENTITY(vec2(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)), vec2(mat3x2(vec2(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)), 1.0, 0.0, 0.0, 1.0))), vec2(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0))))).y))))), false, true, false))))), true && ((_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), false || (_GLF_IDENTITY((true), true && ((true))))))), (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y) && true)))), _GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(vec2(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)), min(_GLF_IDENTITY(vec2(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)), vec2(mat3x2(vec2(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)), 1.0, 0.0, 0.0, 1.0))), vec2(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0))))).y))))), bool(bvec4(! (! (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(vec2(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)), min(_GLF_IDENTITY(vec2(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)), vec2(mat3x2(vec2(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)), 1.0, 0.0, 0.0, 1.0))), vec2(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0))))).y))))), false, true, false))))))))))
            {
             barrier();
            }
           else
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))))
              {
              }
             else
              {
               if(_GLF_DEAD(false))
                barrier();
              }
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true), bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true)))))))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))))) * mat2(1.0)), min(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))))) * mat2(1.0)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))))) * mat2(1.0)), (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))))) * mat2(1.0))) * mat2(1.0)))), injectionSwitch))) - _GLF_IDENTITY(tan(vec2(0.0, 0.0)), _GLF_IDENTITY((tan(vec2(0.0, 0.0))), ((tan(vec2(0.0, 0.0)))) * mat2(1.0)) * _GLF_IDENTITY(mat2(1.0), transpose(_GLF_IDENTITY(transpose(mat2(1.0)), (transpose(mat2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, 1.0))) - 0.0)))) / mat2(1.0, 1.0, 1.0, 1.0)))))).x, min(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), min(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) / vec2(1.0, 1.0)), (injectionSwitch) * mat2(1.0))))) * mat2(1.0)), injectionSwitch))) - tan(vec2(0.0, 0.0))).x, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (true ? mat2(1.0) : _GLF_FUZZED(mat2(632.659, 7.4, 87.37, 88.65))))), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(144.690), _GLF_FUZZED(-231.089)), vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[0], min(_GLF_IDENTITY((injectionSwitch)[0], _GLF_IDENTITY(float(mat2x3((injectionSwitch)[0], sqrt(0.0), 0.0, 0.0, 1.0, 1.0)), (float(mat2x3((injectionSwitch)[0], sqrt(0.0), 0.0, 0.0, 1.0, 1.0))) * 1.0)), (injectionSwitch)[0])), (true ? _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[0], min(_GLF_IDENTITY((injectionSwitch)[0], _GLF_IDENTITY(float(mat2x3((injectionSwitch)[0], sqrt(0.0), 0.0, 0.0, 1.0, 1.0)), (float(mat2x3((injectionSwitch)[0], sqrt(0.0), 0.0, 0.0, 1.0, 1.0))) * 1.0)), (injectionSwitch)[0])), min(_GLF_IDENTITY((injectionSwitch)[0], min(_GLF_IDENTITY((injectionSwitch)[0], _GLF_IDENTITY(float(mat2x3((injectionSwitch)[0], sqrt(0.0), 0.0, 0.0, 1.0, 1.0)), (float(mat2x3((injectionSwitch)[0], sqrt(0.0), 0.0, 0.0, 1.0, 1.0))) * 1.0)), (injectionSwitch)[0])), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[0], min(_GLF_IDENTITY((injectionSwitch)[0], _GLF_IDENTITY(float(mat2x3((injectionSwitch)[0], sqrt(0.0), 0.0, 0.0, 1.0, 1.0)), (float(mat2x3((injectionSwitch)[0], sqrt(0.0), 0.0, 0.0, 1.0, 1.0))) * 1.0)), (injectionSwitch)[0])), (false ? _GLF_FUZZED(-1.3) : _GLF_IDENTITY((injectionSwitch)[0], min(_GLF_IDENTITY((injectionSwitch)[0], _GLF_IDENTITY(float(mat2x3((injectionSwitch)[0], sqrt(0.0), 0.0, 0.0, 1.0, 1.0)), (float(mat2x3((injectionSwitch)[0], sqrt(0.0), 0.0, 0.0, 1.0, 1.0))) * 1.0)), (injectionSwitch)[0])))))) : _GLF_FUZZED(-8.2)))), float(_GLF_FUZZED(-5.8)), bool(false))), (injectionSwitch)[1]), bvec2(true, _GLF_IDENTITY(true, bool(bvec4(true, false, false, false))))))))) - tan(vec2(0.0, 0.0))).x)), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))))) * mat2(1.0)), min(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))))) * mat2(1.0)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))))) * mat2(1.0)), (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))))) * mat2(1.0))) * mat2(1.0)))), injectionSwitch))) - _GLF_IDENTITY(tan(vec2(0.0, 0.0)), _GLF_IDENTITY((tan(vec2(0.0, 0.0))), ((tan(vec2(0.0, 0.0)))) * mat2(1.0)) * _GLF_IDENTITY(mat2(1.0), transpose(_GLF_IDENTITY(transpose(mat2(1.0)), (transpose(mat2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, 1.0))) - 0.0)))) / mat2(1.0, 1.0, 1.0, 1.0)))))).x, min(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), min(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) / vec2(1.0, 1.0)), (injectionSwitch) * mat2(1.0))))) * mat2(1.0)), injectionSwitch))) - tan(vec2(0.0, 0.0))).x, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (true ? mat2(1.0) : _GLF_FUZZED(mat2(632.659, 7.4, 87.37, 88.65))))), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(144.690), _GLF_FUZZED(-231.089)), vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[0], min(_GLF_IDENTITY((injectionSwitch)[0], _GLF_IDENTITY(float(mat2x3((injectionSwitch)[0], sqrt(0.0), 0.0, 0.0, 1.0, 1.0)), (float(mat2x3((injectionSwitch)[0], sqrt(0.0), 0.0, 0.0, 1.0, 1.0))) * 1.0)), (injectionSwitch)[0])), (true ? _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[0], min(_GLF_IDENTITY((injectionSwitch)[0], _GLF_IDENTITY(float(mat2x3((injectionSwitch)[0], sqrt(0.0), 0.0, 0.0, 1.0, 1.0)), (float(mat2x3((injectionSwitch)[0], sqrt(0.0), 0.0, 0.0, 1.0, 1.0))) * 1.0)), (injectionSwitch)[0])), min(_GLF_IDENTITY((injectionSwitch)[0], min(_GLF_IDENTITY((injectionSwitch)[0], _GLF_IDENTITY(float(mat2x3((injectionSwitch)[0], sqrt(0.0), 0.0, 0.0, 1.0, 1.0)), (float(mat2x3((injectionSwitch)[0], sqrt(0.0), 0.0, 0.0, 1.0, 1.0))) * 1.0)), (injectionSwitch)[0])), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[0], min(_GLF_IDENTITY((injectionSwitch)[0], _GLF_IDENTITY(float(mat2x3((injectionSwitch)[0], sqrt(0.0), 0.0, 0.0, 1.0, 1.0)), (float(mat2x3((injectionSwitch)[0], sqrt(0.0), 0.0, 0.0, 1.0, 1.0))) * 1.0)), (injectionSwitch)[0])), (false ? _GLF_FUZZED(-1.3) : _GLF_IDENTITY((injectionSwitch)[0], min(_GLF_IDENTITY((injectionSwitch)[0], _GLF_IDENTITY(float(mat2x3((injectionSwitch)[0], sqrt(0.0), 0.0, 0.0, 1.0, 1.0)), (float(mat2x3((injectionSwitch)[0], sqrt(0.0), 0.0, 0.0, 1.0, 1.0))) * 1.0)), (injectionSwitch)[0])))))) : _GLF_FUZZED(-8.2)))), float(_GLF_FUZZED(-5.8)), bool(false))), (injectionSwitch)[1]), bvec2(true, _GLF_IDENTITY(true, bool(bvec4(true, false, false, false))))))))) - tan(vec2(0.0, 0.0))).x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))))) * mat2(1.0)), min(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))))) * mat2(1.0)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))))) * mat2(1.0)), (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))))) * mat2(1.0))) * mat2(1.0)))), injectionSwitch))) - _GLF_IDENTITY(tan(vec2(0.0, 0.0)), _GLF_IDENTITY((tan(vec2(0.0, 0.0))), ((tan(vec2(0.0, 0.0)))) * mat2(1.0)) * _GLF_IDENTITY(mat2(1.0), transpose(_GLF_IDENTITY(transpose(mat2(1.0)), (transpose(mat2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, 1.0))) - 0.0)))) / mat2(1.0, 1.0, 1.0, 1.0)))))).x, min(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), min(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) / vec2(1.0, 1.0)), (injectionSwitch) * mat2(1.0))))) * mat2(1.0)), injectionSwitch))) - tan(vec2(0.0, 0.0))).x, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (true ? mat2(1.0) : _GLF_FUZZED(mat2(632.659, 7.4, 87.37, 88.65))))), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(144.690), _GLF_FUZZED(-231.089)), vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[0], min(_GLF_IDENTITY((injectionSwitch)[0], _GLF_IDENTITY(float(mat2x3((injectionSwitch)[0], sqrt(0.0), 0.0, 0.0, 1.0, 1.0)), (float(mat2x3((injectionSwitch)[0], sqrt(0.0), 0.0, 0.0, 1.0, 1.0))) * 1.0)), (injectionSwitch)[0])), (true ? _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[0], min(_GLF_IDENTITY((injectionSwitch)[0], _GLF_IDENTITY(float(mat2x3((injectionSwitch)[0], sqrt(0.0), 0.0, 0.0, 1.0, 1.0)), (float(mat2x3((injectionSwitch)[0], sqrt(0.0), 0.0, 0.0, 1.0, 1.0))) * 1.0)), (injectionSwitch)[0])), min(_GLF_IDENTITY((injectionSwitch)[0], min(_GLF_IDENTITY((injectionSwitch)[0], _GLF_IDENTITY(float(mat2x3((injectionSwitch)[0], sqrt(0.0), 0.0, 0.0, 1.0, 1.0)), (float(mat2x3((injectionSwitch)[0], sqrt(0.0), 0.0, 0.0, 1.0, 1.0))) * 1.0)), (injectionSwitch)[0])), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[0], min(_GLF_IDENTITY((injectionSwitch)[0], _GLF_IDENTITY(float(mat2x3((injectionSwitch)[0], sqrt(0.0), 0.0, 0.0, 1.0, 1.0)), (float(mat2x3((injectionSwitch)[0], sqrt(0.0), 0.0, 0.0, 1.0, 1.0))) * 1.0)), (injectionSwitch)[0])), (false ? _GLF_FUZZED(-1.3) : _GLF_IDENTITY((injectionSwitch)[0], min(_GLF_IDENTITY((injectionSwitch)[0], _GLF_IDENTITY(float(mat2x3((injectionSwitch)[0], sqrt(0.0), 0.0, 0.0, 1.0, 1.0)), (float(mat2x3((injectionSwitch)[0], sqrt(0.0), 0.0, 0.0, 1.0, 1.0))) * 1.0)), (injectionSwitch)[0])))))) : _GLF_FUZZED(-8.2)))), float(_GLF_FUZZED(-5.8)), bool(false))), (injectionSwitch)[1]), bvec2(true, _GLF_IDENTITY(true, bool(bvec4(true, false, false, false))))))))) - tan(vec2(0.0, 0.0))).x)))) > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2(_GLF_FUZZED(-6044.3343), _GLF_IDENTITY((mat2(1.0) * (injectionSwitch))[1], clamp((mat2(1.0) * (injectionSwitch))[1], (mat2(1.0) * (injectionSwitch))[1], _GLF_IDENTITY((mat2(1.0) * (injectionSwitch))[1], clamp((mat2(1.0) * (injectionSwitch))[1], (mat2(1.0) * (injectionSwitch))[1], _GLF_IDENTITY((mat2(1.0) * (injectionSwitch))[1], ((mat2(1.0) * (injectionSwitch))[1]) - 0.0)))))), vec2((mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (false ? _GLF_FUZZED(-90.19) : injectionSwitch[1]))))))[0], _GLF_FUZZED(-669.666)), bvec2(true, false)))).y, (injectionSwitch.x > injectionSwitch.y) && true)), ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, (injectionSwitch.x > injectionSwitch.y) && true))) || false))), _GLF_IDENTITY((_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && ((_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)) || _GLF_IDENTITY(false, (false) && true)));
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       barrier();
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(_GLF_FUZZED(687.522)), (float(_GLF_FUZZED(687.522))) * 1.0), float(injectionSwitch.x), bool(true))) < injectionSwitch.y)) && _GLF_IDENTITY((false), false || ((false))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, (true) || false) && (false))))
        barrier();
       barrier();
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true)))) || false)))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
        }
      }
    }
   else
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       for(int _injected_loop_counter = int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))) && true))
          {
           barrier();
          }
         else
          {
          }
        }
      }
     do
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
     if(_GLF_DEAD(false))
      barrier();
    }
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec3(1, 0, 1)), (int(ivec3(1, 0, 1))) * 1))), int(1)))); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     do
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), (! (_GLF_IDENTITY(false, true && (false)))) || false))), false, _GLF_IDENTITY(false, (false) || false)), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && (! (! (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))), false, false), true)))), true && (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (! (! (false))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), bool(bvec2(! (! (false)), false))), (! (! (false))) && true), (_GLF_IDENTITY(! (! (false)), (! (! (false))) && true)) || false)) && _GLF_IDENTITY(true, (true) && true))), false, false), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && _GLF_IDENTITY(((! (false))), ! (! (((! (false)))))))), false, false), true)), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && ((! (false))))), false, false), true)))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && ((! _GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), false || ((false))))))))), false, false), true)))), true)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && _GLF_IDENTITY(((! (false))), ! (! (((! (false)))))))), false, false), true)), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && ((! (false))))), false, false), true)))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && ((! _GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), false || ((false))))))))), false, false), true)))), true)))), false))))))))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), (! (_GLF_IDENTITY(false, true && (false)))) || false))), false, _GLF_IDENTITY(false, (false) || false)), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && (! (! (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))), false, false), true)))), true && (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (! (! (false))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), bool(bvec2(! (! (false)), false))), (! (! (false))) && true), (_GLF_IDENTITY(! (! (false)), (! (! (false))) && true)) || false)) && _GLF_IDENTITY(true, (true) && true))), false, false), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && _GLF_IDENTITY(((! (false))), ! (! (((! (false)))))))), false, false), true)), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && ((! (false))))), false, false), true)))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && ((! _GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), false || ((false))))))))), false, false), true)))), true)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && _GLF_IDENTITY(((! (false))), ! (! (((! (false)))))))), false, false), true)), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && ((! (false))))), false, false), true)))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && ((! _GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), false || ((false))))))))), false, false), true)))), true)))), false))))))))), bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), (! (_GLF_IDENTITY(false, true && (false)))) || false))), false, _GLF_IDENTITY(false, (false) || false)), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && (! (! (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))), false, false), true)))), true && (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (! (! (false))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), bool(bvec2(! (! (false)), false))), (! (! (false))) && true), (_GLF_IDENTITY(! (! (false)), (! (! (false))) && true)) || false)) && _GLF_IDENTITY(true, (true) && true))), false, false), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && _GLF_IDENTITY(((! (false))), ! (! (((! (false)))))))), false, false), true)), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && ((! (false))))), false, false), true)))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && ((! _GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), false || ((false))))))))), false, false), true)))), true)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && _GLF_IDENTITY(((! (false))), ! (! (((! (false)))))))), false, false), true)), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && ((! (false))))), false, false), true)))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && ((! _GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), false || ((false))))))))), false, false), true)))), true)))), false)))))))))))), false))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-656.781), _GLF_FUZZED((-13.80 - -6285.3230))), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-656.781), _GLF_FUZZED((-13.80 - -6285.3230))), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x > injectionSwitch.y), true, false, false)), true && (bool(bvec4((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-656.781), _GLF_FUZZED((-13.80 - -6285.3230))), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x > injectionSwitch.y), true, false, false))))))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   else
    {
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, bool(bvec4((false) || false, false, true, true)))), true, true, false)))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 barrier();
                }
               else
                {
                }
              }
            }
           else
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             barrier();
            }
           else
            {
            }
          }
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             barrier();
            }
           else
            {
            }
          }
        }
       if(_GLF_DEAD(false))
        barrier();
       for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(7), int(7))); _GLF_WRAPPED_LOOP(_injected_loop_counter < ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(5)), clamp(_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(5)), (1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), (_GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), int(_GLF_IDENTITY(int(_GLF_IDENTITY(int(5), int(5))), 0 ^ (int(_GLF_IDENTITY(int(5), int(5)))))))) << (0 << _GLF_IDENTITY(int(5), int(5))))) * 1), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(5)), clamp(1 << _GLF_IDENTITY(int(5), int(5)), 1 << _GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(14670))) << _GLF_IDENTITY(int(5), int(5)))), 1 << _GLF_IDENTITY(int(5), int(5))))) >> _GLF_IDENTITY(int(5), int(5)))); _injected_loop_counter ++)
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           do
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && ((! (false))))), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)))))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 barrier();
                }
              }
             else
              {
              }
             barrier();
            }
           while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) || false), bool(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) || false), false, false))), bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) || false), false))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch)).x < injectionSwitch.y)), true, _GLF_IDENTITY(true, ! _GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec2((true), true)), _GLF_IDENTITY(bool(bool(bool(bvec2((true), true)))), true && (bool(bool(bool(bvec2((true), true)))))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((true), _GLF_IDENTITY(bool(bool((true))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(bool(bool((true))), true, true, true)), (bool(bvec4(bool(bool((true))), true, true, true))) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec4(bool(bool((true))), true, true, true)), _GLF_IDENTITY((bool(bvec4(bool(bool((true))), true, true, true))), ((bool(bvec4(bool(bool((true))), true, true, true)))) && true) && true)), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec4(bool(bool(_GLF_IDENTITY((true), ! (! ((true)))))), true, true, true)), (bool(bvec4(bool(bool((true))), true, true, true))) && true)), _GLF_IDENTITY(true && (! (_GLF_IDENTITY(bool(bvec4(bool(bool(_GLF_IDENTITY((true), ! (! ((true)))))), true, true, true)), (bool(bvec4(bool(bool((true))), true, true, true))) && true))), false || (true && (! (_GLF_IDENTITY(bool(bvec4(bool(bool(_GLF_IDENTITY((true), ! (! ((true)))))), true, true, true)), (_GLF_IDENTITY(bool(bvec4(bool(bool((true))), true, true, true)), ! (! (bool(bvec4(bool(bool((true))), true, true, true)))))) && true))))))))))))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY((true), _GLF_IDENTITY(bool(bool((true))), bool(bvec4(bool(bool((true))), true, true, true)))), false)))))), bool(_GLF_IDENTITY(bvec3(! _GLF_IDENTITY((true), ! (! (_GLF_IDENTITY((true), ! (! ((true))))))), true, false), bvec3(bvec3(bvec3(! (true), true, false))))))), bool(bvec3((_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec2((true), true)), _GLF_IDENTITY(bool(bool(bool(bvec2((true), true)))), true && (bool(bool(bool(bvec2((true), true)))))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((true), _GLF_IDENTITY(bool(bool((true))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(bool(bool((true))), true, true, true)), (bool(bvec4(bool(bool((true))), true, true, true))) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec4(bool(bool((true))), true, true, true)), _GLF_IDENTITY((bool(bvec4(bool(bool((true))), true, true, true))), ((bool(bvec4(bool(bool((true))), true, true, true)))) && true) && true)), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec4(bool(bool(_GLF_IDENTITY((true), ! (! ((true)))))), true, true, true)), (bool(bvec4(bool(bool((true))), true, true, true))) && true)), _GLF_IDENTITY(true && (! (_GLF_IDENTITY(bool(bvec4(bool(bool(_GLF_IDENTITY((true), ! (! ((true)))))), true, true, true)), (bool(bvec4(bool(bool((true))), true, true, true))) && true))), false || (true && (! (_GLF_IDENTITY(bool(bvec4(bool(bool(_GLF_IDENTITY((true), ! (! ((true)))))), true, true, true)), (_GLF_IDENTITY(bool(bvec4(bool(bool((true))), true, true, true)), ! (! (bool(bvec4(bool(bool((true))), true, true, true)))))) && true))))))))))))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY((true), _GLF_IDENTITY(bool(bool((true))), bool(bvec4(bool(bool((true))), true, true, true)))), false)))))), bool(_GLF_IDENTITY(bvec3(! _GLF_IDENTITY((true), ! (! (_GLF_IDENTITY((true), ! (! ((true))))))), true, false), bvec3(bvec3(bvec3(! (true), true, false))))))), false, true))))))));
          }
        }
      }
    }
   else
    {
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, false), bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, false, false), true)))))))))
    barrier();
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     else
      {
      }
    }
   else
    {
    }
  }
 else
  {
   do
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(_GLF_IDENTITY(-0.4, _GLF_IDENTITY(float(mat4x2(-0.4, abs(1.0), exp(0.0), 0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), 1.0, exp(0.0))), min(float(mat4x2(-0.4, abs(1.0), exp(0.0), 0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), 1.0, exp(0.0))), float(mat4x2(-0.4, abs(1.0), exp(0.0), 0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), 1.0, exp(0.0))))))), _GLF_FUZZED(-9073.4830)), bvec2(false, false))), _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), (vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0))), injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-5.8), _GLF_FUZZED(-13.39)), bvec2(false, false))))))).x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-709.526)), bool(false))), max(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-709.526)), bool(false))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-709.526)), bool(false))), float(vec2(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-709.526)), bool(false))), 0.0)))))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), false || _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false)))), ((_GLF_IDENTITY(false, bool(bool(false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
  }
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 ^ _GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, int(ivec2(0, 1))))))); _injected_loop_counter --)
  {
   do
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, min(4, 4)), 4, 4))), _GLF_IDENTITY(int(4), min(_GLF_IDENTITY(int(4), max(int(4), _GLF_IDENTITY(int(4), (true ? int(4) : _GLF_FUZZED(_injected_loop_counter))))), _GLF_IDENTITY(int(_GLF_IDENTITY(4, (4) * int(_GLF_ONE(1.0, injectionSwitch.y)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(4, min(4, 4))), (int(4)) / 1), (_GLF_IDENTITY(int(_GLF_IDENTITY(4, min(4, 4))), (int(4)) / 1)) | (_GLF_IDENTITY(int(_GLF_IDENTITY(4, min(4, 4))), (int(4)) / 1))), _GLF_IDENTITY(int(4), 1 * (int(4))), int(4))))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (int(4)) - 0)), ~ (~ (_GLF_IDENTITY(int(4), _GLF_IDENTITY(int(_GLF_IDENTITY(4, int(ivec4(4, 0, (-51184 & 0), 0)))), _GLF_IDENTITY((int(4)) - 0, ((int(4)) - 0) >> 0)))))))); _injected_loop_counter ++)
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || false))))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           barrier();
          }
         else
          {
          }
        }
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) << 0) > (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), ~ (~ (_GLF_IDENTITY(int(2), (int(2)) * 1)))), int(2)))); _injected_loop_counter --)
          {
           barrier();
          }
        }
       if(_GLF_DEAD(false))
        barrier();
       for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != (((1 & 1) << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), max(_GLF_IDENTITY(int(3), max(int(3), int(3))), int(3)))), _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, ~ (~ (1))))), _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, 1, 1), min(ivec3(1, 1, 1), ivec3(1, 1, 1))))))))))), ~ (~ _GLF_IDENTITY((int(ivec2(_GLF_IDENTITY(int(3), int(_GLF_IDENTITY(3, (3) | (3)))), 1))), int(ivec4((int(ivec2(_GLF_IDENTITY(int(3), int(_GLF_IDENTITY(3, (3) | (3)))), 1))), 1, 0, 1)))))))); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), clamp(_GLF_IDENTITY(int(1), 0 | (int(1))), _GLF_IDENTITY(int(1), (int(1)) / 1), int(1))), _GLF_IDENTITY(int(1), (int(1)) + 0))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
            {
             barrier();
            }
          }
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            barrier();
           do
            {
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec3(false, false, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || _GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)), ((false) || _GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))) && true)), (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || _GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).x > injectionSwitch.y)), ((false) || _GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))) && true))) || false))))))))
              barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
            }
          }
         else
          {
          }
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(false))
              barrier();
             do
              {
               if(_GLF_DEAD(false))
                barrier();
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
             do
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(vec3(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(8.4), _GLF_FUZZED(-9086.6109)), bvec2(false, false))), 0.0)), mix(vec2(_GLF_IDENTITY((vec2(vec3(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(8.4), _GLF_FUZZED(-9086.6109)), bvec2(false, false))), 0.0)))[0], (true ? (vec2(vec3(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(8.4), _GLF_FUZZED(-9086.6109)), bvec2(false, false))), 0.0)))[0] : _GLF_FUZZED(1.1))), (vec2(vec3(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(8.4), _GLF_FUZZED(-9086.6109)), bvec2(false, false))), 0.0)))[1]), vec2(_GLF_FUZZED(526.168), _GLF_FUZZED(-695.552)), bvec2(false, false))), max(_GLF_IDENTITY(vec2(vec3(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(8.4), _GLF_FUZZED(-9086.6109)), bvec2(false, false))), 0.0)), mix(vec2(_GLF_IDENTITY((vec2(vec3(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(8.4), _GLF_FUZZED(-9086.6109)), bvec2(false, false))), 0.0)))[0], (true ? (vec2(vec3(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(8.4), _GLF_FUZZED(-9086.6109)), bvec2(false, false))), 0.0)))[0] : _GLF_FUZZED(1.1))), (vec2(vec3(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(8.4), _GLF_FUZZED(-9086.6109)), bvec2(false, false))), 0.0)))[1]), vec2(_GLF_FUZZED(526.168), _GLF_FUZZED(-695.552)), bvec2(false, false))), _GLF_IDENTITY(_GLF_IDENTITY(vec2(vec3(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(8.4), _GLF_FUZZED(-9086.6109)), bvec2(false, false))), 0.0)), mix(vec2(_GLF_IDENTITY((vec2(vec3(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(8.4), _GLF_FUZZED(-9086.6109)), bvec2(false, false))), 0.0)))[0], (true ? (vec2(vec3(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(8.4), _GLF_FUZZED(-9086.6109)), bvec2(false, false))), 0.0)))[0] : _GLF_FUZZED(1.1))), (vec2(vec3(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(8.4), _GLF_FUZZED(-9086.6109)), bvec2(false, false))), 0.0)))[1]), vec2(_GLF_FUZZED(526.168), _GLF_FUZZED(-695.552)), bvec2(false, false))), vec2(mat2x3(_GLF_IDENTITY(vec2(vec3(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(8.4), _GLF_FUZZED(-9086.6109)), bvec2(false, false))), 0.0)), mix(vec2(_GLF_IDENTITY((vec2(vec3(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(8.4), _GLF_FUZZED(-9086.6109)), bvec2(false, false))), 0.0)))[0], (true ? (vec2(vec3(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(8.4), _GLF_FUZZED(-9086.6109)), bvec2(false, false))), 0.0)))[0] : _GLF_FUZZED(1.1))), (vec2(vec3(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(8.4), _GLF_FUZZED(-9086.6109)), bvec2(false, false))), 0.0)))[1]), vec2(_GLF_FUZZED(526.168), _GLF_FUZZED(-695.552)), bvec2(false, false))), 1.0, 1.0, 1.0, 0.0)))))).x < injectionSwitch.y)))))))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                    }
                   else
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     barrier();
                    }
                  }
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                      {
                       barrier();
                      }
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                  }
                 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
                  barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                }
              }
             while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, true && (false))));
             if(_GLF_DEAD(false))
              {
               if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true), bvec2(bvec2(bvec2(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)))))))
                {
                 barrier();
                }
               else
                {
                }
              }
            }
           else
            {
            }
          }
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
  barrier();
}
