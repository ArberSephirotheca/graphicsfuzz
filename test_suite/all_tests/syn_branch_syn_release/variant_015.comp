#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_10 {
 uint subgroup_size;
 int _f0;
 uint _f1;
 bool _f2;
 bvec2 _f3;
} ;

struct _GLF_struct_11 {
 bvec3 _f0;
 bvec4 _f1;
 _GLF_struct_10 _f2;
} ;

struct _GLF_struct_12 {
 _GLF_struct_11 _f0;
 bool _f1;
} ;

struct _GLF_struct_7 {
 mat3x4 _f0;
 mat4 _f1;
} ;

struct _GLF_struct_6 {
 mat4 _f0;
 mat4x2 _f1;
 bool _f2;
} ;

struct _GLF_struct_8 {
 _GLF_struct_6 _f0;
 mat2x4 _f1;
 _GLF_struct_7 _f2;
} ;

struct _GLF_struct_4 {
 mat2x4 _f0;
 uvec2 _f1;
 mat2x4 _f2;
 vec4 _f3;
} ;

struct _GLF_struct_5 {
 int _f0;
 _GLF_struct_4 _f1;
} ;

struct _GLF_struct_2 {
 ivec4 _f0;
 mat3x2 _f1;
 mat2x4 _f2;
 bvec2 _f3;
 bvec2 _f4;
 mat4 _f5;
 bool _f6;
} ;

struct _GLF_struct_1 {
 ivec3 _f0;
 bool _f1;
 bool _f2;
 bvec2 _f3;
 mat2 _f4;
 uint _f5;
 uvec2 _f6;
} ;

struct _GLF_struct_0 {
 ivec4 _f0;
 uvec4 _f1;
 mat3x2 _f2;
 vec2 _f3;
} ;

struct _GLF_struct_3 {
 _GLF_struct_0 _f0;
 mat4 _f1;
 uvec2 _f2;
 _GLF_struct_1 _f3;
 _GLF_struct_2 _f4;
} ;

struct _GLF_struct_9 {
 int i;
 _GLF_struct_3 _f0;
 _GLF_struct_5 _f1;
 _GLF_struct_8 _f2;
} ;

layout(set = 0, binding = 0) uniform buf0 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   do
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       continue;
      }
     return;
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(9969.6745) : injectionSwitch.x)) > injectionSwitch.y))));
  }
 uint subgroup_id = gl_SubgroupID;
 _GLF_struct_12 _GLF_struct_replacement_12 = _GLF_struct_12(_GLF_struct_11(bvec3(true), bvec4(true), _GLF_struct_10(gl_SubgroupSize, 1, 1u, true, bvec2(true))), true);
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), (bool(bvec2(false, true))) || false)))), bool(bool(false)))))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), (! (false)) || false)), ! _GLF_IDENTITY((! ((_GLF_IDENTITY(! (false), (! (false)) || false)))), ((! ((_GLF_IDENTITY(! (false), (! (false)) || false))))) || false)))) && _GLF_IDENTITY(true, ! (! (true))))))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(_GLF_IDENTITY(! (false), bool(bool(! (false)))), false)))))));
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   do
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (injectionSwitch)), _GLF_IDENTITY(max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))), clamp(_GLF_IDENTITY(max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))), _GLF_IDENTITY(clamp(max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))), max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))), max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))), (clamp(max(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)), (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))), max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))), max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))))) / vec2(1.0, 1.0))), max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch, clamp(false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch, false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch, false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))))), max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))))).y))))
        return;
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      continue;
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
   for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     return;
    }
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 1u * (subgroup_id)), max(subgroup_id, _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), (true ? (subgroup_id) : _GLF_FUZZED(34441u))) | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 0u, 1u))), (_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 0u, 1u)))) | 0u)), 0u ^ (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 0u, 1u))), (_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 0u, 1u)))) | 0u)), _GLF_IDENTITY(uint(uvec2((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 0u, 1u))), (_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 0u, 1u)))) | 0u)), 0u)), uint(uint(uint(uvec2((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 0u, 1u))), (_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 0u, 1u)))) | 0u)), 0u))))))))))) * _GLF_struct_replacement_12._f0._f2.subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)), max(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 0u, 1u))))), (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_id) : 0u)), _GLF_IDENTITY(1u, min(1u, 1u)))))))) / ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u)))))) * _GLF_struct_replacement_12._f0._f2.subgroup_size) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 0u, 1u))))))) * _GLF_struct_replacement_12._f0._f2.subgroup_size, max(_GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 0u, 1u))))))) * _GLF_struct_replacement_12._f0._f2.subgroup_size, _GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) | _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 0u, 1u)))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 0u, 1u)))), ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u))) * ((_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 0u, 1u)))))))))))) * _GLF_struct_replacement_12._f0._f2.subgroup_size)))) + subgroup_local_id, _GLF_IDENTITY(clamp(_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_struct_replacement_12._f0._f2.subgroup_size + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u), max(workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u) * _GLF_struct_replacement_12._f0._f2.subgroup_size + subgroup_local_id, workgroup_base + _GLF_IDENTITY(subgroup_id, clamp(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u), clamp(_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u), _GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u), _GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u))), subgroup_id)) * _GLF_struct_replacement_12._f0._f2.subgroup_size + subgroup_local_id)), workgroup_base + subgroup_id * _GLF_struct_replacement_12._f0._f2.subgroup_size + subgroup_local_id, workgroup_base + subgroup_id * _GLF_struct_replacement_12._f0._f2.subgroup_size + _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))), (_GLF_IDENTITY(clamp(_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_struct_replacement_12._f0._f2.subgroup_size + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u), max(workgroup_base + subgroup_id * _GLF_struct_replacement_12._f0._f2.subgroup_size + subgroup_local_id, workgroup_base + subgroup_id * _GLF_struct_replacement_12._f0._f2.subgroup_size + subgroup_local_id)), _GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_struct_replacement_12._f0._f2.subgroup_size, 1u * (_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_struct_replacement_12._f0._f2.subgroup_size, (_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_struct_replacement_12._f0._f2.subgroup_size, max(workgroup_base + subgroup_id * _GLF_struct_replacement_12._f0._f2.subgroup_size, workgroup_base + subgroup_id * _GLF_struct_replacement_12._f0._f2.subgroup_size))) ^ 0u))) + subgroup_local_id, _GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_struct_replacement_12._f0._f2.subgroup_size, (workgroup_base + subgroup_id * _GLF_struct_replacement_12._f0._f2.subgroup_size) - 0u) + subgroup_local_id), (true ? clamp(_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_struct_replacement_12._f0._f2.subgroup_size + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u), max(workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_12._f0._f2.subgroup_size, ~ (~ (subgroup_id * _GLF_struct_replacement_12._f0._f2.subgroup_size))) + subgroup_local_id, workgroup_base + subgroup_id * _GLF_struct_replacement_12._f0._f2.subgroup_size + subgroup_local_id)), workgroup_base + subgroup_id * _GLF_struct_replacement_12._f0._f2.subgroup_size + subgroup_local_id, _GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_struct_replacement_12._f0._f2.subgroup_size, (workgroup_base + subgroup_id * _GLF_struct_replacement_12._f0._f2.subgroup_size) - _GLF_IDENTITY(0u, (0u) << 0u)) + subgroup_local_id) : _GLF_FUZZED(bitfieldExtract(workgroup_size, -94058, -43353))))) << 0u));
 if(_GLF_DEAD(false))
  {
   do
    {
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 << _GLF_IDENTITY(int(8), int(8)))); _injected_loop_counter --)
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(acos(vec2(4186.0896, -108.225))))).y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(acos(vec2(4186.0896, -108.225))))).y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(acos(vec2(4186.0896, -108.225))))).y)), ! (_GLF_IDENTITY(! (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(acos(vec2(4186.0896, -108.225))))).y))), ! (! (! (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(acos(vec2(4186.0896, -108.225))))).y)))))))), false || (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(0.0)), bool(false)))) + length(vec3(0.0, 0.0, 0.0)))))))))))), false)))))
          {
           return;
          }
         else
          {
          }
        }
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
      }
     else
      {
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), false || (! (false))), ! (! (! (false))))))));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(0u ^ (workgroup_base), ~ (~ (_GLF_IDENTITY(0u ^ (workgroup_base), (0u ^ (workgroup_base)) + 0u))))) + subgroup_id * _GLF_struct_replacement_12._f0._f2.subgroup_size + ((subgroup_local_id + _GLF_IDENTITY(1, (1) ^ 0)) % _GLF_struct_replacement_12._f0._f2.subgroup_size);
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), mix(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), mix(float(_GLF_FUZZED(4819.8047)), float(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), min(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), clamp(float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))), float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))), bool(true))), float(_GLF_FUZZED(-2.9)), _GLF_IDENTITY(bool(false), _GLF_IDENTITY(bool(bvec4(bool(false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), false || (bool(bvec4(bool(false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))), float(_GLF_FUZZED(-6.7)), bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))), (_GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_FUZZED(-311.180), min(_GLF_FUZZED(-311.180), _GLF_FUZZED(-311.180))) : injectionSwitch.y))) - 0.0)))))
  {
  }
 else
  {
   _GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid] = 1, _GLF_IDENTITY((buf[virtual_gid] = 1) / 1u, (_GLF_IDENTITY(_GLF_IDENTITY((buf[virtual_gid] = 1) / 1u, ((buf[virtual_gid] = 1) / 1u) / 1u), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((buf[virtual_gid] = 1) / 1u, ((buf[virtual_gid] = 1) / 1u) / 1u), (_GLF_IDENTITY((buf[virtual_gid] = 1) / 1u, ((buf[virtual_gid] = 1) / 1u) / 1u)) / 1u)), (true ? (_GLF_IDENTITY(_GLF_IDENTITY((buf[virtual_gid] = 1) / 1u, ((buf[virtual_gid] = 1) / 1u) / 1u), (_GLF_IDENTITY((buf[virtual_gid] = 1) / 1u, _GLF_IDENTITY(((buf[virtual_gid] = 1) / 1u), (_GLF_IDENTITY(((buf[virtual_gid] = 1) / 1u), (_GLF_IDENTITY(((buf[virtual_gid] = 1) / 1u), (((buf[virtual_gid] = 1) / 1u)) >> 0u)) << 0u)) << 0u) / 1u)) / 1u)) : _GLF_FUZZED(workgroup_base))) << 0u)) << 0u)), (_GLF_IDENTITY(buf[virtual_gid] = 1, _GLF_IDENTITY((buf[virtual_gid] = 1) / 1u, (_GLF_IDENTITY(_GLF_IDENTITY((buf[virtual_gid] = 1) / 1u, ((buf[virtual_gid] = 1) / 1u) / 1u), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((buf[virtual_gid] = _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) * (0 ^ 1)), 1, _GLF_IDENTITY(1, clamp(1, 1, 1))))) / 1u, ((buf[virtual_gid] = 1) / 1u) / 1u), (_GLF_IDENTITY((buf[virtual_gid] = 1) / 1u, ((buf[virtual_gid] = 1) / 1u) / 1u)) / 1u)), (true ? (_GLF_IDENTITY(_GLF_IDENTITY((buf[virtual_gid] = 1) / 1u, ((buf[virtual_gid] = 1) / 1u) / 1u), (_GLF_IDENTITY((buf[virtual_gid] = 1) / 1u, ((buf[virtual_gid] = _GLF_IDENTITY(1, (0 ^ 1) * (1))) / 1u) / 1u)) / 1u)) : _GLF_FUZZED(workgroup_base))) << 0u)) << 0u))) - 0u);
  }
 do
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))) || false))
    return;
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     for(int _injected_loop_counter = (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(4), int(4))), max((1 << _GLF_IDENTITY(int(4), int(4))), (1 << _GLF_IDENTITY(int(4), int(4))))) >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (true ? int(4) : _GLF_FUZZED(-11287))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        {
         do
          {
           return;
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       do
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-7.8)))), bool(bvec4((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((true ? injectionSwitch.y : _GLF_FUZZED(-7.8)), (_GLF_IDENTITY((true ? injectionSwitch.y : _GLF_FUZZED(-7.8)), min((true ? injectionSwitch.y : _GLF_FUZZED(-7.8)), (true ? injectionSwitch.y : _GLF_FUZZED(-7.8))))) * 1.0))), false, false, false))))))
          {
           if(_GLF_DEAD(false))
            continue;
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
            continue;
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             return;
            }
          }
         else
          {
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), bool(bvec3(bool(bvec2(false, true)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false || _GLF_IDENTITY((false), ! (! ((false))))))), (injectionSwitch.x > injectionSwitch.y))));
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(true)), ! (! (! _GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(true)), true && ((_GLF_WRAPPED_IF_TRUE(true))))))))))
    {
     do
      {
       do
        {
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(false))
          break;
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y))));
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, false)), ! (! (bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, false)))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x2(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 1.0, 1.0)), (vec2(mat4x2(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 1.0, 1.0))) * vec2(1.0, 1.0))).x > injectionSwitch.y))))
        return;
       return;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-470.853) : injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), injectionSwitch.x)) > injectionSwitch.y))))
    return;
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bool(false)))))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       do
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
          {
          }
         else
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             for(int _injected_loop_counter = (((1 & 1) << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), max(int(1), int(1))))) >> _GLF_IDENTITY(int(1), int(1))); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
              {
               if(_GLF_DEAD(false))
                return;
              }
             if(_GLF_DEAD(false))
              return;
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
              }
             else
              {
               return;
              }
             if(_GLF_DEAD(false))
              return;
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2x4(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), 0.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), determinant(mat2(1.0, 0.0, 1.0, 1.0)))))))))
                return;
              }
             else
              {
              }
            }
           else
            {
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
      }
     else
      {
      }
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(subgroup_local_id + 1 < _GLF_IDENTITY(_GLF_struct_replacement_12._f0._f2.subgroup_size, (_GLF_struct_replacement_12._f0._f2.subgroup_size) | (_GLF_struct_replacement_12._f0._f2.subgroup_size)))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(false))
              return;
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _injected_loop_counter, _injected_loop_counter))) | (_injected_loop_counter)) < ((1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), int(ivec2(int(5), 1))))) >> _GLF_IDENTITY(int(5), int(5)))); _injected_loop_counter ++)
              {
               if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
                {
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                  }
                 else
                  {
                   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                    {
                     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
                      {
                       if(_GLF_WRAPPED_IF_FALSE(false))
                        {
                        }
                       else
                        {
                         if(_GLF_DEAD(false))
                          return;
                        }
                       return;
                      }
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_DEAD(false))
                        return;
                       return;
                      }
                    }
                   else
                    {
                    }
                  }
                 for(int _injected_loop_counter = ((88183 * 17658) & 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                  {
                   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))))
                    {
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_DEAD(false))
                        continue;
                       break;
                      }
                     return;
                    }
                  }
                 if(_GLF_DEAD(false))
                  return;
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y))))
                    {
                    }
                   else
                    {
                     return;
                    }
                  }
                 else
                  {
                  }
                 if(_GLF_DEAD(false))
                  return;
                }
              }
            }
           else
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
            }
          }
         else
          {
          }
         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) && true)))
          {
           if(_GLF_DEAD(false))
            return;
          }
         else
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               do
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  return;
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))));
               return;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                return;
              }
             else
              {
              }
            }
          }
         do
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))), ! (! (! (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))))))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              continue;
             if(_GLF_DEAD(false))
              continue;
             continue;
            }
           do
            {
             if(_GLF_DEAD(false))
              {
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                {
                 for(int _injected_loop_counter = ((0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(6), (int(6)) >> 0), int(6))) << _GLF_IDENTITY(int(7), int(7))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y)), ! (_GLF_IDENTITY(! (_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))), true && (! (_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))))))), ! (! (_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y)), ! (_GLF_IDENTITY(! (_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))), true && (! (_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))))))), ! (! (_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))))), false, true, true)))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y)), ! (_GLF_IDENTITY(! (_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))), true && (! (_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))))))), ! (! (_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y)), ! (_GLF_IDENTITY(! (_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))), true && (! (_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))))))), ! (! (_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))))), false, true, true))))))) || false)); _injected_loop_counter ++)
                  {
                   return;
                   if(_GLF_DEAD(false))
                    continue;
                  }
                }
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
           if(_GLF_DEAD(false))
            break;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              continue;
             if(_GLF_DEAD(false))
              return;
             break;
            }
           if(_GLF_DEAD(false))
            continue;
           if(_GLF_DEAD(false))
            continue;
          }
         while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), false || (! (! (false)))))));
         _GLF_struct_9 _GLF_struct_replacement_9 = _GLF_struct_9(0, _GLF_struct_3(_GLF_struct_0(ivec4(1), uvec4(_GLF_IDENTITY(_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(1u, (1u) | (1u)), 0u), uvec2(0u, 0u) ^ (uvec2(1u, 0u)))), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(1u, 0u), uvec2(0u, _GLF_IDENTITY(0u, uint(_GLF_ONE(1.0, injectionSwitch.y)) * (0u))) ^ (_GLF_IDENTITY(uvec2(1u, _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) << 0u)))), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(uvec2(1u, _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) << 0u)))), (uvec2(1u, _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) << 0u))))) << uvec2(0u, 0u)))), uvec2(uvec3(~ (~ (_GLF_IDENTITY(uvec2(1u, _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) << 0u)))), (uvec2(1u, _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) << 0u))))) << uvec2(0u, 0u)))), 1u))))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(uvec2(1u, 0u), uvec2(0u, 0u) ^ (_GLF_IDENTITY(uvec2(1u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (uvec2(1u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))) ^ uvec2(0u, 0u)))))), (~ _GLF_IDENTITY((uint(_GLF_IDENTITY(uvec2(1u, 0u), uvec2(0u, 0u) ^ (uvec2(1u, 0u))))), max(_GLF_IDENTITY((uint(_GLF_IDENTITY(uvec2(1u, 0u), uvec2(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u) ^ (uvec2(1u, 0u))))), ((uint(_GLF_IDENTITY(uvec2(1u, 0u), uvec2(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u) ^ (uvec2(1u, 0u)))))) / 1u), (uint(_GLF_IDENTITY(uvec2(1u, 0u), uvec2(0u, 0u) ^ (uvec2(1u, 0u)))))))) << 0u), min(_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(1u, 0u), uvec2(0u, 0u) ^ (uvec2(1u, 0u)))), ~ (_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(uvec2(1u, 0u), uvec2(0u, 0u) ^ (uvec2(1u, 0u))))), (~ (uint(_GLF_IDENTITY(uvec2(1u, 0u), uvec2(0u, 0u) ^ (uvec2(1u, 0u)))))) / 1u)))), (~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(1u, 0u), uvec2(0u, 0u) ^ (uvec2(1u, 0u)))), ~ (_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(uvec2(1u, 0u), uvec2(0u, 0u) ^ (uvec2(1u, 0u))))), (~ (uint(_GLF_IDENTITY(uvec2(1u, 0u), uvec2(0u, 0u) ^ (uvec2(1u, 0u)))))) / 1u))))) - 0u), ~ (uint(_GLF_IDENTITY(uvec2(1u, 0u), uvec2(0u, 0u) ^ (uvec2(1u, 0u))))))))), 1u, 1u, 1u), min(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(1u, 0u), uvec2(0u, 0u) ^ (uvec2(1u, 0u)))), (uint(_GLF_IDENTITY(uvec2(1u, 0u), uvec2(0u, 0u) ^ (uvec2(1u, 0u))))) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(1u, 0u), uvec2(0u, 0u) ^ (_GLF_IDENTITY(uvec2(1u, 0u), max(_GLF_IDENTITY(uvec2(1u, 0u), _GLF_IDENTITY((uvec2(1u, 0u)), (false ? _GLF_FUZZED(uvec2(93021u, 83586u)) : (uvec2(1u, 0u)))) | (uvec2(1u, 0u))), uvec2(1u, 0u)))))), clamp(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u, 0u), _GLF_IDENTITY(uvec2(0u, 0u) ^ (uvec2(1u, 0u)), (_GLF_IDENTITY(uvec2(0u, 0u) ^ (uvec2(1u, 0u)), max(uvec2(0u, 0u) ^ (uvec2(1u, 0u)), uvec2(0u, 0u) ^ (uvec2(1u, 0u))))) - uvec2(0u, 0u))), uvec2(0u, 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u, 0u), _GLF_IDENTITY(uvec2(0u, 0u) ^ (uvec2(1u, 0u)), (_GLF_IDENTITY(uvec2(0u, 0u) ^ (uvec2(1u, 0u)), max(uvec2(0u, 0u) ^ (uvec2(1u, 0u)), uvec2(0u, 0u) ^ (uvec2(1u, 0u))))) - uvec2(0u, 0u))), clamp(_GLF_IDENTITY(uvec2(1u, 0u), _GLF_IDENTITY(uvec2(0u, 0u) ^ (uvec2(1u, 0u)), (_GLF_IDENTITY(uvec2(0u, 0u) ^ (uvec2(1u, 0u)), max(uvec2(0u, 0u) ^ (uvec2(1u, 0u)), uvec2(0u, 0u) ^ (uvec2(1u, 0u))))) - uvec2(0u, 0u))), _GLF_IDENTITY(uvec2(1u, 0u), _GLF_IDENTITY(uvec2(0u, 0u) ^ (uvec2(1u, 0u)), (_GLF_IDENTITY(uvec2(0u, 0u) ^ (uvec2(1u, 0u)), max(uvec2(0u, 0u) ^ (uvec2(1u, 0u)), uvec2(0u, 0u) ^ (uvec2(1u, 0u))))) - uvec2(0u, 0u))), _GLF_IDENTITY(uvec2(1u, 0u), _GLF_IDENTITY(uvec2(0u, 0u) ^ (uvec2(1u, 0u)), (_GLF_IDENTITY(uvec2(0u, 0u) ^ (uvec2(1u, 0u)), max(uvec2(0u, 0u) ^ (uvec2(1u, 0u)), uvec2(0u, 0u) ^ (uvec2(1u, 0u))))) - uvec2(0u, 0u)))))))), uint(_GLF_IDENTITY(uvec2(1u, 0u), uvec2(_GLF_IDENTITY(0u, (0u) << 0u), 0u) ^ (uvec2(1u, 0u)))), uint(_GLF_IDENTITY(uvec2(1u, 0u), uvec2(0u, 0u) ^ (uvec2(1u, 0u)))))))), ~ (~ (uint(_GLF_IDENTITY(uvec2(1u, 0u), uvec2(_GLF_IDENTITY(0u, (0u) - 0u), _GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, 0u | (0u))) | (_GLF_IDENTITY(0u, ~ (~ (0u)))), min((_GLF_IDENTITY(0u, 0u | (0u))) | (_GLF_IDENTITY(0u, ~ (~ (0u)))), (_GLF_IDENTITY(0u, 0u | (0u))) | (_GLF_IDENTITY(0u, ~ (~ (0u)))))))) ^ (uvec2(1u, 0u))))))), _GLF_IDENTITY(1u, (1u) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), 1u, 1u), (uvec4(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(1u, _GLF_IDENTITY(0u, uint(uvec4(0u, 1u, 0u, 1u)))), _GLF_IDENTITY(uvec2(0u, 0u), (uvec2(0u, 0u)) | uvec2(0u, 0u)) ^ (uvec2(1u, 0u)))), ~ (~ (uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u, 0u), uvec2(0u, 0u) ^ (uvec2(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) << (0u >> _GLF_IDENTITY(uint(8u), uint(8u)))), 0u))), max(_GLF_IDENTITY(uvec2(1u, 0u), uvec2(0u, 0u) ^ (uvec2(1u, 0u))), _GLF_IDENTITY(uvec2(1u, 0u), uvec2(0u, 0u) ^ (uvec2(1u, 0u))))))))), 1u, 1u, 1u)) | (uvec4(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(1u, 0u), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (0u)), 0u), (uvec2(0u, 0u) << _GLF_IDENTITY(uvec2(0u), uvec2(0u))) | (_GLF_IDENTITY(uvec2(0u, 0u), ~ (~ (uvec2(0u, 0u)))))) ^ (uvec2(1u, 0u)))), ~ (~ (uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u, 0u), (false ? _GLF_FUZZED(floatBitsToUint(vec2(3776.0154, -278.502))) : uvec2(1u, 0u))), clamp(uvec2(1u, 0u), uvec2(1u, 0u), uvec2(1u, 0u))), _GLF_IDENTITY(uvec2(0u, 0u) ^ (uvec2(1u, 0u)), clamp(uvec2(0u, 0u) ^ (uvec2(1u, 0u)), _GLF_IDENTITY(uvec2(0u, 0u) ^ (uvec2(1u, 0u)), uvec2(1u, 1u) * (uvec2(0u, _GLF_IDENTITY(0u, max(0u, 0u))) ^ (uvec2(1u, 0u)))), uvec2(0u, 0u) ^ (uvec2(1u, 0u))))))))), 1u, _GLF_IDENTITY(1u, uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) / _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), max(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))))), injectionSwitch.x)) | (_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) + 0u), (false ? _GLF_FUZZED(workgroup_size) : 1u)))), 1u))), _GLF_IDENTITY(uvec4(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u, 0u), (uvec2(1u, 0u)) >> uvec2(0u, 0u)), uvec2(0u, 0u) ^ (uvec2(1u, 0u)))), ~ _GLF_IDENTITY((~ (uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u, 0u), (uvec2(1u, 0u)) + uvec2(0u, 0u)), uvec2(0u, 0u) ^ (uvec2(1u, 0u)))))), 0u | ((~ (uint(_GLF_IDENTITY(uvec2(1u, 0u), uvec2(0u, 0u) ^ _GLF_IDENTITY((uvec2(1u, 0u)), uvec2(0u, 0u) | ((uvec2(1u, 0u))))))))))), 1u, 1u, 1u), (uvec4(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(1u, 0u), uvec2(0u, 0u) ^ (uvec2(1u, 0u)))), ~ (~ (uint(_GLF_IDENTITY(uvec2(1u, 0u), uvec2(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(num_workgroup) : 0u))) ^ _GLF_IDENTITY(0u, max(0u, 0u)))) ^ (uvec2(1u, 0u))))))), 1u, 1u, 1u)) - uvec4(0u, 0u, 0u, 0u))))))), clamp(_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(1u, (1u) | (1u)), 0u), uvec2(0u, 0u) ^ (uvec2(1u, 0u)))), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(1u, 0u), uvec2(0u, _GLF_IDENTITY(0u, uint(_GLF_ONE(1.0, injectionSwitch.y)) * (0u))) ^ (_GLF_IDENTITY(uvec2(1u, _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) << 0u)))), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(uvec2(1u, _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) << 0u)))), (uvec2(1u, _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) << 0u))))) << uvec2(0u, 0u)))), uvec2(uvec3(~ (~ (_GLF_IDENTITY(uvec2(1u, _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) << 0u)))), (uvec2(1u, _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) << 0u))))) << uvec2(0u, 0u)))), 1u))))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(uvec2(1u, 0u), uvec2(0u, 0u) ^ (_GLF_IDENTITY(uvec2(1u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (uvec2(1u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))) ^ uvec2(0u, 0u)))))), (~ _GLF_IDENTITY((uint(_GLF_IDENTITY(uvec2(1u, 0u), uvec2(0u, 0u) ^ (uvec2(1u, 0u))))), max(_GLF_IDENTITY((uint(_GLF_IDENTITY(uvec2(1u, 0u), uvec2(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u) ^ (uvec2(1u, 0u))))), ((uint(_GLF_IDENTITY(uvec2(1u, 0u), uvec2(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u) ^ (uvec2(1u, 0u)))))) / 1u), (uint(_GLF_IDENTITY(uvec2(1u, 0u), uvec2(0u, 0u) ^ (uvec2(1u, 0u)))))))) << 0u), min(_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(1u, 0u), uvec2(0u, 0u) ^ (uvec2(1u, 0u)))), ~ (_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(uvec2(1u, 0u), uvec2(0u, 0u) ^ (uvec2(1u, 0u))))), (~ (uint(_GLF_IDENTITY(uvec2(1u, 0u), uvec2(0u, 0u) ^ (uvec2(1u, 0u)))))) / 1u)))), (~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(1u, 0u), uvec2(0u, 0u) ^ (uvec2(1u, 0u)))), ~ (_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(uvec2(1u, 0u), uvec2(0u, 0u) ^ (uvec2(1u, 0u))))), (~ (uint(_GLF_IDENTITY(uvec2(1u, 0u), uvec2(0u, 0u) ^ (uvec2(1u, 0u)))))) / 1u))))) - 0u), ~ (uint(_GLF_IDENTITY(uvec2(1u, 0u), uvec2(0u, 0u) ^ (uvec2(1u, 0u))))))))), 1u, 1u, 1u), min(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(1u, 0u), uvec2(0u, 0u) ^ (uvec2(1u, 0u)))), (uint(_GLF_IDENTITY(uvec2(1u, 0u), uvec2(0u, 0u) ^ (uvec2(1u, 0u))))) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(1u, 0u), uvec2(0u, 0u) ^ (_GLF_IDENTITY(uvec2(1u, 0u), max(_GLF_IDENTITY(uvec2(1u, 0u), _GLF_IDENTITY((uvec2(1u, 0u)), (false ? _GLF_FUZZED(uvec2(93021u, 83586u)) : (uvec2(1u, 0u)))) | (uvec2(1u, 0u))), uvec2(1u, 0u)))))), clamp(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u, 0u), _GLF_IDENTITY(uvec2(0u, 0u) ^ (uvec2(1u, 0u)), (_GLF_IDENTITY(uvec2(0u, 0u) ^ (uvec2(1u, 0u)), max(uvec2(0u, 0u) ^ (uvec2(1u, 0u)), uvec2(0u, 0u) ^ (uvec2(1u, 0u))))) - uvec2(0u, 0u))), uvec2(0u, 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u, 0u), _GLF_IDENTITY(uvec2(0u, 0u) ^ (uvec2(1u, 0u)), (_GLF_IDENTITY(uvec2(0u, 0u) ^ (uvec2(1u, 0u)), max(uvec2(0u, 0u) ^ (uvec2(1u, 0u)), uvec2(0u, 0u) ^ (uvec2(1u, 0u))))) - uvec2(0u, 0u))), clamp(_GLF_IDENTITY(uvec2(1u, 0u), _GLF_IDENTITY(uvec2(0u, 0u) ^ (uvec2(1u, 0u)), (_GLF_IDENTITY(uvec2(0u, 0u) ^ (uvec2(1u, 0u)), max(uvec2(0u, 0u) ^ (uvec2(1u, 0u)), uvec2(0u, 0u) ^ (uvec2(1u, 0u))))) - uvec2(0u, 0u))), _GLF_IDENTITY(uvec2(1u, 0u), _GLF_IDENTITY(uvec2(0u, 0u) ^ (uvec2(1u, 0u)), (_GLF_IDENTITY(uvec2(0u, 0u) ^ (uvec2(1u, 0u)), max(uvec2(0u, 0u) ^ (uvec2(1u, 0u)), uvec2(0u, 0u) ^ (uvec2(1u, 0u))))) - uvec2(0u, 0u))), _GLF_IDENTITY(uvec2(1u, 0u), _GLF_IDENTITY(uvec2(0u, 0u) ^ (uvec2(1u, 0u)), (_GLF_IDENTITY(uvec2(0u, 0u) ^ (uvec2(1u, 0u)), max(uvec2(0u, 0u) ^ (uvec2(1u, 0u)), uvec2(0u, 0u) ^ (uvec2(1u, 0u))))) - uvec2(0u, 0u)))))))), uint(_GLF_IDENTITY(uvec2(1u, 0u), uvec2(_GLF_IDENTITY(0u, (0u) << 0u), 0u) ^ (uvec2(1u, 0u)))), uint(_GLF_IDENTITY(uvec2(1u, 0u), uvec2(0u, 0u) ^ (uvec2(1u, 0u)))))))), ~ (~ (uint(_GLF_IDENTITY(uvec2(1u, 0u), uvec2(_GLF_IDENTITY(0u, (0u) - 0u), _GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, 0u | (0u))) | (_GLF_IDENTITY(0u, ~ (~ (0u)))), min((_GLF_IDENTITY(0u, 0u | (0u))) | (_GLF_IDENTITY(0u, ~ (~ (0u)))), (_GLF_IDENTITY(0u, 0u | (0u))) | (_GLF_IDENTITY(0u, ~ (~ (0u)))))))) ^ (uvec2(1u, 0u))))))), _GLF_IDENTITY(1u, (1u) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), 1u, 1u), (uvec4(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(1u, _GLF_IDENTITY(0u, uint(uvec4(0u, 1u, 0u, 1u)))), _GLF_IDENTITY(uvec2(0u, 0u), (uvec2(0u, 0u)) | uvec2(0u, 0u)) ^ (uvec2(1u, 0u)))), ~ (~ (uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u, 0u), uvec2(0u, 0u) ^ (uvec2(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) << (0u >> _GLF_IDENTITY(uint(8u), uint(8u)))), 0u))), max(_GLF_IDENTITY(uvec2(1u, 0u), uvec2(0u, 0u) ^ (uvec2(1u, 0u))), _GLF_IDENTITY(uvec2(1u, 0u), uvec2(0u, 0u) ^ (uvec2(1u, 0u))))))))), 1u, 1u, 1u)) | (uvec4(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(1u, 0u), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (0u)), 0u), (uvec2(0u, 0u) << _GLF_IDENTITY(uvec2(0u), uvec2(0u))) | (_GLF_IDENTITY(uvec2(0u, 0u), ~ (~ (uvec2(0u, 0u)))))) ^ (uvec2(1u, 0u)))), ~ (~ (uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u, 0u), (false ? _GLF_FUZZED(floatBitsToUint(vec2(3776.0154, -278.502))) : uvec2(1u, 0u))), clamp(uvec2(1u, 0u), uvec2(1u, 0u), uvec2(1u, 0u))), _GLF_IDENTITY(uvec2(0u, 0u) ^ (uvec2(1u, 0u)), clamp(uvec2(0u, 0u) ^ (uvec2(1u, 0u)), _GLF_IDENTITY(uvec2(0u, 0u) ^ (uvec2(1u, 0u)), uvec2(1u, 1u) * (uvec2(0u, _GLF_IDENTITY(0u, max(0u, 0u))) ^ (uvec2(1u, 0u)))), uvec2(0u, 0u) ^ (uvec2(1u, 0u))))))))), 1u, _GLF_IDENTITY(1u, uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) / _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), max(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))))), injectionSwitch.x)) | (_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) + 0u), (false ? _GLF_FUZZED(workgroup_size) : 1u)))), 1u))), _GLF_IDENTITY(uvec4(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u, 0u), (uvec2(1u, 0u)) >> uvec2(0u, 0u)), uvec2(0u, 0u) ^ (uvec2(1u, 0u)))), ~ _GLF_IDENTITY((~ (uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u, 0u), (uvec2(1u, 0u)) + uvec2(0u, 0u)), uvec2(0u, 0u) ^ (uvec2(1u, 0u)))))), 0u | ((~ (uint(_GLF_IDENTITY(uvec2(1u, 0u), uvec2(0u, 0u) ^ _GLF_IDENTITY((uvec2(1u, 0u)), uvec2(0u, 0u) | ((uvec2(1u, 0u))))))))))), 1u, 1u, 1u), (uvec4(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(1u, 0u), uvec2(0u, 0u) ^ (uvec2(1u, 0u)))), ~ (~ (uint(_GLF_IDENTITY(uvec2(1u, 0u), uvec2(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(num_workgroup) : 0u))) ^ _GLF_IDENTITY(0u, max(0u, 0u)))) ^ (uvec2(1u, 0u))))))), 1u, 1u, 1u)) - uvec4(0u, 0u, 0u, 0u))))))), _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(1u, (1u) | (1u)), 0u), uvec2(0u, 0u) ^ (uvec2(1u, 0u)))), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(1u, 0u), uvec2(0u, _GLF_IDENTITY(0u, uint(_GLF_ONE(1.0, injectionSwitch.y)) * (0u))) ^ (_GLF_IDENTITY(uvec2(1u, _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) << 0u)))), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(uvec2(1u, _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) << 0u)))), (uvec2(1u, _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) << 0u))))) << uvec2(0u, 0u)))), uvec2(uvec3(~ (~ (_GLF_IDENTITY(uvec2(1u, _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) << 0u)))), (uvec2(1u, _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) << 0u))))) << uvec2(0u, 0u)))), 1u))))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(uvec2(1u, 0u), uvec2(0u, 0u) ^ (_GLF_IDENTITY(uvec2(1u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (uvec2(1u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))) ^ uvec2(0u, 0u)))))), (~ _GLF_IDENTITY((uint(_GLF_IDENTITY(uvec2(1u, 0u), uvec2(0u, 0u) ^ (uvec2(1u, 0u))))), max(_GLF_IDENTITY((uint(_GLF_IDENTITY(uvec2(1u, 0u), uvec2(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u) ^ (uvec2(1u, 0u))))), ((uint(_GLF_IDENTITY(uvec2(1u, 0u), uvec2(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u) ^ (uvec2(1u, 0u)))))) / 1u), (uint(_GLF_IDENTITY(uvec2(1u, 0u), uvec2(0u, 0u) ^ (uvec2(1u, 0u)))))))) << 0u), min(_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(1u, 0u), uvec2(0u, 0u) ^ (uvec2(1u, 0u)))), ~ (_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(uvec2(1u, 0u), uvec2(0u, 0u) ^ (uvec2(1u, 0u))))), (~ (uint(_GLF_IDENTITY(uvec2(1u, 0u), uvec2(0u, 0u) ^ (uvec2(1u, 0u)))))) / 1u)))), (~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(1u, 0u), uvec2(0u, 0u) ^ (uvec2(1u, 0u)))), ~ (_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(uvec2(1u, 0u), uvec2(0u, 0u) ^ (uvec2(1u, 0u))))), (~ (uint(_GLF_IDENTITY(uvec2(1u, 0u), uvec2(0u, 0u) ^ (uvec2(1u, 0u)))))) / 1u))))) - 0u), ~ (uint(_GLF_IDENTITY(uvec2(1u, 0u), uvec2(0u, 0u) ^ (uvec2(1u, 0u))))))))), 1u, 1u, 1u), min(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(1u, 0u), uvec2(0u, 0u) ^ (uvec2(1u, 0u)))), (uint(_GLF_IDENTITY(uvec2(1u, 0u), uvec2(0u, 0u) ^ (uvec2(1u, 0u))))) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(1u, 0u), uvec2(0u, 0u) ^ (_GLF_IDENTITY(uvec2(1u, 0u), max(_GLF_IDENTITY(uvec2(1u, 0u), _GLF_IDENTITY((uvec2(1u, 0u)), (false ? _GLF_FUZZED(uvec2(93021u, 83586u)) : (uvec2(1u, 0u)))) | (uvec2(1u, 0u))), uvec2(1u, 0u)))))), clamp(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u, 0u), _GLF_IDENTITY(uvec2(0u, 0u) ^ (uvec2(1u, 0u)), (_GLF_IDENTITY(uvec2(0u, 0u) ^ (uvec2(1u, 0u)), max(uvec2(0u, 0u) ^ (uvec2(1u, 0u)), uvec2(0u, 0u) ^ (uvec2(1u, 0u))))) - uvec2(0u, 0u))), uvec2(0u, 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u, 0u), _GLF_IDENTITY(uvec2(0u, 0u) ^ (uvec2(1u, 0u)), (_GLF_IDENTITY(uvec2(0u, 0u) ^ (uvec2(1u, 0u)), max(uvec2(0u, 0u) ^ (uvec2(1u, 0u)), uvec2(0u, 0u) ^ (uvec2(1u, 0u))))) - uvec2(0u, 0u))), clamp(_GLF_IDENTITY(uvec2(1u, 0u), _GLF_IDENTITY(uvec2(0u, 0u) ^ (uvec2(1u, 0u)), (_GLF_IDENTITY(uvec2(0u, 0u) ^ (uvec2(1u, 0u)), max(uvec2(0u, 0u) ^ (uvec2(1u, 0u)), uvec2(0u, 0u) ^ (uvec2(1u, 0u))))) - uvec2(0u, 0u))), _GLF_IDENTITY(uvec2(1u, 0u), _GLF_IDENTITY(uvec2(0u, 0u) ^ (uvec2(1u, 0u)), (_GLF_IDENTITY(uvec2(0u, 0u) ^ (uvec2(1u, 0u)), max(uvec2(0u, 0u) ^ (uvec2(1u, 0u)), uvec2(0u, 0u) ^ (uvec2(1u, 0u))))) - uvec2(0u, 0u))), _GLF_IDENTITY(uvec2(1u, 0u), _GLF_IDENTITY(uvec2(0u, 0u) ^ (uvec2(1u, 0u)), (_GLF_IDENTITY(uvec2(0u, 0u) ^ (uvec2(1u, 0u)), max(uvec2(0u, 0u) ^ (uvec2(1u, 0u)), uvec2(0u, 0u) ^ (uvec2(1u, 0u))))) - uvec2(0u, 0u)))))))), uint(_GLF_IDENTITY(uvec2(1u, 0u), uvec2(_GLF_IDENTITY(0u, (0u) << 0u), 0u) ^ (uvec2(1u, 0u)))), uint(_GLF_IDENTITY(uvec2(1u, 0u), uvec2(0u, 0u) ^ (uvec2(1u, 0u)))))))), ~ (~ (uint(_GLF_IDENTITY(uvec2(1u, 0u), uvec2(_GLF_IDENTITY(0u, (0u) - 0u), _GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, 0u | (0u))) | (_GLF_IDENTITY(0u, ~ (~ (0u)))), min((_GLF_IDENTITY(0u, 0u | (0u))) | (_GLF_IDENTITY(0u, ~ (~ (0u)))), (_GLF_IDENTITY(0u, 0u | (0u))) | (_GLF_IDENTITY(0u, ~ (~ (0u)))))))) ^ (uvec2(1u, 0u))))))), _GLF_IDENTITY(1u, (1u) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), 1u, 1u), (uvec4(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(1u, _GLF_IDENTITY(0u, uint(uvec4(0u, 1u, 0u, 1u)))), _GLF_IDENTITY(uvec2(0u, 0u), (uvec2(0u, 0u)) | uvec2(0u, 0u)) ^ (uvec2(1u, 0u)))), ~ (~ (uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u, 0u), uvec2(0u, 0u) ^ (uvec2(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) << (0u >> _GLF_IDENTITY(uint(8u), uint(8u)))), 0u))), max(_GLF_IDENTITY(uvec2(1u, 0u), uvec2(0u, 0u) ^ (uvec2(1u, 0u))), _GLF_IDENTITY(uvec2(1u, 0u), uvec2(0u, 0u) ^ (uvec2(1u, 0u))))))))), 1u, 1u, 1u)) | (uvec4(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(1u, 0u), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (0u)), 0u), (uvec2(0u, 0u) << _GLF_IDENTITY(uvec2(0u), uvec2(0u))) | (_GLF_IDENTITY(uvec2(0u, 0u), ~ (~ (uvec2(0u, 0u)))))) ^ (uvec2(1u, 0u)))), ~ (~ (uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u, 0u), (false ? _GLF_FUZZED(floatBitsToUint(vec2(3776.0154, -278.502))) : uvec2(1u, 0u))), clamp(uvec2(1u, 0u), uvec2(1u, 0u), uvec2(1u, 0u))), _GLF_IDENTITY(uvec2(0u, 0u) ^ (uvec2(1u, 0u)), clamp(uvec2(0u, 0u) ^ (uvec2(1u, 0u)), _GLF_IDENTITY(uvec2(0u, 0u) ^ (uvec2(1u, 0u)), uvec2(1u, 1u) * (uvec2(0u, _GLF_IDENTITY(0u, max(0u, 0u))) ^ (uvec2(1u, 0u)))), uvec2(0u, 0u) ^ (uvec2(1u, 0u))))))))), 1u, _GLF_IDENTITY(1u, uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) / _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), max(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))))), injectionSwitch.x)) | (_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) + 0u), (false ? _GLF_FUZZED(workgroup_size) : 1u)))), 1u))), _GLF_IDENTITY(uvec4(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u, 0u), (uvec2(1u, 0u)) >> uvec2(0u, 0u)), uvec2(0u, 0u) ^ (uvec2(1u, 0u)))), ~ _GLF_IDENTITY((~ (uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u, 0u), (uvec2(1u, 0u)) + uvec2(0u, 0u)), uvec2(0u, 0u) ^ (uvec2(1u, 0u)))))), 0u | ((~ (uint(_GLF_IDENTITY(uvec2(1u, 0u), uvec2(0u, 0u) ^ _GLF_IDENTITY((uvec2(1u, 0u)), uvec2(0u, 0u) | ((uvec2(1u, 0u))))))))))), 1u, 1u, 1u), (uvec4(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(1u, 0u), uvec2(0u, 0u) ^ (uvec2(1u, 0u)))), ~ (~ (uint(_GLF_IDENTITY(uvec2(1u, 0u), uvec2(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(num_workgroup) : 0u))) ^ _GLF_IDENTITY(0u, max(0u, 0u)))) ^ (uvec2(1u, 0u))))))), 1u, 1u, 1u)) - uvec4(0u, 0u, 0u, 0u))))))), _GLF_IDENTITY(_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(1u, (1u) | (1u)), 0u), uvec2(0u, 0u) ^ (uvec2(1u, 0u)))), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(1u, 0u), uvec2(0u, _GLF_IDENTITY(0u, uint(_GLF_ONE(1.0, injectionSwitch.y)) * (0u))) ^ (_GLF_IDENTITY(uvec2(1u, _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) << 0u)))), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(uvec2(1u, _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) << 0u)))), (uvec2(1u, _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) << 0u))))) << uvec2(0u, 0u)))), uvec2(uvec3(~ (~ (_GLF_IDENTITY(uvec2(1u, _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) << 0u)))), (uvec2(1u, _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) << 0u))))) << uvec2(0u, 0u)))), 1u))))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(uvec2(1u, 0u), uvec2(0u, 0u) ^ (_GLF_IDENTITY(uvec2(1u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (uvec2(1u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))) ^ uvec2(0u, 0u)))))), (~ _GLF_IDENTITY((uint(_GLF_IDENTITY(uvec2(1u, 0u), uvec2(0u, 0u) ^ (uvec2(1u, 0u))))), max(_GLF_IDENTITY((uint(_GLF_IDENTITY(uvec2(1u, 0u), uvec2(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u) ^ (uvec2(1u, 0u))))), ((uint(_GLF_IDENTITY(uvec2(1u, 0u), uvec2(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u) ^ (uvec2(1u, 0u)))))) / 1u), (uint(_GLF_IDENTITY(uvec2(1u, 0u), uvec2(0u, 0u) ^ (uvec2(1u, 0u)))))))) << 0u), min(_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(1u, 0u), uvec2(0u, 0u) ^ (uvec2(1u, 0u)))), ~ (_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(uvec2(1u, 0u), uvec2(0u, 0u) ^ (uvec2(1u, 0u))))), (~ (uint(_GLF_IDENTITY(uvec2(1u, 0u), uvec2(0u, 0u) ^ (uvec2(1u, 0u)))))) / 1u)))), (~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(1u, 0u), uvec2(0u, 0u) ^ (uvec2(1u, 0u)))), ~ (_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(uvec2(1u, 0u), uvec2(0u, 0u) ^ (uvec2(1u, 0u))))), (~ (uint(_GLF_IDENTITY(uvec2(1u, 0u), uvec2(0u, 0u) ^ (uvec2(1u, 0u)))))) / 1u))))) - 0u), ~ (uint(_GLF_IDENTITY(uvec2(1u, 0u), uvec2(0u, 0u) ^ (uvec2(1u, 0u))))))))), 1u, 1u, 1u), min(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(1u, 0u), uvec2(0u, 0u) ^ (uvec2(1u, 0u)))), (uint(_GLF_IDENTITY(uvec2(1u, 0u), uvec2(0u, 0u) ^ (uvec2(1u, 0u))))) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(1u, 0u), uvec2(0u, 0u) ^ (_GLF_IDENTITY(uvec2(1u, 0u), max(_GLF_IDENTITY(uvec2(1u, 0u), _GLF_IDENTITY((uvec2(1u, 0u)), (false ? _GLF_FUZZED(uvec2(93021u, 83586u)) : (uvec2(1u, 0u)))) | (uvec2(1u, 0u))), uvec2(1u, 0u)))))), clamp(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u, 0u), _GLF_IDENTITY(uvec2(0u, 0u) ^ (uvec2(1u, 0u)), (_GLF_IDENTITY(uvec2(0u, 0u) ^ (uvec2(1u, 0u)), max(uvec2(0u, 0u) ^ (uvec2(1u, 0u)), uvec2(0u, 0u) ^ (uvec2(1u, 0u))))) - uvec2(0u, 0u))), uvec2(0u, 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u, 0u), _GLF_IDENTITY(uvec2(0u, 0u) ^ (uvec2(1u, 0u)), (_GLF_IDENTITY(uvec2(0u, 0u) ^ (uvec2(1u, 0u)), max(uvec2(0u, 0u) ^ (uvec2(1u, 0u)), uvec2(0u, 0u) ^ (uvec2(1u, 0u))))) - uvec2(0u, 0u))), clamp(_GLF_IDENTITY(uvec2(1u, 0u), _GLF_IDENTITY(uvec2(0u, 0u) ^ (uvec2(1u, 0u)), (_GLF_IDENTITY(uvec2(0u, 0u) ^ (uvec2(1u, 0u)), max(uvec2(0u, 0u) ^ (uvec2(1u, 0u)), uvec2(0u, 0u) ^ (uvec2(1u, 0u))))) - uvec2(0u, 0u))), _GLF_IDENTITY(uvec2(1u, 0u), _GLF_IDENTITY(uvec2(0u, 0u) ^ (uvec2(1u, 0u)), (_GLF_IDENTITY(uvec2(0u, 0u) ^ (uvec2(1u, 0u)), max(uvec2(0u, 0u) ^ (uvec2(1u, 0u)), uvec2(0u, 0u) ^ (uvec2(1u, 0u))))) - uvec2(0u, 0u))), _GLF_IDENTITY(uvec2(1u, 0u), _GLF_IDENTITY(uvec2(0u, 0u) ^ (uvec2(1u, 0u)), (_GLF_IDENTITY(uvec2(0u, 0u) ^ (uvec2(1u, 0u)), max(uvec2(0u, 0u) ^ (uvec2(1u, 0u)), uvec2(0u, 0u) ^ (uvec2(1u, 0u))))) - uvec2(0u, 0u)))))))), uint(_GLF_IDENTITY(uvec2(1u, 0u), uvec2(_GLF_IDENTITY(0u, (0u) << 0u), 0u) ^ (uvec2(1u, 0u)))), uint(_GLF_IDENTITY(uvec2(1u, 0u), uvec2(0u, 0u) ^ (uvec2(1u, 0u)))))))), ~ (~ (uint(_GLF_IDENTITY(uvec2(1u, 0u), uvec2(_GLF_IDENTITY(0u, (0u) - 0u), _GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, 0u | (0u))) | (_GLF_IDENTITY(0u, ~ (~ (0u)))), min((_GLF_IDENTITY(0u, 0u | (0u))) | (_GLF_IDENTITY(0u, ~ (~ (0u)))), (_GLF_IDENTITY(0u, 0u | (0u))) | (_GLF_IDENTITY(0u, ~ (~ (0u)))))))) ^ (uvec2(1u, 0u))))))), _GLF_IDENTITY(1u, (1u) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), 1u, 1u), (uvec4(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(1u, _GLF_IDENTITY(0u, uint(uvec4(0u, 1u, 0u, 1u)))), _GLF_IDENTITY(uvec2(0u, 0u), (uvec2(0u, 0u)) | uvec2(0u, 0u)) ^ (uvec2(1u, 0u)))), ~ (~ (uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u, 0u), uvec2(0u, 0u) ^ (uvec2(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) << (0u >> _GLF_IDENTITY(uint(8u), uint(8u)))), 0u))), max(_GLF_IDENTITY(uvec2(1u, 0u), uvec2(0u, 0u) ^ (uvec2(1u, 0u))), _GLF_IDENTITY(uvec2(1u, 0u), uvec2(0u, 0u) ^ (uvec2(1u, 0u))))))))), 1u, 1u, 1u)) | (uvec4(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(1u, 0u), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (0u)), 0u), (uvec2(0u, 0u) << _GLF_IDENTITY(uvec2(0u), uvec2(0u))) | (_GLF_IDENTITY(uvec2(0u, 0u), ~ (~ (uvec2(0u, 0u)))))) ^ (uvec2(1u, 0u)))), ~ (~ (uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u, 0u), (false ? _GLF_FUZZED(floatBitsToUint(vec2(3776.0154, -278.502))) : uvec2(1u, 0u))), clamp(uvec2(1u, 0u), uvec2(1u, 0u), uvec2(1u, 0u))), _GLF_IDENTITY(uvec2(0u, 0u) ^ (uvec2(1u, 0u)), clamp(uvec2(0u, 0u) ^ (uvec2(1u, 0u)), _GLF_IDENTITY(uvec2(0u, 0u) ^ (uvec2(1u, 0u)), uvec2(1u, 1u) * (uvec2(0u, _GLF_IDENTITY(0u, max(0u, 0u))) ^ (uvec2(1u, 0u)))), uvec2(0u, 0u) ^ (uvec2(1u, 0u))))))))), 1u, _GLF_IDENTITY(1u, uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) / _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), max(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))))), injectionSwitch.x)) | (_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) + 0u), (false ? _GLF_FUZZED(workgroup_size) : 1u)))), 1u))), _GLF_IDENTITY(uvec4(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u, 0u), (uvec2(1u, 0u)) >> uvec2(0u, 0u)), uvec2(0u, 0u) ^ (uvec2(1u, 0u)))), ~ _GLF_IDENTITY((~ (uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u, 0u), (uvec2(1u, 0u)) + uvec2(0u, 0u)), uvec2(0u, 0u) ^ (uvec2(1u, 0u)))))), 0u | ((~ (uint(_GLF_IDENTITY(uvec2(1u, 0u), uvec2(0u, 0u) ^ _GLF_IDENTITY((uvec2(1u, 0u)), uvec2(0u, 0u) | ((uvec2(1u, 0u))))))))))), 1u, 1u, 1u), (uvec4(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(1u, 0u), uvec2(0u, 0u) ^ (uvec2(1u, 0u)))), ~ (~ (uint(_GLF_IDENTITY(uvec2(1u, 0u), uvec2(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(num_workgroup) : 0u))) ^ _GLF_IDENTITY(0u, max(0u, 0u)))) ^ (uvec2(1u, 0u))))))), 1u, 1u, 1u)) - uvec4(0u, 0u, 0u, 0u))))))), (_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(1u, (1u) | (1u)), 0u), uvec2(0u, 0u) ^ (uvec2(1u, 0u)))), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(1u, 0u), uvec2(0u, _GLF_IDENTITY(0u, uint(_GLF_ONE(1.0, injectionSwitch.y)) * (0u))) ^ (_GLF_IDENTITY(uvec2(1u, _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) << 0u)))), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(uvec2(1u, _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) << 0u)))), (uvec2(1u, _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) << 0u))))) << uvec2(0u, 0u)))), uvec2(uvec3(~ (~ (_GLF_IDENTITY(uvec2(1u, _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) << 0u)))), (uvec2(1u, _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) << 0u))))) << uvec2(0u, 0u)))), 1u))))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(uvec2(1u, 0u), uvec2(0u, 0u) ^ (_GLF_IDENTITY(uvec2(1u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (uvec2(1u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))) ^ uvec2(0u, 0u)))))), (~ _GLF_IDENTITY((uint(_GLF_IDENTITY(uvec2(1u, 0u), uvec2(0u, 0u) ^ (uvec2(1u, 0u))))), max(_GLF_IDENTITY((uint(_GLF_IDENTITY(uvec2(1u, 0u), uvec2(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u) ^ (uvec2(1u, 0u))))), ((uint(_GLF_IDENTITY(uvec2(1u, 0u), uvec2(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u) ^ (uvec2(1u, 0u)))))) / 1u), (uint(_GLF_IDENTITY(uvec2(1u, 0u), uvec2(0u, 0u) ^ (uvec2(1u, 0u)))))))) << 0u), min(_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(1u, 0u), uvec2(0u, 0u) ^ (uvec2(1u, 0u)))), ~ (_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(uvec2(1u, 0u), uvec2(0u, 0u) ^ (uvec2(1u, 0u))))), (~ (uint(_GLF_IDENTITY(uvec2(1u, 0u), uvec2(0u, 0u) ^ (uvec2(1u, 0u)))))) / 1u)))), (~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(1u, 0u), uvec2(0u, 0u) ^ (uvec2(1u, 0u)))), ~ (_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(uvec2(1u, 0u), uvec2(0u, 0u) ^ (uvec2(1u, 0u))))), (~ (uint(_GLF_IDENTITY(uvec2(1u, 0u), uvec2(0u, 0u) ^ (uvec2(1u, 0u)))))) / 1u))))) - 0u), ~ (uint(_GLF_IDENTITY(uvec2(1u, 0u), uvec2(0u, 0u) ^ (uvec2(1u, 0u))))))))), 1u, 1u, 1u), min(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(1u, 0u), uvec2(0u, 0u) ^ (uvec2(1u, 0u)))), (uint(_GLF_IDENTITY(uvec2(1u, 0u), uvec2(0u, 0u) ^ (uvec2(1u, 0u))))) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(1u, 0u), uvec2(0u, 0u) ^ (_GLF_IDENTITY(uvec2(1u, 0u), max(_GLF_IDENTITY(uvec2(1u, 0u), _GLF_IDENTITY((uvec2(1u, 0u)), (false ? _GLF_FUZZED(uvec2(93021u, 83586u)) : (uvec2(1u, 0u)))) | (uvec2(1u, 0u))), uvec2(1u, 0u)))))), clamp(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u, 0u), _GLF_IDENTITY(uvec2(0u, 0u) ^ (uvec2(1u, 0u)), (_GLF_IDENTITY(uvec2(0u, 0u) ^ (uvec2(1u, 0u)), max(uvec2(0u, 0u) ^ (uvec2(1u, 0u)), uvec2(0u, 0u) ^ (uvec2(1u, 0u))))) - uvec2(0u, 0u))), uvec2(0u, 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u, 0u), _GLF_IDENTITY(uvec2(0u, 0u) ^ (uvec2(1u, 0u)), (_GLF_IDENTITY(uvec2(0u, 0u) ^ (uvec2(1u, 0u)), max(uvec2(0u, 0u) ^ (uvec2(1u, 0u)), uvec2(0u, 0u) ^ (uvec2(1u, 0u))))) - uvec2(0u, 0u))), clamp(_GLF_IDENTITY(uvec2(1u, 0u), _GLF_IDENTITY(uvec2(0u, 0u) ^ (uvec2(1u, 0u)), (_GLF_IDENTITY(uvec2(0u, 0u) ^ (uvec2(1u, 0u)), max(uvec2(0u, 0u) ^ (uvec2(1u, 0u)), uvec2(0u, 0u) ^ (uvec2(1u, 0u))))) - uvec2(0u, 0u))), _GLF_IDENTITY(uvec2(1u, 0u), _GLF_IDENTITY(uvec2(0u, 0u) ^ (uvec2(1u, 0u)), (_GLF_IDENTITY(uvec2(0u, 0u) ^ (uvec2(1u, 0u)), max(uvec2(0u, 0u) ^ (uvec2(1u, 0u)), uvec2(0u, 0u) ^ (uvec2(1u, 0u))))) - uvec2(0u, 0u))), _GLF_IDENTITY(uvec2(1u, 0u), _GLF_IDENTITY(uvec2(0u, 0u) ^ (uvec2(1u, 0u)), (_GLF_IDENTITY(uvec2(0u, 0u) ^ (uvec2(1u, 0u)), max(uvec2(0u, 0u) ^ (uvec2(1u, 0u)), uvec2(0u, 0u) ^ (uvec2(1u, 0u))))) - uvec2(0u, 0u)))))))), uint(_GLF_IDENTITY(uvec2(1u, 0u), uvec2(_GLF_IDENTITY(0u, (0u) << 0u), 0u) ^ (uvec2(1u, 0u)))), uint(_GLF_IDENTITY(uvec2(1u, 0u), uvec2(0u, 0u) ^ (uvec2(1u, 0u)))))))), ~ (~ (uint(_GLF_IDENTITY(uvec2(1u, 0u), uvec2(_GLF_IDENTITY(0u, (0u) - 0u), _GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, 0u | (0u))) | (_GLF_IDENTITY(0u, ~ (~ (0u)))), min((_GLF_IDENTITY(0u, 0u | (0u))) | (_GLF_IDENTITY(0u, ~ (~ (0u)))), (_GLF_IDENTITY(0u, 0u | (0u))) | (_GLF_IDENTITY(0u, ~ (~ (0u)))))))) ^ (uvec2(1u, 0u))))))), _GLF_IDENTITY(1u, (1u) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), 1u, 1u), (uvec4(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(1u, _GLF_IDENTITY(0u, uint(uvec4(0u, 1u, 0u, 1u)))), _GLF_IDENTITY(uvec2(0u, 0u), (uvec2(0u, 0u)) | uvec2(0u, 0u)) ^ (uvec2(1u, 0u)))), ~ (~ (uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u, 0u), uvec2(0u, 0u) ^ (uvec2(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) << (0u >> _GLF_IDENTITY(uint(8u), uint(8u)))), 0u))), max(_GLF_IDENTITY(uvec2(1u, 0u), uvec2(0u, 0u) ^ (uvec2(1u, 0u))), _GLF_IDENTITY(uvec2(1u, 0u), uvec2(0u, 0u) ^ (uvec2(1u, 0u))))))))), 1u, 1u, 1u)) | (uvec4(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(1u, 0u), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (0u)), 0u), (uvec2(0u, 0u) << _GLF_IDENTITY(uvec2(0u), uvec2(0u))) | (_GLF_IDENTITY(uvec2(0u, 0u), ~ (~ (uvec2(0u, 0u)))))) ^ (uvec2(1u, 0u)))), ~ (~ (uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u, 0u), (false ? _GLF_FUZZED(floatBitsToUint(vec2(3776.0154, -278.502))) : uvec2(1u, 0u))), clamp(uvec2(1u, 0u), uvec2(1u, 0u), uvec2(1u, 0u))), _GLF_IDENTITY(uvec2(0u, 0u) ^ (uvec2(1u, 0u)), clamp(uvec2(0u, 0u) ^ (uvec2(1u, 0u)), _GLF_IDENTITY(uvec2(0u, 0u) ^ (uvec2(1u, 0u)), uvec2(1u, 1u) * (uvec2(0u, _GLF_IDENTITY(0u, max(0u, 0u))) ^ (uvec2(1u, 0u)))), uvec2(0u, 0u) ^ (uvec2(1u, 0u))))))))), 1u, _GLF_IDENTITY(1u, uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) / _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), max(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))))), injectionSwitch.x)) | (_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) + 0u), (false ? _GLF_FUZZED(workgroup_size) : 1u)))), 1u))), _GLF_IDENTITY(uvec4(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u, 0u), (uvec2(1u, 0u)) >> uvec2(0u, 0u)), uvec2(0u, 0u) ^ (uvec2(1u, 0u)))), ~ _GLF_IDENTITY((~ (uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u, 0u), (uvec2(1u, 0u)) + uvec2(0u, 0u)), uvec2(0u, 0u) ^ (uvec2(1u, 0u)))))), 0u | ((~ (uint(_GLF_IDENTITY(uvec2(1u, 0u), uvec2(0u, 0u) ^ _GLF_IDENTITY((uvec2(1u, 0u)), uvec2(0u, 0u) | ((uvec2(1u, 0u))))))))))), 1u, 1u, 1u), (uvec4(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(1u, 0u), uvec2(0u, 0u) ^ (uvec2(1u, 0u)))), ~ (~ (uint(_GLF_IDENTITY(uvec2(1u, 0u), uvec2(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(num_workgroup) : 0u))) ^ _GLF_IDENTITY(0u, max(0u, 0u)))) ^ (uvec2(1u, 0u))))))), 1u, 1u, 1u)) - uvec4(0u, 0u, 0u, 0u)))))))) << 0u)))), mat3x2(1.0), vec2(1.0)), _GLF_IDENTITY(mat4(1.0), _GLF_IDENTITY(mat4(1.0) * (mat4(1.0)), (mat4(1.0) * (mat4(1.0))) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(length(vec3(-545.514, -5.8, -23.37))) : 0.0)), 0.0, 0.0))), uvec2(1u), _GLF_struct_1(_GLF_IDENTITY(ivec3(1), min(_GLF_IDENTITY(ivec3(1), ivec3(1, 1, 1) * (_GLF_IDENTITY(ivec3(1), (ivec3(1)) + ivec3(0, 0, 0)))), _GLF_IDENTITY(ivec3(1), ~ (~ (_GLF_IDENTITY(ivec3(1), _GLF_IDENTITY(min(ivec3(1), ivec3(1)), (min(ivec3(1), ivec3(1))) | ivec3(0, 0, 0)))))))), true, true, bvec2(true), mat2(1.0), 1u, uvec2(_GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, uint(uint(1u))))), clamp(1u, _GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uint(1u), (uint(1u)) >> 0u))), 1u)))), _GLF_struct_2(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (~ (1)) * 1)))), min(ivec4(1), ivec4(1))), mat3x2(1.0), mat2x4(1.0), bvec2(true), bvec2(true), mat4(1.0), true)), _GLF_struct_5(1, _GLF_struct_4(mat2x4(1.0), _GLF_IDENTITY(uvec2(1u), max(uvec2(1u), uvec2(1u))), mat2x4(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-3.4) : 1.0))), vec4(1.0))), _GLF_struct_8(_GLF_struct_6(mat4(1.0), mat4x2(1.0), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), mat2x4(1.0), _GLF_struct_7(mat3x4(_GLF_IDENTITY(1.0, abs(1.0) * (1.0))), mat4(1.0))));
         for(int _injected_loop_counter = (0 | _GLF_IDENTITY((_GLF_IDENTITY(0, (0) | (0)) << _GLF_IDENTITY(int(0), int(0))), int(int(_GLF_IDENTITY((0 << _GLF_IDENTITY(int(0), int(0))), ~ (~ ((0 << _GLF_IDENTITY(int(0), int(0)))))))))); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), _GLF_IDENTITY(bool(bool(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1))), bool(bvec3(bool(bool(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1))), false, true)))); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                }
               else
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  return;
                }
               return;
              }
             do
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                break;
               return;
               if(_GLF_DEAD(false))
                return;
               if(_GLF_DEAD(false))
                continue;
              }
             while(_GLF_WRAPPED_LOOP(false));
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                return;
               break;
              }
             if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false)))))))
              break;
            }
          }
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           do
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec4(injectionSwitch.x, 1.0, 1.0, 1.0)), (false ? _GLF_FUZZED(968.425) : float(vec4(injectionSwitch.x, 1.0, 1.0, 1.0))))))) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y))))
              return;
            }
           while(_GLF_WRAPPED_LOOP(false));
           if(_GLF_DEAD(false))
            return;
          }
         else
          {
          }
         atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (_GLF_IDENTITY(! (true), (! (true)) || false)) && true))) && (false))))))
          {
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
            {
             return;
            }
          }
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))
          return;
        }
       else
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             return;
            }
           else
            {
            }
          }
         do
          {
           atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(2, min(2, 2))), 4, 64, 4);
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = _GLF_IDENTITY(0, ~ (~ (0))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) >> 0) < 1); _injected_loop_counter ++)
            {
             if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
              continue;
             if(_GLF_DEAD(false))
              continue;
             return;
            }
          }
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
              {
               return;
              }
             else
              {
              }
            }
           if(_GLF_DEAD(false))
            return;
           return;
          }
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, min(0, 0))], injectionSwitch[_GLF_IDENTITY(1, (1) >> 0)])).y, float(mat3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) >> 0)])).y, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, cos(0.0), 1.0, 1.0, _GLF_IDENTITY(0.0, float(mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) / 1.0), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) / 1.0), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0 * (_GLF_IDENTITY(0.0, (0.0) / 1.0)))), float(_GLF_FUZZED((53.91 + 2407.8957))), bool(false)))), float(_GLF_FUZZED(-656.995)), bool(false))), 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(79.72)))), float(_GLF_FUZZED(37.80)), bool(false))))), 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 0.0)))))), _GLF_IDENTITY(injectionSwitch, vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).y)))), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))[0], injectionSwitch[_GLF_IDENTITY(1, (1) >> 0)])).y, float(mat3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) >> 0)])).y, _GLF_IDENTITY(_GLF_IDENTITY(length(vec4(0.0, 0.0, 0.0, 0.0)), (_GLF_IDENTITY(length(vec4(0.0, 0.0, 0.0, 0.0)), (false ? _GLF_FUZZED(-1.8) : _GLF_IDENTITY(length(vec4(0.0, 0.0, 0.0, 0.0)), (length(vec4(0.0, 0.0, 0.0, 0.0))) / 1.0)))) - 0.0), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))) * (_GLF_IDENTITY(length(vec4(0.0, 0.0, 0.0, 0.0)), (_GLF_IDENTITY(length(vec4(0.0, 0.0, 0.0, 0.0)), (false ? _GLF_FUZZED(-1.8) : _GLF_IDENTITY(length(vec4(0.0, 0.0, 0.0, 0.0)), (length(vec4(0.0, 0.0, 0.0, 0.0))) / 1.0)))) - 0.0))), 1.0, 0.0, 0.0, cos(0.0), 1.0, 1.0, 0.0))), mix(float(_GLF_FUZZED((-527.592 + -7101.8795))), _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 0.0, 0.0)), clamp(vec2(_GLF_IDENTITY(mat2(injectionSwitch, 0.0, 0.0), transpose(transpose(mat2(injectionSwitch, 0.0, 0.0))))), vec2(mat2(injectionSwitch, 0.0, 0.0)), vec2(mat2(injectionSwitch, 0.0, 0.0)))))[_GLF_IDENTITY(1, (1) >> _GLF_IDENTITY(0, (0) >> 0))])).y, float(mat3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) >> 0)])).y, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, cos(0.0), 1.0, 1.0, 0.0))), _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) >> 0)])).y, float(mat3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) >> 0)])).y, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, cos(0.0), 1.0, 1.0, 0.0))), mix(float(_GLF_FUZZED(-4.4)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) >> 0)])).y, float(mat3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) >> 0)])).y, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, cos(0.0), 1.0, 1.0, 0.0)))), bool(true))), float(mat3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) >> 0)])).y, float(mat3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) >> 0)])).y, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, cos(0.0), 1.0, 1.0, 0.0))), mix(float(_GLF_FUZZED(-4.4)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) >> 0)])).y, float(mat3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) >> 0)])).y, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, cos(0.0), 1.0, 1.0, 0.0)))), bool(true))), 1.0, 0.0, 1.0, exp(0.0), 0.0, 0.0, 0.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) >> 0)])).y, float(mat3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) >> 0)])).y, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, cos(0.0), 1.0, 1.0, 0.0))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) >> 0)])).y, float(mat3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) >> 0)])).y, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, cos(0.0), 1.0, 1.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) >> 0)])).y, float(mat3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) >> 0)])).y, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, cos(0.0), 1.0, 1.0, 0.0))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) >> 0)])).y, float(mat3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) >> 0)])).y, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, cos(0.0), 1.0, 1.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) >> 0)])).y, float(mat3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) >> 0)])).y, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, cos(0.0), 1.0, 1.0, 0.0))))))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) >> 0)])).y, float(mat3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) >> 0)])).y, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, _GLF_IDENTITY(cos(0.0), (cos(0.0)) / 1.0), 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) >> 0)])).y, float(mat3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (0 >> _GLF_IDENTITY(int(4), int(4))) + (1))))) >> 0)])).y, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(vec4(87.77, -529.016, 29.30, 996.500).t)), float(0.0), bool(true))), 0.0, cos(0.0), 1.0, 1.0, 0.0)))))), max(max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) >> 0)])).y, float(mat3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) >> 0)])).y, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, cos(0.0), 1.0, 1.0, 0.0))), mix(float(_GLF_FUZZED(-4.4)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) >> 0)])).y, float(mat3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) >> 0)])).y, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, cos(0.0), 1.0, 1.0, 0.0)))), bool(true))), float(mat3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) >> 0)])).y, float(mat3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) >> 0)])).y, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, cos(0.0), 1.0, 1.0, 0.0))), mix(float(_GLF_FUZZED(-4.4)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) >> 0)])).y, float(mat3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) >> 0)])).y, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, cos(0.0), 1.0, 1.0, 0.0)))), bool(true))), 1.0, 0.0, 1.0, exp(0.0), 0.0, 0.0, 0.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) >> 0)])).y, float(mat3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) >> 0)])).y, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, cos(0.0), 1.0, 1.0, 0.0))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) >> 0)])).y, float(mat3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) >> 0)])).y, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, cos(0.0), 1.0, 1.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) >> 0)])).y, float(mat3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) >> 0)])).y, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, cos(0.0), 1.0, 1.0, 0.0))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) >> 0)])).y, float(mat3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) >> 0)])).y, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, cos(0.0), 1.0, 1.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) >> 0)])).y, float(mat3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) >> 0)])).y, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, cos(0.0), 1.0, 1.0, 0.0))))))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) >> 0)])).y, float(mat3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) >> 0)])).y, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, _GLF_IDENTITY(cos(0.0), (cos(0.0)) / 1.0), 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) >> 0)])).y, float(mat3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (0 >> _GLF_IDENTITY(int(4), int(4))) + (1))))) >> 0)])).y, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(vec4(87.77, -529.016, 29.30, 996.500).t)), float(0.0), bool(true))), 0.0, cos(0.0), 1.0, 1.0, 0.0)))))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) >> 0)])).y, float(mat3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) >> 0)])).y, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, cos(0.0), 1.0, 1.0, 0.0))), mix(float(_GLF_FUZZED(-4.4)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) >> 0)])).y, float(mat3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) >> 0)])).y, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, cos(0.0), 1.0, 1.0, 0.0)))), bool(true))), float(mat3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) >> 0)])).y, float(mat3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) >> 0)])).y, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, cos(0.0), 1.0, 1.0, 0.0))), mix(float(_GLF_FUZZED(-4.4)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) >> 0)])).y, float(mat3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) >> 0)])).y, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, cos(0.0), 1.0, 1.0, 0.0)))), bool(true))), 1.0, 0.0, 1.0, exp(0.0), 0.0, 0.0, 0.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) >> 0)])).y, float(mat3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) >> 0)])).y, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, cos(0.0), 1.0, 1.0, 0.0))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) >> 0)])).y, float(mat3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) >> 0)])).y, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, cos(0.0), 1.0, 1.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) >> 0)])).y, float(mat3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) >> 0)])).y, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, cos(0.0), 1.0, 1.0, 0.0))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) >> 0)])).y, float(mat3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) >> 0)])).y, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, cos(0.0), 1.0, 1.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) >> 0)])).y, float(mat3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) >> 0)])).y, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, cos(0.0), 1.0, 1.0, 0.0))))))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) >> 0)])).y, float(mat3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) >> 0)])).y, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, _GLF_IDENTITY(cos(0.0), (cos(0.0)) / 1.0), 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) >> 0)])).y, float(mat3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (0 >> _GLF_IDENTITY(int(4), int(4))) + (1))))) >> 0)])).y, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(vec4(87.77, -529.016, 29.30, 996.500).t)), float(0.0), bool(true))), 0.0, cos(0.0), 1.0, 1.0, 0.0)))))))))), (false ? _GLF_FUZZED(4.6) : float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 0.0, 0.0)), clamp(vec2(_GLF_IDENTITY(mat2(injectionSwitch, 0.0, 0.0), transpose(transpose(mat2(injectionSwitch, 0.0, 0.0))))), vec2(mat2(injectionSwitch, 0.0, 0.0)), vec2(mat2(injectionSwitch, 0.0, 0.0)))))[_GLF_IDENTITY(1, (1) >> _GLF_IDENTITY(0, (0) >> 0))])).y, float(mat3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) >> 0)])).y, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, cos(0.0), 1.0, 1.0, 0.0))), _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) >> 0)])).y, float(mat3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) >> 0)])).y, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, cos(0.0), 1.0, 1.0, 0.0))), mix(float(_GLF_FUZZED(-4.4)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) >> 0)])).y, float(mat3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) >> 0)])).y, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, cos(0.0), 1.0, 1.0, 0.0)))), bool(true))), float(mat3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) >> 0)])).y, float(mat3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) >> 0)])).y, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, cos(0.0), 1.0, 1.0, 0.0))), mix(float(_GLF_FUZZED(-4.4)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) >> 0)])).y, float(mat3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) >> 0)])).y, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, cos(0.0), 1.0, 1.0, 0.0)))), bool(true))), 1.0, 0.0, 1.0, exp(0.0), 0.0, 0.0, 0.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) >> 0)])).y, float(mat3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) >> 0)])).y, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, cos(0.0), 1.0, 1.0, 0.0))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) >> 0)])).y, float(mat3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) >> 0)])).y, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, cos(0.0), 1.0, 1.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) >> 0)])).y, float(mat3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) >> 0)])).y, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, cos(0.0), 1.0, 1.0, 0.0))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) >> 0)])).y, float(mat3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) >> 0)])).y, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, cos(0.0), 1.0, 1.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) >> 0)])).y, float(mat3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) >> 0)])).y, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, cos(0.0), 1.0, 1.0, 0.0))))))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) >> 0)])).y, float(mat3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) >> 0)])).y, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, _GLF_IDENTITY(cos(0.0), (cos(0.0)) / 1.0), 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) >> 0)])).y, float(mat3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (0 >> _GLF_IDENTITY(int(4), int(4))) + (1))))) >> 0)])).y, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(vec4(87.77, -529.016, 29.30, 996.500).t)), float(0.0), bool(true))), 0.0, cos(0.0), 1.0, 1.0, 0.0)))))), max(max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) >> 0)])).y, float(mat3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) >> 0)])).y, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, cos(0.0), 1.0, 1.0, 0.0))), mix(float(_GLF_FUZZED(-4.4)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) >> 0)])).y, float(mat3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) >> 0)])).y, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, cos(0.0), 1.0, 1.0, 0.0)))), bool(true))), float(mat3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) >> 0)])).y, float(mat3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) >> 0)])).y, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, cos(0.0), 1.0, 1.0, 0.0))), mix(float(_GLF_FUZZED(-4.4)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) >> 0)])).y, float(mat3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) >> 0)])).y, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, cos(0.0), 1.0, 1.0, 0.0)))), bool(true))), 1.0, 0.0, 1.0, exp(0.0), 0.0, 0.0, 0.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) >> 0)])).y, float(mat3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) >> 0)])).y, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, cos(0.0), 1.0, 1.0, 0.0))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) >> 0)])).y, float(mat3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) >> 0)])).y, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, cos(0.0), 1.0, 1.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) >> 0)])).y, float(mat3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) >> 0)])).y, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, cos(0.0), 1.0, 1.0, 0.0))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) >> 0)])).y, float(mat3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) >> 0)])).y, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, cos(0.0), 1.0, 1.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) >> 0)])).y, float(mat3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) >> 0)])).y, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, cos(0.0), 1.0, 1.0, 0.0))))))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) >> 0)])).y, float(mat3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) >> 0)])).y, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, _GLF_IDENTITY(cos(0.0), (cos(0.0)) / 1.0), 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) >> 0)])).y, float(mat3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (0 >> _GLF_IDENTITY(int(4), int(4))) + (1))))) >> 0)])).y, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(vec4(87.77, -529.016, 29.30, 996.500).t)), float(0.0), bool(true))), 0.0, cos(0.0), 1.0, 1.0, 0.0)))))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) >> 0)])).y, float(mat3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) >> 0)])).y, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, cos(0.0), 1.0, 1.0, 0.0))), mix(float(_GLF_FUZZED(-4.4)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) >> 0)])).y, float(mat3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) >> 0)])).y, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, cos(0.0), 1.0, 1.0, 0.0)))), bool(true))), float(mat3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) >> 0)])).y, float(mat3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) >> 0)])).y, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, cos(0.0), 1.0, 1.0, 0.0))), mix(float(_GLF_FUZZED(-4.4)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) >> 0)])).y, float(mat3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) >> 0)])).y, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, cos(0.0), 1.0, 1.0, 0.0)))), bool(true))), 1.0, 0.0, 1.0, exp(0.0), 0.0, 0.0, 0.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) >> 0)])).y, float(mat3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) >> 0)])).y, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, cos(0.0), 1.0, 1.0, 0.0))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) >> 0)])).y, float(mat3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) >> 0)])).y, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, cos(0.0), 1.0, 1.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) >> 0)])).y, float(mat3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) >> 0)])).y, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, cos(0.0), 1.0, 1.0, 0.0))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) >> 0)])).y, float(mat3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) >> 0)])).y, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, cos(0.0), 1.0, 1.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) >> 0)])).y, float(mat3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) >> 0)])).y, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, cos(0.0), 1.0, 1.0, 0.0))))))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) >> 0)])).y, float(mat3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) >> 0)])).y, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, _GLF_IDENTITY(cos(0.0), (cos(0.0)) / 1.0), 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) >> 0)])).y, float(mat3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (0 >> _GLF_IDENTITY(int(4), int(4))) + (1))))) >> 0)])).y, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(vec4(87.77, -529.016, 29.30, 996.500).t)), float(0.0), bool(true))), 0.0, cos(0.0), 1.0, 1.0, 0.0)))))))))))), bool(true))), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0)))) * (injectionSwitch)))).y))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(! (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               do
                {
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                  }
                 else
                  {
                   if(_GLF_DEAD(false))
                    return;
                   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec2((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && _GLF_IDENTITY(true, bool(bool(true)))), (injectionSwitch.x > injectionSwitch.y))))
                    {
                     do
                      {
                       return;
                      }
                     while(_GLF_WRAPPED_LOOP(false));
                    }
                  }
                 if(_GLF_DEAD(false))
                  continue;
                 return;
                 if(_GLF_DEAD(false))
                  return;
                 if(_GLF_DEAD(false))
                  break;
                 if(_GLF_DEAD(false))
                  continue;
                }
               while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), ! (! (! (false))))) || false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y)), false || (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), ! (! (! (false))))) || false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), ! (! _GLF_IDENTITY((! (false)), bool(bvec3(_GLF_IDENTITY((! (false)), ((! (false))) || false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) || false))), (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0))) > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y)))))))));
              }
             else
              {
              }
            }
           else
            {
            }
          }
        }
      }
     else
      {
      }
    }
  }
}
