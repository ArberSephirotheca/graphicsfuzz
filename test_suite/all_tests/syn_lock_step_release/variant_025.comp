#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_0 {
 uvec4 _f0;
 uint subgroup_id;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec3 GLF_merged3_0_1_3_1_1_13_2_1_13gidnum_workgrouptotal_threads;
 uvec2 GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size;
 _GLF_struct_0 _GLF_struct_replacement_0 = _GLF_struct_0(uvec4(1u), gl_SubgroupID);
 GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.x = _GLF_struct_replacement_0.subgroup_id;
 uint subgroup_size = gl_SubgroupSize;
 GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y = subgroup_size;
 uint gid = gl_GlobalInvocationID.x;
 GLF_merged3_0_1_3_1_1_13_2_1_13gidnum_workgrouptotal_threads.x = gid;
 uint num_workgroup = gl_NumWorkGroups.x;
 GLF_merged3_0_1_3_1_1_13_2_1_13gidnum_workgrouptotal_threads.y = num_workgroup;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint total_threads = GLF_merged3_0_1_3_1_1_13_2_1_13gidnum_workgrouptotal_threads.y * workgroup_size;
 GLF_merged3_0_1_3_1_1_13_2_1_13gidnum_workgrouptotal_threads.z = total_threads;
 buf[GLF_merged3_0_1_3_1_1_13_2_1_13gidnum_workgrouptotal_threads.x] = _GLF_IDENTITY(1, (1) | 0);
 atomicStore(buf[(GLF_merged3_0_1_3_1_1_13_2_1_13gidnum_workgrouptotal_threads.x + 1) % GLF_merged3_0_1_3_1_1_13_2_1_13gidnum_workgrouptotal_threads.z], uint(2), 4, _GLF_IDENTITY(64, (64) | (64)), 4);
}
