#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_29 {
 int _f0;
 mat2x4 _f1;
 mat4x3 _f2;
 float _f3;
 bool _f4;
 uvec3 _f5;
} ;

struct _GLF_struct_28 {
 mat3x2 _f0;
 mat3x4 _f1;
 mat4x2 _f2;
 bvec3 _f3;
 vec3 _f4;
 mat3x2 _f5;
} ;

struct _GLF_struct_27 {
 vec2 _f0;
 uint virtual_gid;
 mat4x3 _f1;
} ;

struct _GLF_struct_30 {
 ivec2 _f0;
 _GLF_struct_27 _f1;
 _GLF_struct_28 _f2;
 _GLF_struct_29 _f3;
} ;

struct _GLF_struct_25 {
 int _f0;
 mat2 _f1;
 vec2 _f2;
 bvec4 _f3;
 mat3x4 _f4;
 mat3 _f5;
 uvec4 _f6;
} ;

struct _GLF_struct_24 {
 mat3 _f0;
} ;

struct _GLF_struct_23 {
 bvec3 _f0;
 mat2x3 _f1;
 mat4x3 _f2;
 mat4x2 _f3;
 uvec4 _f4;
} ;

struct _GLF_struct_22 {
 mat3x4 _f0;
 mat2x3 _f1;
 uvec4 _f2;
 vec3 _f3;
 vec2 _f4;
 mat3x4 _f5;
 mat3x2 _f6;
} ;

struct _GLF_struct_21 {
 uvec3 _f0;
 vec3 _f1;
 ivec2 _f2;
 mat2x3 _f3;
} ;

struct _GLF_struct_20 {
 mat4x3 _f0;
 vec2 _f1;
 int _f2;
} ;

struct _GLF_struct_26 {
 _GLF_struct_20 _f0;
 _GLF_struct_21 _f1;
 _GLF_struct_22 _f2;
 _GLF_struct_23 _f3;
 _GLF_struct_24 _f4;
 _GLF_struct_25 _f5;
} ;

struct _GLF_struct_31 {
 mat2 _f0;
 _GLF_struct_26 _f1;
 _GLF_struct_30 _f2;
 uvec4 _f3;
} ;

struct _GLF_struct_17 {
 mat3 _f0;
} ;

struct _GLF_struct_16 {
 mat3x2 _f0;
 mat3x4 _f1;
} ;

struct _GLF_struct_15 {
 float _f0;
 mat3 _f1;
 vec4 _f2;
 mat3x4 _f3;
} ;

struct _GLF_struct_18 {
 mat3x2 _f0;
 _GLF_struct_15 _f1;
 _GLF_struct_16 _f2;
 _GLF_struct_17 _f3;
 ivec2 _f4;
 ivec2 _f5;
 mat4x3 _f6;
} ;

struct _GLF_struct_13 {
 float _f0;
 mat2 _f1;
 bvec4 _f2;
} ;

struct _GLF_struct_12 {
 vec2 _f0;
 mat3 _f1;
 mat2 _f2;
 mat3 _f3;
 ivec3 _f4;
} ;

struct _GLF_struct_11 {
 vec2 _f0;
 uint subgroup_size;
 mat4x3 _f1;
 ivec4 _f2;
 mat2x4 _f3;
 uvec2 _f4;
 vec3 _f5;
} ;

struct _GLF_struct_10 {
 mat2 _f0;
} ;

struct _GLF_struct_14 {
 _GLF_struct_10 _f0;
 _GLF_struct_11 _f1;
 mat2x3 _f2;
 _GLF_struct_12 _f3;
 int _f4;
 mat2x3 _f5;
 _GLF_struct_13 _f6;
} ;

struct _GLF_struct_19 {
 _GLF_struct_14 _f0;
 _GLF_struct_18 _f1;
} ;

struct _GLF_struct_8 {
 bool _f0;
} ;

struct _GLF_struct_7 {
 mat4x3 _f0;
} ;

struct _GLF_struct_5 {
 mat4x3 _f0;
 mat3 _f1;
 uvec3 _f2;
 vec4 _f3;
} ;

struct _GLF_struct_4 {
 bvec2 _f0;
 mat3 _f1;
 mat3 _f2;
 vec4 _f3;
 mat2 _f4;
 mat3x2 _f5;
} ;

struct _GLF_struct_3 {
 mat4x3 _f0;
 ivec4 _f1;
 bool _f2;
 mat3x2 _f3;
} ;

struct _GLF_struct_2 {
 mat3 _f0;
 mat3x4 _f1;
 mat4x2 _f2;
} ;

struct _GLF_struct_1 {
 vec4 _f0;
 mat4x2 _f1;
} ;

struct _GLF_struct_0 {
 mat4x2 _f0;
 bvec2 _f1;
 ivec2 _f2;
 mat3x2 _f3;
 uvec2 _f4;
 ivec2 _f5;
} ;

struct _GLF_struct_6 {
 _GLF_struct_0 _f0;
 _GLF_struct_1 _f1;
 _GLF_struct_2 _f2;
 _GLF_struct_3 _f3;
 _GLF_struct_4 _f4;
 _GLF_struct_5 _f5;
} ;

struct _GLF_struct_9 {
 _GLF_struct_6 _f0;
 uint subgroup_id;
 _GLF_struct_7 _f1;
 _GLF_struct_8 _f2;
} ;

layout(set = 0, binding = 0) uniform buf0 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, false || (true)))))
  return;
 _GLF_struct_9 _GLF_struct_replacement_9 = _GLF_struct_9(_GLF_struct_6(_GLF_struct_0(mat4x2(1.0), bvec2(true), ivec2(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 | (1))) >> (0 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), ~ _GLF_IDENTITY((~ (int(4))), ((~ (int(4)))) << int(_GLF_ZERO(0.0, injectionSwitch.x)))))))), mat3x2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4x3(1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, determinant(mat2(1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), 1.0, 0.0, sqrt(1.0), 1.0, 0.0, 1.0, 1.0, 0.0)), (true ? float(mat4x3(1.0, 0.0, 0.0, determinant(_GLF_IDENTITY(mat2(1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY(mat2(1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), transpose(transpose(mat2(1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)))))) / mat2(1.0, 1.0, 1.0, 1.0))), 1.0, 0.0, sqrt(1.0), 1.0, 0.0, 1.0, 1.0, 0.0)) : _GLF_FUZZED(-716.349))))), uvec2(1u), ivec2(_GLF_IDENTITY(1, min(1, 1)))), _GLF_struct_1(vec4(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-9635.5073)), bool(false)))))), mat4x2(1.0)), _GLF_struct_2(mat3(_GLF_IDENTITY(1.0, (1.0) / 1.0)), mat3x4(1.0), mat4x2(1.0)), _GLF_struct_3(mat4x3(1.0), ivec4(1), true, mat3x2(1.0)), _GLF_struct_4(bvec2(true), mat3(1.0), mat3(1.0), _GLF_IDENTITY(vec4(1.0), _GLF_IDENTITY(min(vec4(1.0), _GLF_IDENTITY(_GLF_IDENTITY(vec4(1.0), max(_GLF_IDENTITY(vec4(1.0), (false ? _GLF_FUZZED(vec4(6061.9212, -7.6, -524.875, -247.059)) : vec4(1.0))), _GLF_IDENTITY(vec4(1.0), (true ? vec4(1.0) : _GLF_FUZZED(_GLF_IDENTITY(vec4(1.1, -67.09, -78.37, 756.589), vec4(mat3(vec4(1.1, -67.09, -78.37, 756.589), tan(0.0), 0.0, 1.0, sqrt(1.0), 0.0)))))))), clamp(_GLF_IDENTITY(vec4(1.0), max(vec4(1.0), _GLF_IDENTITY(vec4(1.0), _GLF_IDENTITY((true ? _GLF_IDENTITY(vec4(1.0), max(vec4(1.0), vec4(1.0))) : _GLF_FUZZED(vec4(1.1, -67.09, -78.37, 756.589))), ((true ? _GLF_IDENTITY(vec4(1.0), max(vec4(1.0), vec4(1.0))) : _GLF_FUZZED(vec4(1.1, -67.09, -78.37, 756.589)))) + vec4(0.0, 0.0, 0.0, 0.0))))), _GLF_IDENTITY(vec4(1.0), max(vec4(1.0), _GLF_IDENTITY(vec4(1.0), _GLF_IDENTITY((true ? vec4(1.0) : _GLF_FUZZED(vec4(1.1, -67.09, -78.37, 756.589))), vec4(mat2((true ? vec4(1.0) : _GLF_FUZZED(vec4(1.1, -67.09, -78.37, 756.589))))))))), _GLF_IDENTITY(vec4(1.0), max(vec4(1.0), _GLF_IDENTITY(vec4(1.0), _GLF_IDENTITY((true ? vec4(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-293.869) : 1.0))), float(_GLF_FUZZED(vec2(-1785.3544, -277.455).y)), bool(false)))) : _GLF_FUZZED(vec4(1.1, -67.09, -78.37, 756.589))), clamp((true ? vec4(1.0) : _GLF_FUZZED(vec4(1.1, -67.09, -78.37, 756.589))), (true ? vec4(1.0) : _GLF_FUZZED(vec4(1.1, -67.09, -78.37, 756.589))), (true ? vec4(1.0) : _GLF_FUZZED(vec4(1.1, -67.09, -78.37, 756.589))))))))))), min(min(vec4(1.0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(vec4(1.0), max(_GLF_IDENTITY(vec4(1.0), (false ? _GLF_FUZZED(vec4(6061.9212, -7.6, -524.875, -247.059)) : vec4(1.0))), _GLF_IDENTITY(vec4(1.0), (true ? vec4(1.0) : _GLF_FUZZED(vec4(1.1, -67.09, -78.37, 756.589)))))), clamp(_GLF_IDENTITY(vec4(1.0), max(vec4(1.0), _GLF_IDENTITY(vec4(1.0), _GLF_IDENTITY((true ? _GLF_IDENTITY(vec4(1.0), max(vec4(1.0), vec4(1.0))) : _GLF_FUZZED(vec4(1.1, -67.09, -78.37, 756.589))), ((true ? _GLF_IDENTITY(vec4(1.0), max(vec4(1.0), vec4(1.0))) : _GLF_FUZZED(vec4(1.1, -67.09, -78.37, 756.589)))) + vec4(0.0, 0.0, 0.0, 0.0))))), _GLF_IDENTITY(vec4(1.0), max(vec4(1.0), _GLF_IDENTITY(vec4(1.0), _GLF_IDENTITY((true ? vec4(1.0) : _GLF_FUZZED(vec4(1.1, -67.09, -78.37, 756.589))), vec4(mat2((true ? vec4(1.0) : _GLF_FUZZED(vec4(1.1, -67.09, -78.37, 756.589))))))))), _GLF_IDENTITY(vec4(1.0), max(vec4(1.0), _GLF_IDENTITY(vec4(1.0), _GLF_IDENTITY((true ? vec4(1.0) : _GLF_FUZZED(vec4(1.1, -67.09, -78.37, 756.589))), clamp((true ? vec4(1.0) : _GLF_FUZZED(vec4(1.1, -67.09, -78.37, 756.589))), (true ? vec4(1.0) : _GLF_FUZZED(vec4(1.1, -67.09, -78.37, 756.589))), (true ? vec4(1.0) : _GLF_FUZZED(vec4(1.1, -67.09, -78.37, 756.589)))))))))), mix(vec4((_GLF_IDENTITY(_GLF_IDENTITY(vec4(1.0), max(_GLF_IDENTITY(vec4(1.0), (false ? _GLF_FUZZED(vec4(6061.9212, -7.6, -524.875, -247.059)) : vec4(1.0))), _GLF_IDENTITY(vec4(1.0), (true ? vec4(1.0) : _GLF_FUZZED(vec4(1.1, -67.09, -78.37, 756.589)))))), clamp(_GLF_IDENTITY(vec4(1.0), max(vec4(1.0), _GLF_IDENTITY(vec4(1.0), _GLF_IDENTITY((true ? _GLF_IDENTITY(vec4(1.0), max(vec4(1.0), vec4(1.0))) : _GLF_FUZZED(vec4(1.1, -67.09, -78.37, 756.589))), ((true ? _GLF_IDENTITY(vec4(1.0), max(vec4(1.0), vec4(1.0))) : _GLF_FUZZED(vec4(1.1, -67.09, -78.37, 756.589)))) + vec4(0.0, 0.0, 0.0, 0.0))))), _GLF_IDENTITY(vec4(1.0), max(vec4(1.0), _GLF_IDENTITY(vec4(1.0), _GLF_IDENTITY((true ? vec4(1.0) : _GLF_FUZZED(vec4(1.1, -67.09, -78.37, 756.589))), vec4(mat2((true ? vec4(1.0) : _GLF_FUZZED(vec4(1.1, -67.09, -78.37, 756.589))))))))), _GLF_IDENTITY(vec4(1.0), max(vec4(1.0), _GLF_IDENTITY(vec4(1.0), _GLF_IDENTITY((true ? vec4(1.0) : _GLF_FUZZED(vec4(1.1, -67.09, -78.37, 756.589))), clamp((true ? vec4(1.0) : _GLF_FUZZED(vec4(1.1, -67.09, -78.37, 756.589))), (true ? vec4(1.0) : _GLF_FUZZED(vec4(1.1, -67.09, -78.37, 756.589))), (true ? vec4(1.0) : _GLF_FUZZED(vec4(1.1, -67.09, -78.37, 756.589)))))))))))[0], _GLF_FUZZED(-23.29), _GLF_FUZZED(-96.16), _GLF_FUZZED(vec3(4.1, -5.8, 1.4).xzy.s)), vec4(_GLF_FUZZED(59.57), (_GLF_IDENTITY(_GLF_IDENTITY(vec4(1.0), max(_GLF_IDENTITY(vec4(1.0), (false ? _GLF_FUZZED(vec4(6061.9212, -7.6, -524.875, -247.059)) : vec4(1.0))), _GLF_IDENTITY(vec4(1.0), (true ? vec4(1.0) : _GLF_FUZZED(vec4(1.1, -67.09, -78.37, 756.589)))))), clamp(_GLF_IDENTITY(vec4(1.0), max(vec4(1.0), _GLF_IDENTITY(vec4(1.0), _GLF_IDENTITY((true ? _GLF_IDENTITY(vec4(1.0), max(vec4(1.0), vec4(1.0))) : _GLF_FUZZED(vec4(1.1, -67.09, -78.37, 756.589))), ((true ? _GLF_IDENTITY(vec4(1.0), max(vec4(1.0), vec4(1.0))) : _GLF_FUZZED(vec4(1.1, -67.09, -78.37, 756.589)))) + vec4(0.0, 0.0, 0.0, 0.0))))), _GLF_IDENTITY(vec4(1.0), max(vec4(1.0), _GLF_IDENTITY(vec4(1.0), _GLF_IDENTITY((true ? vec4(1.0) : _GLF_FUZZED(vec4(1.1, -67.09, -78.37, 756.589))), vec4(mat2((true ? vec4(1.0) : _GLF_FUZZED(vec4(1.1, -67.09, -78.37, 756.589))))))))), _GLF_IDENTITY(vec4(1.0), max(vec4(1.0), _GLF_IDENTITY(vec4(1.0), _GLF_IDENTITY((true ? vec4(1.0) : _GLF_FUZZED(vec4(1.1, -67.09, -78.37, 756.589))), clamp((true ? vec4(1.0) : _GLF_FUZZED(vec4(1.1, -67.09, -78.37, 756.589))), (true ? vec4(1.0) : _GLF_FUZZED(vec4(1.1, -67.09, -78.37, 756.589))), (true ? vec4(1.0) : _GLF_FUZZED(vec4(1.1, -67.09, -78.37, 756.589)))))))))))[1], (_GLF_IDENTITY(_GLF_IDENTITY(vec4(1.0), max(_GLF_IDENTITY(vec4(1.0), (false ? _GLF_FUZZED(vec4(6061.9212, -7.6, -524.875, -247.059)) : vec4(1.0))), _GLF_IDENTITY(vec4(1.0), (true ? vec4(1.0) : _GLF_FUZZED(vec4(1.1, -67.09, -78.37, 756.589)))))), clamp(_GLF_IDENTITY(vec4(1.0), max(vec4(1.0), _GLF_IDENTITY(vec4(1.0), _GLF_IDENTITY((true ? _GLF_IDENTITY(vec4(1.0), max(vec4(1.0), vec4(1.0))) : _GLF_FUZZED(vec4(1.1, -67.09, -78.37, 756.589))), ((true ? _GLF_IDENTITY(vec4(1.0), max(vec4(1.0), vec4(1.0))) : _GLF_FUZZED(vec4(1.1, -67.09, -78.37, 756.589)))) + vec4(0.0, 0.0, 0.0, 0.0))))), _GLF_IDENTITY(vec4(1.0), max(vec4(1.0), _GLF_IDENTITY(vec4(1.0), _GLF_IDENTITY((true ? vec4(1.0) : _GLF_FUZZED(vec4(1.1, -67.09, -78.37, 756.589))), vec4(mat2((true ? vec4(1.0) : _GLF_FUZZED(vec4(1.1, -67.09, -78.37, 756.589))))))))), _GLF_IDENTITY(vec4(1.0), max(vec4(1.0), _GLF_IDENTITY(vec4(1.0), _GLF_IDENTITY((true ? vec4(1.0) : _GLF_FUZZED(vec4(1.1, -67.09, -78.37, 756.589))), clamp((true ? vec4(1.0) : _GLF_FUZZED(vec4(1.1, -67.09, -78.37, 756.589))), (true ? vec4(1.0) : _GLF_FUZZED(vec4(1.1, -67.09, -78.37, 756.589))), (true ? vec4(1.0) : _GLF_FUZZED(vec4(1.1, -67.09, -78.37, 756.589)))))))))))[2], (_GLF_IDENTITY(_GLF_IDENTITY(vec4(1.0), max(_GLF_IDENTITY(vec4(1.0), (false ? _GLF_FUZZED(vec4(6061.9212, -7.6, -524.875, -247.059)) : vec4(1.0))), _GLF_IDENTITY(vec4(1.0), (true ? vec4(1.0) : _GLF_FUZZED(vec4(1.1, -67.09, -78.37, 756.589)))))), clamp(_GLF_IDENTITY(vec4(1.0), max(vec4(1.0), _GLF_IDENTITY(vec4(1.0), _GLF_IDENTITY((true ? _GLF_IDENTITY(vec4(1.0), max(vec4(1.0), vec4(1.0))) : _GLF_FUZZED(vec4(1.1, -67.09, -78.37, 756.589))), ((true ? _GLF_IDENTITY(vec4(1.0), max(vec4(1.0), vec4(1.0))) : _GLF_FUZZED(vec4(1.1, -67.09, -78.37, 756.589)))) + vec4(0.0, 0.0, 0.0, 0.0))))), _GLF_IDENTITY(vec4(1.0), max(vec4(1.0), _GLF_IDENTITY(vec4(1.0), _GLF_IDENTITY((true ? vec4(1.0) : _GLF_FUZZED(vec4(1.1, -67.09, -78.37, 756.589))), vec4(mat2((true ? vec4(1.0) : _GLF_FUZZED(vec4(1.1, -67.09, -78.37, 756.589))))))))), _GLF_IDENTITY(vec4(1.0), max(vec4(1.0), _GLF_IDENTITY(vec4(1.0), _GLF_IDENTITY((true ? vec4(1.0) : _GLF_FUZZED(vec4(1.1, -67.09, -78.37, 756.589))), clamp((true ? vec4(1.0) : _GLF_FUZZED(vec4(1.1, -67.09, -78.37, 756.589))), (true ? vec4(1.0) : _GLF_FUZZED(vec4(1.1, -67.09, -78.37, 756.589))), (true ? vec4(1.0) : _GLF_FUZZED(vec4(1.1, -67.09, -78.37, 756.589)))))))))))[3]), bvec4(false, true, true, true)))), min(vec4(1.0), _GLF_IDENTITY(_GLF_IDENTITY(vec4(1.0), max(_GLF_IDENTITY(vec4(1.0), (false ? _GLF_FUZZED(_GLF_IDENTITY(vec4(6061.9212, -7.6, -524.875, -247.059), clamp(vec4(6061.9212, -7.6, -524.875, -247.059), vec4(6061.9212, -7.6, -524.875, -247.059), vec4(6061.9212, -7.6, -524.875, -247.059)))) : vec4(1.0))), _GLF_IDENTITY(vec4(1.0), (true ? vec4(1.0) : _GLF_FUZZED(vec4(1.1, -67.09, -78.37, 756.589)))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(vec4(1.0), (true ? _GLF_IDENTITY(vec4(1.0), mix(vec4(_GLF_FUZZED(8.0), (vec4(1.0))[1], _GLF_FUZZED(-8.7), _GLF_FUZZED(720.582)), vec4((vec4(1.0))[0], _GLF_FUZZED(43.57), (vec4(1.0))[2], (vec4(1.0))[3]), bvec4(true, false, true, true))) : _GLF_FUZZED(vec4(-9.7, 8.5, -45.47, 4.3)))), max(vec4(1.0), _GLF_IDENTITY(vec4(1.0), _GLF_IDENTITY((true ? _GLF_IDENTITY(vec4(1.0), max(vec4(1.0), vec4(1.0))) : _GLF_FUZZED(vec4(1.1, -67.09, -78.37, 756.589))), ((true ? _GLF_IDENTITY(vec4(1.0), max(vec4(1.0), vec4(1.0))) : _GLF_FUZZED(vec4(1.1, -67.09, -78.37, 756.589)))) + vec4(0.0, 0.0, 0.0, 0.0))))), _GLF_IDENTITY(_GLF_IDENTITY(vec4(1.0), vec4(mat3x4(vec4(1.0), 0.0, sqrt(1.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0))), max(vec4(1.0), _GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, (1.0) * 1.0)), _GLF_IDENTITY((true ? vec4(1.0) : _GLF_FUZZED(vec4(1.1, -67.09, -78.37, 756.589))), vec4(mat2((true ? vec4(1.0) : _GLF_FUZZED(vec4(1.1, -67.09, -78.37, 756.589))))))))), _GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, float(mat3(_GLF_IDENTITY(1.0, min(1.0, 1.0)), cos(0.0), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)))), max(vec4(1.0), _GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, (1.0) - log(1.0))), _GLF_IDENTITY((true ? vec4(1.0) : _GLF_FUZZED(vec4(1.1, -67.09, -78.37, 756.589))), clamp((true ? vec4(1.0) : _GLF_FUZZED(vec4(1.1, -67.09, -78.37, 756.589))), (_GLF_IDENTITY(true ? vec4(1.0) : _GLF_FUZZED(vec4(1.1, -67.09, -78.37, 756.589)), clamp(true ? vec4(1.0) : _GLF_FUZZED(vec4(1.1, -67.09, -78.37, 756.589)), _GLF_IDENTITY(true ? vec4(1.0) : _GLF_FUZZED(vec4(1.1, -67.09, -78.37, 756.589)), (true ? vec4(1.0) : _GLF_FUZZED(vec4(1.1, -67.09, -78.37, 756.589))) * vec4(1.0, 1.0, 1.0, 1.0)), true ? vec4(1.0) : _GLF_FUZZED(vec4(1.1, -67.09, -78.37, 756.589))))), (true ? vec4(1.0) : _GLF_FUZZED(vec4(1.1, -67.09, -78.37, 756.589)))))))))))))), mat2(1.0), mat3x2(1.0)), _GLF_struct_5(mat4x3(_GLF_IDENTITY(1.0, float(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 1.0)))), _GLF_IDENTITY(mat3(1.0), mat3(mat4x3(mat3(1.0)))), uvec3(_GLF_IDENTITY(1u, (1u) * 1u)), vec4(1.0))), gl_SubgroupID, _GLF_struct_7(mat4x3(1.0)), _GLF_struct_8(true));
 if(_GLF_DEAD(false))
  return;
 _GLF_struct_19 _GLF_struct_replacement_19 = _GLF_struct_19(_GLF_struct_14(_GLF_struct_10(mat2(1.0)), _GLF_struct_11(vec2(1.0), gl_SubgroupSize, mat4x3(1.0), ivec4(1), mat2x4(1.0), uvec2(1u), vec3(1.0)), mat2x3(1.0), _GLF_struct_12(vec2(_GLF_IDENTITY(1.0, (1.0) * 1.0)), mat3(_GLF_IDENTITY(1.0, 0.0 + (1.0))), mat2(1.0), mat3(1.0), _GLF_IDENTITY(ivec3(1), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(ivec3(11354, 86596, 92204)) : ivec3(1)))), 1, mat2x3(1.0), _GLF_struct_13(1.0, mat2(1.0), bvec4(true))), _GLF_struct_18(mat3x2(1.0), _GLF_struct_15(1.0, mat3(1.0), vec4(1.0), mat3x4(1.0)), _GLF_struct_16(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(0.7)), bool(false))), _GLF_IDENTITY(clamp(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) - 0.0), mix(float(1.0), float(_GLF_FUZZED(839.649)), bool(false))))), min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(839.649)), bool(false))))), float(mat4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(839.649)), bool(false))))), (true ? _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(839.649)), bool(false))))) : _GLF_FUZZED(-7.8))), sqrt(0.0), sin(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)))), vec2(0.0, 1.0)), dot(vec2(determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)))), vec2(0.0, 1.0))), 1.0, 0.0))), _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(839.649)), bool(false))))))), 1.0), (clamp(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) - 0.0), mix(float(1.0), float(_GLF_FUZZED(839.649)), bool(false))))), min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(839.649)), bool(false))))), float(mat4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(839.649)), bool(false))))), float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(839.649)), bool(false))))), (_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(839.649)), bool(false)))))) / 1.0), 0.0, 0.0, 1.0, 1.0, 0.0), (true ? mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(839.649)), bool(false))))), (_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(839.649)), bool(false)))))) / 1.0), 0.0, 0.0, 1.0, 1.0, 0.0) : _GLF_FUZZED((mat3x2(1755.4914, 8.5, -1040.5435, -41.19, -4.6, 2.4) / mat3x2(-9.8, 485.047, -8.5, 249.277, 3.4, 3880.3174))))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), min(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(839.649)), bool(false))))) : _GLF_FUZZED(-7.8))), sqrt(0.0), sin(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)))), vec2(0.0, 1.0)), dot(vec2(determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0))), vec4(1.0, 0.0, 0.0, 0.0)))), vec2(0.0, 1.0))), 1.0, 0.0))), _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(839.649)), bool(false))))))), 1.0)) / 1.0))), mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), (1.0) + abs(0.0)))), _GLF_struct_17(_GLF_IDENTITY(mat3(1.0), transpose(transpose(_GLF_IDENTITY(mat3(1.0), (mat3(1.0)) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))), ivec2(1), ivec2(1), mat4x3(1.0)));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), (! (false)) || false))))), (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), true && (! (_GLF_IDENTITY(true, ! (! (true))))))))) && true) && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), bool(bvec2(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((gl_NumWorkGroups), max(_GLF_IDENTITY((gl_NumWorkGroups), ~ (~ ((gl_NumWorkGroups)))), (gl_NumWorkGroups))), clamp(~ (gl_NumWorkGroups), ~ (gl_NumWorkGroups), ~ (gl_NumWorkGroups))))).x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) - 0.0)))))
  return;
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize)))) | (gl_WorkGroupSize)), uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize)))) | (gl_WorkGroupSize)))).x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), injectionSwitch.y))) / 1.0)))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y, (_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y) - 0.0)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(atan(injectionSwitch, vec2(-2813.3913, -1277.8804))) : injectionSwitch)).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, false, false)))))))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(-7.7, -1.7)) : injectionSwitch)), injectionSwitch)))).y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 _GLF_struct_31 _GLF_struct_replacement_31 = _GLF_struct_31(mat2(1.0), _GLF_struct_26(_GLF_struct_20(mat4x3(1.0), vec2(1.0), 1), _GLF_struct_21(uvec3(1u), _GLF_IDENTITY(vec3(1.0), mix(vec3(_GLF_IDENTITY(_GLF_IDENTITY((vec3(1.0)), max((vec3(1.0)), (vec3(1.0))))[0], (true ? _GLF_IDENTITY((vec3(1.0))[0], ((_GLF_IDENTITY(vec3(1.0), (true ? _GLF_IDENTITY(vec3(1.0), min(vec3(1.0), vec3(1.0))) : _GLF_FUZZED(vec3(253.615, -105.118, 38.21)))))[0]) + _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) - 0.0)) : _GLF_FUZZED(-2384.7678))), (vec3(1.0))[1], (vec3(1.0))[2]), vec3(_GLF_FUZZED((537.191 + _GLF_IDENTITY(-8.0, mix(float(_GLF_FUZZED(-1.2)), float(-8.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), _GLF_FUZZED(_GLF_IDENTITY(-6.2, mix(float(-6.2), float(_GLF_FUZZED(-24.34)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_FUZZED(94.11)), bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), ivec2(1), mat2x3(1.0)), _GLF_struct_22(mat3x4(1.0), mat2x3(1.0), uvec4(1u), vec3(1.0), vec2(1.0), mat3x4(1.0), mat3x2(1.0)), _GLF_struct_23(bvec3(true), mat2x3(1.0), mat4x3(1.0), mat4x2(_GLF_IDENTITY(1.0, cos(0.0) * _GLF_IDENTITY((1.0), min(_GLF_IDENTITY((1.0), ((1.0)) / 1.0), (1.0))))), uvec4(1u)), _GLF_struct_24(mat3(_GLF_IDENTITY(1.0, min(1.0, 1.0)))), _GLF_struct_25(1, mat2(1.0), _GLF_IDENTITY(vec2(1.0), vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (vec2(1.0))), bvec4(true), mat3x4(1.0), mat3(1.0), uvec4(1u))), _GLF_struct_30(ivec2(1), _GLF_struct_27(vec2(1.0), _GLF_IDENTITY(workgroup_base + _GLF_struct_replacement_9.subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_19._f0._f1.subgroup_size, min(_GLF_struct_replacement_19._f0._f1.subgroup_size, _GLF_struct_replacement_19._f0._f1.subgroup_size)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_struct_replacement_19._f0._f1.subgroup_size, min(_GLF_struct_replacement_19._f0._f1.subgroup_size, _GLF_struct_replacement_19._f0._f1.subgroup_size))), 0u | ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_19._f0._f1.subgroup_size, min(_GLF_struct_replacement_19._f0._f1.subgroup_size, _GLF_struct_replacement_19._f0._f1.subgroup_size)), uint(uvec2(_GLF_IDENTITY(_GLF_struct_replacement_19._f0._f1.subgroup_size, min(_GLF_struct_replacement_19._f0._f1.subgroup_size, _GLF_struct_replacement_19._f0._f1.subgroup_size)), (1u & 1u))))))) | (0u >> _GLF_IDENTITY(uint(0u), uint(0u)))) + subgroup_local_id, (workgroup_base + _GLF_struct_replacement_9.subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_19._f0._f1.subgroup_size, 0u | (_GLF_struct_replacement_19._f0._f1.subgroup_size)), min(_GLF_IDENTITY(_GLF_struct_replacement_19._f0._f1.subgroup_size, (_GLF_struct_replacement_19._f0._f1.subgroup_size) >> 0u), _GLF_struct_replacement_19._f0._f1.subgroup_size)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_struct_replacement_19._f0._f1.subgroup_size, min(_GLF_struct_replacement_19._f0._f1.subgroup_size, _GLF_struct_replacement_19._f0._f1.subgroup_size))), 0u | ((_GLF_IDENTITY(_GLF_struct_replacement_19._f0._f1.subgroup_size, min(_GLF_struct_replacement_19._f0._f1.subgroup_size, _GLF_IDENTITY(_GLF_struct_replacement_19._f0._f1.subgroup_size, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) ? _GLF_IDENTITY(_GLF_struct_replacement_19._f0._f1.subgroup_size, uint(uvec3(_GLF_struct_replacement_19._f0._f1.subgroup_size, 0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(num_workgroup)))))) : _GLF_FUZZED(workgroup_size)))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(0u), uint(0u)), (true ? _GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(0u), uint(0u)), 0u | (0u >> _GLF_IDENTITY(uint(0u), uint(0u)))) : _GLF_FUZZED((41155u - workgroup_id)))), uint(uint(_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(0u), uint(0u)), (true ? _GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(0u), uint(0u)), 0u | (0u >> _GLF_IDENTITY(uint(0u), uint(0u)))) : _GLF_FUZZED((41155u - workgroup_id))))))))) + subgroup_local_id) / 1u), mat4x3(_GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-97.83)), float(1.0), bool(true)), 0.0 + (mix(float(_GLF_FUZZED(-97.83)), float(1.0), bool(true))))))), _GLF_struct_28(mat3x2(1.0), mat3x4(1.0), mat4x2(1.0), bvec3(true), vec3(1.0), mat3x2(1.0)), _GLF_struct_29(1, mat2x4(1.0), mat4x3(1.0), 1.0, true, uvec3(1u))), uvec4(1u));
 if(_GLF_DEAD(false))
  return;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_struct_replacement_9.subgroup_id * _GLF_struct_replacement_19._f0._f1.subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_struct_replacement_9.subgroup_id, min(_GLF_struct_replacement_9.subgroup_id, _GLF_struct_replacement_9.subgroup_id)) * _GLF_struct_replacement_19._f0._f1.subgroup_size, _GLF_IDENTITY((workgroup_base + _GLF_struct_replacement_9.subgroup_id * _GLF_struct_replacement_19._f0._f1.subgroup_size) / 1u, max((workgroup_base + _GLF_struct_replacement_9.subgroup_id * _GLF_struct_replacement_19._f0._f1.subgroup_size) / 1u, (workgroup_base + _GLF_struct_replacement_9.subgroup_id * _GLF_struct_replacement_19._f0._f1.subgroup_size) / 1u))), _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_struct_replacement_9.subgroup_id * _GLF_struct_replacement_19._f0._f1.subgroup_size, 0u + (workgroup_base + _GLF_struct_replacement_9.subgroup_id * _GLF_struct_replacement_19._f0._f1.subgroup_size)), (workgroup_base + _GLF_struct_replacement_9.subgroup_id * _GLF_struct_replacement_19._f0._f1.subgroup_size) / 1u), _GLF_IDENTITY(workgroup_base + _GLF_struct_replacement_9.subgroup_id * _GLF_IDENTITY(_GLF_struct_replacement_19._f0._f1.subgroup_size, (_GLF_struct_replacement_19._f0._f1.subgroup_size) | (_GLF_struct_replacement_19._f0._f1.subgroup_size)), _GLF_IDENTITY((workgroup_base + _GLF_struct_replacement_9.subgroup_id * _GLF_struct_replacement_19._f0._f1.subgroup_size) / 1u, _GLF_IDENTITY(uint(uint((workgroup_base + _GLF_struct_replacement_9.subgroup_id * _GLF_struct_replacement_19._f0._f1.subgroup_size) / 1u)), (uint(uint((workgroup_base + _GLF_struct_replacement_9.subgroup_id * _GLF_struct_replacement_19._f0._f1.subgroup_size) / 1u))) << 0u)))), (true ? max(_GLF_IDENTITY(workgroup_base + _GLF_struct_replacement_9.subgroup_id * _GLF_IDENTITY(_GLF_struct_replacement_19._f0._f1.subgroup_size, uint(uvec3(_GLF_IDENTITY(_GLF_struct_replacement_19._f0._f1.subgroup_size, min(_GLF_struct_replacement_19._f0._f1.subgroup_size, _GLF_struct_replacement_19._f0._f1.subgroup_size)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u))), (workgroup_base + _GLF_struct_replacement_9.subgroup_id * _GLF_struct_replacement_19._f0._f1.subgroup_size) / 1u), _GLF_IDENTITY(workgroup_base + _GLF_struct_replacement_9.subgroup_id * _GLF_struct_replacement_19._f0._f1.subgroup_size, (workgroup_base + _GLF_struct_replacement_9.subgroup_id * _GLF_struct_replacement_19._f0._f1.subgroup_size) / 1u)) : _GLF_FUZZED(workgroup_base))))) | (workgroup_base + _GLF_struct_replacement_9.subgroup_id * _GLF_struct_replacement_19._f0._f1.subgroup_size)) + _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), min(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) / 1u), (subgroup_local_id + 1))) % _GLF_struct_replacement_19._f0._f1.subgroup_size), min(((subgroup_local_id + 1) % _GLF_struct_replacement_19._f0._f1.subgroup_size), ((subgroup_local_id + 1) % _GLF_struct_replacement_19._f0._f1.subgroup_size)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch))))) - vec2(0.0, 0.0)).y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(7969.0372) : _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-4051.3425))))) > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(mat3((injectionSwitch) * mat2(1.0), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0)))), injectionSwitch)).y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          return;
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, true))), false))), ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, true && (false)), true), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, true && (false)), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, true && (false)), true)))), false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 buf[_GLF_struct_replacement_31._f2._f1.virtual_gid] = 1;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, true && (false)), true)), false || (bool(bvec2(_GLF_IDENTITY(false, true && (false)), true)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), false, false, false)))))))
    barrier();
   return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) - vec2(0.0, 0.0)), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, determinant(mat3(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, sin(0.0), 0.0, 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, cos(0.0), 0.0, 1.0))).y)))) || false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, mix(float(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), float(_GLF_FUZZED(vec3(2.7, 2.4, 6.9).z)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), bool(bvec4(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), false || (bool(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))))))))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), false, true)), _GLF_IDENTITY(bool(bvec2(bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), false, true)), false)), (bool(bvec2(bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), false, true)), false))) && true))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2(injectionSwitch.x, 0.0, 1.0, 1.0)), float(mat3x4(float(mat2(injectionSwitch.x, 0.0, 1.0, 1.0)), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0)))) : _GLF_FUZZED(-0.7))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)), true && (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-9.7)))))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        return;
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false, false, false))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(2, (_GLF_IDENTITY(_GLF_IDENTITY(2, max(2, _GLF_IDENTITY(2, clamp(2, 2, 2)))), (_GLF_IDENTITY(_GLF_IDENTITY(2, max(2, _GLF_IDENTITY(2, clamp(2, 2, 2)))), min(_GLF_IDENTITY(2, max(2, _GLF_IDENTITY(2, clamp(2, 2, 2)))), _GLF_IDENTITY(2, max(2, _GLF_IDENTITY(2, clamp(2, 2, 2))))))) + 0)) - (0 | 0))), 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) / 1.0))) > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(vec2(4.4, _GLF_IDENTITY(2770.2668, min(_GLF_IDENTITY(2770.2668, max(_GLF_IDENTITY(2770.2668, min(2770.2668, 2770.2668)), 2770.2668)), 2770.2668)))))), _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
          }
         return;
         if(_GLF_DEAD(false))
          barrier();
        }
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), false || (_GLF_IDENTITY(false, bool(bvec2(false, true)))))) && true)))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              return;
             barrier();
            }
           return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, true))))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), true && (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(vec2(4.0, -1835.8785).g))) > injectionSwitch.y))))), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), (_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), true)), ! (_GLF_IDENTITY(! (bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), true))), false || (! (bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), true)))))))) || false)), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) || false), bool(bvec4(_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) || false), true, true, false))))) || false)))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * abs(vec2(1.0, 1.0))).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
}
