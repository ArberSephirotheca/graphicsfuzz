#version 460
struct _GLF_struct_3 {
 mat2x3 _f0;
 mat2x4 _f1;
 vec4 _f2;
 mat2x4 _f3;
 uvec2 _f4;
 mat2 _f5;
 ivec4 _f6;
} ;

struct _GLF_struct_2 {
 mat4 _f0;
} ;

struct _GLF_struct_4 {
 _GLF_struct_2 _f0;
 mat3x4 _f1;
 _GLF_struct_3 _f2;
} ;

struct _GLF_struct_0 {
 int _f0;
 mat2x3 _f1;
 float _f2;
 ivec2 _f3;
 mat2 _f4;
} ;

struct _GLF_struct_1 {
 _GLF_struct_0 _f0;
} ;

struct _GLF_struct_5 {
 uint workgroup_size;
 _GLF_struct_1 _f0;
 mat2x4 _f1;
 mat2x4 _f2;
 _GLF_struct_4 _f3;
 mat3x4 _f4;
} ;

layout(set = 0, binding = 0) uniform buf0 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint gid = gl_GlobalInvocationID.x;
 uint num_workgroup = gl_NumWorkGroups.x;
 _GLF_struct_5 _GLF_struct_replacement_5 = _GLF_struct_5(gl_WorkGroupSize.x, _GLF_struct_1(_GLF_struct_0(1, mat2x3(1.0), 1.0, ivec2(1), mat2(1.0))), mat2x4(1.0), mat2x4(1.0), _GLF_struct_4(_GLF_struct_2(mat4(1.0)), mat3x4(1.0), _GLF_struct_3(mat2x3(1.0), mat2x4(1.0), vec4(1.0), mat2x4(1.0), uvec2(1u), mat2(1.0), ivec4(1))), mat3x4(1.0));
 uint total_threads = num_workgroup * _GLF_struct_replacement_5.workgroup_size;
 buf[gid] = 1;
 atomicStore(buf[(gid + 1) % total_threads], uint(2), 4, 64, 4);
}
