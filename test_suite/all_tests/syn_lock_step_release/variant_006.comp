#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 0) uniform buf0 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), false || (! (! (false))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(0.1))) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0), clamp(vec3(_GLF_IDENTITY(1.0, (1.0) / 1.0), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(_GLF_IDENTITY(-1.1, float(_GLF_IDENTITY(mat2(-1.1, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0), transpose(transpose(mat2(-1.1, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0)))))))), float(1.0), bool(true)))) / 1.0), 1.0), _GLF_IDENTITY(vec3(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), clamp((1.0), _GLF_IDENTITY((1.0), 1.0 * (_GLF_IDENTITY((1.0), ((1.0)) * 1.0))), (1.0))) / 1.0), 1.0, 1.0), clamp(vec3(_GLF_IDENTITY(1.0, (1.0) / 1.0), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(680.700) : 1.0)), 1.0), _GLF_IDENTITY(vec3(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0), (true ? _GLF_IDENTITY(_GLF_IDENTITY(vec3(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0), min(vec3(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0), vec3(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0))), _GLF_IDENTITY(mix(vec3(_GLF_FUZZED(-1.5), (_GLF_IDENTITY(vec3(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0), min(vec3(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0), vec3(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0))))[1], _GLF_FUZZED(4622.5397)), vec3((_GLF_IDENTITY(vec3(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0), min(vec3(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0), vec3(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0))))[0], _GLF_FUZZED(36.81), (_GLF_IDENTITY(vec3(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0), min(vec3(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0), vec3(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0))))[2]), bvec3(true, false, true)), min(mix(vec3(_GLF_FUZZED(-1.5), (_GLF_IDENTITY(vec3(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0), min(vec3(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0), vec3(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0))))[1], _GLF_FUZZED(4622.5397)), vec3((_GLF_IDENTITY(vec3(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0), min(vec3(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0), vec3(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0))))[0], _GLF_FUZZED(36.81), (_GLF_IDENTITY(vec3(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0), min(vec3(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0), vec3(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0))))[2]), bvec3(true, false, true)), mix(vec3(_GLF_FUZZED(-1.5), (_GLF_IDENTITY(vec3(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0), min(vec3(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0), vec3(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0))))[1], _GLF_FUZZED(4622.5397)), vec3((_GLF_IDENTITY(vec3(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0), min(vec3(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0), vec3(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0))))[0], _GLF_FUZZED(36.81), (_GLF_IDENTITY(vec3(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0), min(vec3(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0), vec3(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0))))[2]), bvec3(true, false, true))))) : _GLF_FUZZED(_GLF_IDENTITY(vec3(6.2, 2.8, 1.8).bgb, (vec3(6.2, 2.8, 1.8).bgb) * mat3(1.0))))), vec3(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0))), vec3(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0)))))) * (injectionSwitch), min(mat2(1.0) * (injectionSwitch), mat2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) * (injectionSwitch)))).y), _GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), false || (! (! ((injectionSwitch.x > injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
           if(_GLF_DEAD(false))
            return;
          }
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(true, true && (true)), false)))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), bool(bvec2((false), false)))))) && true)))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            return;
           return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
          return;
         return;
        }
       barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
          barrier();
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false)))))
            return;
           return;
          }
         if(_GLF_DEAD(false))
          barrier();
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         barrier();
        }
      }
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false, true))))))), (_GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false, true))))))), (true && (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false, true)))))))) || false)) && true))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)))), true && (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, _GLF_IDENTITY(true, ! (! (true)))))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) && true))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1]))), vec2(_GLF_FUZZED(4.9), _GLF_FUZZED(-76.40)), bvec2(false, false))))), injectionSwitch)).y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     return;
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false)), (bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false))) || false))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - tan(0.0))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), _GLF_IDENTITY(mat2(mat4x3(mat2(1.0))), _GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0)))) * (mat2(mat4x3(mat2(1.0)))))) * (injectionSwitch)).y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) / vec2(1.0, 1.0)))).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), (_GLF_IDENTITY(false, bool(bvec2(false, true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))))))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize)).x;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, ! (! (true))))), true && (bool(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, ! (! (true))))))))), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))))))))))), ((_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, ! (! (true))))), true && (bool(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, ! (! (true))))))))), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)))))))))))) || false)))), ! (! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)))), ! (! (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))))))))))))))))), false, false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), (dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))) * 1.0)), determinant(mat2(1.0, 1.0, 0.0, 1.0))))))))) || false, bool(bool((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), (dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))) * 1.0)), determinant(mat2(1.0, 1.0, 0.0, 1.0))))))))) || false)))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true), _GLF_IDENTITY((false) || false, ! (_GLF_IDENTITY(! ((false) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), bool(bvec2((false), true))) || false), ! (! (! ((false) || false))))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(! _GLF_IDENTITY(((false) || false), bool(bvec4(_GLF_IDENTITY(((false) || false), _GLF_IDENTITY(bool(bvec3(((false) || false), false, true)), ! (! (bool(bvec3(((false) || false), false, true)))))), true, true, false))), ! (! (! ((false) || false)))))), bool(bool(! (! (_GLF_IDENTITY(! ((false) || false), ! (! (! ((false) || false))))))))))))))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(distance(vec4(687.250, -25.92, -4963.1971, 1.7), vec4(-4.3, 98.79, -7.2, 3.0)))))))) || false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec4(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))), true, true, false)))))))) || false)))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(4.6)), float(injectionSwitch.y), bool(true)))))) && true)))))), true, false, false)))), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), false), bvec2(bvec4(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-1.7)), float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)), bool(true)))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) - 0.0)))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(false))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false))))))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, min(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, workgroup_base + subgroup_id * subgroup_size + subgroup_local_id));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(false, false, true))))))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)) * subgroup_size, ~ (~ (subgroup_id * subgroup_size))) + ((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true ? _GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(subgroup_id) : subgroup_local_id)) : _GLF_FUZZED(subgroup_size), uint(uvec2(true ? _GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(subgroup_id) : subgroup_local_id)) : _GLF_FUZZED(subgroup_size), 0u))), (_GLF_IDENTITY(true ? _GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(subgroup_id) : subgroup_local_id)) : _GLF_FUZZED(subgroup_size), uint(uvec2(true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(subgroup_id) : subgroup_local_id)), clamp(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(subgroup_id) : subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(subgroup_id) : subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(subgroup_id) : subgroup_local_id)))) : _GLF_FUZZED(subgroup_size), 0u)))) >> 0u)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY((true ? _GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(subgroup_id) : subgroup_local_id)) : _GLF_FUZZED(subgroup_size)), ((true ? _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, 0u | (subgroup_id))) : subgroup_local_id), min((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))) ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, 0u | _GLF_IDENTITY((subgroup_id), (_GLF_IDENTITY((subgroup_id), 0u | ((subgroup_id)))) << 0u))) : subgroup_local_id), (false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, 0u | (subgroup_id))) : subgroup_local_id)))) : _GLF_FUZZED(subgroup_size))) << 0u) : _GLF_FUZZED(workgroup_base)))) + 1) % subgroup_size);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, true && (false)), true, true)), ! (! (bool(bvec3(false, true, true))))))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), injectionSwitch)).y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
        barrier();
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), bvec3(bvec3(bvec3(_GLF_DEAD(false), false, true)))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true)), (bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true))) && true))))))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(5231.9727, -6.7)) : injectionSwitch)).x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[_GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-25976))), 0)), min(0, 0))], _GLF_FUZZED(-9.0)), vec2(_GLF_FUZZED(-4082.4466), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], _GLF_IDENTITY(((injectionSwitch))[1], _GLF_IDENTITY(_GLF_IDENTITY(float(mat4x3(((injectionSwitch))[1], 0.0, 1.0, cos(0.0), 1.0, cos(0.0), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)), clamp(float(mat4x3(((injectionSwitch))[1], 0.0, 1.0, cos(0.0), 1.0, cos(0.0), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(float(mat4x3(((injectionSwitch))[1], 0.0, 1.0, cos(0.0), 1.0, cos(0.0), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)), max(float(mat4x3(((injectionSwitch))[1], 0.0, 1.0, cos(0.0), 1.0, cos(0.0), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)), float(mat4x3(((injectionSwitch))[1], 0.0, 1.0, cos(0.0), 1.0, cos(0.0), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)))), float(mat4x3(((injectionSwitch))[1], 0.0, 1.0, cos(0.0), 1.0, cos(0.0), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)))), _GLF_IDENTITY((_GLF_IDENTITY(float(mat4x3(((injectionSwitch))[1], 0.0, 1.0, cos(0.0), 1.0, cos(0.0), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)), (true ? float(mat4x3(((injectionSwitch))[1], 0.0, 1.0, cos(0.0), 1.0, cos(0.0), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)) : _GLF_FUZZED(-125.281)))) / 1.0, ((_GLF_IDENTITY(float(mat4x3(((injectionSwitch))[1], 0.0, 1.0, cos(0.0), 1.0, cos(0.0), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)), (true ? float(mat4x3(((injectionSwitch))[1], 0.0, 1.0, cos(0.0), 1.0, cos(0.0), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)) : _GLF_FUZZED(-125.281)))) / 1.0) - sqrt(0.0))))), vec2(_GLF_FUZZED(float(true)), _GLF_FUZZED(655.431)), bvec2(_GLF_IDENTITY(false, true && (false)), false)))[1], clamp(_GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], _GLF_IDENTITY(((injectionSwitch))[1], _GLF_IDENTITY(_GLF_IDENTITY(float(mat4x3(((injectionSwitch))[1], 0.0, 1.0, cos(0.0), 1.0, cos(0.0), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)), clamp(float(mat4x3(((injectionSwitch))[1], 0.0, 1.0, cos(0.0), 1.0, cos(0.0), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(float(mat4x3(((injectionSwitch))[1], 0.0, 1.0, cos(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec3(0.0, determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 0.0)), max(_GLF_IDENTITY(float(vec3(0.0, determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 0.0)), mix(float(_GLF_FUZZED(-94.47)), float(float(vec3(0.0, determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 0.0))), bool(true))), float(vec3(0.0, determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 0.0)))))), 1.0, cos(0.0), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)), max(float(mat4x3(_GLF_IDENTITY(((injectionSwitch))[1], mix(float(((injectionSwitch))[1]), float(_GLF_FUZZED(-2.5)), bool(false))), 0.0, 1.0, cos(0.0), 1.0, cos(0.0), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)), float(mat4x3(((injectionSwitch))[1], 0.0, 1.0, cos(0.0), 1.0, cos(0.0), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)))), float(mat4x3(_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(unpackUnorm2x16(54351u)) : (injectionSwitch)))) + abs(vec2(0.0, 0.0))))[1], clamp((_GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(unpackUnorm2x16(54351u)) : (injectionSwitch)))) + abs(vec2(0.0, 0.0))))[1], (_GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(unpackUnorm2x16(54351u)) : (injectionSwitch)))) + abs(vec2(0.0, 0.0))))[1], (_GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(unpackUnorm2x16(54351u)) : (injectionSwitch)))) + abs(vec2(0.0, 0.0))))[1])), 0.0, 1.0, cos(0.0), 1.0, cos(0.0), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)))), (_GLF_IDENTITY(float(mat4x3(((injectionSwitch))[1], 0.0, 1.0, cos(0.0), 1.0, cos(0.0), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)), (true ? float(mat4x3(((injectionSwitch))[1], 0.0, 1.0, cos(0.0), 1.0, cos(0.0), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)) : _GLF_FUZZED(-125.281)))) / 1.0))), vec2(_GLF_FUZZED(float(true)), _GLF_FUZZED(655.431)), bvec2(_GLF_IDENTITY(false, true && (false)), false)))[1], _GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], _GLF_IDENTITY(((injectionSwitch))[1], _GLF_IDENTITY(_GLF_IDENTITY(float(mat4x3(((injectionSwitch))[1], 0.0, 1.0, cos(0.0), 1.0, cos(0.0), 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0)), clamp(float(mat4x3(((injectionSwitch))[1], 0.0, 1.0, cos(0.0), 1.0, cos(0.0), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(float(mat4x3(((injectionSwitch))[1], 0.0, 1.0, cos(0.0), 1.0, cos(0.0), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)), max(float(mat4x3(((injectionSwitch))[1], 0.0, 1.0, cos(0.0), 1.0, cos(0.0), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)), float(mat4x3(((injectionSwitch))[1], 0.0, 1.0, cos(0.0), 1.0, cos(0.0), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)))), float(mat4x3(((injectionSwitch))[1], 0.0, 1.0, cos(0.0), 1.0, cos(0.0), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)))), (_GLF_IDENTITY(float(mat4x3(((injectionSwitch))[1], 0.0, 1.0, cos(0.0), 1.0, cos(0.0), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)), (true ? float(mat4x3(((injectionSwitch))[1], 0.0, 1.0, cos(0.0), 1.0, cos(0.0), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)) : _GLF_FUZZED(-125.281)))) / 1.0))), vec2(_GLF_FUZZED(float(true)), _GLF_FUZZED(655.431)), bvec2(_GLF_IDENTITY(false, true && (false)), false)))[1], _GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], _GLF_IDENTITY(((injectionSwitch))[1], _GLF_IDENTITY(_GLF_IDENTITY(float(mat4x3(((injectionSwitch))[1], 0.0, 1.0, cos(0.0), 1.0, cos(0.0), 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-8617.6427)), float(0.0), bool(true))), 0.0, 1.0)), clamp(float(mat4x3(((injectionSwitch))[1], 0.0, 1.0, cos(0.0), 1.0, cos(0.0), 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), _GLF_IDENTITY(float(mat4x3(((injectionSwitch))[1], 0.0, 1.0, cos(0.0), 1.0, cos(0.0), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)), max(float(mat4x3(((injectionSwitch))[1], 0.0, 1.0, cos(0.0), 1.0, cos(0.0), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)), float(mat4x3(((injectionSwitch))[1], 0.0, 1.0, cos(0.0), 1.0, cos(0.0), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)))), float(mat4x3(_GLF_IDENTITY(((injectionSwitch))[1], mix(float(_GLF_FUZZED(9.5)), float(_GLF_IDENTITY(((injectionSwitch))[1], (false ? _GLF_FUZZED(71.39) : ((injectionSwitch))[1]))), bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), 0.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)), cos(0.0), 1.0, cos(0.0), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)))), (_GLF_IDENTITY(float(mat4x3(((injectionSwitch))[1], 0.0, 1.0, cos(0.0), 1.0, cos(0.0), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)), (true ? float(mat4x3(((injectionSwitch))[1], 0.0, 1.0, cos(0.0), 1.0, cos(0.0), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)) : _GLF_FUZZED(-125.281)))) / 1.0))), vec2(_GLF_FUZZED(float(true)), _GLF_FUZZED(655.431)), bvec2(_GLF_IDENTITY(false, true && (false)), false)))[1]))), bvec2(false, true))))).y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-4221.1975)), bool(false)))))))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (injectionSwitch.x < injectionSwitch.y)))))))))))
        return;
       barrier();
      }
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(mat3x4(mat2(1.0) * (injectionSwitch), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, length(vec2(0.0, 0.0)), exp(0.0))))).x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           barrier();
          }
         return;
        }
      }
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)) * 1.0) > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false)))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)) : _GLF_FUZZED(((mat4x2(-27.35, -1665.4661, -0.3, -687.630, 3123.1959, -8.2, 70.60, 7.9) + -841.030) * vec4(-151.812, 335.033, 86.49, 525.015))))).y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) || false)))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)) && true))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), _GLF_IDENTITY(true && (_GLF_DEAD(false)), false || (_GLF_IDENTITY(true && (_GLF_DEAD(false)), (_GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))), ! (! (true && (_GLF_DEAD(false)))))) && true)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false, true))))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (! (false)))), true && (! (false)))))))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec3(bool(bool(false)), true, true))))))
          return;
         return;
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 _GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid] = 1, (buf[virtual_gid] = 1) / 1u), (_GLF_IDENTITY(buf[virtual_gid] = 1, (false ? _GLF_FUZZED(_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))) : buf[virtual_gid] = 1))) + _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(2u), uint(2u))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(2u), uint(2u)), (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(2u), uint(2u)), (0u >> _GLF_IDENTITY(uint(2u), uint(2u))) | (0u >> _GLF_IDENTITY(uint(2u), uint(2u))))) | (0u >> _GLF_IDENTITY(uint(2u), uint(2u)))))), clamp(~ ((0u >> _GLF_IDENTITY(uint(2u), uint(2u)))), ~ ((0u >> _GLF_IDENTITY(uint(2u), uint(2u)))), ~ ((0u >> _GLF_IDENTITY(uint(2u), uint(2u)))))))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), bool(bvec2(bool(bvec2(false, true)), true))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false) ? injectionSwitch : _GLF_FUZZED(vec2(-52.22, -1148.4876)))), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), (true ? injectionSwitch : _GLF_FUZZED(vec2(-5.6, 4312.1836)))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(vec2(-5.6, 4312.1836))), (true ? (true ? injectionSwitch : _GLF_FUZZED(vec2(-5.6, 4312.1836))) : _GLF_FUZZED(atan(step(-5.9, vec2(-85.24, 39.31)), mat3x2(-4111.7907, -671.198, 5557.1084, 6488.9654, 2434.2281, 2731.6821)[2])))))) - vec2(0.0, 0.0)))))).x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false) ? injectionSwitch : _GLF_FUZZED(vec2(-52.22, -1148.4876)))), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), (true ? injectionSwitch : _GLF_FUZZED(vec2(-5.6, 4312.1836)))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(vec2(-5.6, 4312.1836))), (true ? (true ? injectionSwitch : _GLF_FUZZED(vec2(-5.6, 4312.1836))) : _GLF_FUZZED(atan(step(-5.9, vec2(-85.24, 39.31)), mat3x2(-4111.7907, -671.198, 5557.1084, 6488.9654, 2434.2281, 2731.6821)[2])))))) - vec2(0.0, 0.0)))))).x > injectionSwitch.y)))), true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(vec2(-52.22, -1148.4876)))), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(injectionSwitch), clamp(true ? injectionSwitch : _GLF_FUZZED(injectionSwitch), true ? injectionSwitch : _GLF_FUZZED(injectionSwitch), true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))), (true ? injectionSwitch : _GLF_FUZZED(vec2(-5.6, 4312.1836)))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), (true ? injectionSwitch : _GLF_FUZZED(vec2(-5.6, 4312.1836))))) - vec2(0.0, 0.0)))))).x > injectionSwitch.y), bool(bvec3((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(vec2(-52.22, -1148.4876)))), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true))), true, true, false))) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), (true ? injectionSwitch : _GLF_FUZZED(vec2(-5.6, 4312.1836)))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), (true ? injectionSwitch : _GLF_FUZZED(vec2(-5.6, 4312.1836))))) - vec2(0.0, 0.0)))))).x > injectionSwitch.y), false, true))))))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-573.687, 25.17)) : injectionSwitch)).y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), true), bvec2(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), true))))))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), true), bvec2(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), true))))))), (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), true), bvec2(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), true))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), true), bvec2(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), true)))))), bool(bvec4(bool(bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), true), bvec2(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), true)))))), false, false, true)))), ! (! (bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), true), bvec2(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, bool(bvec3(true, true, true))))))))), bool(bvec4(bool(bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), true), bvec2(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, ! (! (true))))))))), false, false, true))))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(_GLF_IDENTITY(vec2(-7.2, 33.02).y, max(vec2(-7.2, 33.02).y, vec2(-7.2, 33.02).y)))), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)), bool(true))) > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false)))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch)).y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch)).y)))))))), false || (false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch)).y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch)))).y)))))))))))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-266.100), _GLF_FUZZED(-964.840)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), tan(0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, sin(0.0), 1.0, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0))), mix(float(_GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0)))), float(_GLF_FUZZED(-75.20)), bool(false))))), mix(vec2((vec2(mat4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-266.100), _GLF_FUZZED(-964.840)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), tan(0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, sin(0.0), 1.0, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0))), mix(float(_GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0)))), float(_GLF_FUZZED(-75.20)), bool(false))))))[0], _GLF_FUZZED(6.9)), vec2(_GLF_FUZZED(39.75), (vec2(mat4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-266.100), _GLF_FUZZED(-964.840)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), tan(0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, sin(0.0), 1.0, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0))), mix(float(_GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0)))), float(_GLF_FUZZED(-75.20)), bool(false))))))[1]), bvec2(false, true)))).y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(true ? injectionSwitch.x : _GLF_FUZZED(88.71), _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? true ? injectionSwitch.x : _GLF_FUZZED(88.71) : _GLF_FUZZED(_GLF_IDENTITY(dot(vec4(-61.71, -0.8, 61.95, -2.4), vec4(-1.8, -7888.7166, -5.4, 0.5)), max(dot(vec4(-61.71, -0.8, 61.95, -2.4), vec4(-1.8, -7888.7166, -5.4, 0.5)), dot(vec4(-61.71, -0.8, 61.95, -2.4), vec4(-1.8, -7888.7166, -5.4, 0.5)))))), float(mat4x2((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? true ? injectionSwitch.x : _GLF_FUZZED(88.71) : _GLF_FUZZED(_GLF_IDENTITY(dot(vec4(-61.71, -0.8, 61.95, -2.4), vec4(-1.8, -7888.7166, -5.4, 0.5)), max(dot(vec4(-61.71, -0.8, 61.95, -2.4), vec4(-1.8, -7888.7166, -5.4, 0.5)), dot(vec4(-61.71, -0.8, 61.95, -2.4), vec4(-1.8, -7888.7166, -5.4, 0.5)))))), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0))))), float(vec4((_GLF_IDENTITY(true ? injectionSwitch.x : _GLF_FUZZED(88.71), _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? true ? injectionSwitch.x : _GLF_FUZZED(88.71) : _GLF_FUZZED(_GLF_IDENTITY(dot(vec4(-61.71, -0.8, 61.95, -2.4), vec4(-1.8, -7888.7166, -5.4, 0.5)), max(dot(vec4(-61.71, -0.8, 61.95, -2.4), vec4(-1.8, -7888.7166, -5.4, 0.5)), dot(vec4(-61.71, -0.8, 61.95, -2.4), vec4(-1.8, -7888.7166, -5.4, 0.5)))))), float(mat4x2((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? true ? injectionSwitch.x : _GLF_FUZZED(88.71) : _GLF_FUZZED(_GLF_IDENTITY(dot(vec4(-61.71, -0.8, 61.95, -2.4), vec4(-1.8, -7888.7166, -5.4, 0.5)), max(dot(vec4(-61.71, -0.8, 61.95, -2.4), vec4(-1.8, -7888.7166, -5.4, 0.5)), dot(vec4(-61.71, -0.8, 61.95, -2.4), vec4(-1.8, -7888.7166, -5.4, 0.5)))))), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0))))), 1.0, 0.0, 1.0)))) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, sin(0.0)))), _GLF_IDENTITY(float(float(_GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, sin(0.0)))))), mix(float(_GLF_IDENTITY(float(float(_GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, sin(0.0)))))), float(mat4x2(float(float(_GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, sin(0.0)))))), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0)))), float(_GLF_FUZZED(-4.6)), bool(false)))) : _GLF_FUZZED(-131.475)))))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false)))))), false || (false)), (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), (_GLF_FUZZED(injectionSwitch)) / vec2(1.0, 1.0)))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), (_GLF_FUZZED(injectionSwitch)) / vec2(1.0, 1.0)))).x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))), true))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec2(false, true)))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) || false))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))) || false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec3(_GLF_DEAD(false), true, false))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
}
