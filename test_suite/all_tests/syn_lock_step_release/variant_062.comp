#version 460
struct _GLF_struct_8 {
 uvec3 _f0;
 uvec2 _f1;
} ;

struct _GLF_struct_9 {
 _GLF_struct_8 _f0;
} ;

struct _GLF_struct_6 {
 mat2 _f0;
} ;

struct _GLF_struct_5 {
 ivec3 _f0;
 vec3 _f1;
 mat3x4 _f2;
} ;

struct _GLF_struct_4 {
 bvec2 _f0;
} ;

struct _GLF_struct_3 {
 mat2 _f0;
 mat3x4 _f1;
 mat4 _f2;
 vec3 _f3;
 uvec3 _f4;
 bvec4 _f5;
 ivec4 _f6;
} ;

struct _GLF_struct_2 {
 mat2 _f0;
 bvec3 _f1;
 vec2 _f2;
 vec4 _f3;
 uvec2 _f4;
 vec3 _f5;
 uvec2 _f6;
} ;

struct _GLF_struct_7 {
 _GLF_struct_2 _f0;
 uvec3 _f1;
 _GLF_struct_3 _f2;
 _GLF_struct_4 _f3;
 _GLF_struct_5 _f4;
 _GLF_struct_6 _f5;
 ivec4 _f6;
} ;

struct _GLF_struct_10 {
 _GLF_struct_7 _f0;
 uint subgroup_id;
 mat3x4 _f1;
 _GLF_struct_9 _f2;
} ;

struct _GLF_struct_1 {
 uvec2 _f0;
 ivec2 _f1;
 uint workgroup_size;
 vec3 _f2;
} ;

struct _GLF_struct_0 {
 mat2x3 _f0;
 uint subgroup_local_id;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 _GLF_struct_10 _GLF_struct_replacement_10 = _GLF_struct_10(_GLF_struct_7(_GLF_struct_2(mat2(1.0), bvec3(true), vec2(1.0), vec4(1.0), uvec2(1u), vec3(1.0), uvec2(1u)), uvec3(1u), _GLF_struct_3(mat2(1.0), mat3x4(1.0), mat4(1.0), vec3(1.0), uvec3(1u), bvec4(true), ivec4(1)), _GLF_struct_4(bvec2(true)), _GLF_struct_5(ivec3(1), vec3(1.0), mat3x4(1.0)), _GLF_struct_6(mat2(1.0)), ivec4(1)), gl_SubgroupID, mat3x4(1.0), _GLF_struct_9(_GLF_struct_8(uvec3(1u), uvec2(1u))));
 uint subgroup_size = gl_SubgroupSize;
 _GLF_struct_0 _GLF_struct_replacement_0 = _GLF_struct_0(mat2x3(1.0), gl_SubgroupInvocationID);
 uint num_workgroup = gl_NumWorkGroups.x;
 _GLF_struct_1 _GLF_struct_replacement_1 = _GLF_struct_1(uvec2(1u), ivec2(1), gl_WorkGroupSize.x, vec3(1.0));
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = _GLF_struct_replacement_1.workgroup_size * workgroup_id;
 uint virtual_gid = workgroup_base + _GLF_struct_replacement_10.subgroup_id * subgroup_size + _GLF_struct_replacement_0.subgroup_local_id;
 uint next_virtual_gid = workgroup_base + _GLF_struct_replacement_10.subgroup_id * subgroup_size + ((_GLF_struct_replacement_0.subgroup_local_id + 1) % subgroup_size);
 buf[virtual_gid] = 1;
 atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
}
