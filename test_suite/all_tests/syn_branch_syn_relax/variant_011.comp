#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec2 GLF_merged2_0_1_3_1_1_17gidsubgroup_local_id;
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint gid = gl_GlobalInvocationID.x;
 GLF_merged2_0_1_3_1_1_17gidsubgroup_local_id.x = gid;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 GLF_merged2_0_1_3_1_1_17gidsubgroup_local_id.y = subgroup_local_id;
 buf[GLF_merged2_0_1_3_1_1_17gidsubgroup_local_id.x] = 1;
 if(_GLF_IDENTITY(GLF_merged2_0_1_3_1_1_17gidsubgroup_local_id, max(GLF_merged2_0_1_3_1_1_17gidsubgroup_local_id, _GLF_IDENTITY(GLF_merged2_0_1_3_1_1_17gidsubgroup_local_id, (GLF_merged2_0_1_3_1_1_17gidsubgroup_local_id) | (GLF_merged2_0_1_3_1_1_17gidsubgroup_local_id)))).y + 1 < subgroup_size)
  {
   atomicStore(buf[GLF_merged2_0_1_3_1_1_17gidsubgroup_local_id.x + 1], uint(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, clamp(_GLF_IDENTITY(2, 1 * (_GLF_IDENTITY(2, _GLF_IDENTITY(int(ivec2(2, 0)), (int(ivec2(2, 0))) >> 0)))), 2, 2))) >> 0)), 4, 64, 0);
  }
 else
  {
   atomicStore(buf[(GLF_merged2_0_1_3_1_1_17gidsubgroup_local_id.x + _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, min(1, 1)), 1, 1))) % subgroup_size], uint(_GLF_IDENTITY(2, int(ivec3(_GLF_IDENTITY(2, int(ivec4(_GLF_IDENTITY(2, 0 ^ (2)), 0, 1, 1))), 1, 1)))), 4, 64, 0);
  }
}
