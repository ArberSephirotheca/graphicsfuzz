#version 430

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y))) && true)))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), false || _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-624.247, 8.1)))).x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-624.247, 8.1)))).x, clamp(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-624.247, 8.1)))).x, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-624.247, 8.1)))).x, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-624.247, 8.1)))).x))) * 1.0), clamp(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), 0.0, log(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))), (false ? _GLF_FUZZED(vec4(-81.05, -8.4, 635.801, -392.344)) : vec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 0.0, _GLF_IDENTITY(log(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)))), max(log(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)))), _GLF_IDENTITY(log(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)))), min(log(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)))), log(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))))))))))).x)) > injectionSwitch.y)))), ((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-624.247, 8.1)))).x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-624.247, 8.1)))).x, clamp(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-624.247, 8.1)))).x, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-624.247, 8.1)))).x, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-624.247, 8.1)))).x))) * 1.0), clamp(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), 0.0, log(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))), (false ? _GLF_FUZZED(vec4(-81.05, -8.4, 635.801, -392.344)) : vec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 0.0, _GLF_IDENTITY(log(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)))), max(log(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)))), _GLF_IDENTITY(log(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)))), min(log(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)))), log(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))))))))))).x)) > injectionSwitch.y))))) || false)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).y))))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) << uvec3(0u, 0u, 0u)).x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]))[0], _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[1], (gl_WorkGroupSize[1]) | (gl_WorkGroupSize[1])), min(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[1], (gl_WorkGroupSize[1]) | (gl_WorkGroupSize[1])), 0u ^ (_GLF_IDENTITY(gl_WorkGroupSize[1], (gl_WorkGroupSize[1]) | (gl_WorkGroupSize[1])))), _GLF_IDENTITY(gl_WorkGroupSize[1], (gl_WorkGroupSize[1]) | (gl_WorkGroupSize[1])))), gl_WorkGroupSize[2]), clamp(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]))[0], _GLF_IDENTITY(gl_WorkGroupSize[1], (gl_WorkGroupSize[1]) + 0u), _GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize))[2]), uvec3(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_WorkGroupSize[0], 0u ^ (_GLF_IDENTITY(gl_WorkGroupSize[0], (_GLF_IDENTITY(gl_WorkGroupSize[0], min(gl_WorkGroupSize[0], gl_WorkGroupSize[0]))) ^ ((0u | 0u) | 0u)))), gl_WorkGroupSize[1], gl_WorkGroupSize[2]), clamp(uvec3(_GLF_IDENTITY(gl_WorkGroupSize[0], 0u ^ (_GLF_IDENTITY(gl_WorkGroupSize[0], (_GLF_IDENTITY(gl_WorkGroupSize[0], min(gl_WorkGroupSize[0], gl_WorkGroupSize[0]))) ^ ((0u | 0u) | 0u)))), gl_WorkGroupSize[1], gl_WorkGroupSize[2]), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_WorkGroupSize[0], 0u ^ (_GLF_IDENTITY(gl_WorkGroupSize[0], (_GLF_IDENTITY(gl_WorkGroupSize[0], min(gl_WorkGroupSize[0], gl_WorkGroupSize[0]))) ^ ((0u | 0u) | 0u)))), gl_WorkGroupSize[1], gl_WorkGroupSize[2]), ~ (~ (uvec3(_GLF_IDENTITY(gl_WorkGroupSize[0], 0u ^ (_GLF_IDENTITY(gl_WorkGroupSize[0], (_GLF_IDENTITY(gl_WorkGroupSize[0], min(gl_WorkGroupSize[0], gl_WorkGroupSize[0]))) ^ ((0u | 0u) | 0u)))), gl_WorkGroupSize[1], gl_WorkGroupSize[2])))), uvec3(_GLF_IDENTITY(gl_WorkGroupSize[0], 0u ^ (_GLF_IDENTITY(gl_WorkGroupSize[0], (_GLF_IDENTITY(gl_WorkGroupSize[0], min(gl_WorkGroupSize[0], gl_WorkGroupSize[0]))) ^ ((0u | 0u) | 0u)))), gl_WorkGroupSize[1], gl_WorkGroupSize[2]))))[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, max(2, 2))]), uvec3(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[_GLF_IDENTITY(1, min(1, 1))], (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(gl_WorkGroupSize[1], min(_GLF_IDENTITY(gl_WorkGroupSize[1], (_GLF_IDENTITY(gl_WorkGroupSize[1], clamp(gl_WorkGroupSize[1], gl_WorkGroupSize[1], gl_WorkGroupSize[1]))) / 1u), gl_WorkGroupSize[1])) : _GLF_FUZZED(num_workgroup))), _GLF_IDENTITY(gl_WorkGroupSize[2], _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), uvec3(_GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, (1u) * (1u & 1u)))), 1u, 1u) * (~ (gl_WorkGroupSize)))))[2], (1u | 0u))), max(uint(uvec2(gl_WorkGroupSize[2], (1u | 0u))), uint(uvec2(gl_WorkGroupSize[2], (_GLF_IDENTITY(_GLF_IDENTITY(1u | 0u, min(1u | 0u, 1u | 0u)), (_GLF_IDENTITY(1u | 0u, min(1u | 0u, 1u | 0u))) - 0u)))))), 0u | _GLF_IDENTITY((_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_WorkGroupSize), (false ? _GLF_FUZZED(uvec3(155599u, 62962u, 172741u)) : ~ (gl_WorkGroupSize))), uvec3(1u, 1u, 1u) * (~ (gl_WorkGroupSize)))))[2], (1u | 0u))), max(uint(uvec2(gl_WorkGroupSize[2], (1u | 0u))), uint(uvec2(gl_WorkGroupSize[2], (_GLF_IDENTITY(1u | 0u, min(1u | 0u, 1u | 0u)))))))), (true ? (_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_WorkGroupSize), (false ? _GLF_FUZZED(uvec3(155599u, 62962u, 172741u)) : ~ (gl_WorkGroupSize))), uvec3(1u, 1u, 1u) * (~ (gl_WorkGroupSize)))))[2], (1u | 0u))), max(uint(uvec2(gl_WorkGroupSize[2], (1u | 0u))), uint(uvec2(gl_WorkGroupSize[2], (_GLF_IDENTITY(1u | 0u, min(1u | 0u, 1u | 0u)))))))) : _GLF_FUZZED(uvec2(91832u, 69137u).t)))))), ~ (~ _GLF_IDENTITY(_GLF_IDENTITY((uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize)))[1], _GLF_IDENTITY(gl_WorkGroupSize[2], _GLF_IDENTITY(uint(uvec2(gl_WorkGroupSize[2], (1u | 0u))), max(uint(uvec2(gl_WorkGroupSize[2], (_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(uvec2(125159u, 66693u).s))) | 0u))), uint(uvec2(gl_WorkGroupSize[2], (1u | 0u)))))))), (_GLF_IDENTITY((uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize)))[1], _GLF_IDENTITY(gl_WorkGroupSize[2], _GLF_IDENTITY(uint(uvec2(gl_WorkGroupSize[2], (1u | 0u))), max(uint(uvec2(gl_WorkGroupSize[2], (1u | 0u))), uint(uvec2(gl_WorkGroupSize[2], (1u | 0u)))))))), min(_GLF_IDENTITY((uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize)))[1], _GLF_IDENTITY(gl_WorkGroupSize[2], _GLF_IDENTITY(uint(uvec2(gl_WorkGroupSize[2], (1u | 0u))), max(uint(uvec2(gl_WorkGroupSize[2], (1u | _GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, min(0u, 0u))))))), uint(uvec2(gl_WorkGroupSize[2], (1u | 0u)))))))), ((uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize)))[1], _GLF_IDENTITY(gl_WorkGroupSize[2], _GLF_IDENTITY(uint(uvec2(gl_WorkGroupSize[2], (1u | 0u))), max(uint(uvec2(gl_WorkGroupSize[2], (_GLF_IDENTITY(1u, 0u ^ (_GLF_IDENTITY(1u, 0u | (1u)))) | 0u))), uint(uvec2(gl_WorkGroupSize[2], _GLF_IDENTITY((1u | 0u), ((1u | 0u)) * 1u))))))))) | uvec3(0u, 0u, 0u)), (uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize)))[1], _GLF_IDENTITY(gl_WorkGroupSize[2], _GLF_IDENTITY(uint(uvec2(gl_WorkGroupSize[2], (1u | 0u))), max(uint(uvec2(gl_WorkGroupSize[2], (1u | 0u))), uint(uvec2(gl_WorkGroupSize[2], (1u | 0u))))))))))) + uvec3(0u, 0u, 0u)), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(_GLF_IDENTITY((uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize)))[1], _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[2]) | (gl_WorkGroupSize[2])), _GLF_IDENTITY(uint(uvec2(gl_WorkGroupSize[2], (1u | 0u))), max(uint(uvec2(gl_WorkGroupSize[2], (1u | 0u))), uint(uvec2(gl_WorkGroupSize[2], (1u | 0u)))))))), (_GLF_IDENTITY((uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]))[0], min(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]))[0], _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]))[0])), _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize)))[1], _GLF_IDENTITY(gl_WorkGroupSize[2], _GLF_IDENTITY(uint(uvec2(gl_WorkGroupSize[2], (1u | 0u))), max(uint(uvec2(gl_WorkGroupSize[2], (1u | 0u))), uint(uvec2(gl_WorkGroupSize[2], (1u | _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec4(0u, 1u, (0u >> _GLF_IDENTITY(uint(4u), uint(4u))), ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))))), min(uint(uvec4(0u, 1u, (0u >> _GLF_IDENTITY(uint(4u), uint(4u))), ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))))), uint(uvec4(0u, 1u, (0u >> _GLF_IDENTITY(uint(4u), uint(4u))), ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u)))))))))))))))), min(_GLF_IDENTITY((uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize)))[1], _GLF_IDENTITY(gl_WorkGroupSize[2], _GLF_IDENTITY(uint(uvec2(gl_WorkGroupSize[2], (1u | 0u))), max(uint(uvec2(gl_WorkGroupSize[2], (1u | 0u))), uint(uvec2(gl_WorkGroupSize[2], (1u | 0u)))))))), ((uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize)))[1], _GLF_IDENTITY(gl_WorkGroupSize[2], _GLF_IDENTITY(uint(uvec2(gl_WorkGroupSize[2], (1u | 0u))), max(uint(uvec2(gl_WorkGroupSize[2], (1u | 0u))), uint(uvec2(gl_WorkGroupSize[2], (1u | 0u))))))))) | uvec3(0u, 0u, 0u)), (uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize)))[1], _GLF_IDENTITY(gl_WorkGroupSize[2], _GLF_IDENTITY(uint(uvec2(gl_WorkGroupSize[2], (_GLF_IDENTITY(1u, 0u ^ (1u)) | 0u))), max(uint(uvec2(gl_WorkGroupSize[2], (1u | 0u))), uint(uvec2(gl_WorkGroupSize[2], (1u | 0u))))))))))) + uvec3(_GLF_IDENTITY(0u, (0u) * uint(_GLF_ONE(1.0, injectionSwitch.y))), 0u, 0u)), max(_GLF_IDENTITY(_GLF_IDENTITY((uvec3(_GLF_IDENTITY(gl_WorkGroupSize[0], (gl_WorkGroupSize[0]) | (gl_WorkGroupSize[0])), _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize)))[1], _GLF_IDENTITY(gl_WorkGroupSize[2], _GLF_IDENTITY(uint(uvec2(gl_WorkGroupSize[2], (1u | 0u))), max(uint(uvec2(gl_WorkGroupSize[2], (1u | 0u))), uint(uvec2(gl_WorkGroupSize[2], (1u | 0u)))))))), (_GLF_IDENTITY((uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize)))[1], _GLF_IDENTITY(gl_WorkGroupSize[2], _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec2(gl_WorkGroupSize[2], (1u | 0u))), max(uint(uvec2(gl_WorkGroupSize[2], (1u | 0u))), uint(uvec2(gl_WorkGroupSize[2], (1u | 0u))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(uvec2(gl_WorkGroupSize[2], (1u | 0u))), max(uint(uvec2(gl_WorkGroupSize[2], (1u | 0u))), uint(uvec2(gl_WorkGroupSize[2], (1u | 0u)))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (~ (_GLF_IDENTITY(uint(uvec2(gl_WorkGroupSize[2], (1u | 0u))), max(uint(uvec2(gl_WorkGroupSize[2], (1u | 0u))), uint(uvec2(gl_WorkGroupSize[2], (1u | 0u))))))))))))), min(_GLF_IDENTITY(_GLF_IDENTITY((uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize)))[1], _GLF_IDENTITY(gl_WorkGroupSize[2], _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]))[2], (1u | 0u))), max(uint(uvec2(gl_WorkGroupSize[2], (1u | 0u))), uint(uvec2(gl_WorkGroupSize[2], (1u | 0u)))))))), ((uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize)))[1], _GLF_IDENTITY(gl_WorkGroupSize[2], _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]))[2], (1u | 0u))), max(uint(uvec2(gl_WorkGroupSize[2], (1u | 0u))), uint(uvec2(gl_WorkGroupSize[2], (1u | 0u))))))))) >> uvec3(0u, 0u, 0u)), ((uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize)))[1], _GLF_IDENTITY(gl_WorkGroupSize[2], _GLF_IDENTITY(uint(uvec2(gl_WorkGroupSize[2], (1u | 0u))), max(uint(uvec2(gl_WorkGroupSize[2], (1u | 0u))), uint(uvec2(gl_WorkGroupSize[2], (1u | 0u))))))))) | uvec3(0u, 0u, 0u)), (uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(uvec3(gl_WorkGroupSize)), (uvec3(uvec3(gl_WorkGroupSize))) / uvec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))[1], _GLF_IDENTITY(gl_WorkGroupSize[2], _GLF_IDENTITY(uint(uvec2(gl_WorkGroupSize[2], (1u | 0u))), max(uint(uvec2(gl_WorkGroupSize[2], (1u | 0u))), uint(uvec2(gl_WorkGroupSize[2], (1u | 0u))))))))))) + uvec3(0u, 0u, 0u)), (_GLF_IDENTITY((uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize)))[1], _GLF_IDENTITY(gl_WorkGroupSize[2], _GLF_IDENTITY(uint(uvec2(gl_WorkGroupSize[2], (1u | 0u))), max(uint(uvec2(gl_WorkGroupSize[2], (_GLF_IDENTITY(1u, min(1u, 1u)) | 0u))), uint(uvec2(gl_WorkGroupSize[2], (1u | 0u)))))))), (_GLF_IDENTITY((uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize)))[1], _GLF_IDENTITY(gl_WorkGroupSize[2], _GLF_IDENTITY(uint(uvec2(gl_WorkGroupSize[2], (1u | 0u))), max(uint(uvec2(gl_WorkGroupSize[2], (1u | 0u))), uint(uvec2(gl_WorkGroupSize[2], (1u | 0u)))))))), min(_GLF_IDENTITY((uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize)))[1], _GLF_IDENTITY(gl_WorkGroupSize[_GLF_IDENTITY(2, (false ? _GLF_FUZZED(-24274) : 2))], _GLF_IDENTITY(uint(uvec2(gl_WorkGroupSize[2], (1u | _GLF_IDENTITY(0u, min(0u, 0u))))), max(uint(uvec2(gl_WorkGroupSize[2], (1u | 0u))), uint(uvec2(gl_WorkGroupSize[2], (1u | 0u)))))))), (_GLF_IDENTITY((uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize)))[1], _GLF_IDENTITY(gl_WorkGroupSize[2], _GLF_IDENTITY(uint(uvec2(gl_WorkGroupSize[2], (1u | 0u))), max(uint(uvec2(gl_WorkGroupSize[2], (1u | 0u))), uint(uvec2(gl_WorkGroupSize[2], (1u | 0u)))))))), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY((uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize)))[1], _GLF_IDENTITY(gl_WorkGroupSize[2], _GLF_IDENTITY(uint(uvec2(gl_WorkGroupSize[2], (1u | 0u))), max(uint(uvec2(gl_WorkGroupSize[2], (1u | 0u))), uint(uvec2(gl_WorkGroupSize[2], (1u | 0u)))))))), (true ? (uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize)))[1], _GLF_IDENTITY(gl_WorkGroupSize[2], _GLF_IDENTITY(uint(uvec2(gl_WorkGroupSize[2], (1u | 0u))), max(uint(uvec2(gl_WorkGroupSize[2], (1u | 0u))), uint(uvec2(gl_WorkGroupSize[2], (1u | 0u)))))))) : _GLF_FUZZED(uvec3(29581u, 157624u, 48090u))))))) | uvec3(0u, 0u, 0u)), (uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize)))[1], _GLF_IDENTITY(gl_WorkGroupSize[2], _GLF_IDENTITY(uint(uvec2(gl_WorkGroupSize[2], _GLF_IDENTITY((1u | 0u), ((1u | 0u)) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))))), max(uint(uvec2(gl_WorkGroupSize[2], (1u | 0u))), uint(uvec2(gl_WorkGroupSize[2], _GLF_IDENTITY((1u | 0u), ~ (_GLF_IDENTITY(~ ((1u | 0u)), (~ ((1u | 0u))) >> 0u))))))))))))) + uvec3(0u, 0u, 0u))) | _GLF_IDENTITY((_GLF_IDENTITY((uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize)))[1], _GLF_IDENTITY(gl_WorkGroupSize[_GLF_IDENTITY(2, (2) | (_GLF_IDENTITY(2, int(_GLF_ONE(1.0, injectionSwitch.y)) * (2))))], _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec2(gl_WorkGroupSize[2], (1u | 0u))), max(uint(uvec2(gl_WorkGroupSize[2], (1u | 0u))), uint(uvec2(gl_WorkGroupSize[2], (1u | 0u))))), (_GLF_IDENTITY(uint(uvec2(gl_WorkGroupSize[2], (1u | 0u))), max(uint(uvec2(gl_WorkGroupSize[2], (1u | 0u))), uint(uvec2(gl_WorkGroupSize[2], (1u | 0u)))))) | (_GLF_IDENTITY(uint(uvec2(gl_WorkGroupSize[2], (1u | 0u))), max(uint(uvec2(gl_WorkGroupSize[2], (1u | 0u))), uint(uvec2(gl_WorkGroupSize[2], (1u | 0u)))))))))), (_GLF_IDENTITY((uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize)))[1], _GLF_IDENTITY(gl_WorkGroupSize[2], _GLF_IDENTITY(uint(uvec2(gl_WorkGroupSize[2], (1u | 0u))), max(uint(uvec2(gl_WorkGroupSize[2], (1u | 0u))), uint(uvec2(gl_WorkGroupSize[2], (1u | 0u)))))))), min(_GLF_IDENTITY((uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize)))[1], _GLF_IDENTITY(gl_WorkGroupSize[2], _GLF_IDENTITY(uint(uvec2(gl_WorkGroupSize[2], (1u | 0u))), max(uint(uvec2(gl_WorkGroupSize[2], (1u | 0u))), uint(uvec2(gl_WorkGroupSize[2], (1u | 0u)))))))), ((uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize)))[1], _GLF_IDENTITY(gl_WorkGroupSize[2], _GLF_IDENTITY(uint(uvec2(gl_WorkGroupSize[_GLF_IDENTITY(2, (false ? _GLF_FUZZED(-74244) : _GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) / 1)) | (2))))], (1u | 0u))), max(uint(uvec2(gl_WorkGroupSize[2], (_GLF_IDENTITY(1u, 0u ^ (1u)) | 0u))), uint(uvec2(gl_WorkGroupSize[2], (1u | 0u))))))))) | uvec3(0u, 0u, 0u)), (uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, int(ivec4(0, 1, int(_GLF_ZERO(0.0, injectionSwitch.x)), 1))))))], _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize)))[1], _GLF_IDENTITY(gl_WorkGroupSize[2], _GLF_IDENTITY(uint(uvec2(gl_WorkGroupSize[2], (1u | 0u))), max(uint(_GLF_IDENTITY(uvec2(gl_WorkGroupSize[2], (1u | _GLF_IDENTITY(0u, (0u) - 0u))), min(uvec2(gl_WorkGroupSize[2], (1u | _GLF_IDENTITY(0u, (0u) - 0u))), uvec2(gl_WorkGroupSize[2], (1u | _GLF_IDENTITY(0u, (0u) - 0u)))))), uint(uvec2(gl_WorkGroupSize[2], (1u | 0u))))))))))) + uvec3(_GLF_IDENTITY(0u, 1u * (_GLF_IDENTITY(0u, (0u) / 1u))), 0u, 0u))), uvec3(uvec4((_GLF_IDENTITY((uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize)))[1], _GLF_IDENTITY(gl_WorkGroupSize[_GLF_IDENTITY(2, (2) | (_GLF_IDENTITY(2, int(_GLF_ONE(1.0, injectionSwitch.y)) * (2))))], _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec2(gl_WorkGroupSize[2], (1u | 0u))), max(uint(uvec2(gl_WorkGroupSize[2], (1u | 0u))), uint(uvec2(gl_WorkGroupSize[2], (1u | 0u))))), (_GLF_IDENTITY(uint(uvec2(gl_WorkGroupSize[2], (1u | 0u))), max(uint(uvec2(gl_WorkGroupSize[2], (1u | 0u))), uint(uvec2(gl_WorkGroupSize[2], (1u | 0u)))))) | (_GLF_IDENTITY(uint(uvec2(gl_WorkGroupSize[2], (1u | 0u))), max(uint(uvec2(gl_WorkGroupSize[2], (1u | 0u))), uint(uvec2(gl_WorkGroupSize[2], (1u | 0u)))))))))), (_GLF_IDENTITY((uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize)))[1], _GLF_IDENTITY(gl_WorkGroupSize[2], _GLF_IDENTITY(uint(uvec2(gl_WorkGroupSize[2], (1u | 0u))), max(uint(uvec2(gl_WorkGroupSize[2], (1u | 0u))), uint(uvec2(gl_WorkGroupSize[2], (1u | 0u)))))))), min(_GLF_IDENTITY((uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize)))[1], _GLF_IDENTITY(gl_WorkGroupSize[2], _GLF_IDENTITY(uint(uvec2(gl_WorkGroupSize[2], (1u | 0u))), max(uint(uvec2(gl_WorkGroupSize[2], (1u | 0u))), uint(uvec2(gl_WorkGroupSize[2], (1u | 0u)))))))), ((uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize)))[1], _GLF_IDENTITY(gl_WorkGroupSize[2], _GLF_IDENTITY(uint(uvec2(gl_WorkGroupSize[_GLF_IDENTITY(2, (false ? _GLF_FUZZED(-74244) : _GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) / 1)) | (2))))], (1u | 0u))), max(uint(uvec2(gl_WorkGroupSize[2], (_GLF_IDENTITY(1u, 0u ^ (1u)) | 0u))), uint(uvec2(gl_WorkGroupSize[2], (1u | 0u))))))))) | uvec3(0u, 0u, 0u)), (uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, int(ivec4(0, 1, int(_GLF_ZERO(0.0, injectionSwitch.x)), 1))))))], _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize)))[1], _GLF_IDENTITY(gl_WorkGroupSize[2], _GLF_IDENTITY(uint(uvec2(gl_WorkGroupSize[2], (1u | 0u))), max(uint(_GLF_IDENTITY(uvec2(gl_WorkGroupSize[2], (1u | _GLF_IDENTITY(0u, (0u) - 0u))), min(uvec2(gl_WorkGroupSize[2], (1u | _GLF_IDENTITY(0u, (0u) - 0u))), uvec2(gl_WorkGroupSize[2], (1u | _GLF_IDENTITY(0u, (0u) - 0u)))))), uint(uvec2(gl_WorkGroupSize[2], (1u | 0u))))))))))) + uvec3(_GLF_IDENTITY(0u, 1u * (_GLF_IDENTITY(0u, (0u) / 1u))), 0u, 0u))), 1u)))), _GLF_IDENTITY((uvec3(_GLF_IDENTITY(gl_WorkGroupSize[0], 0u | (gl_WorkGroupSize[0])), _GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(uvec3(gl_WorkGroupSize), (_GLF_IDENTITY(uvec3(gl_WorkGroupSize), (false ? _GLF_FUZZED(uvec3(89967u, 39578u, 137232u)) : _GLF_IDENTITY(uvec3(gl_WorkGroupSize), (uvec3(gl_WorkGroupSize)) - uvec3(0u, 0u, 0u))))) << uvec3(0u, 0u, 0u))))[1], _GLF_IDENTITY(gl_WorkGroupSize[2], _GLF_IDENTITY(uint(uvec2(gl_WorkGroupSize[2], (1u | 0u))), _GLF_IDENTITY(max(uint(uvec2(gl_WorkGroupSize[2], (1u | 0u))), uint(uvec2(gl_WorkGroupSize[2], (1u | 0u)))), ~ (~ (_GLF_IDENTITY(max(uint(uvec2(gl_WorkGroupSize[2], (1u | 0u))), uint(uvec2(gl_WorkGroupSize[2], (1u | 0u)))), 0u ^ (max(uint(uvec2(gl_WorkGroupSize[2], (1u | 0u))), uint(uvec2(gl_WorkGroupSize[2], (1u | 0u))))))))))))), (_GLF_IDENTITY((uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize)))[1], _GLF_IDENTITY(gl_WorkGroupSize[2], _GLF_IDENTITY(uint(uvec2(gl_WorkGroupSize[2], (1u | 0u))), max(uint(uvec2(gl_WorkGroupSize[2], (1u | 0u))), uint(uvec2(gl_WorkGroupSize[2], (1u | 0u)))))))), min(_GLF_IDENTITY((uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize)))[1], _GLF_IDENTITY(gl_WorkGroupSize[2], _GLF_IDENTITY(uint(uvec2(gl_WorkGroupSize[2], (1u | 0u))), max(uint(uvec2(_GLF_IDENTITY(gl_WorkGroupSize[2], clamp(gl_WorkGroupSize[2], gl_WorkGroupSize[2], gl_WorkGroupSize[2])), (1u | 0u))), uint(uvec2(gl_WorkGroupSize[2], (1u | 0u)))))))), ((uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize)))[1], _GLF_IDENTITY(gl_WorkGroupSize[2], _GLF_IDENTITY(uint(uvec2(gl_WorkGroupSize[2], (1u | 0u))), max(uint(uvec2(gl_WorkGroupSize[2], (1u | 0u))), uint(uvec2(gl_WorkGroupSize[2], (1u | 0u))))))))) | uvec3(0u, 0u, 0u)), (uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize)))[1], _GLF_IDENTITY(gl_WorkGroupSize[2], _GLF_IDENTITY(uint(uvec2(gl_WorkGroupSize[2], (1u | 0u))), max(uint(uvec2(gl_WorkGroupSize[2], (1u | 0u))), uint(uvec2(gl_WorkGroupSize[2], (1u | 0u))))))))))) + uvec3(0u, 0u, 0u)))))))))[0], _GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) | (gl_WorkGroupSize))[1], gl_WorkGroupSize[2])))).x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, clamp(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (true ? workgroup_base + subgroup_id * subgroup_size : _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, (workgroup_size) ^ (0u << _GLF_IDENTITY(uint(2u), uint(2u))))))), _GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, uint(uvec2(workgroup_base, 0u)))) - (0u & 126381u)) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 1u * (subgroup_id)), (true ? subgroup_id : _GLF_FUZZED(9711u))) * subgroup_size, _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((false ? _GLF_FUZZED(workgroup_base) : workgroup_base), ((false ? _GLF_FUZZED(workgroup_base) : workgroup_base)) >> 0u)) + subgroup_id * subgroup_size)), 0u | _GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), ((workgroup_base + subgroup_id * subgroup_size)) | 0u)) + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), true, false))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + tan(0.0)) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, (false) || false), false)), bool(bvec2(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (_GLF_IDENTITY(false, (false) || false)))), false)), false)))), (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(7551.7831) : injectionSwitch.x)) > injectionSwitch.y))))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)) * subgroup_size, uint(uvec2(subgroup_id * subgroup_size, 0u))), _GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, subgroup_id * subgroup_size)))), ~ (~ (workgroup_base + subgroup_id * subgroup_size))) + ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec4(subgroup_size, 0u, _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) - 0u), 0u)), 1u)), ~ (~ (uint(uvec4(subgroup_size, 0u, 0u, 1u)))))));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))), true && (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)) && true))), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), bool(bvec4(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), false, true, false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), bool(bvec4(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), false, true, false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), bool(bvec4(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), false, true, false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), bool(bvec4(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), false, true, false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), bool(bvec4(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), false, true, false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), bool(bvec4(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), false, true, false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))) || false)))))), ! _GLF_IDENTITY((! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))) || false)))), true && ((! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))) || false)))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 buf[virtual_gid] = 1;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(86958) : 1))) - 0), ~ (~ _GLF_IDENTITY((1), clamp((1), _GLF_IDENTITY((1), (true ? (1) : _GLF_FUZZED(92874))), (1))))) < subgroup_size)
  {
   int i = 0;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) >> 0u)], uint(_GLF_IDENTITY(2, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(i) : 2), (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(i) : 2), ~ (~ ((_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(i) : 2))))) << 0), max((false ? _GLF_FUZZED(i) : 2), (false ? _GLF_FUZZED(i) : 2))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(i) : 2, int(int(false ? _GLF_FUZZED(i) : 2)))), max((false ? _GLF_FUZZED(_GLF_IDENTITY(i, (i) - int(_GLF_ZERO(0.0, injectionSwitch.x)))) : 2), (false ? _GLF_FUZZED(i) : 2))), ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(0), int(0)), (false ? _GLF_FUZZED(-95299) : 1 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) | 0))))) >> _GLF_IDENTITY(int(0), int(0))) * (_GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(i) : 2), max((false ? _GLF_FUZZED(i) : 2), (false ? _GLF_FUZZED(i) : 2))), (_GLF_IDENTITY((false ? _GLF_FUZZED(i) : 2), max((false ? _GLF_FUZZED(i) : 2), (false ? _GLF_FUZZED(i) : 2)))) << 0)))) / (0 | 1)))), 4, 64, 0);
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), bool(bool(_GLF_DEAD(false)))), true, true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))) && true)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), bool(bool(_GLF_DEAD(false)))), true, true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))) && true)))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), bool(bool(_GLF_DEAD(false)))), true, true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))) && true)))), true, false))), false), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), bool(bool(_GLF_DEAD(false)))), true, true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))) && true)))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), bool(bool(_GLF_DEAD(false)))), true, true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))) && true)))), true, false))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), bool(bool(_GLF_DEAD(false)))), true, true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))) && true)))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), bool(bool(_GLF_DEAD(false)))), true, true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))) && true)))), true, false))), false), false, false))), false)), bvec2(bvec2(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), bool(bool(_GLF_DEAD(false)))), true, true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))) && true)))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), bool(bool(_GLF_DEAD(false)))), true, true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))) && true)))), true, false))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), bool(bool(_GLF_DEAD(false)))), true, true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))) && true)))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), bool(bool(_GLF_DEAD(false)))), true, true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))) && true)))), true, false))), false), false, false))), false))))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), bool(bool(_GLF_DEAD(false)))), true, true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))) && true)))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), bool(bool(_GLF_DEAD(false)))), true, true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))) && true)))), true, false))), false), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), bool(bool(_GLF_DEAD(false)))), true, true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))) && true)))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), bool(bool(_GLF_DEAD(false)))), true, true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))) && true)))), true, false))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), bool(bool(_GLF_DEAD(false)))), true, true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))) && true)))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), bool(bool(_GLF_DEAD(false)))), true, true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))) && true)))), true, false))), false), false, false))), false)), bvec2(bvec2(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), bool(bool(_GLF_DEAD(false)))), true, true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))) && true)))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), bool(bool(_GLF_DEAD(false)))), true, true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))) && true)))), true, false))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), bool(bool(_GLF_DEAD(false)))), true, true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))) && true)))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), bool(bool(_GLF_DEAD(false)))), true, true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))) && true)))), true, false))), false), false, false))), false)))))))), (! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), bool(bool(_GLF_DEAD(false)))), true, true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))) && true)))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), bool(bool(_GLF_DEAD(false)))), true, true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))) && true)))), true, false))), false), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), bool(bool(_GLF_DEAD(false)))), true, true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))) && true)))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), bool(bool(_GLF_DEAD(false)))), true, true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))) && true)))), true, false))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), bool(bool(_GLF_DEAD(false)))), true, true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))) && true)))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), bool(bool(_GLF_DEAD(false)))), true, true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))) && true)))), true, false))), false), false, false))), false)), bvec2(bvec2(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), bool(bool(_GLF_DEAD(false)))), true, true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))) && true)))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), bool(bool(_GLF_DEAD(false)))), true, true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))) && true)))), true, false))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), bool(bool(_GLF_DEAD(false)))), true, true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))) && true)))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), bool(bool(_GLF_DEAD(false)))), true, true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))) && true)))), true, false))), false), false, false))), false))))))))) || false))))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) << 0u)), _GLF_IDENTITY(clamp((_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) << 0u)), (_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) << 0u)), (_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) << 0u))), 0u ^ (clamp((_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) << 0u)), (_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) << 0u)), (_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) << 0u)))))) | (_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(next_virtual_gid, clamp(next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) ^ 0u), next_virtual_gid))) / 1u))))), 1u * (_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) << 0u)), clamp((_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) << 0u)), (_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) << 0u)), (_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) << 0u)))) | (_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(next_virtual_gid, clamp(next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) ^ 0u), next_virtual_gid))) / 1u))))), (_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) << 0u)), clamp((_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) << 0u)), (_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) << 0u)), (_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) << 0u)))) | (_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, clamp(next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) ^ 0u), next_virtual_gid))) / 1u, ~ (~ ((_GLF_IDENTITY(next_virtual_gid, clamp(next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) ^ 0u), next_virtual_gid))) / 1u))))))))) >> 0u)))], uint(2), 4, 64, 0);
   if(_GLF_DEAD(false))
    barrier();
  }
}
