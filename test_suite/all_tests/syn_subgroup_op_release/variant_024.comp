#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | _GLF_IDENTITY(uvec3(0u, 0u, _GLF_IDENTITY(0u, ~ (~ (0u)))), max(uvec3(0u, 0u, 0u), uvec3(_GLF_IDENTITY(0u, (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))) / _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(552.091) : _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(5.2) : 1.0)))))))), ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))))) && true)) ? 0u : _GLF_FUZZED(num_workgroup))), 0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_id))))))).x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))), bool(bvec3(_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(_GLF_IDENTITY(bvec2(! (_GLF_DEAD(false)), true), bvec2(_GLF_IDENTITY(bvec2(bvec2(! (_GLF_DEAD(false)), true)), bvec2(bvec4(bvec2(bvec2(! (_GLF_DEAD(false)), true)), false, false))))))), false, true))))), false)), ! (! (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec3(! _GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec2((_GLF_DEAD(false)), false))), false, true))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec3(! (_GLF_DEAD(false)), false, true))))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec3(! (_GLF_DEAD(false)), false, true)))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec3(! (_GLF_DEAD(false)), false, true)))))), ! (! ((_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec3(! _GLF_IDENTITY((_GLF_DEAD(false)), (_GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false)))))) && true), false, true)))))))))) && true))))), false)))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, true)), bool(_GLF_IDENTITY(bvec2(bool(bvec4(false, false, true, true)), true), _GLF_IDENTITY(bvec2(bvec2(bvec2(bool(bvec4(false, false, true, true)), true))), bvec2(bvec3(bvec2(bvec2(bvec2(bool(bvec4(false, false, true, true)), true))), true))))))))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(63.67) : injectionSwitch.y))))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), 0.0, 0.0, 1.0, 1.0))))).y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), ! (! (bool(bvec3(false, true, true))))))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * abs(vec2(1.0, 1.0))), injectionSwitch)).y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * abs(vec2(1.0, 1.0))), injectionSwitch)).y))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))), bool(bvec3(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))), true, true)))), (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))) && true)) && true))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, min(workgroup_size, _GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((workgroup_size), ((workgroup_size)) - 0u) / 1u)) * 1u))), (workgroup_size) | 0u) * workgroup_id;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, false))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + 0u), subgroup_local_id, subgroup_local_id));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, clamp(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), _GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, ~ (~ (_GLF_IDENTITY(workgroup_base, (true ? workgroup_base : _GLF_FUZZED(workgroup_size))))))) ^ 0u) + subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), (true ? subgroup_size : _GLF_FUZZED(num_workgroup))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)) + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) | _GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), clamp(_GLF_IDENTITY(_GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), ((workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (subgroup_id * subgroup_size)))) | ((workgroup_base + subgroup_id * subgroup_size))), ((workgroup_base + subgroup_id * subgroup_size)) ^ 0u), _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), max((workgroup_base + subgroup_id * subgroup_size), (workgroup_base + subgroup_id * subgroup_size))), min(_GLF_IDENTITY(_GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), max((workgroup_base + subgroup_id * subgroup_size), (workgroup_base + subgroup_id * subgroup_size))), min(_GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), max((workgroup_base + subgroup_id * subgroup_size), (workgroup_base + subgroup_id * subgroup_size))), _GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), max((workgroup_base + subgroup_id * subgroup_size), (workgroup_base + subgroup_id * subgroup_size))))), _GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), max((workgroup_base + subgroup_id * subgroup_size), (workgroup_base + subgroup_id * subgroup_size))))), (workgroup_base + subgroup_id * subgroup_size)))))) + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   return;
  }
 buf[virtual_gid] = 1;
 if(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) << 0), 1)) < _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), ! (_GLF_IDENTITY(! (subgroup_local_id + _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) << 0), 1)) < _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))), ! (! (! (subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) << 0), 1)), 0 | (_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) << 0), 1)))) < _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)))))))))
  {
   atomicStore(buf[next_virtual_gid], uint(2), _GLF_IDENTITY(_GLF_IDENTITY(4, (0 >> _GLF_IDENTITY(int(8), int(8))) | (_GLF_IDENTITY(4, clamp(4, 4, 4)))), (false ? _GLF_FUZZED(95982) : _GLF_IDENTITY(4, (0 >> _GLF_IDENTITY(int(8), int(8))) | (_GLF_IDENTITY(4, clamp(4, 4, 4)))))), 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-8882.9877) : injectionSwitch.y))))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             return;
            }
           return;
           if(_GLF_DEAD(false))
            return;
          }
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, true)))))
        return;
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          return;
         return;
        }
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))))), bool(_GLF_IDENTITY(bvec2((! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))))), false), bvec2(bvec4(bvec2((! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))))))))))), false), true, false)))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
      return;
    }
   subgroupAll(false);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-797.162)), vec2(_GLF_FUZZED(-5515.3604), (injectionSwitch)[1]), bvec2(false, true))).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - _GLF_IDENTITY(abs(sin(vec2(0.0, 0.0))), (true ? abs(sin(vec2(0.0, 0.0))) : _GLF_FUZZED(vec2(291.060, -7.3))))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), (bool(bvec3(false, true, false))) || false))))
    return;
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))), _GLF_IDENTITY(false || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y)))), false || (_GLF_IDENTITY(false || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y)))), bool(bvec2(_GLF_IDENTITY(false || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y)))), true && (false || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y)))))), false)))))))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (false))), bool(bvec3(! ((! (false))), false, true))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), _GLF_IDENTITY((injectionSwitch), mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(-3.0), ((injectionSwitch))[1]), min(vec2(_GLF_FUZZED(-3.0), ((injectionSwitch))[1]), vec2(_GLF_FUZZED(-3.0), ((injectionSwitch))[1]))), vec2(((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-285.678), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(88.69)), bvec2(true, false)))))[0], _GLF_FUZZED(8.2)), bvec2(true, false))))) - _GLF_IDENTITY(vec2(0.0, 0.0), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (vec2(0.0, 0.0)))).x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3(injectionSwitch.y, abs(1.0), log(1.0), 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), clamp(_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), max(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))), 0.0)), max(float(mat3(injectionSwitch.y, abs(1.0), log(1.0), 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (false ? _GLF_FUZZED(vec3(77.72, 6.1, 4.1)) : vec3(0.0, 1.0, 0.0))), vec3(0.0, 1.0, 0.0))), 0.0)), float(mat3(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), abs(1.0), log(1.0), 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), vec3(mat2(_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), mat3(1.0) * (vec3(0.0, 1.0, 0.0))), 1.0))))), 0.0)))))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(_GLF_FUZZED(-90.79)), (false ? _GLF_FUZZED(3.2) : _GLF_IDENTITY(float(_GLF_FUZZED(-90.79)), max(_GLF_IDENTITY(float(_GLF_FUZZED(-90.79)), (float(_GLF_FUZZED(-90.79))) + 0.0), float(_GLF_FUZZED(-90.79)))))), float(injectionSwitch.y), bool(true)))))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-1.6) : injectionSwitch.x)) > injectionSwitch.y))))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   subgroupAll(true);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false)))), (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))) && true))), false || (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(false, true && (false)) || (false)))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))[1], mix(float(_GLF_FUZZED(-775.267)), _GLF_IDENTITY(float(injectionSwitch[1]), min(float(injectionSwitch[1]), float(injectionSwitch[1]))), bool(true))))).x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) && true)), bool(bvec4(bool(_GLF_IDENTITY(false, (false) && true)), true, false, false))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(false, (false) && true))), true && (! (bool(_GLF_IDENTITY(false, (false) && true)))))))))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), true, true)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)) || false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, true))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(_GLF_IDENTITY(vec3(injectionSwitch, 1.0), (true ? vec3(injectionSwitch, 1.0) : _GLF_FUZZED(_GLF_IDENTITY(vec3(-2.5, -8504.4534, _GLF_IDENTITY(7.7, mix(float(_GLF_FUZZED(9.7)), float(_GLF_IDENTITY(7.7, clamp(_GLF_IDENTITY(7.7, (7.7) / 1.0), 7.7, 7.7))), bool(true)))), (false ? _GLF_FUZZED(vec3(-40.09, _GLF_IDENTITY(871.466, (false ? _GLF_FUZZED(4125.8283) : 871.466)), -9.2)) : _GLF_IDENTITY(vec3(-2.5, _GLF_IDENTITY(-8504.4534, (_GLF_IDENTITY(-8504.4534, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0))) + (_GLF_IDENTITY(-8504.4534, (_GLF_IDENTITY(true ? _GLF_IDENTITY(-8504.4534, (false ? _GLF_FUZZED(-3.3) : _GLF_IDENTITY(-8504.4534, clamp(-8504.4534, -8504.4534, -8504.4534)))) : _GLF_FUZZED(-6.0), mix(float(_GLF_IDENTITY(true ? _GLF_IDENTITY(-8504.4534, (false ? _GLF_FUZZED(-3.3) : _GLF_IDENTITY(-8504.4534, clamp(-8504.4534, -8504.4534, -8504.4534)))) : _GLF_FUZZED(-6.0), 0.0 + (true ? _GLF_IDENTITY(-8504.4534, (false ? _GLF_FUZZED(-3.3) : _GLF_IDENTITY(-8504.4534, clamp(-8504.4534, -8504.4534, -8504.4534)))) : _GLF_FUZZED(-6.0)))), float(_GLF_FUZZED(-2.4)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))) - 0.0), _GLF_IDENTITY(7.7, mix(float(_GLF_FUZZED(9.7)), float(_GLF_IDENTITY(7.7, clamp(_GLF_IDENTITY(7.7, (7.7) / 1.0), 7.7, 7.7))), bool(true)))), mat3(1.0) * (vec3(-2.5, -8504.4534, _GLF_IDENTITY(7.7, mix(float(_GLF_FUZZED(9.7)), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(7.7, (_GLF_IDENTITY(7.7, (_GLF_IDENTITY(7.7, float(float(7.7)))) / 1.0)) * 1.0), max(7.7, _GLF_IDENTITY(7.7, clamp(7.7, 7.7, 7.7)))), clamp(_GLF_IDENTITY(7.7, (7.7) / 1.0), 7.7, 7.7))), bool(true)))))))))))), mix(vec2((vec2(_GLF_IDENTITY(vec3(injectionSwitch, 1.0), (true ? vec3(injectionSwitch, 1.0) : _GLF_FUZZED(_GLF_IDENTITY(vec3(-2.5, -8504.4534, _GLF_IDENTITY(7.7, mix(float(_GLF_FUZZED(9.7)), float(_GLF_IDENTITY(7.7, clamp(_GLF_IDENTITY(7.7, (7.7) / 1.0), 7.7, 7.7))), bool(true)))), (false ? _GLF_FUZZED(vec3(-40.09, _GLF_IDENTITY(871.466, (false ? _GLF_FUZZED(4125.8283) : 871.466)), -9.2)) : _GLF_IDENTITY(vec3(-2.5, _GLF_IDENTITY(-8504.4534, (_GLF_IDENTITY(-8504.4534, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0))) + (_GLF_IDENTITY(-8504.4534, (_GLF_IDENTITY(true ? _GLF_IDENTITY(-8504.4534, (false ? _GLF_FUZZED(-3.3) : _GLF_IDENTITY(-8504.4534, clamp(-8504.4534, -8504.4534, -8504.4534)))) : _GLF_FUZZED(-6.0), mix(float(_GLF_IDENTITY(true ? _GLF_IDENTITY(-8504.4534, (false ? _GLF_FUZZED(-3.3) : _GLF_IDENTITY(-8504.4534, clamp(-8504.4534, -8504.4534, -8504.4534)))) : _GLF_FUZZED(-6.0), 0.0 + (true ? _GLF_IDENTITY(-8504.4534, (false ? _GLF_FUZZED(-3.3) : _GLF_IDENTITY(-8504.4534, clamp(-8504.4534, -8504.4534, -8504.4534)))) : _GLF_FUZZED(-6.0)))), float(_GLF_FUZZED(-2.4)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))) - 0.0), _GLF_IDENTITY(7.7, mix(float(_GLF_FUZZED(9.7)), float(_GLF_IDENTITY(7.7, clamp(_GLF_IDENTITY(7.7, (7.7) / 1.0), 7.7, 7.7))), bool(true)))), mat3(1.0) * (vec3(-2.5, -8504.4534, _GLF_IDENTITY(7.7, mix(float(_GLF_FUZZED(9.7)), float(_GLF_IDENTITY(_GLF_IDENTITY(7.7, max(7.7, _GLF_IDENTITY(7.7, clamp(7.7, 7.7, 7.7)))), clamp(_GLF_IDENTITY(7.7, (7.7) / 1.0), 7.7, 7.7))), bool(true)))))))))))))[0], (vec2(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)), 1.0), (true ? vec3(injectionSwitch, 1.0) : _GLF_FUZZED(_GLF_IDENTITY(vec3(-2.5, -8504.4534, _GLF_IDENTITY(_GLF_IDENTITY(7.7, mix(float(_GLF_FUZZED(9.7)), float(_GLF_IDENTITY(7.7, clamp(_GLF_IDENTITY(7.7, (7.7) / 1.0), 7.7, 7.7))), bool(true))), max(_GLF_IDENTITY(7.7, mix(float(_GLF_FUZZED(9.7)), float(_GLF_IDENTITY(7.7, clamp(_GLF_IDENTITY(_GLF_IDENTITY(7.7, (7.7) / 1.0), (_GLF_IDENTITY(7.7, (7.7) / 1.0)) - _GLF_IDENTITY(dot(vec2(abs(0.0), 1.0), vec2(abs(1.0), 0.0)), _GLF_IDENTITY(dot(vec2(abs(0.0), 1.0), vec2(abs(1.0), 0.0)), (false ? _GLF_FUZZED(4.9) : dot(vec2(abs(0.0), 1.0), vec2(abs(1.0), 0.0)))))), 7.7, 7.7))), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(7.7, mix(float(_GLF_FUZZED(9.7)), float(_GLF_IDENTITY(_GLF_IDENTITY(7.7, clamp(_GLF_IDENTITY(7.7, (7.7) / 1.0), 7.7, 7.7)), float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(7.7, clamp(_GLF_IDENTITY(7.7, (7.7) / 1.0), 7.7, 7.7)), clamp(_GLF_IDENTITY(7.7, clamp(_GLF_IDENTITY(7.7, (7.7) / 1.0), 7.7, 7.7)), _GLF_IDENTITY(7.7, clamp(_GLF_IDENTITY(7.7, (7.7) / 1.0), 7.7, 7.7)), _GLF_IDENTITY(_GLF_IDENTITY(7.7, clamp(_GLF_IDENTITY(7.7, (7.7) / 1.0), 7.7, 7.7)), (false ? _GLF_FUZZED(817.749) : _GLF_IDENTITY(7.7, clamp(_GLF_IDENTITY(7.7, (7.7) / 1.0), 7.7, 7.7)))))), 0.0, tan(0.0), 0.0, 0.0, sqrt(1.0)), (mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(7.7, clamp(_GLF_IDENTITY(7.7, (7.7) / 1.0), 7.7, 7.7)), clamp(_GLF_IDENTITY(7.7, clamp(_GLF_IDENTITY(7.7, (7.7) / 1.0), 7.7, 7.7)), _GLF_IDENTITY(7.7, clamp(_GLF_IDENTITY(7.7, (7.7) / 1.0), 7.7, 7.7)), _GLF_IDENTITY(_GLF_IDENTITY(7.7, clamp(_GLF_IDENTITY(7.7, (7.7) / 1.0), 7.7, 7.7)), (false ? _GLF_FUZZED(817.749) : _GLF_IDENTITY(7.7, clamp(_GLF_IDENTITY(7.7, (7.7) / 1.0), 7.7, 7.7)))))), 0.0, tan(0.0), 0.0, 0.0, sqrt(1.0))) * mat2(1.0))))), bool(true))), 1.0 * (_GLF_IDENTITY(7.7, mix(float(_GLF_FUZZED(9.7)), float(_GLF_IDENTITY(7.7, clamp(_GLF_IDENTITY(7.7, (7.7) / 1.0), 7.7, 7.7))), bool(true)))))))), (false ? _GLF_FUZZED(vec3(-40.09, _GLF_IDENTITY(871.466, (false ? _GLF_FUZZED(4125.8283) : 871.466)), -9.2)) : _GLF_IDENTITY(_GLF_IDENTITY(vec3(-2.5, _GLF_IDENTITY(-8504.4534, (_GLF_IDENTITY(-8504.4534, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0))) + (_GLF_IDENTITY(-8504.4534, (_GLF_IDENTITY(true ? _GLF_IDENTITY(-8504.4534, (false ? _GLF_FUZZED(-3.3) : _GLF_IDENTITY(-8504.4534, clamp(-8504.4534, -8504.4534, -8504.4534)))) : _GLF_FUZZED(-6.0), mix(float(_GLF_IDENTITY(true ? _GLF_IDENTITY(-8504.4534, (false ? _GLF_FUZZED(-3.3) : _GLF_IDENTITY(-8504.4534, clamp(-8504.4534, -8504.4534, -8504.4534)))) : _GLF_FUZZED(-6.0), 0.0 + (true ? _GLF_IDENTITY(-8504.4534, (false ? _GLF_FUZZED(-3.3) : _GLF_IDENTITY(-8504.4534, clamp(-8504.4534, -8504.4534, -8504.4534)))) : _GLF_FUZZED(-6.0)))), float(_GLF_FUZZED(-2.4)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))) - 0.0), _GLF_IDENTITY(7.7, mix(float(_GLF_FUZZED(9.7)), float(_GLF_IDENTITY(7.7, clamp(_GLF_IDENTITY(7.7, (7.7) / 1.0), 7.7, 7.7))), bool(true)))), mat3(1.0) * (vec3(-2.5, -8504.4534, _GLF_IDENTITY(7.7, mix(float(_GLF_FUZZED(9.7)), float(_GLF_IDENTITY(_GLF_IDENTITY(7.7, max(7.7, _GLF_IDENTITY(7.7, clamp(7.7, 7.7, 7.7)))), clamp(_GLF_IDENTITY(7.7, (7.7) / _GLF_IDENTITY(1.0, max(1.0, 1.0))), 7.7, 7.7))), bool(true)))))), _GLF_IDENTITY((_GLF_IDENTITY(vec3(-2.5, _GLF_IDENTITY(-8504.4534, (_GLF_IDENTITY(-8504.4534, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0))) + (_GLF_IDENTITY(-8504.4534, (_GLF_IDENTITY(true ? _GLF_IDENTITY(-8504.4534, (false ? _GLF_FUZZED(-3.3) : _GLF_IDENTITY(-8504.4534, clamp(-8504.4534, -8504.4534, -8504.4534)))) : _GLF_FUZZED(-6.0), mix(float(_GLF_IDENTITY(true ? _GLF_IDENTITY(-8504.4534, (false ? _GLF_FUZZED(-3.3) : _GLF_IDENTITY(-8504.4534, clamp(-8504.4534, -8504.4534, -8504.4534)))) : _GLF_FUZZED(-6.0), 0.0 + (true ? _GLF_IDENTITY(-8504.4534, (false ? _GLF_FUZZED(-3.3) : _GLF_IDENTITY(-8504.4534, clamp(-8504.4534, -8504.4534, -8504.4534)))) : _GLF_FUZZED(-6.0)))), float(_GLF_FUZZED(-2.4)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))) - 0.0), _GLF_IDENTITY(7.7, mix(float(_GLF_FUZZED(9.7)), float(_GLF_IDENTITY(7.7, clamp(_GLF_IDENTITY(7.7, (7.7) / 1.0), 7.7, 7.7))), bool(true)))), mat3(1.0) * (vec3(-2.5, -8504.4534, _GLF_IDENTITY(7.7, mix(float(_GLF_FUZZED(9.7)), float(_GLF_IDENTITY(_GLF_IDENTITY(7.7, max(7.7, _GLF_IDENTITY(_GLF_IDENTITY(7.7, (_GLF_IDENTITY(7.7, (true ? 7.7 : _GLF_FUZZED(-0.8)))) - tan(0.0)), clamp(7.7, 7.7, 7.7)))), clamp(_GLF_IDENTITY(7.7, (7.7) / 1.0), 7.7, 7.7))), bool(true))))))) * mat3(1.0), mix(vec3(((_GLF_IDENTITY(vec3(-2.5, _GLF_IDENTITY(-8504.4534, (_GLF_IDENTITY(-8504.4534, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0))) + (_GLF_IDENTITY(-8504.4534, (_GLF_IDENTITY(true ? _GLF_IDENTITY(-8504.4534, (false ? _GLF_FUZZED(-3.3) : _GLF_IDENTITY(-8504.4534, clamp(-8504.4534, -8504.4534, -8504.4534)))) : _GLF_FUZZED(-6.0), mix(float(_GLF_IDENTITY(true ? _GLF_IDENTITY(-8504.4534, (false ? _GLF_FUZZED(-3.3) : _GLF_IDENTITY(-8504.4534, clamp(_GLF_IDENTITY(-8504.4534, clamp(-8504.4534, -8504.4534, -8504.4534)), -8504.4534, -8504.4534)))) : _GLF_FUZZED(-6.0), 0.0 + (true ? _GLF_IDENTITY(-8504.4534, (false ? _GLF_FUZZED(-3.3) : _GLF_IDENTITY(-8504.4534, clamp(-8504.4534, -8504.4534, -8504.4534)))) : _GLF_FUZZED(-6.0)))), float(_GLF_FUZZED(-2.4)), bool(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), (injectionSwitch.x > injectionSwitch.y)))))))))) - 0.0), _GLF_IDENTITY(7.7, mix(float(_GLF_FUZZED(9.7)), float(_GLF_IDENTITY(7.7, clamp(_GLF_IDENTITY(7.7, (7.7) / 1.0), 7.7, 7.7))), bool(true)))), mat3(1.0) * (vec3(-2.5, -8504.4534, _GLF_IDENTITY(7.7, mix(float(_GLF_FUZZED(9.7)), float(_GLF_IDENTITY(_GLF_IDENTITY(7.7, max(7.7, _GLF_IDENTITY(7.7, clamp(7.7, 7.7, 7.7)))), clamp(_GLF_IDENTITY(7.7, (7.7) / 1.0), 7.7, 7.7))), bool(true))))))) * mat3(1.0))[0], ((_GLF_IDENTITY(vec3(-2.5, _GLF_IDENTITY(-8504.4534, (_GLF_IDENTITY(-8504.4534, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0))) + (_GLF_IDENTITY(-8504.4534, (_GLF_IDENTITY(true ? _GLF_IDENTITY(-8504.4534, (false ? _GLF_FUZZED(-3.3) : _GLF_IDENTITY(-8504.4534, clamp(-8504.4534, -8504.4534, -8504.4534)))) : _GLF_FUZZED(-6.0), mix(float(_GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY(-8504.4534, (false ? _GLF_FUZZED(-3.3) : _GLF_IDENTITY(-8504.4534, clamp(-8504.4534, -8504.4534, -8504.4534)))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(-8504.4534, (false ? _GLF_FUZZED(-3.3) : _GLF_IDENTITY(-8504.4534, clamp(-8504.4534, -8504.4534, -8504.4534)))), min(_GLF_IDENTITY(_GLF_IDENTITY(-8504.4534, (false ? _GLF_FUZZED(-3.3) : _GLF_IDENTITY(-8504.4534, clamp(-8504.4534, -8504.4534, -8504.4534)))), (true ? _GLF_IDENTITY(-8504.4534, (false ? _GLF_FUZZED(-3.3) : _GLF_IDENTITY(-8504.4534, clamp(-8504.4534, -8504.4534, -8504.4534)))) : _GLF_FUZZED(-8876.5323))), _GLF_IDENTITY(-8504.4534, (false ? _GLF_FUZZED(-3.3) : _GLF_IDENTITY(-8504.4534, clamp(-8504.4534, -8504.4534, -8504.4534)))))) : _GLF_FUZZED(dot(-19.19, -610.698)))) : _GLF_FUZZED(-6.0), 0.0 + (true ? _GLF_IDENTITY(-8504.4534, (false ? _GLF_FUZZED(-3.3) : _GLF_IDENTITY(-8504.4534, clamp(-8504.4534, -8504.4534, -8504.4534)))) : _GLF_FUZZED(-6.0)))), float(_GLF_FUZZED(-2.4)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))) - 0.0), _GLF_IDENTITY(7.7, mix(float(_GLF_FUZZED(9.7)), float(_GLF_IDENTITY(7.7, clamp(_GLF_IDENTITY(7.7, _GLF_IDENTITY((7.7), clamp((7.7), (7.7), (7.7))) / 1.0), 7.7, 7.7))), bool(true)))), mat3(1.0) * _GLF_IDENTITY((vec3(-2.5, -8504.4534, _GLF_IDENTITY(7.7, mix(float(_GLF_FUZZED(9.7)), float(_GLF_IDENTITY(_GLF_IDENTITY(7.7, max(7.7, _GLF_IDENTITY(7.7, clamp(7.7, 7.7, 7.7)))), clamp(_GLF_IDENTITY(7.7, (7.7) / 1.0), 7.7, 7.7))), bool(true))))), max((vec3(-2.5, -8504.4534, _GLF_IDENTITY(7.7, mix(float(_GLF_FUZZED(9.7)), float(_GLF_IDENTITY(_GLF_IDENTITY(7.7, max(7.7, _GLF_IDENTITY(7.7, clamp(7.7, 7.7, 7.7)))), clamp(_GLF_IDENTITY(7.7, (7.7) / 1.0), 7.7, 7.7))), bool(true))))), (vec3(-2.5, -8504.4534, _GLF_IDENTITY(7.7, mix(float(_GLF_FUZZED(9.7)), float(_GLF_IDENTITY(_GLF_IDENTITY(7.7, max(7.7, _GLF_IDENTITY(7.7, clamp(7.7, 7.7, 7.7)))), clamp(_GLF_IDENTITY(7.7, (7.7) / 1.0), 7.7, 7.7))), bool(true))))))))) * _GLF_IDENTITY(mat3(1.0), (true ? mat3(1.0) : _GLF_FUZZED(mat3(-3.7, 860.017, -905.434, 7166.7419, 8.1, 3.0, -0.6, -746.177, -779.397)))))[1], _GLF_FUZZED(float(70561))), vec3(_GLF_FUZZED(vec4(606.718, -6.0, -50.21, 32.97).w), _GLF_FUZZED(-3145.9593), ((_GLF_IDENTITY(vec3(-2.5, _GLF_IDENTITY(-8504.4534, (_GLF_IDENTITY(-8504.4534, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))))) + (_GLF_IDENTITY(-8504.4534, (_GLF_IDENTITY(true ? _GLF_IDENTITY(-8504.4534, (false ? _GLF_FUZZED(-3.3) : _GLF_IDENTITY(-8504.4534, clamp(-8504.4534, -8504.4534, -8504.4534)))) : _GLF_FUZZED(-6.0), mix(float(_GLF_IDENTITY(true ? _GLF_IDENTITY(-8504.4534, (false ? _GLF_FUZZED(-3.3) : _GLF_IDENTITY(-8504.4534, clamp(-8504.4534, -8504.4534, -8504.4534)))) : _GLF_FUZZED(-6.0), 0.0 + (true ? _GLF_IDENTITY(-8504.4534, (false ? _GLF_FUZZED(-3.3) : _GLF_IDENTITY(-8504.4534, clamp(-8504.4534, -8504.4534, -8504.4534)))) : _GLF_FUZZED(-6.0)))), float(_GLF_FUZZED(-2.4)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))) - 0.0), _GLF_IDENTITY(7.7, mix(float(_GLF_FUZZED(9.7)), float(_GLF_IDENTITY(7.7, clamp(_GLF_IDENTITY(7.7, (7.7) / 1.0), 7.7, 7.7))), bool(true)))), mat3(1.0) * (vec3(-2.5, -8504.4534, _GLF_IDENTITY(7.7, mix(float(_GLF_FUZZED(9.7)), float(_GLF_IDENTITY(_GLF_IDENTITY(7.7, max(7.7, _GLF_IDENTITY(7.7, clamp(7.7, 7.7, 7.7)))), clamp(_GLF_IDENTITY(7.7, (7.7) / 1.0), 7.7, 7.7))), bool(true))))))) * mat3(1.0))[2]), bvec3(false, false, true)))))))))))[1]), vec2(_GLF_FUZZED(13.29), _GLF_FUZZED(vec2(-6.6, 2058.5520).y)), bvec2(false, false))), min(vec2(_GLF_IDENTITY(vec3(injectionSwitch, 1.0), (true ? vec3(injectionSwitch, 1.0) : _GLF_FUZZED(vec3(_GLF_IDENTITY(-2.5, (-2.5) / 1.0), -8504.4534, 7.7))))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec3(injectionSwitch, 1.0), (true ? _GLF_IDENTITY(vec3(injectionSwitch, 1.0), vec3(vec4(vec3(injectionSwitch, 1.0), exp(0.0)))) : _GLF_FUZZED(vec3(-2.5, _GLF_IDENTITY(-8504.4534, max(-8504.4534, _GLF_IDENTITY(-8504.4534, clamp(-8504.4534, -8504.4534, -8504.4534)))), 7.7))))), _GLF_IDENTITY((vec2(_GLF_IDENTITY(vec3(injectionSwitch, 1.0), (true ? vec3(injectionSwitch, 1.0) : _GLF_FUZZED(vec3(-2.5, -8504.4534, 7.7)))))), clamp(_GLF_IDENTITY((vec2(_GLF_IDENTITY(vec3(injectionSwitch, 1.0), (true ? vec3(injectionSwitch, 1.0) : _GLF_FUZZED(vec3(-2.5, -8504.4534, 7.7)))))), vec2(1.0, 1.0) * ((vec2(_GLF_IDENTITY(vec3(injectionSwitch, 1.0), (true ? vec3(injectionSwitch, 1.0) : _GLF_FUZZED(vec3(-2.5, -8504.4534, 7.7)))))))), _GLF_IDENTITY((vec2(_GLF_IDENTITY(vec3(injectionSwitch, 1.0), (true ? vec3(injectionSwitch, 1.0) : _GLF_FUZZED(vec3(-2.5, -8504.4534, 7.7)))))), ((vec2(_GLF_IDENTITY(vec3(injectionSwitch, 1.0), (true ? vec3(injectionSwitch, 1.0) : _GLF_FUZZED(vec3(-2.5, -8504.4534, 7.7))))))) * mat2(1.0)), (vec2(_GLF_IDENTITY(vec3(injectionSwitch, 1.0), (true ? vec3(injectionSwitch, 1.0) : _GLF_FUZZED(vec3(-2.5, -8504.4534, 7.7)))))))) - vec2(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(6175.9358)), float(0.0), bool(true))), 0.0))))).y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
}
