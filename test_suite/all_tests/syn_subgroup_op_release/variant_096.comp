#version 460
layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec2 GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size;
 uvec3 GLF_merged3_0_1_13_1_1_17_2_1_13num_workgroupsubgroup_local_idtotal_threads;
 uint subgroup_id = gl_SubgroupID;
 GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.x = subgroup_id;
 uint subgroup_size = gl_SubgroupSize;
 GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y = subgroup_size;
 uint gid = gl_GlobalInvocationID.x;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 GLF_merged3_0_1_13_1_1_17_2_1_13num_workgroupsubgroup_local_idtotal_threads.y = subgroup_local_id;
 uint num_workgroup = gl_NumWorkGroups.x;
 GLF_merged3_0_1_13_1_1_17_2_1_13num_workgroupsubgroup_local_idtotal_threads.x = num_workgroup;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint total_threads = GLF_merged3_0_1_13_1_1_17_2_1_13num_workgroupsubgroup_local_idtotal_threads.x * workgroup_size;
 GLF_merged3_0_1_13_1_1_17_2_1_13num_workgroupsubgroup_local_idtotal_threads.z = total_threads;
 if(GLF_merged3_0_1_13_1_1_17_2_1_13num_workgroupsubgroup_local_idtotal_threads.y + 1 < GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y)
  {
   atomicStore(buf[(gid + 1) % GLF_merged3_0_1_13_1_1_17_2_1_13num_workgroupsubgroup_local_idtotal_threads.z], uint(2), 4, 64, 4);
   subgroupAll(false);
  }
 else
  {
   atomicStore(buf[(gid + 1) % GLF_merged3_0_1_13_1_1_17_2_1_13num_workgroupsubgroup_local_idtotal_threads.z], uint(2), 4, 64, 4);
   subgroupAll(true);
  }
}
