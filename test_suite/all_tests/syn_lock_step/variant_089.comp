#version 460
struct _GLF_struct_3 {
 uint subgroup_size;
 mat3x4 _f0;
 mat2 _f1;
 mat4x2 _f2;
} ;

struct _GLF_struct_1 {
 uvec2 _f0;
 mat4x2 _f1;
} ;

struct _GLF_struct_2 {
 mat3x2 _f0;
 float _f1;
 _GLF_struct_1 _f2;
 uvec2 _f3;
} ;

struct _GLF_struct_4 {
 _GLF_struct_2 _f0;
 _GLF_struct_3 _f1;
 bvec4 _f2;
} ;

struct _GLF_struct_0 {
 mat4x2 _f0;
 uint workgroup_base;
} ;

layout(set = 0, binding = 0) uniform buf0 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 _GLF_struct_4 _GLF_struct_replacement_4 = _GLF_struct_4(_GLF_struct_2(mat3x2(1.0), 1.0, _GLF_struct_1(uvec2(1u), mat4x2(1.0)), uvec2(1u)), _GLF_struct_3(gl_SubgroupSize, mat3x4(1.0), mat2(1.0), mat4x2(1.0)), bvec4(true));
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 _GLF_struct_0 _GLF_struct_replacement_0 = _GLF_struct_0(mat4x2(1.0), workgroup_size * workgroup_id);
 uint virtual_gid = _GLF_struct_replacement_0.workgroup_base + subgroup_id * _GLF_struct_replacement_4._f1.subgroup_size + subgroup_local_id;
 uint next_virtual_gid = _GLF_struct_replacement_0.workgroup_base + subgroup_id * _GLF_struct_replacement_4._f1.subgroup_size + ((subgroup_local_id + 1) % _GLF_struct_replacement_4._f1.subgroup_size);
 buf[virtual_gid] = 1;
 buf[next_virtual_gid] = 2;
}
