#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_4 {
 uvec2 _f0;
 vec3 _f1;
 mat2x4 _f2;
 mat2x3 _f3;
 ivec2 _f4;
} ;

struct _GLF_struct_2 {
 uvec3 _f0;
 bvec3 _f1;
 mat3 _f2;
 mat3 _f3;
} ;

struct _GLF_struct_3 {
 _GLF_struct_2 _f0;
} ;

struct _GLF_struct_1 {
 ivec4 _f0;
} ;

struct _GLF_struct_5 {
 vec3 _f0;
 _GLF_struct_1 _f1;
 uint workgroup_size;
 mat4 _f2;
 _GLF_struct_3 _f3;
 _GLF_struct_4 _f4;
 mat2x3 _f5;
 int _f6;
} ;

struct _GLF_struct_0 {
 uint num_workgroup;
 vec3 _f0;
} ;

layout(set = 0, binding = 0) uniform buf0 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 _GLF_struct_0 _GLF_struct_replacement_0 = _GLF_struct_0(gl_NumWorkGroups.x, vec3(1.0));
 _GLF_struct_5 _GLF_struct_replacement_5 = _GLF_struct_5(vec3(1.0), _GLF_struct_1(ivec4(1)), gl_WorkGroupSize.x, mat4(1.0), _GLF_struct_3(_GLF_struct_2(uvec3(1u), _GLF_IDENTITY(bvec3(true), bvec3(_GLF_IDENTITY(bvec3(bvec3(true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(true)), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(true)), false)))))))), mat3(1.0), mat3(1.0))), _GLF_struct_4(uvec2(1u), vec3(1.0), mat2x4(1.0), mat2x3(1.0), ivec2(1)), mat2x3(_GLF_IDENTITY(1.0, 0.0 + (1.0))), 1);
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = _GLF_struct_replacement_5.workgroup_size * workgroup_id;
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) | (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) >> 0u))), min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, 0u | (workgroup_base + subgroup_id * subgroup_size)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) * uint(_GLF_ONE(1.0, injectionSwitch.y))), 0u | (workgroup_base + subgroup_id * subgroup_size))), uint(uvec3(~ (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, 0u | (workgroup_base + subgroup_id * subgroup_size))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u))))), _GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)) + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))) + 0u) * subgroup_size)) + ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) - (0u & 163584u)));
 buf[virtual_gid] = 1;
 buf[next_virtual_gid] = 2;
}
