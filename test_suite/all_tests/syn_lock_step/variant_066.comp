#version 460
layout(set = 0, binding = 0) uniform buf0 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec3 GLF_merged3_0_1_3_1_1_13_2_1_14gidnum_workgroupworkgroup_size;
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint gid = gl_GlobalInvocationID.x;
 GLF_merged3_0_1_3_1_1_13_2_1_14gidnum_workgroupworkgroup_size.x = gid;
 uint num_workgroup = gl_NumWorkGroups.x;
 GLF_merged3_0_1_3_1_1_13_2_1_14gidnum_workgroupworkgroup_size.y = num_workgroup;
 uint workgroup_size = gl_WorkGroupSize.x;
 GLF_merged3_0_1_3_1_1_13_2_1_14gidnum_workgroupworkgroup_size.z = workgroup_size;
 uint total_threads = GLF_merged3_0_1_3_1_1_13_2_1_14gidnum_workgroupworkgroup_size.y * GLF_merged3_0_1_3_1_1_13_2_1_14gidnum_workgroupworkgroup_size.z;
 buf[GLF_merged3_0_1_3_1_1_13_2_1_14gidnum_workgroupworkgroup_size.x] = 1;
 buf[(GLF_merged3_0_1_3_1_1_13_2_1_14gidnum_workgroupworkgroup_size.x + 1) % total_threads] = 2;
}
