#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_10 {
 mat2 _f0;
} ;

struct _GLF_struct_11 {
 _GLF_struct_10 _f0;
} ;

struct _GLF_struct_8 {
 mat4 _f0;
 bvec4 _f1;
 mat4x3 _f2;
 mat3x2 _f3;
 ivec4 _f4;
} ;

struct _GLF_struct_9 {
 _GLF_struct_8 _f0;
} ;

struct _GLF_struct_6 {
 uint _f0;
} ;

struct _GLF_struct_5 {
 vec2 _f0;
 bvec2 _f1;
} ;

struct _GLF_struct_4 {
 bvec3 _f0;
 mat2x3 _f1;
} ;

struct _GLF_struct_3 {
 ivec2 _f0;
 bool _f1;
 uvec2 _f2;
 uvec2 _f3;
 uint _f4;
 mat2 _f5;
} ;

struct _GLF_struct_7 {
 _GLF_struct_3 _f0;
 ivec4 _f1;
 mat2x3 _f2;
 _GLF_struct_4 _f3;
 bool _f4;
 _GLF_struct_5 _f5;
 _GLF_struct_6 _f6;
} ;

struct _GLF_struct_1 {
 ivec3 _f0;
 mat4x3 _f1;
 vec4 _f2;
} ;

struct _GLF_struct_0 {
 mat3x4 _f0;
 bvec4 _f1;
 vec3 _f2;
 vec4 _f3;
 uint _f4;
} ;

struct _GLF_struct_2 {
 _GLF_struct_0 _f0;
 ivec2 _f1;
 _GLF_struct_1 _f2;
 float _f3;
 mat2x4 _f4;
} ;

struct _GLF_struct_12 {
 _GLF_struct_2 _f0;
 _GLF_struct_7 _f1;
 mat2x3 _f2;
 _GLF_struct_9 _f3;
 mat2 _f4;
 uint gid;
 _GLF_struct_11 _f5;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 _GLF_struct_12 _GLF_struct_replacement_12 = _GLF_struct_12(_GLF_struct_2(_GLF_struct_0(mat3x4(1.0), bvec4(true), vec3(1.0), vec4(1.0), 1u), ivec2(1), _GLF_struct_1(ivec3(1), mat4x3(1.0), vec4(1.0)), 1.0, mat2x4(1.0)), _GLF_struct_7(_GLF_struct_3(ivec2(1), true, uvec2(1u), uvec2(1u), 1u, mat2(1.0)), ivec4(1), mat2x3(1.0), _GLF_struct_4(bvec3(true), mat2x3(1.0)), true, _GLF_struct_5(vec2(1.0), bvec2(true)), _GLF_struct_6(1u)), mat2x3(1.0), _GLF_struct_9(_GLF_struct_8(mat4(1.0), bvec4(true), mat4x3(1.0), mat3x2(1.0), ivec4(1))), mat2(1.0), gl_GlobalInvocationID.x, _GLF_struct_11(_GLF_struct_10(mat2(1.0))));
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint total_threads = num_workgroup * workgroup_size;
 buf[_GLF_struct_replacement_12.gid] = 1;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(subgroup_local_id + 1 < subgroup_size)
    {
     int i = 0;
     buf[(_GLF_struct_replacement_12.gid + 1) % total_threads] = 2;
    }
   else
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
      {
       buf[(_GLF_struct_replacement_12.gid + 1) % total_threads] = 2;
      }
    }
  }
 else
  {
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
