#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint gid = gl_GlobalInvocationID.x;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, gl_WorkGroupSize.x));
 uint total_threads = num_workgroup * workgroup_size;
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(injectionSwitch.y), clamp(_GLF_IDENTITY(float(injectionSwitch.y), float(mat2x4(float(injectionSwitch.y), 0.0, 0.0, sqrt(1.0), 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0, 0.0))), float(injectionSwitch.y), float(injectionSwitch.y))), float(_GLF_FUZZED(-157.029)), bool(false))), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))), (min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(0.8), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(71.27)), bvec2(true, false))), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) / vec2(1.0, 1.0)))), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))))) : _GLF_FUZZED(abs(vec2(3313.3875, 0.2))))).y))))))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       do
        {
         if(subgroup_local_id + 1 < subgroup_size)
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             do
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(7, _GLF_IDENTITY((7) + (_GLF_IDENTITY(0 & 44858, (_GLF_IDENTITY(0 & _GLF_IDENTITY(44858, 0 | (44858)), (false ? _GLF_FUZZED(_injected_loop_counter) : 0 & _GLF_IDENTITY(44858, 0 | (44858))))) | (0 & 44858))), _GLF_IDENTITY(int(ivec3((7) + (_GLF_IDENTITY(0 & 44858, (_GLF_IDENTITY(0 & _GLF_IDENTITY(44858, 0 | (44858)), (false ? _GLF_FUZZED(_injected_loop_counter) : 0 & _GLF_IDENTITY(44858, 0 | (44858))))) | (0 & 44858))), 1, 0)), (int(ivec3((7) + (_GLF_IDENTITY(0 & 44858, (_GLF_IDENTITY(0 & _GLF_IDENTITY(44858, 0 | (44858)), (false ? _GLF_FUZZED(_injected_loop_counter) : 0 & _GLF_IDENTITY(44858, 0 | (44858))))) | (0 & 44858))), 1, 0))) / 1)))), int(7))) >> _GLF_IDENTITY(int(7), int(7)))); _injected_loop_counter ++)
                  {
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY((0 << _GLF_IDENTITY(int(0), int(0))), (true ? (0 << _GLF_IDENTITY(int(0), int(0))) : _GLF_FUZZED(_injected_loop_counter)))); _injected_loop_counter --)
                      {
                       for(int _injected_loop_counter = _GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (1))), 1)), 1)))); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(bool(bvec4(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x)), bool(bvec4(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x)), false, false, true))), true && (_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(false, ! (! (false))), true, true)), bool(bool(bool(bvec4(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))))), false, true, true)))))); _injected_loop_counter --)
                        {
                         do
                          {
                           if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) && true)))
                            {
                             if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! _GLF_IDENTITY((! (_GLF_WRAPPED_IF_FALSE(false))), (_GLF_IDENTITY((! (_GLF_WRAPPED_IF_FALSE(false))), ! (! (_GLF_IDENTITY((! (_GLF_WRAPPED_IF_FALSE(false))), ! (! ((! (_GLF_WRAPPED_IF_FALSE(false)))))))))) && true)))
                              {
                              }
                             else
                              {
                               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(ivec3(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 | (1))) >> 0), 1, 1)))) | _GLF_IDENTITY(0, ~ (~ (0))))); _injected_loop_counter ++)
                                {
                                 if(_GLF_WRAPPED_IF_FALSE(false))
                                  {
                                  }
                                 else
                                  {
                                   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch), mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(-941.945), ((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))[1]), vec2(mat3(vec2(_GLF_FUZZED(-941.945), ((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))[1]), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 1.0, 0.0, 1.0))), vec2(((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))[0], _GLF_FUZZED(781.166)), bvec2(true, false))), ((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)) + vec2(0.0, 0.0))).x > injectionSwitch.y))), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))))) || false, _GLF_IDENTITY(! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)) || false), true && (_GLF_IDENTITY(! ((_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), false, true)))))))) || false), (! ((_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)) || false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_IDENTITY(_GLF_IDENTITY(! ((_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false), (! ((_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)) || false), true && (_GLF_IDENTITY(! ((_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))) || false), (! ((_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)) || false)))))))))
                                    {
                                    }
                                   else
                                    {
                                     atomicStore(buf[(gid + 1) % total_threads], uint(2), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (0 << _GLF_IDENTITY(int(5), int(5))) | (4)), max(_GLF_IDENTITY(_GLF_IDENTITY(4, (0 << _GLF_IDENTITY(int(5), int(5))) | (4)), (_GLF_IDENTITY(4, (0 << _GLF_IDENTITY(int(5), int(5))) | (4))) | 0), _GLF_IDENTITY(4, (0 << _GLF_IDENTITY(int(5), int(5))) | (4)))), ~ (~ (_GLF_IDENTITY(4, (0 << _GLF_IDENTITY(int(5), int(5))) | (4))))), 64, 4);
                                    }
                                  }
                                }
                              }
                            }
                           else
                            {
                            }
                          }
                         while(_GLF_WRAPPED_LOOP(false));
                        }
                      }
                    }
                  }
                }
               else
                {
                }
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
           if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(0, (_GLF_IDENTITY(0, clamp(0, 0, 0))) << 0)], min(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).x < injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).x < injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).x < injectionSwitch.y)))) && true)), true), bvec2(bvec3(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[_GLF_IDENTITY(1, int(ivec3(1, (1 & 1), 1)))])), vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], _GLF_IDENTITY(min(injectionSwitch[0], injectionSwitch[0]), (min(injectionSwitch[0], injectionSwitch[0])) + 0.0)), injectionSwitch[1])))).x < injectionSwitch.y), false || ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[_GLF_IDENTITY(1, int(ivec3(1, (1 & 1), 1)))])), vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], _GLF_IDENTITY(min(injectionSwitch[0], injectionSwitch[0]), (min(injectionSwitch[0], injectionSwitch[0])) + 0.0)), injectionSwitch[1])))).x < injectionSwitch.y))), true), false)))))), _GLF_IDENTITY(bool(bvec4(_GLF_TRUE(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).x < injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec3(injectionSwitch, 1.0)), max(vec2(vec3(injectionSwitch, 1.0)), _GLF_IDENTITY(vec2(vec3(injectionSwitch, 1.0)), vec2(1.0, 1.0) * (vec2(vec3(injectionSwitch, 1.0)))))))[0], min(_GLF_IDENTITY(injectionSwitch[0], min(_GLF_IDENTITY(injectionSwitch[0], min(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[0])), injectionSwitch[0])), injectionSwitch[0])), injectionSwitch[1])).x < injectionSwitch.y), true), bvec2(bvec3(bvec2((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(0, ~ (~ (0)))], min(injectionSwitch[0], injectionSwitch[0])), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))[1])).x < injectionSwitch.y), true), false)))))), false, true, false)), (_GLF_IDENTITY(bool(bvec4(_GLF_TRUE(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(9.4))), injectionSwitch.y))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).x < injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).x < injectionSwitch.y), true), bvec2(bvec3(bvec2((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(0, ~ (~ (0)))], min(injectionSwitch[0], injectionSwitch[0])), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))[1])).x < injectionSwitch.y), true), false)))), bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).x < injectionSwitch.y), true), bvec2(bvec3(bvec2((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(0, ~ (~ (0)))], min(injectionSwitch[0], injectionSwitch[0])), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))[1])).x < injectionSwitch.y), true), false)))), false || (bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).x < injectionSwitch.y), true), bvec2(bvec3(bvec2((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(0, ~ (~ (0)))], min(injectionSwitch[0], injectionSwitch[0])), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))[1])).x < injectionSwitch.y), true), false)))))), false, true, false))))), false, true, false)), ! (! (bool(bvec4(_GLF_TRUE(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) - 0.0))), min(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).x, clamp(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) - 0.0))), min(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).x, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) - 0.0))), min(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).x, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) - 0.0))), min(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).x)) < injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).x < injectionSwitch.y), true), bvec2(bvec3(bvec2((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(0, ~ (~ (0)))], min(injectionSwitch[0], injectionSwitch[0])), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))[1])).x < injectionSwitch.y), true), false)))))), false, true, false)))))) && true))))
            {
             subgroupAll(false);
            }
           else
            {
            }
          }
         else
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             do
              {
               atomicStore(buf[_GLF_IDENTITY((_GLF_IDENTITY(gid, uint(_GLF_IDENTITY(uvec4(gid, 1u, 1u, ((0u >> _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), (uint(6u)) - 0u))) ^ _GLF_IDENTITY(0u, uint(uvec2(_GLF_IDENTITY(0u, ~ (~ (0u))), uint(_GLF_ONE(1.0, injectionSwitch.y))))))), (uvec4(gid, 1u, 1u, ((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), (_GLF_IDENTITY(uint(6u), uint(6u))) / 1u)) ^ _GLF_IDENTITY(0u, (0u) | (0u))))) | (_GLF_IDENTITY(uvec4(gid, 1u, 1u, ((0u >> _GLF_IDENTITY(uint(6u), uint(6u))) ^ 0u)), (uvec4(gid, 1u, 1u, ((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), min(_GLF_IDENTITY(uint(6u), uint(uvec2(uint(6u), 1u))), uint(6u))), uint(6u))) ^ 0u))) ^ uvec4(0u, 0u, 0u, 0u)))))) + 1), _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(gid, uint(_GLF_IDENTITY(uvec4(gid, 1u, 1u, ((0u >> _GLF_IDENTITY(uint(6u), uint(6u))) ^ 0u)), _GLF_IDENTITY((uvec4(gid, 1u, 1u, ((0u >> _GLF_IDENTITY(uint(6u), uint(6u))) ^ 0u))) | (_GLF_IDENTITY(uvec4(_GLF_IDENTITY(gid, (_GLF_IDENTITY(gid, ~ (_GLF_IDENTITY(~ (gid), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(~ (gid), min(~ (gid), ~ (gid)))))))) | (gid)), 1u, 1u, ((0u >> _GLF_IDENTITY(uint(6u), uint(6u))) ^ 0u)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uvec4(gid, 1u, 1u, ((0u >> _GLF_IDENTITY(uint(6u), uint(6u))) ^ 0u)), max(uvec4(gid, 1u, 1u, ((0u >> _GLF_IDENTITY(uint(6u), uint(6u))) ^ 0u)), _GLF_IDENTITY(uvec4(gid, 1u, 1u, ((0u >> _GLF_IDENTITY(uint(6u), uint(6u))) ^ 0u)), (uvec4(gid, 1u, 1u, ((0u >> _GLF_IDENTITY(uint(6u), uint(6u))) ^ 0u))) ^ uvec4(0u, 0u, 0u, 0u)))), (_GLF_IDENTITY(uvec4(gid, 1u, 1u, ((0u >> _GLF_IDENTITY(uint(6u), uint(6u))) ^ 0u)), max(uvec4(gid, 1u, 1u, ((0u >> _GLF_IDENTITY(uint(6u), uint(6u))) ^ 0u)), _GLF_IDENTITY(uvec4(gid, 1u, 1u, ((0u >> _GLF_IDENTITY(uint(6u), uint(6u))) ^ 0u)), (uvec4(gid, 1u, 1u, ((0u >> _GLF_IDENTITY(uint(6u), uint(6u))) ^ 0u))) ^ uvec4(0u, 0u, 0u, 0u))))) | (_GLF_IDENTITY(uvec4(gid, 1u, 1u, ((0u >> _GLF_IDENTITY(uint(6u), uint(6u))) ^ 0u)), max(uvec4(gid, 1u, 1u, ((0u >> _GLF_IDENTITY(uint(6u), uint(6u))) ^ 0u)), _GLF_IDENTITY(uvec4(gid, 1u, 1u, ((0u >> _GLF_IDENTITY(uint(6u), uint(6u))) ^ 0u)), (uvec4(gid, 1u, 1u, ((0u >> _GLF_IDENTITY(uint(6u), uint(6u))) ^ 0u))) ^ uvec4(0u, 0u, 0u, 0u))))))) ^ uvec4(0u, 0u, 0u, 0u), min((_GLF_IDENTITY(uvec4(gid, 1u, 1u, ((0u >> _GLF_IDENTITY(uint(6u), uint(6u))) ^ 0u)), max(uvec4(gid, 1u, 1u, ((0u >> _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), 0u ^ (uint(6u))))) ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_id) : 0u))) - 0u))), _GLF_IDENTITY(uvec4(gid, 1u, 1u, (_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(6u), uint(6u))) ^ 0u, ((0u >> _GLF_IDENTITY(uint(6u), uint(6u))) ^ 0u) << 0u))), (uvec4(gid, 1u, 1u, ((0u >> _GLF_IDENTITY(uint(6u), uint(6u))) ^ 0u))) ^ uvec4(0u, 0u, 0u, 0u))))) ^ uvec4(0u, 0u, 0u, 0u), (_GLF_IDENTITY(uvec4(gid, 1u, 1u, ((0u >> _GLF_IDENTITY(uint(6u), uint(6u))) ^ 0u)), max(uvec4(gid, 1u, 1u, _GLF_IDENTITY(((0u >> _GLF_IDENTITY(uint(6u), uint(6u))) ^ 0u), (((0u >> _GLF_IDENTITY(uint(6u), uint(6u))) ^ 0u)) / 1u)), _GLF_IDENTITY(uvec4(gid, 1u, 1u, ((0u >> _GLF_IDENTITY(uint(6u), uint(6u))) ^ 0u)), (uvec4(gid, 1u, 1u, ((0u >> _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), uint(uvec4(_GLF_IDENTITY(uint(6u), 0u ^ (uint(6u))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u, 1u))))) ^ 0u))) ^ uvec4(0u, 0u, 0u, 0u))))) ^ _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), clamp(_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (uvec4(0u, 0u, 0u, 0u)) | uvec4(0u, 0u, 0u, 0u)), _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (false ? _GLF_FUZZED(uvec4(12835u, 160647u, 161908u, 165941u)) : uvec4(0u, 0u, 0u, 0u))), uvec4(0u, 0u, 0u, 0u))))))), uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + ((uvec4(gid, 1u, 1u, ((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), min(_GLF_IDENTITY(uint(6u), uint(6u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), 0u ^ (_GLF_IDENTITY(uint(6u), uint(6u))))))) ^ 0u))) | (_GLF_IDENTITY(uvec4(_GLF_IDENTITY(gid, (gid) | (gid)), 1u, 1u, ((0u >> _GLF_IDENTITY(uint(6u), uint(6u))) ^ 0u)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(uvec4(gid, 1u, 1u, ((0u >> _GLF_IDENTITY(uint(6u), uint(6u))) ^ 0u)), max(uvec4(gid, 1u, 1u, _GLF_IDENTITY(((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), (_GLF_IDENTITY(uint(6u), uint(6u))) ^ 0u)) ^ 0u), min(((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), (_GLF_IDENTITY(uint(6u), uint(6u))) ^ 0u)) ^ 0u), ((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), (_GLF_IDENTITY(uint(6u), uint(6u))) ^ 0u)) ^ 0u)))), _GLF_IDENTITY(uvec4(gid, 1u, 1u, ((0u >> _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), max(uint(6u), _GLF_IDENTITY(uint(6u), (uint(6u)) | (_GLF_IDENTITY(uint(6u), max(uint(6u), uint(6u))))))))) ^ 0u)), (_GLF_IDENTITY(uvec4(gid, 1u, _GLF_IDENTITY(1u, (1u) ^ 0u), ((0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (6u) * (1u ^ 0u))), _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (6u) / 1u)), (uint(6u)) - 0u))) ^ 0u)), (uvec4(gid, 1u, 1u, ((0u >> _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), (uint(6u)) - 0u))) ^ 0u))) - uvec4(0u, 0u, 0u, 0u))) ^ uvec4(0u, 0u, 0u, 0u))))), ((_GLF_IDENTITY(uvec4(gid, 1u, 1u, ((0u >> _GLF_IDENTITY(uint(6u), uint(6u))) ^ 0u)), max(uvec4(gid, 1u, 1u, _GLF_IDENTITY(((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), (_GLF_IDENTITY(uint(6u), uint(6u))) ^ 0u)) ^ 0u), min(((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), (_GLF_IDENTITY(uint(6u), uint(6u))) ^ 0u)) ^ 0u), ((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), (_GLF_IDENTITY(uint(6u), uint(6u))) ^ 0u)) ^ 0u)))), _GLF_IDENTITY(uvec4(gid, 1u, 1u, ((0u >> _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), max(uint(6u), _GLF_IDENTITY(uint(6u), (uint(6u)) | (_GLF_IDENTITY(uint(6u), max(uint(6u), uint(6u))))))))) ^ 0u)), (_GLF_IDENTITY(uvec4(gid, 1u, _GLF_IDENTITY(1u, (1u) ^ 0u), ((0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (6u) * (1u ^ 0u))), _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (6u) / 1u)), (uint(6u)) - 0u))) ^ 0u)), (uvec4(gid, 1u, 1u, ((0u >> _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), (uint(6u)) - 0u))) ^ 0u))) - uvec4(0u, 0u, 0u, 0u))) ^ uvec4(0u, 0u, 0u, 0u)))))) | ((_GLF_IDENTITY(uvec4(gid, 1u, 1u, ((0u >> _GLF_IDENTITY(uint(6u), uint(6u))) ^ 0u)), max(uvec4(gid, 1u, 1u, _GLF_IDENTITY(((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), (_GLF_IDENTITY(uint(6u), uint(6u))) ^ 0u)) ^ 0u), min(((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), (_GLF_IDENTITY(uint(6u), uint(6u))) ^ 0u)) ^ 0u), ((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), (_GLF_IDENTITY(uint(6u), uint(6u))) ^ 0u)) ^ 0u)))), _GLF_IDENTITY(uvec4(gid, 1u, 1u, ((0u >> _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), max(uint(6u), _GLF_IDENTITY(uint(6u), (uint(6u)) | (_GLF_IDENTITY(uint(6u), max(uint(6u), uint(6u))))))))) ^ 0u)), (_GLF_IDENTITY(uvec4(gid, 1u, _GLF_IDENTITY(1u, (1u) ^ 0u), ((0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (6u) * (1u ^ 0u))), _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (6u) / 1u)), (uint(6u)) - 0u))) ^ 0u)), (uvec4(gid, 1u, 1u, ((0u >> _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), (uint(6u)) - 0u))) ^ 0u))) - uvec4(0u, 0u, 0u, 0u))) ^ uvec4(0u, 0u, 0u, 0u))))))) ^ uvec4(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u, 0u), min((_GLF_IDENTITY(uvec4(gid, 1u, 1u, ((0u >> _GLF_IDENTITY(uint(6u), uint(6u))) ^ 0u)), max(uvec4(gid, 1u, 1u, ((0u >> _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), 0u ^ (uint(6u))))) ^ 0u)), _GLF_IDENTITY(uvec4(gid, 1u, 1u, ((0u >> _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), (uint(6u)) | (uint(6u))))) ^ 0u)), (_GLF_IDENTITY(uvec4(gid, 1u, 1u, ((0u >> _GLF_IDENTITY(uint(6u), uint(6u))) ^ 0u)), (_GLF_IDENTITY(uvec4(gid, 1u, 1u, ((0u >> _GLF_IDENTITY(uint(6u), uint(6u))) ^ 0u)), (uvec4(gid, 1u, 1u, ((0u >> _GLF_IDENTITY(uint(6u), uint(6u))) ^ 0u))) ^ uvec4(0u, 0u, 0u, 0u))) - uvec4(0u, 0u, 0u, 0u))) ^ uvec4(0u, 0u, 0u, 0u))))) ^ uvec4(0u, 0u, 0u, 0u), (_GLF_IDENTITY(uvec4(gid, 1u, 1u, ((0u >> _GLF_IDENTITY(uint(6u), uint(6u))) ^ 0u)), max(uvec4(gid, 1u, 1u, _GLF_IDENTITY(((_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 1u * (0u))) - 0u) >> _GLF_IDENTITY(uint(6u), uint(6u))) ^ 0u), (((0u >> _GLF_IDENTITY(uint(6u), uint(6u))) ^ 0u)) / 1u)), _GLF_IDENTITY(uvec4(gid, 1u, 1u, ((0u >> _GLF_IDENTITY(uint(6u), uint(6u))) ^ 0u)), (uvec4(gid, 1u, 1u, ((0u >> _GLF_IDENTITY(uint(6u), uint(6u))) ^ 0u))) ^ uvec4(0u, 0u, 0u, 0u))))) ^ uvec4(0u, 0u, 0u, 0u)))))))))) + _GLF_IDENTITY(1, 0 ^ (1)), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(gid, uint(_GLF_IDENTITY(uvec4(gid, _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec4(1u, 0u, 0u, ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))))), (uint(uvec4(1u, 0u, 0u, ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))))) - 0u)), 1u, ((0u >> _GLF_IDENTITY(uint(6u), uint(6u))) ^ 0u)), (_GLF_IDENTITY(uvec4(gid, 1u, 1u, ((0u >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), max(_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), 0u + (_GLF_IDENTITY(uint(6u), uint(6u))))) | 0u), _GLF_IDENTITY(uint(6u), uint(6u)))), 1u * (_GLF_IDENTITY(uint(6u), uint(6u))))) ^ 0u)), (uvec4(gid, 1u, 1u, ((0u >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), max(_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), 0u + (_GLF_IDENTITY(uint(6u), uint(6u))))) | 0u), _GLF_IDENTITY(uint(6u), uint(6u)))), 1u * (_GLF_IDENTITY(uint(6u), uint(6u))))) ^ 0u))) << uvec4(0u, 0u, 0u, 0u))) | (_GLF_IDENTITY(uvec4(gid, 1u, 1u, ((0u >> _GLF_IDENTITY(uint(6u), uint(6u))) ^ 0u)), (uvec4(gid, 1u, 1u, _GLF_IDENTITY(((0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, max(6u, 6u))), uint(_GLF_IDENTITY(6u, (6u) << 0u)))) ^ 0u), _GLF_IDENTITY((((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), 1u * (_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(6u, max(6u, _GLF_IDENTITY(6u, 0u + (6u)))), (6u) * 1u)), uint(6u))))) ^ 0u)), max(_GLF_IDENTITY((((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), 1u * (_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (6u) * 1u)), uint(6u))))) ^ 0u)), max(_GLF_IDENTITY((((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), 1u * (_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (6u) * 1u)), uint(6u))))) ^ 0u)), max((((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), 1u * (_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (_GLF_IDENTITY(6u, max(6u, 6u))) * 1u)), uint(6u))))) ^ 0u)), (((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), 1u * _GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (6u) * 1u)), uint(6u))), uint(uvec2((_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (6u) * 1u)), uint(6u))), 1u))))) ^ 0u)))), (((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), 1u * (_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (6u) * 1u)), uint(6u))))) ^ 0u)))), (((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), 1u * (_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (6u) * 1u)), uint(6u))))) ^ 0u)))) | (((0u >> _GLF_IDENTITY(uint(6u), uint(6u))) ^ _GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (0u) | (0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (0u) | (0u)))), min(_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (0u) | (0u)))), _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (0u) | (0u))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uvec2(0u, 0u))), min(0u, _GLF_IDENTITY(0u, (0u) | (0u))))))))))) ^ uvec4(_GLF_IDENTITY(0u, (0u) << 0u), 0u, 0u, 0u)))))) + 1), (false ? _GLF_FUZZED(atomicCompSwap(workgroup_size, (gid >> workgroup_size), 151791u)) : uint(_GLF_IDENTITY(gid, uint(_GLF_IDENTITY(uvec4(gid, _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec4(1u, 0u, 0u, ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))))), (uint(uvec4(1u, 0u, 0u, ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))))) - 0u)), 1u, ((0u >> _GLF_IDENTITY(uint(6u), uint(6u))) ^ 0u)), (_GLF_IDENTITY(uvec4(gid, 1u, 1u, ((0u >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), max(_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), 0u + (_GLF_IDENTITY(uint(6u), uint(6u))))) | 0u), _GLF_IDENTITY(uint(6u), uint(6u)))), 1u * (_GLF_IDENTITY(uint(6u), uint(6u))))) ^ 0u)), (uvec4(gid, 1u, 1u, ((0u >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), max(_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), 0u + (_GLF_IDENTITY(uint(6u), uint(6u))))) | 0u), _GLF_IDENTITY(uint(6u), uint(6u)))), 1u * (_GLF_IDENTITY(uint(6u), uint(6u))))) ^ 0u))) << uvec4(0u, 0u, 0u, 0u))) | (_GLF_IDENTITY(uvec4(gid, 1u, 1u, ((0u >> _GLF_IDENTITY(uint(6u), uint(6u))) ^ 0u)), (uvec4(gid, 1u, 1u, _GLF_IDENTITY(((0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, max(6u, 6u))), uint(_GLF_IDENTITY(6u, (6u) << 0u)))) ^ 0u), _GLF_IDENTITY((((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), 1u * (_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(6u, max(6u, _GLF_IDENTITY(6u, 0u + (6u)))), (6u) * 1u)), uint(6u))))) ^ 0u)), max(_GLF_IDENTITY((((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), 1u * (_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (6u) * 1u)), uint(6u))))) ^ 0u)), max(_GLF_IDENTITY((((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), 1u * (_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (6u) * 1u)), uint(6u))))) ^ 0u)), max((((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), 1u * (_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (_GLF_IDENTITY(6u, max(6u, 6u))) * 1u)), uint(6u))))) ^ 0u)), (((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), 1u * _GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (6u) * 1u)), uint(6u))), uint(uvec2((_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (6u) * 1u)), uint(6u))), 1u))))) ^ 0u)))), (((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), 1u * (_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (6u) * 1u)), uint(6u))))) ^ 0u)))), (((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), 1u * (_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (6u) * 1u)), uint(6u))))) ^ 0u)))) | (((0u >> _GLF_IDENTITY(uint(6u), uint(6u))) ^ _GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (0u) | (0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (0u) | (0u)))), min(_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (0u) | (0u)))), _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (0u) | (0u))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uvec2(0u, 0u))), min(0u, _GLF_IDENTITY(0u, (0u) | (0u))))))))))) ^ uvec4(_GLF_IDENTITY(0u, (0u) << 0u), 0u, 0u, 0u)))))) + 1))))))), 0u | (((_GLF_IDENTITY(_GLF_IDENTITY(gid, uint(_GLF_IDENTITY(uvec4(gid, 1u, 1u, ((0u >> _GLF_IDENTITY(uint(6u), uint(6u))) ^ 0u)), _GLF_IDENTITY((uvec4(gid, 1u, 1u, ((0u >> _GLF_IDENTITY(uint(6u), uint(6u))) ^ 0u))) | (_GLF_IDENTITY(uvec4(_GLF_IDENTITY(gid, (gid) | (gid)), 1u, 1u, ((0u >> _GLF_IDENTITY(uint(6u), uint(6u))) ^ 0u)), _GLF_IDENTITY((_GLF_IDENTITY(uvec4(gid, 1u, 1u, ((0u >> _GLF_IDENTITY(uint(6u), uint(6u))) ^ 0u)), max(uvec4(gid, 1u, 1u, ((0u >> _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), clamp(uint(6u), _GLF_IDENTITY(uint(6u), 0u ^ (uint(6u))), uint(6u))))) ^ 0u)), _GLF_IDENTITY(uvec4(gid, 1u, 1u, ((0u >> _GLF_IDENTITY(uint(6u), uint(6u))) ^ 0u)), (uvec4(gid, _GLF_IDENTITY(1u, max(1u, 1u)), 1u, ((0u >> _GLF_IDENTITY(uint(6u), uint(6u))) ^ 0u))) ^ uvec4(0u, 0u, 0u, 0u))))) ^ uvec4(0u, 0u, 0u, 0u), min((_GLF_IDENTITY(uvec4(gid, 1u, 1u, ((_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(6u), uint(6u)), (0u >> _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), (uint(6u)) | 0u))) - 0u)) ^ 0u)), max(uvec4(gid, 1u, 1u, ((0u >> _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), 0u ^ (uint(6u))))) ^ 0u)), _GLF_IDENTITY(uvec4(gid, 1u, 1u, ((0u >> _GLF_IDENTITY(uint(6u), uint(6u))) ^ 0u)), (uvec4(gid, 1u, 1u, ((0u >> _GLF_IDENTITY(uint(6u), uint(6u))) ^ 0u))) ^ uvec4(0u, 0u, 0u, 0u))))) ^ uvec4(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u)))) | 0u), 0u, 0u), (_GLF_IDENTITY(uvec4(gid, 1u, 1u, ((0u >> _GLF_IDENTITY(uint(6u), uint(6u))) ^ 0u)), max(uvec4(gid, 1u, 1u, _GLF_IDENTITY(((0u >> _GLF_IDENTITY(uint(6u), uint(6u))) ^ 0u), (((0u >> _GLF_IDENTITY(uint(6u), uint(6u))) ^ 0u)) / 1u)), _GLF_IDENTITY(uvec4(gid, 1u, 1u, ((0u >> _GLF_IDENTITY(uint(6u), uint(6u))) ^ 0u)), (uvec4(gid, 1u, 1u, ((0u >> _GLF_IDENTITY(uint(6u), uint(6u))) ^ 0u))) ^ uvec4(0u, 0u, 0u, 0u))))) ^ uvec4(0u, 0u, 0u, 0u))))), uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + ((uvec4(gid, 1u, 1u, ((0u >> _GLF_IDENTITY(uint(6u), uint(6u))) ^ 0u))) | (_GLF_IDENTITY(uvec4(_GLF_IDENTITY(gid, (gid) | (gid)), 1u, 1u, ((0u >> _GLF_IDENTITY(uint(6u), uint(6u))) ^ 0u)), _GLF_IDENTITY((_GLF_IDENTITY(uvec4(gid, 1u, 1u, ((0u >> _GLF_IDENTITY(uint(6u), uint(6u))) ^ _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))), max(uvec4(gid, 1u, 1u, ((0u >> _GLF_IDENTITY(uint(6u), uint(6u))) ^ 0u)), _GLF_IDENTITY(uvec4(gid, 1u, 1u, _GLF_IDENTITY(((0u >> _GLF_IDENTITY(uint(6u), uint(6u))) ^ 0u), (((0u >> _GLF_IDENTITY(uint(6u), uint(6u))) ^ 0u)) << 0u)), (_GLF_IDENTITY(uvec4(gid, 1u, 1u, ((0u >> _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), (uint(6u)) - 0u))) ^ 0u)), _GLF_IDENTITY((uvec4(gid, 1u, 1u, ((0u >> _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), (uint(6u)) - 0u))) ^ 0u))) - uvec4(0u, 0u, 0u, 0u), (_GLF_IDENTITY((uvec4(gid, 1u, 1u, ((0u >> _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), (uint(6u)) - 0u))) ^ 0u))) - uvec4(0u, 0u, 0u, 0u), ((uvec4(gid, 1u, 1u, ((0u >> _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), (uint(6u)) - 0u))) ^ 0u))) - uvec4(0u, 0u, 0u, 0u)) / uvec4(1u, 1u, 1u, 1u))) | uvec4(0u, 0u, 0u, 0u)))) ^ uvec4(0u, 0u, 0u, 0u))))) ^ uvec4(0u, 0u, 0u, 0u), min((_GLF_IDENTITY(_GLF_IDENTITY(uvec4(gid, 1u, 1u, ((0u >> _GLF_IDENTITY(uint(6u), uint(6u))) ^ 0u)), max(uvec4(gid, 1u, 1u, ((0u >> _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), 0u ^ (uint(6u))))) ^ 0u)), _GLF_IDENTITY(uvec4(gid, 1u, 1u, ((0u >> _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), (uint(6u)) | (uint(6u))))) ^ 0u)), (uvec4(gid, 1u, 1u, ((0u >> _GLF_IDENTITY(uint(6u), uint(6u))) ^ 0u))) ^ uvec4(0u, 0u, 0u, 0u)))), (_GLF_IDENTITY(uvec4(gid, 1u, 1u, ((0u >> _GLF_IDENTITY(uint(6u), uint(6u))) ^ 0u)), max(uvec4(gid, 1u, 1u, ((0u >> _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), 0u ^ (uint(6u))))) ^ 0u)), _GLF_IDENTITY(uvec4(gid, 1u, 1u, ((0u >> _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), (uint(6u)) | (uint(6u))))) ^ 0u)), (uvec4(gid, 1u, 1u, ((0u >> _GLF_IDENTITY(uint(6u), uint(6u))) ^ 0u))) ^ uvec4(0u, 0u, 0u, 0u))))) << uvec4(0u, 0u, 0u, 0u))) ^ _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (uvec4(0u, 0u, 0u, 0u)) << uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(uvec4(gid, 1u, 1u, ((0u >> _GLF_IDENTITY(uint(6u), uint(6u))) ^ 0u)), max(uvec4(gid, 1u, 1u, _GLF_IDENTITY(((0u >> _GLF_IDENTITY(uint(6u), uint(6u))) ^ 0u), _GLF_IDENTITY((((0u >> _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), (true ? uint(6u) : _GLF_FUZZED(uint(-8420.4563)))))) ^ 0u)), max((((0u >> _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), (true ? uint(6u) : _GLF_FUZZED(uint(-8420.4563)))))) ^ 0u)), (((0u >> _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), (true ? uint(6u) : _GLF_FUZZED(uint(-8420.4563)))))) ^ 0u)))) / 1u)), _GLF_IDENTITY(uvec4(gid, 1u, 1u, ((0u >> _GLF_IDENTITY(uint(6u), uint(6u))) ^ 0u)), (uvec4(gid, 1u, 1u, ((0u >> _GLF_IDENTITY(uint(6u), uint(6u))) ^ 0u))) ^ uvec4(0u, 0u, 0u, 0u))))) ^ uvec4(0u, 0u, 0u, 0u)))))))))) + 1, uint(uint(_GLF_IDENTITY(gid, uint(_GLF_IDENTITY(uvec4(gid, 1u, 1u, ((_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(6u), uint(6u)), 1u * (0u >> _GLF_IDENTITY(uint(6u), uint(6u))))) ^ 0u)), (uvec4(gid, 1u, 1u, ((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), 1u * (_GLF_IDENTITY(uint(6u), uint(6u))))) ^ 0u))) | (_GLF_IDENTITY(uvec4(gid, 1u, 1u, ((0u >> _GLF_IDENTITY(uint(6u), uint(6u))) ^ 0u)), (uvec4(gid, 1u, 1u, _GLF_IDENTITY(_GLF_IDENTITY(((0u >> _GLF_IDENTITY(uint(6u), uint(_GLF_IDENTITY(6u, (6u) << 0u)))) ^ 0u), _GLF_IDENTITY((((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), 1u * (_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (6u) * 1u)), uint(6u))))) ^ 0u)), max(_GLF_IDENTITY((((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), 1u * (_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (6u) * 1u)), uint(6u))))) ^ 0u)), max(_GLF_IDENTITY((((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), 1u * (_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (6u) * 1u)), uint(6u))))) ^ 0u)), max((((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), 1u * (_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (6u) * 1u)), uint(6u))))) ^ 0u)), (((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), 1u * (_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (6u) * 1u)), uint(6u))))) ^ 0u)))), (((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), 1u * (_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (6u) * 1u)), uint(6u))))) ^ 0u)))), (((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), 1u * (_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (6u) * 1u)), uint(6u))))) ^ 0u)))) | (((0u >> _GLF_IDENTITY(uint(6u), uint(6u))) ^ _GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (0u) | (0u)))), (_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (0u) | (0u))))) | (_GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uvec2(0u, 0u))), min(0u, _GLF_IDENTITY(0u, (0u) | (0u))))))))), (_GLF_IDENTITY(((0u >> _GLF_IDENTITY(uint(6u), uint(_GLF_IDENTITY(6u, (6u) << 0u)))) ^ 0u), _GLF_IDENTITY((((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), 1u * (_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (6u) * 1u)), _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (6u) >> 0u)), (_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (6u) >> 0u)), (uint(_GLF_IDENTITY(6u, (6u) >> 0u))) >> 0u)) | 0u))))) ^ 0u)), max(_GLF_IDENTITY((((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), 1u * (_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (6u) * _GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, min(1u, 1u)), _GLF_IDENTITY(1u, (1u) >> 0u))))), uint(6u))))) ^ 0u)), max(_GLF_IDENTITY((((0u >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), 1u * (_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (6u) * 1u)), uint(6u)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), 1u * (_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (6u) * 1u)), uint(6u))))))) ^ 0u)), max((((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), 1u * (_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (6u) * 1u)), uint(6u))))) ^ 0u)), (((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), 1u * (_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (6u) * 1u)), uint(6u))))) ^ 0u)))), (((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), 1u * (_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (6u) * 1u)), uint(6u))))) ^ 0u)))), (((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), 1u * (_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (6u) * 1u)), uint(6u))))) ^ 0u)))) | (((0u >> _GLF_IDENTITY(uint(6u), uint(6u))) ^ _GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (0u) | (0u)))), (_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (0u) | (0u))))) | (_GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uvec2(0u, 0u))), min(0u, _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(0u, 0u))) / 1u))))))))))) / (1u & 1u)))) ^ uvec4(0u, 0u, 0u, 0u)))))) + 1))))))) | 0u) % total_threads], _GLF_IDENTITY(uint(2), min(_GLF_IDENTITY(uint(2), (uint(2)) << 0u), uint(2))), 4, 64, 4);
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
           else
            {
            }
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))
            {
            }
           else
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                    {
                     for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0))), true)), ! (! (bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0))), true)))))); _injected_loop_counter --)
                      {
                       subgroupAll(true);
                      }
                    }
                  }
                 else
                  {
                  }
                }
              }
             else
              {
              }
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
    }
   else
    {
    }
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
