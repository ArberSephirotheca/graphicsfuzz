#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 0) uniform buf0 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint gid = gl_GlobalInvocationID.x;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(min(gl_NumWorkGroups, gl_NumWorkGroups), ~ (_GLF_IDENTITY(~ (min(gl_NumWorkGroups, gl_NumWorkGroups)), (false ? _GLF_FUZZED(uvec3(71703u, 191249u, 142586u)) : ~ (min(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(1u, 1u, 1u) * (_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? gl_NumWorkGroups : _GLF_FUZZED(uvec3(32348u, 117738u, 69879u)))))), gl_NumWorkGroups))))))).x, min(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, min(gl_NumWorkGroups.x, gl_NumWorkGroups.x)), ~ (~ (gl_NumWorkGroups.x))), _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)).x, 0u ^ _GLF_IDENTITY((gl_NumWorkGroups.x), ~ (~ ((gl_NumWorkGroups.x)))))));
 uint workgroup_size = gl_WorkGroupSize.x;
 uint total_threads = _GLF_IDENTITY(num_workgroup * workgroup_size, clamp(_GLF_IDENTITY(_GLF_IDENTITY(num_workgroup, max(num_workgroup, num_workgroup)), min(_GLF_IDENTITY(num_workgroup, ~ (~ (num_workgroup))), num_workgroup)) * _GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, (true ? _GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(uint(uint(workgroup_size)), clamp(uint(uint(workgroup_size)), _GLF_IDENTITY(uint(uint(workgroup_size)), clamp(uint(_GLF_IDENTITY(uint(workgroup_size), max(_GLF_IDENTITY(uint(workgroup_size), (uint(workgroup_size)) / 1u), uint(workgroup_size)))), _GLF_IDENTITY(uint(uint(workgroup_size)), min(uint(uint(workgroup_size)), uint(uint(workgroup_size)))), _GLF_IDENTITY(uint(uint(workgroup_size)), (uint(uint(workgroup_size))) | (uint(uint(workgroup_size)))))), _GLF_IDENTITY(uint(uint(workgroup_size)), (false ? _GLF_FUZZED(subgroup_size) : uint(uint(workgroup_size))))))) : _GLF_FUZZED((++ subgroup_size))))) - 0u), _GLF_IDENTITY(num_workgroup * workgroup_size, _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(num_workgroup * workgroup_size, (num_workgroup * workgroup_size) | (num_workgroup * workgroup_size)), 1u, _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED((subgroup_local_id))))), (uvec3(num_workgroup * workgroup_size, 1u, 1u)) | (uvec3(_GLF_IDENTITY(num_workgroup * workgroup_size, ~ (~ (_GLF_IDENTITY(num_workgroup * workgroup_size, ~ (~ (num_workgroup * workgroup_size)))))), 1u, 1u))), uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) >> 0u)) | (_GLF_IDENTITY(uvec3(num_workgroup * workgroup_size, 1u, 1u), (uvec3(num_workgroup * workgroup_size, 1u, 1u)) | (uvec3(_GLF_IDENTITY(num_workgroup * workgroup_size, ~ (~ (_GLF_IDENTITY(num_workgroup * workgroup_size, ~ (~ (num_workgroup * workgroup_size)))))), 1u, 1u)))))), max(uint(_GLF_IDENTITY(uvec3(num_workgroup * workgroup_size, 1u, 1u), (uvec3(num_workgroup * workgroup_size, 1u, 1u)) | (uvec3(_GLF_IDENTITY(num_workgroup * workgroup_size, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(num_workgroup * workgroup_size, ~ (~ (num_workgroup * workgroup_size))))), (0u & _GLF_IDENTITY(143802u, ~ (~ (143802u)))) ^ ((~ (_GLF_IDENTITY(num_workgroup * workgroup_size, ~ (~ (num_workgroup * workgroup_size)))))))), 1u, 1u)))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(num_workgroup * workgroup_size, _GLF_IDENTITY(1u, 0u + (_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, min(1u, 1u)))))), 1u), _GLF_IDENTITY((_GLF_IDENTITY(uvec3(num_workgroup * workgroup_size, _GLF_IDENTITY(1u, (1u) | (1u)), 1u), min(_GLF_IDENTITY(uvec3(num_workgroup * workgroup_size, _GLF_IDENTITY(1u, (1u) | (1u)), 1u), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(uvec3(num_workgroup * workgroup_size, _GLF_IDENTITY(1u, (1u) | (1u)), 1u), ~ (~ (uvec3(num_workgroup * workgroup_size, _GLF_IDENTITY(1u, (1u) | (1u)), 1u)))))), uvec3(num_workgroup * workgroup_size, _GLF_IDENTITY(1u, (1u) | (1u)), 1u)))), uvec3(1u, 1u, _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(1u, 0u ^ (1u)), (1u ^ 0u), 1u)), (uint(uvec3(_GLF_IDENTITY(1u, 0u ^ (1u)), (1u ^ 0u), 1u))) * 1u))) * ((uvec3(num_workgroup * workgroup_size, 1u, 1u)))) | (uvec3(_GLF_IDENTITY(num_workgroup * workgroup_size, ~ (~ (_GLF_IDENTITY(num_workgroup * workgroup_size, ~ (~ _GLF_IDENTITY((num_workgroup * workgroup_size), (_GLF_IDENTITY((num_workgroup * workgroup_size), (_GLF_IDENTITY((num_workgroup * workgroup_size), max((num_workgroup * workgroup_size), (num_workgroup * workgroup_size)))) / 1u)) | ((num_workgroup * workgroup_size)))))))), 1u, 1u)))), ~ (_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(uvec3(num_workgroup * workgroup_size, 1u, 1u), (_GLF_IDENTITY(uvec3(num_workgroup * workgroup_size, 1u, 1u), (uvec3(num_workgroup * workgroup_size, 1u, 1u)) | (uvec3(num_workgroup * workgroup_size, 1u, 1u)))) | (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(num_workgroup, min(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), num_workgroup)) * _GLF_IDENTITY(workgroup_size, clamp(workgroup_size, _GLF_IDENTITY(workgroup_size, (workgroup_size) / 1u), workgroup_size)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(num_workgroup * workgroup_size, ~ (~ (_GLF_IDENTITY(num_workgroup * workgroup_size, min(num_workgroup * workgroup_size, _GLF_IDENTITY(num_workgroup * workgroup_size, clamp(num_workgroup * workgroup_size, num_workgroup * workgroup_size, num_workgroup * workgroup_size)))))))), (true ? ~ (_GLF_IDENTITY(_GLF_IDENTITY(num_workgroup * workgroup_size, ~ (~ (num_workgroup * workgroup_size))), (_GLF_IDENTITY(num_workgroup * workgroup_size, ~ (~ (num_workgroup * workgroup_size)))) >> 0u)) : _GLF_FUZZED(subgroup_local_id))))), 1u, _GLF_IDENTITY(1u, (1u) ^ 0u)))))), clamp(~ (uint(_GLF_IDENTITY(uvec3(num_workgroup * workgroup_size, 1u, 1u), (_GLF_IDENTITY(uvec3(num_workgroup * workgroup_size, 1u, 1u), (uvec3(num_workgroup * workgroup_size, 1u, 1u)) | (uvec3(num_workgroup * workgroup_size, 1u, 1u)))) | (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(num_workgroup, min(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), num_workgroup)) * _GLF_IDENTITY(workgroup_size, clamp(workgroup_size, _GLF_IDENTITY(workgroup_size, (workgroup_size) / 1u), workgroup_size)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(num_workgroup * workgroup_size, ~ (~ (_GLF_IDENTITY(num_workgroup * workgroup_size, min(num_workgroup * workgroup_size, _GLF_IDENTITY(num_workgroup * workgroup_size, clamp(num_workgroup * workgroup_size, num_workgroup * workgroup_size, num_workgroup * workgroup_size)))))))), (true ? ~ (_GLF_IDENTITY(_GLF_IDENTITY(num_workgroup * workgroup_size, ~ (~ (num_workgroup * workgroup_size))), (_GLF_IDENTITY(num_workgroup * workgroup_size, ~ (~ (num_workgroup * workgroup_size)))) >> 0u)) : _GLF_FUZZED(subgroup_local_id))))), 1u, _GLF_IDENTITY(1u, (1u) ^ 0u)))))), ~ (uint(_GLF_IDENTITY(uvec3(num_workgroup * workgroup_size, 1u, 1u), (_GLF_IDENTITY(uvec3(num_workgroup * workgroup_size, 1u, 1u), (uvec3(num_workgroup * workgroup_size, 1u, 1u)) | (uvec3(num_workgroup * workgroup_size, 1u, 1u)))) | (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(num_workgroup, min(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), num_workgroup)) * _GLF_IDENTITY(workgroup_size, clamp(workgroup_size, _GLF_IDENTITY(workgroup_size, (workgroup_size) / 1u), workgroup_size)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(num_workgroup * workgroup_size, ~ (~ (_GLF_IDENTITY(num_workgroup * workgroup_size, min(num_workgroup * workgroup_size, _GLF_IDENTITY(num_workgroup * workgroup_size, clamp(num_workgroup * workgroup_size, num_workgroup * workgroup_size, num_workgroup * workgroup_size)))))))), (true ? ~ (_GLF_IDENTITY(_GLF_IDENTITY(num_workgroup * workgroup_size, ~ (~ (num_workgroup * workgroup_size))), (_GLF_IDENTITY(num_workgroup * workgroup_size, ~ (~ (num_workgroup * workgroup_size)))) >> 0u)) : _GLF_FUZZED(subgroup_local_id))))), 1u, _GLF_IDENTITY(1u, (1u) ^ 0u)))))), _GLF_IDENTITY(~ (uint(_GLF_IDENTITY(uvec3(num_workgroup * workgroup_size, 1u, 1u), (_GLF_IDENTITY(uvec3(num_workgroup * workgroup_size, 1u, 1u), (uvec3(num_workgroup * workgroup_size, 1u, 1u)) | (uvec3(num_workgroup * workgroup_size, 1u, 1u)))) | (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(num_workgroup, min(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), num_workgroup)) * _GLF_IDENTITY(workgroup_size, clamp(workgroup_size, _GLF_IDENTITY(workgroup_size, (workgroup_size) / 1u), workgroup_size)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(num_workgroup * workgroup_size, ~ (~ (_GLF_IDENTITY(num_workgroup * workgroup_size, min(num_workgroup * workgroup_size, _GLF_IDENTITY(num_workgroup * workgroup_size, clamp(num_workgroup * workgroup_size, num_workgroup * workgroup_size, num_workgroup * workgroup_size)))))))), (true ? ~ (_GLF_IDENTITY(_GLF_IDENTITY(num_workgroup * workgroup_size, ~ (~ (num_workgroup * workgroup_size))), (_GLF_IDENTITY(num_workgroup * workgroup_size, ~ (~ (num_workgroup * workgroup_size)))) >> 0u)) : _GLF_FUZZED(subgroup_local_id))))), 1u, _GLF_IDENTITY(1u, (1u) ^ 0u)))))), min(~ (uint(_GLF_IDENTITY(uvec3(num_workgroup * workgroup_size, 1u, 1u), (_GLF_IDENTITY(uvec3(num_workgroup * workgroup_size, 1u, 1u), (uvec3(num_workgroup * workgroup_size, 1u, 1u)) | (uvec3(num_workgroup * workgroup_size, 1u, 1u)))) | (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(num_workgroup, min(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), num_workgroup)) * _GLF_IDENTITY(workgroup_size, clamp(workgroup_size, _GLF_IDENTITY(workgroup_size, (workgroup_size) / 1u), workgroup_size)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(num_workgroup * workgroup_size, ~ (~ (_GLF_IDENTITY(num_workgroup * workgroup_size, min(num_workgroup * workgroup_size, _GLF_IDENTITY(num_workgroup * workgroup_size, clamp(num_workgroup * workgroup_size, num_workgroup * workgroup_size, num_workgroup * workgroup_size)))))))), (true ? ~ (_GLF_IDENTITY(_GLF_IDENTITY(num_workgroup * workgroup_size, ~ (~ (num_workgroup * workgroup_size))), (_GLF_IDENTITY(num_workgroup * workgroup_size, ~ (~ (num_workgroup * workgroup_size)))) >> 0u)) : _GLF_FUZZED(subgroup_local_id))))), 1u, _GLF_IDENTITY(1u, (1u) ^ 0u)))))), ~ (uint(_GLF_IDENTITY(uvec3(num_workgroup * workgroup_size, 1u, 1u), (_GLF_IDENTITY(uvec3(num_workgroup * workgroup_size, 1u, 1u), (uvec3(num_workgroup * workgroup_size, 1u, 1u)) | (uvec3(num_workgroup * workgroup_size, 1u, 1u)))) | (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(num_workgroup, min(_GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), num_workgroup)) * _GLF_IDENTITY(workgroup_size, clamp(workgroup_size, _GLF_IDENTITY(workgroup_size, (workgroup_size) / 1u), workgroup_size)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(num_workgroup * workgroup_size, ~ (~ (_GLF_IDENTITY(num_workgroup * workgroup_size, min(num_workgroup * workgroup_size, _GLF_IDENTITY(num_workgroup * workgroup_size, clamp(num_workgroup * workgroup_size, num_workgroup * workgroup_size, num_workgroup * workgroup_size)))))))), (true ? ~ (_GLF_IDENTITY(_GLF_IDENTITY(num_workgroup * workgroup_size, ~ (~ (num_workgroup * workgroup_size))), (_GLF_IDENTITY(num_workgroup * workgroup_size, ~ (~ (num_workgroup * workgroup_size)))) >> 0u)) : _GLF_FUZZED(subgroup_local_id))))), 1u, _GLF_IDENTITY(1u, (1u) ^ 0u))))))))))))))), num_workgroup * workgroup_size));
 buf[gid] = 1;
 if(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + 1 < subgroup_size)
  {
   int i = 0;
   atomicStore(buf[_GLF_IDENTITY((gid + 1) % total_threads, ~ (~ ((gid + 1) % _GLF_IDENTITY(total_threads, (_GLF_IDENTITY(total_threads, ~ (~ (total_threads)))) * 1u))))], uint(2), 4, 64, 4);
  }
 else
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 << _GLF_IDENTITY(int(6), int(6)))); _injected_loop_counter --)
    {
     atomicStore(buf[_GLF_IDENTITY((gid + _GLF_IDENTITY(1, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (1), clamp(~ (1), ~ (1), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ (1), clamp(_GLF_IDENTITY(~ (1), _GLF_IDENTITY((~ (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) << 0)) >> int(_GLF_ZERO(0.0, injectionSwitch.x))))) - 0, ~ (~ ((~ (_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, (1) << 0)) >> int(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED((+ _injected_loop_counter)) : _GLF_IDENTITY((_GLF_IDENTITY(1, (1) << 0)) >> int(_GLF_ZERO(0.0, injectionSwitch.x)), ((_GLF_IDENTITY(1, (1) << 0)) >> int(_GLF_ZERO(0.0, injectionSwitch.x))) >> 0)))))) - _GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec3(0, 1, 1)), (int(ivec3(0, 1, 1))) << 0)))))), ~ (1), _GLF_IDENTITY(~ (1), clamp(_GLF_IDENTITY(_GLF_IDENTITY(~ (1), 0 ^ (~ (1))), ~ (~ (_GLF_IDENTITY(~ (1), 0 ^ _GLF_IDENTITY(_GLF_IDENTITY((~ (1)), _GLF_IDENTITY(int(int(_GLF_IDENTITY((~ (1)), min((~ (1)), (~ (1)))))), (int(int(_GLF_IDENTITY((~ (1)), min((~ (1)), (~ (1))))))) | (int(int(_GLF_IDENTITY((~ (1)), min((~ (1)), (~ (1))))))))), 0 ^ ((~ (1)))))))), ~ (1), ~ (1))))), (_GLF_IDENTITY(~ (1), 1 * (~ (1)))) / ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(3), 1 * _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(int(3), min(int(3), int(3)))), ((_GLF_IDENTITY(int(3), min(int(3), int(3))))) / ((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) | (int(3))))) >> _GLF_IDENTITY(int(3), int(3)))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(int(3), min(int(3), int(3)))), ((_GLF_IDENTITY(int(3), min(int(3), int(3))))) / ((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) | (int(3))))) >> _GLF_IDENTITY(int(3), int(3)))), 0 | (_GLF_IDENTITY((_GLF_IDENTITY(int(3), min(int(3), int(3)))), ((_GLF_IDENTITY(int(3), min(int(3), int(3))))) / ((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) | (int(3))))) >> _GLF_IDENTITY(int(3), int(3))))))) | (_GLF_IDENTITY((_GLF_IDENTITY(int(3), min(int(3), int(3)))), ((_GLF_IDENTITY(int(3), min(int(3), int(3))))) / ((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) | (int(3))))) >> _GLF_IDENTITY(int(3), int(3))))))), int(3)))), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, false, true), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false)))))), true), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false)))))), true)), bvec3(bvec3(bvec3(bvec3(false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false)))))), true))))))), true))), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true))), false))), true)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true))), bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true))), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true)))))), true))), true)), true)))), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, true), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false)))))), true), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false)))))), true)), bvec3(bvec3(bvec3(bvec3(false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false)))))), true))))))), true))), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true))), false))), true)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true))), bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true))), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true)))))), true))), true)), true)))))))), bool(bool(bool(_GLF_IDENTITY(bvec3(false, false, true), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true))), true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true))), true)), true)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true))), true)), _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)))), bvec3(bvec3(bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true), false, true), bvec3(bvec4(bvec3(false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))) || false), true), true))), true)), true))))))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true))), true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true))), true)), true)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true))), true)), _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)))), bvec3(bvec3(bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true), false, true), bvec3(bvec4(bvec3(false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))) || false), true), true))), true)), true)))))))))))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true))), true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true))), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec4(! (true), false, false, true))))))), true)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, false || (true)), true)))) && true)), bvec3(bvec4(bvec3(false, false, true), true))), true)), true)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true))), bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true))))))))), true))), true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(false, false, true)))), bvec3(bvec4(bvec3(false, false, true), true))), true)), true)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true))), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true))), _GLF_IDENTITY(true, ! (! (true)))))), true)), true)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), _GLF_IDENTITY(true, _GLF_IDENTITY(true, ! (! (true))) && (true))))), true)), true)), true))), true)))), true))))))))))), bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true))), true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true))), true)), true)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, (false) || false), false, true), true))), true)), true)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true))), true)), true)))))))))))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true))), true)), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true))), true)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true))), true))))), true)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true))), true)), true)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true))), true)), true))))))))))))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true))), true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true))), true)), true)), bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true))), true)), true)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true))), true)), true))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true))), true)), true)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true))), true)), true))))))))))))))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, _GLF_IDENTITY(true, (true) || false)), bvec3(bvec4(bvec3(false, false, true), true))), true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true), true))), true)), true)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true))), true)), true)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true))), true)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true))), true)), false))), true))))))))))))))), false)))))))))))) ? _GLF_IDENTITY(_GLF_FUZZED(41787), ~ (~ (_GLF_FUZZED(41787)))) : _GLF_IDENTITY(~ (1), max(~ (1), ~ (1))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ (1), clamp(_GLF_IDENTITY(~ (1), _GLF_IDENTITY((~ (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) << 0)) >> int(_GLF_ZERO(0.0, injectionSwitch.x))))) - _GLF_IDENTITY(0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0 : _GLF_FUZZED(_injected_loop_counter))), ~ (~ ((~ (_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) << 0), (_GLF_IDENTITY(1, (1) << 0)) / ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))))) >> int(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED((_GLF_IDENTITY(+ _injected_loop_counter, max(_GLF_IDENTITY(+ _injected_loop_counter, min(+ _injected_loop_counter, + _injected_loop_counter)), + _injected_loop_counter)))) : _GLF_IDENTITY((_GLF_IDENTITY(1, (1) << 0)) >> int(_GLF_ZERO(0.0, injectionSwitch.x)), ((_GLF_IDENTITY(1, (1) << 0)) >> int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (false ? _GLF_FUZZED(step(-9.1, -4.4)) : _GLF_ZERO(0.0, injectionSwitch.x))))) >> 0)))))) - _GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec3(0, 1, 1)), (int(ivec3(0, 1, 1))) << 0)))))), _GLF_IDENTITY(~ (1), clamp(~ (1), ~ (1), ~ (1))), _GLF_IDENTITY(~ (1), clamp(_GLF_IDENTITY(_GLF_IDENTITY(~ (1), 0 ^ (~ (1))), ~ (~ (_GLF_IDENTITY(~ (1), 0 ^ _GLF_IDENTITY(_GLF_IDENTITY((~ (_GLF_IDENTITY(1, min(1, 1)))), _GLF_IDENTITY(int(int(_GLF_IDENTITY((~ (1)), min((_GLF_IDENTITY(~ (1), (~ (1)) - (0 | 0))), (~ (1)))))), (int(int(_GLF_IDENTITY((~ (1)), _GLF_IDENTITY(min((~ (1)), (~ (1))), clamp(_GLF_IDENTITY(min((~ (1)), (~ (1))), (min((~ (1)), (~ (1)))) ^ 0), min((~ (1)), (~ (1))), _GLF_IDENTITY(min((~ (1)), (~ (1))), min(min((~ (1)), (~ (1))), min((~ (1)), (~ (1))))))))))) | (int(int(_GLF_IDENTITY((~ (1)), _GLF_IDENTITY(min((~ (1)), (~ (1))), (_GLF_IDENTITY(min((~ (1)), (~ (1))), ~ (~ (min((~ (1)), (~ (1))))))) | (min((~ (1)), (~ (1))))))))))), 0 ^ ((~ (1)))))))), ~ (1), ~ (1))))), (_GLF_IDENTITY(~ (1), 1 * (~ (1)))) / ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(3), 1 * _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(int(3), min(int(3), int(3)))), ((_GLF_IDENTITY(int(3), min(int(3), int(3))))) / ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(3, (3) / 1)), _GLF_IDENTITY(int(3), (int(3)) | (int(3))))) >> _GLF_IDENTITY(int(3), int(3)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(int(3), min(int(3), int(3)))), ((_GLF_IDENTITY(int(3), min(int(3), int(3))))) / ((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) | (int(3))))) >> _GLF_IDENTITY(int(3), int(3)))), (_GLF_IDENTITY((_GLF_IDENTITY(int(3), min(int(3), int(3)))), ((_GLF_IDENTITY(int(3), min(int(3), int(3))))) / ((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) | (int(3))))) >> _GLF_IDENTITY(int(3), int(3))))) | 0), 0 | (_GLF_IDENTITY((_GLF_IDENTITY(int(3), min(int(3), int(3)))), ((_GLF_IDENTITY(int(3), min(int(_GLF_IDENTITY(3, (false ? _GLF_FUZZED(63634) : _GLF_IDENTITY(3, 1 * (3))))), int(3))))) / ((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) | (int(3))))) >> _GLF_IDENTITY(int(3), int(3))))))) | (_GLF_IDENTITY((_GLF_IDENTITY(int(3), min(int(3), int(3)))), ((_GLF_IDENTITY(int(3), min(int(_GLF_IDENTITY(3, 0 ^ (_GLF_IDENTITY(3, int(ivec4(3, 0, 1, 1)))))), int(3))))) / ((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), _GLF_IDENTITY((int(3)), max((int(3)), (int(3)))) | (int(3))))) >> _GLF_IDENTITY(int(3), int(3))))))), int(3)))), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, false, true), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false)))))), true), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), true && (bool(bvec2(false, false)))))))), true)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, bool(bvec2(false, false))))), false)))))), true)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, bool(bvec2(false, false))))), false)))))), true)), bvec3(bvec4(bvec3(bvec3(false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, bool(bvec2(false, false))))), false)))))), true)), false))), true)))))))), true))), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, true && (false)), true), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, true), true)), bvec3(bvec3(bvec3(bvec4(bvec3(false, false, true), true)))))), false))), true)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true))), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true)))))), true)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true))), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true)))))), true)))))), true)), _GLF_IDENTITY(true, ! (! (true))))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, true), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false)))))), true), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false)))))), true)), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false)))))), true), bvec3(bvec4(bvec3(false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false)))))), true), false))))))))), true))), bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true))), bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true)))), false))))), false))), false))), true)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true))), bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true))), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true)))))), true))), true)), true)))))))), bool(bool(bool(_GLF_IDENTITY(bvec3(false, false, true), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true))), true)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true))), true))))), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true))), true)), true)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true))), true)), true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, _GLF_IDENTITY(true, ! (! (true)))), bvec3(bvec4(bvec3(false, false, true), true))), true)), _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)))), bvec3(bvec3(bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true), false, true), bvec3(bvec4(bvec3(false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))) || false), true), true))), true)), true))))))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, false || (false)), false, true), bvec3(bvec4(bvec3(false, false, true), true))), _GLF_IDENTITY(true, ! (! (true))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true))), true)), true)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true))), true)), _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)))), bvec3(bvec3(bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((false))) || false)) && true), false, true), bvec3(bvec4(bvec3(false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))) || false), true), true))), true)), true)))))))))))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true))), true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true))), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec4(! (true), false, false, true))))))), true)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, false || _GLF_IDENTITY((true), ! (_GLF_IDENTITY(! ((true)), (! ((true))) || false)))), true)))) && true)), bvec3(bvec4(bvec3(false, false, true), true))), true)), true)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true))), bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true))))))))), true))), true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(false, false, true)))), bvec3(bvec4(bvec3(false, false, true), true))), true)), true)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true))), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true))), _GLF_IDENTITY(true, ! (! (true)))))), true)), true)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), _GLF_IDENTITY(true, _GLF_IDENTITY(true, ! (! (true))) && (true))))), true)), true)), true))), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), true && (bool(true))))))))), true))))))))))), bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true))), true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec3(bvec3(bvec3(bvec4(bvec3(false, false, true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), true))), true)), true)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) || false), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, (false) || false), false, true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true))), true)), true)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), _GLF_IDENTITY(true, false || (true))))), true)), true)))))))))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true))), _GLF_IDENTITY(true, ! (! (true))))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true))), true)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true))), true))))), true)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true))), true)), true)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true))), true)), true)))))))))))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true))), _GLF_IDENTITY(true, ! (! (true))))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true))), true)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true))), true))))), true)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true))), true)), true)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true))), true)), true)))))))))))))))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true))), true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true))), _GLF_IDENTITY(true, ! (! (true))))), true)), bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, _GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true))), true)), true)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true))), true)), true))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true))), true)), true)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, _GLF_IDENTITY(false, (false) || false), true), true))), true)), true)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, _GLF_IDENTITY(false, (false) || false), true), true))), true)), true)))))))))))))))))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, _GLF_IDENTITY(true, (true) || false)), bvec3(bvec4(bvec3(false, false, true), true))), true)), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true), true))), true)), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true), true))), true)))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true), true))), true)))))))), true)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true))), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, false, false, false)))) && true))), true)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true))), true)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true))), true)), false))), true))))))))))))))), false)))))))))))) ? _GLF_IDENTITY(_GLF_FUZZED(41787), ~ (~ (_GLF_FUZZED(41787)))) : _GLF_IDENTITY(~ (1), max(~ (1), _GLF_IDENTITY(~ (1), max(~ (1), _GLF_IDENTITY(~ (1), ~ (~ (~ (1))))))))))) - 0)))), ((_GLF_IDENTITY(~ (1), _GLF_IDENTITY(clamp(~ (1), _GLF_IDENTITY(~ (_GLF_IDENTITY(1, (1) - 0)), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (1) - 0)), (~ (_GLF_IDENTITY(1, (1) - 0))) + 0), _GLF_IDENTITY(~ (_GLF_IDENTITY(1, (1) - 0)), clamp(~ (_GLF_IDENTITY(1, (1) - 0)), ~ (_GLF_IDENTITY(1, (1) - 0)), ~ (_GLF_IDENTITY(1, (1) - 0)))), _GLF_IDENTITY(~ (_GLF_IDENTITY(1, (1) - 0)), (~ (_GLF_IDENTITY(1, (1) - 0))) | (0 >> _GLF_IDENTITY(int(3), int(3)))))), _GLF_IDENTITY(~ (1), (false ? _GLF_FUZZED(41787) : ~ _GLF_IDENTITY((1), ((1)) | ((1)))))), 0 | (clamp(~ (1), _GLF_IDENTITY(~ (_GLF_IDENTITY(1, (1) - 0)), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (1) - 0)), (~ (_GLF_IDENTITY(1, (1) - 0))) + 0), _GLF_IDENTITY(~ (_GLF_IDENTITY(1, _GLF_IDENTITY((1) - 0, 0 + (_GLF_IDENTITY((1) - 0, 0 | (_GLF_IDENTITY((1) - 0, min((1) - 0, (1) - 0)))))))), clamp(~ (_GLF_IDENTITY(1, (1) - 0)), ~ (_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, (false ? _GLF_FUZZED(max(_injected_loop_counter, 79496)) : 1)))), (1) - 0)), ~ (_GLF_IDENTITY(1, (1) - 0)))), _GLF_IDENTITY(~ (_GLF_IDENTITY(1, _GLF_IDENTITY((1) - 0, ((1) - 0) | ((1) - 0)))), (~ (_GLF_IDENTITY(1, (1) - 0))) | (0 >> _GLF_IDENTITY(int(3), int(3)))))), _GLF_IDENTITY(~ (1), (false ? _GLF_FUZZED(41787) : ~ _GLF_IDENTITY((1), ((1)) | ((1))))))))))) / 1))), ~ (~ ((_GLF_IDENTITY(gid, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gid, (_GLF_IDENTITY(gid, _GLF_IDENTITY(clamp(gid, gid, gid), 0u + (clamp(gid, gid, gid))))) << 0u)), max(_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(gid, (_GLF_IDENTITY(gid, _GLF_IDENTITY(clamp(gid, gid, gid), 0u + (clamp(gid, gid, gid))))) << 0u)), (~ (_GLF_IDENTITY(gid, (_GLF_IDENTITY(gid, _GLF_IDENTITY(clamp(gid, gid, gid), 0u + (clamp(gid, gid, gid))))) << 0u))) - 0u), (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(gid, (_GLF_IDENTITY(gid, _GLF_IDENTITY(clamp(gid, gid, gid), 0u + (clamp(gid, gid, gid))))) << 0u)), (~ (_GLF_IDENTITY(gid, (_GLF_IDENTITY(gid, _GLF_IDENTITY(clamp(gid, gid, gid), 0u + (clamp(gid, gid, gid))))) << 0u))) - 0u), min(_GLF_IDENTITY(~ (_GLF_IDENTITY(gid, (_GLF_IDENTITY(gid, _GLF_IDENTITY(clamp(gid, gid, gid), 0u + (clamp(gid, gid, gid))))) << 0u)), (~ (_GLF_IDENTITY(gid, (_GLF_IDENTITY(gid, _GLF_IDENTITY(clamp(gid, gid, gid), 0u + (clamp(gid, gid, gid))))) << 0u))) - 0u), _GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(gid, (_GLF_IDENTITY(gid, _GLF_IDENTITY(clamp(gid, gid, gid), 0u + (clamp(gid, gid, gid))))) << 0u)), (~ (_GLF_IDENTITY(gid, (_GLF_IDENTITY(gid, _GLF_IDENTITY(clamp(gid, gid, gid), 0u + (clamp(gid, gid, gid))))) << 0u))) - 0u), (_GLF_IDENTITY(~ (_GLF_IDENTITY(gid, (_GLF_IDENTITY(gid, _GLF_IDENTITY(clamp(gid, gid, gid), 0u + (clamp(gid, gid, gid))))) << 0u)), (~ (_GLF_IDENTITY(gid, (_GLF_IDENTITY(gid, _GLF_IDENTITY(clamp(gid, gid, gid), 0u + (clamp(gid, gid, gid))))) << 0u))) - 0u)) - 0u)))) * 1u), ~ (_GLF_IDENTITY(gid, (_GLF_IDENTITY(gid, _GLF_IDENTITY(clamp(gid, gid, gid), _GLF_IDENTITY(0u + (clamp(gid, gid, gid)), min(0u + (clamp(gid, gid, gid)), 0u + (clamp(gid, gid, gid))))))) << 0u)))))) + _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, (1) | (1))))), (~ (_GLF_IDENTITY(1, _GLF_IDENTITY(0 ^ (_GLF_IDENTITY(1, (1) | (1))), (true ? _GLF_IDENTITY(0 ^ (_GLF_IDENTITY(1, (1) | (1))), (0 ^ (_GLF_IDENTITY(1, (1) | (1)))) | (_GLF_IDENTITY(0 ^ (_GLF_IDENTITY(1, (1) | (1))), 0 ^ (0 ^ (_GLF_IDENTITY(1, (1) | (1))))))) : _GLF_FUZZED(clamp(ivec4(13090, -23126, -24466, 58364), _injected_loop_counter, _injected_loop_counter).x)))))) + 0), clamp(~ (1), _GLF_IDENTITY(~ (1), _GLF_IDENTITY(~ (~ (~ (1))), max(~ (~ _GLF_IDENTITY((~ (1)), clamp(_GLF_IDENTITY((~ (1)), ((~ (1))) ^ (0 << _GLF_IDENTITY(int(6), int(6)))), (~ (1)), _GLF_IDENTITY((~ (1)), ((~ (1))) / ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))))))), _GLF_IDENTITY(~ (~ (~ (_GLF_IDENTITY(1, clamp(1, 1, 1))))), _GLF_IDENTITY(int(ivec2(~ (~ (~ (1))), 0)), 0 ^ (int(ivec2(~ (~ (~ (1))), 0)))))))), _GLF_IDENTITY(~ _GLF_IDENTITY((1), ((1)) / 1), (false ? _GLF_FUZZED(41787) : ~ (_GLF_IDENTITY(1, (1) / 1)))))))))))) % total_threads], _GLF_IDENTITY(uint(2), clamp(uint(2), uint(_GLF_IDENTITY(2, clamp(2, 2, _GLF_IDENTITY(2, 1 * (2))))), _GLF_IDENTITY(uint(2), (false ? _GLF_FUZZED(num_workgroup) : uint(2))))), _GLF_IDENTITY(4, max(4, 4)), 64, 4);
    }
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
