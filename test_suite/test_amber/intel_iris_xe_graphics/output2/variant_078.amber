#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(2.7)), bool(false))), 1.0), clamp(vec2(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(2.7)), bool(false)), min(mix(float(injectionSwitch.x), float(_GLF_FUZZED(2.7)), bool(false)), mix(float(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(7065.3780))), sqrt(0.0), 1.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), abs(0.0), 0.0, 1.0, 0.0, 0.0)), 0.0 + (_GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(7065.3780))), sqrt(0.0), 1.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), abs(0.0), 0.0, 1.0, 0.0, 0.0)), max(float(mat4x3(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(7065.3780))), sqrt(0.0), 1.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), abs(0.0), 0.0, 1.0, 0.0, 0.0)), _GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(7065.3780))), sqrt(0.0), 1.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), abs(0.0), 0.0, 1.0, 0.0, 0.0)), (true ? _GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(7065.3780))), sqrt(0.0), 1.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), abs(0.0), 0.0, 1.0, 0.0, 0.0)), (float(mat4x3(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(7065.3780))), sqrt(0.0), 1.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), abs(0.0), 0.0, 1.0, 0.0, 0.0))) - 0.0) : _GLF_FUZZED(-145.035))))))))), float(_GLF_IDENTITY(_GLF_FUZZED(2.7), (true ? _GLF_IDENTITY(_GLF_FUZZED(2.7), (_GLF_FUZZED(2.7)) * 1.0) : _GLF_FUZZED(-452.550)))), bool(false))))), 1.0), vec2(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(2.7)), bool(false))), 1.0), _GLF_IDENTITY(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(2.7)), bool(false))), 1.0), _GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0)))) * (vec2(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(2.7)), bool(false))), 1.0))), _GLF_IDENTITY(max(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(2.7)), bool(false))), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-7.6)), float(1.0), bool(true)))), clamp(vec2(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(2.7)), bool(false))), 1.0), vec2(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(2.7)), bool(false))), 1.0), vec2(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(2.7)), bool(false))), 1.0))), vec2(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_IDENTITY(_GLF_FUZZED(2.7), clamp(_GLF_FUZZED(2.7), _GLF_FUZZED(2.7), _GLF_IDENTITY(_GLF_FUZZED(2.7), clamp(_GLF_FUZZED(2.7), _GLF_FUZZED(2.7), _GLF_FUZZED(2.7)))))), bool(false))), 1.0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(max(vec2(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(2.7)), bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), bool(bvec2(! (false), false)))) || false))))), clamp(mix(float(injectionSwitch.x), float(_GLF_FUZZED(2.7)), bool(false)), mix(float(injectionSwitch.x), float(_GLF_FUZZED(2.7)), bool(false)), _GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(2.7)), bool(false)), max(mix(float(injectionSwitch.x), float(_GLF_FUZZED(2.7)), bool(false)), mix(float(injectionSwitch.x), float(_GLF_FUZZED(2.7)), bool(false))))))), 1.0), vec2(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(2.7)), bool(false))), 1.0)), vec2(_GLF_IDENTITY(vec2(max(vec2(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-4.2), _GLF_FUZZED(float((-21996 % 44608)))), bvec2(false, false))).x), float(_GLF_FUZZED(2.7)), bool(false))), 1.0), vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 0.0, 0.0))), injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, injectionSwitch.x)))), mix(float(injectionSwitch.x), float(_GLF_FUZZED(2.7)), bool(false))), 1.0))), min(vec2(max(vec2(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(2.7)), bool(false))), 1.0), vec2(_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(injectionSwitch.x), mix(float(_GLF_FUZZED(5.2)), float(float(injectionSwitch.x)), bool(true))), float(_GLF_FUZZED(2.7)), bool(false))), 1.0))), vec2(max(vec2(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(2.7)), bool(false))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-287.445)), bool(false))), max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-287.445)), bool(false))), min(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-287.445)), bool(false))), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-287.445)), bool(false))))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-287.445)), bool(false))), (true ? _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-287.445)), bool(false))) : _GLF_FUZZED(-6036.6457)))))), vec2(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(2.7)), bool(false))), 1.0))))))) : _GLF_FUZZED(_GLF_IDENTITY(vec2(-6.5, 5507.4963), (vec2(-6.5, 5507.4963)) * vec2(1.0, 1.0))))))))), float(mat3x2(float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(2.7)), bool(false)), max(mix(float(injectionSwitch.x), float(_GLF_FUZZED(2.7)), bool(false)), _GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(2.7)), bool(false)), mix(float(_GLF_FUZZED(31.09)), float(mix(float(injectionSwitch.x), float(_GLF_FUZZED(2.7)), bool(false))), bool(true)))))), 1.0), clamp(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, exp(vec2(0.0, 0.0)) * (_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0, 0.0, 1.0, 1.0))))).x, _GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(2.7)), bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec4(_GLF_IDENTITY(bool(bvec3(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec2(bool(bvec3(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(8388.5298, -8.1)) : injectionSwitch)).x < injectionSwitch.y)))), false))), false, false, true)))))), max(_GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(2.7)), bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, length(vec2(0.0, 0.0)), 0.0, 1.0, sqrt(1.0), 0.0, 1.0), (mat2x4(injectionSwitch, length(vec2(0.0, 0.0)), 0.0, 1.0, sqrt(1.0), 0.0, 1.0)) * mat2(1.0))), clamp(vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, length(vec2(0.0, 0.0)), 0.0, 1.0, sqrt(1.0), 0.0, 1.0), (mat2x4(injectionSwitch, length(vec2(0.0, 0.0)), 0.0, 1.0, sqrt(1.0), 0.0, 1.0)) * mat2(1.0))), vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, length(vec2(0.0, 0.0)), 0.0, 1.0, sqrt(1.0), 0.0, 1.0), (mat2x4(injectionSwitch, length(vec2(0.0, 0.0)), 0.0, 1.0, sqrt(1.0), 0.0, 1.0)) * mat2(1.0))), vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, length(vec2(0.0, 0.0)), 0.0, 1.0, sqrt(1.0), 0.0, 1.0), (mat2x4(injectionSwitch, length(vec2(0.0, 0.0)), 0.0, 1.0, sqrt(1.0), 0.0, 1.0)) * mat2(1.0)))))).y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec4(_GLF_IDENTITY(bool(bvec3(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec2(bool(bvec3(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false))), false, false, true)))))), clamp(_GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(2.7)), bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec4(_GLF_IDENTITY(bool(bvec3(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec2(bool(bvec3(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), false))), false, _GLF_IDENTITY(false, false || (false)), true)))))), clamp(mix(float(injectionSwitch.x), float(_GLF_FUZZED(2.7)), bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(454.224)), float(injectionSwitch.x), bool(true))) < injectionSwitch.y)))), bool(bvec4(_GLF_IDENTITY(bool(bvec3(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x < injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), ! (! (bool(bvec3((injectionSwitch.x < injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))))), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec2(bool(bvec3(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false))), false, false, true)))))), mix(float(injectionSwitch.x), float(_GLF_FUZZED(2.7)), bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)))), bool(bvec4(_GLF_IDENTITY(bool(bvec3(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec3(true, false, false))), (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)))), bool(bvec2(bool(bvec3(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false))), false, false, true)))))), mix(float(injectionSwitch.x), float(_GLF_FUZZED(2.7)), bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))))))))) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec4(_GLF_IDENTITY(bool(bvec3(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec2(bool(bvec3(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false))), false, false, true)))))))), mix(float(injectionSwitch.x), float(_GLF_FUZZED(2.7)), bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec4(_GLF_IDENTITY(bool(bvec3(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), ! (! (bool(bool(true)))))), true, true, true)), _GLF_IDENTITY(bool(bvec4(bool(bvec4(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), ! (! (bool(bool(true)))))), true, true, true)), false, true, false)), ! (! (bool(bvec4(bool(bvec4(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), ! (! (bool(bool(true)))))), true, true, true)), false, true, false))))))), (injectionSwitch.x < injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec2(bool(bvec3(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x < injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, bool(bvec3(true, true, true)))))))), (injectionSwitch.x < injectionSwitch.y))))) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false))), false, false, true)))))), _GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(2.7)), bool(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec4(_GLF_IDENTITY(bool(bvec3(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec2(bool(bvec3(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false))), false, false, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false || (bool(bvec3(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec4(_GLF_IDENTITY(bool(bvec3(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec2(bool(bvec3(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false))), false, false, true)))))))), min(mix(float(injectionSwitch.x), float(_GLF_FUZZED(2.7)), bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, (true) && true), (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y)))), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) < injectionSwitch.y))))) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec4(_GLF_IDENTITY(bool(bvec3(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec2(bool(bvec3(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false))), false, false, true)))))), mix(float(injectionSwitch.x), float(_GLF_FUZZED(2.7)), bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true)), true && (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x < injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false)))), bool(bvec4(_GLF_IDENTITY(bool(bvec3(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x < injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(52.07) : injectionSwitch.y)))), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec2(bool(bvec3(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-7373.1127), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(6560.9778)), bool(false))), _GLF_FUZZED(2682.8030)), bvec2(true, false))), injectionSwitch)).x < injectionSwitch.y)), _GLF_IDENTITY(true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec3(true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false))), false, false, true)))))))))), mix(float(injectionSwitch.x), float(_GLF_FUZZED(2.7)), bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec4(_GLF_IDENTITY(bool(bvec3(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec2(bool(bvec3(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false))), _GLF_IDENTITY(false, true && (false)), false, true))))))))), 1.0), vec2(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))), float(_GLF_IDENTITY(_GLF_FUZZED(2.7), mix(float(_GLF_FUZZED(2.7)), float(_GLF_FUZZED(float(29243u))), bool(false)))), bool(false))), 1.0), _GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))), clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x), float(_GLF_FUZZED(2.7)), bool(false))), 1.0), max(vec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec3(injectionSwitch, 1.0)), mix(vec2((vec2(vec3(injectionSwitch, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))))[0], _GLF_IDENTITY((vec2(_GLF_IDENTITY(vec3(injectionSwitch, 1.0), min(vec3(injectionSwitch, 1.0), _GLF_IDENTITY(vec3(injectionSwitch, 1.0), (false ? _GLF_FUZZED(vec3(9859.4838, 74.18, -4.5)) : vec3(injectionSwitch, 1.0)))))))[1], (true ? (vec2(vec3(injectionSwitch, 1.0)))[1] : _GLF_FUZZED(-1863.9199)))), vec2(_GLF_FUZZED(-90.73), _GLF_FUZZED(74.01)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))).x, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec3(injectionSwitch, 1.0)), mix(vec2((vec2(vec3(injectionSwitch, 1.0)))[0], _GLF_IDENTITY((vec2(vec3(injectionSwitch, 1.0)))[1], (true ? (vec2(vec3(injectionSwitch, 1.0)))[1] : _GLF_FUZZED(-1863.9199)))), vec2(_GLF_FUZZED(-90.73), _GLF_FUZZED(74.01)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))).x, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec3(injectionSwitch, 1.0)), mix(vec2(_GLF_IDENTITY(_GLF_IDENTITY((vec2(vec3(injectionSwitch, 1.0)))[0], min(_GLF_IDENTITY((vec2(vec3(injectionSwitch, 1.0)))[0], min((vec2(vec3(injectionSwitch, 1.0)))[0], (vec2(vec3(injectionSwitch, 1.0)))[0])), (vec2(vec3(injectionSwitch, 1.0)))[0])), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-2.3) : _GLF_IDENTITY((vec2(vec3(injectionSwitch, 1.0)))[0], min(_GLF_IDENTITY((vec2(vec3(injectionSwitch, 1.0)))[0], min((vec2(vec3(injectionSwitch, 1.0)))[0], (vec2(vec3(injectionSwitch, 1.0)))[0])), (vec2(vec3(injectionSwitch, 1.0)))[0])))), _GLF_IDENTITY((vec2(vec3(injectionSwitch, 1.0)))[1], (true ? _GLF_IDENTITY((vec2(vec3(injectionSwitch, 1.0)))[1], min((vec2(vec3(injectionSwitch, 1.0)))[1], (vec2(vec3(injectionSwitch, 1.0)))[1])) : _GLF_FUZZED(-1863.9199)))), vec2(_GLF_FUZZED(-90.73), _GLF_FUZZED(74.01)), bvec2(_GLF_IDENTITY(false, (false) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))).x)), _GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(2.7)), bool(false)), (false ? _GLF_FUZZED(-690.057) : mix(float(injectionSwitch.x), float(_GLF_FUZZED(2.7)), bool(false))))), 1.0), _GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(2.7)), bool(false))), 1.0), mat2(1.0) * (vec2(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(2.7)), bool(false))), 1.0)))))))), 1.0, 1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 1.0)))) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, (true) || false), false, _GLF_IDENTITY(false, false || (false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, (true) || false), false, _GLF_IDENTITY(false, false || (false))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ((false) || false) && true))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || _GLF_IDENTITY(false, bool(bool(false)))))))))) || false)), false || ((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && (_GLF_IDENTITY(false, (false) || false)))))))))), false || (bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, (false) || false)))), _GLF_IDENTITY(! (! ((_GLF_IDENTITY(false, (false) || false)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (! ((_GLF_IDENTITY(false, (false) || false)))), bool(bvec4(! (! ((_GLF_IDENTITY(false, (false) || false)))), false, true, false))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(! (! ((_GLF_IDENTITY(false, (false) || false)))), bool(bvec4(! (! ((_GLF_IDENTITY(false, (false) || false)))), false, true, false))), false), true, true)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (! ((_GLF_IDENTITY(false, (false) || false)))), bool(bvec4(! (! ((_GLF_IDENTITY(false, (false) || false)))), false, true, false))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(! (! ((_GLF_IDENTITY(false, (false) || false)))), bool(bvec4(! (! ((_GLF_IDENTITY(false, (false) || false)))), false, true, false))), false), true, true)))), bool(bool(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (! ((_GLF_IDENTITY(false, (false) || false)))), bool(bvec4(! (! ((_GLF_IDENTITY(false, (false) || false)))), false, true, false))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(! (! ((_GLF_IDENTITY(false, (false) || false)))), bool(bvec4(! (! ((_GLF_IDENTITY(false, (false) || false)))), false, true, false))), false), true, true)))))))) && true))))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)), bool(bvec2(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))) && true)), true)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | _GLF_IDENTITY((gl_WorkGroupID), ((gl_WorkGroupID)) - uvec3(0u, 0u, 0u))).x, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | _GLF_IDENTITY((gl_WorkGroupID), ((gl_WorkGroupID)) - uvec3(0u, 0u, 0u))).x), 0u | (~ (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | _GLF_IDENTITY((gl_WorkGroupID), ((gl_WorkGroupID)) - uvec3(0u, 0u, 0u))).x))))), max(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID), min((gl_WorkGroupID), (_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) + (gl_WorkGroupID))))) | (gl_WorkGroupID)).x, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID)).x, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | _GLF_IDENTITY((gl_WorkGroupID), ((gl_WorkGroupID)) | uvec3(0u, 0u, 0u))).x, uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | _GLF_IDENTITY((gl_WorkGroupID), ((gl_WorkGroupID)) | uvec3(0u, 0u, 0u))).x, ~ (~ (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | _GLF_IDENTITY((gl_WorkGroupID), ((gl_WorkGroupID)) | uvec3(0u, 0u, 0u))).x))))))) | (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID)).x), (false ? _GLF_FUZZED(8106u) : (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u)))).x) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID)), clamp(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID)), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID))), ~ (~ (~ (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID)))))))), _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID)))).x))))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x, min(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x, float(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x, min(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0)))) + (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x)), 0.0))))) : _GLF_FUZZED(vec3(2818.7379, -98.95, -4.3).t), min(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x, min(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x, float(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x, min(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), tan(0.0), 0.0), (true ? _GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), tan(0.0), 0.0), max(vec3(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), tan(0.0), 0.0), vec3(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), tan(0.0), 0.0))) : _GLF_FUZZED(vec3(-7982.4397, -3375.5301, 75.69)))))), 0.0) + (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x)), 0.0))))) : _GLF_FUZZED(vec3(2818.7379, -98.95, -4.3).t), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(0.0, 0.0) + (injectionSwitch), (vec2(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-1472.5343)), float(0.0), bool(true))), _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 0.0) + (injectionSwitch)) / vec2(1.0, 1.0))), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x, min(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0) + (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x, float(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x, min(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x)), 0.0))))) : _GLF_FUZZED(vec3(2818.7379, -98.95, -4.3).t))))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, false)))), _GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, false)))))), ! (! (bool(bool(! _GLF_IDENTITY((_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, false)))), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, false))))), bool(_GLF_IDENTITY(bvec2(bool((_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec3(! (false), false, false)), false || (bool(bvec3(! (false), false, false))))))), false), bvec2(bvec2(bvec2(bool((_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, false))))), false))))))))))))))), ! (! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), bool(bvec3(! _GLF_IDENTITY((false), false || ((false))), false, false)))), _GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, false)))))), ! (! (bool(bool(! _GLF_IDENTITY((_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, false)))), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, _GLF_IDENTITY(false, bool(bool(false)))))))), bool(_GLF_IDENTITY(bvec2(bool((_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec3(! (false), false, false)), false || (bool(bvec3(! (false), false, false))))))), false), bvec2(bvec2(bvec2(bool((_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, false))))), false))))))))))))))))))))), false, _GLF_IDENTITY(true, false || (true))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), (! (false)) || false)), bool(bool(! (_GLF_IDENTITY(! (false), (! (false)) || false)))))))), bool(bool((_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), (! (false)) || false)), _GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(! (false), (! (false)) || false)))), true && (bool(bool(! (_GLF_IDENTITY(! (false), (! (false)) || false))))))))))))), bool(bvec4(! (! _GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((false), (_GLF_IDENTITY((false), ! (! ((false))))) && true), false, true)), true && (bool(bvec3(_GLF_IDENTITY((false), (_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), false || (_GLF_IDENTITY(! ((false)), ! (! (! ((false)))))))))) && true), false, true))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((false), (_GLF_IDENTITY((false), ! (! ((_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))))))) && true), false, _GLF_IDENTITY(true, false || (true)))), true && (bool(bvec3(_GLF_IDENTITY((false), (_GLF_IDENTITY((false), ! (! ((false))))) && true), false, true)))))), true && (! (_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((false), (_GLF_IDENTITY((false), ! (! ((false))))) && true), false, true)), true && (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((false), (_GLF_IDENTITY((false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), ((false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) && true), (_GLF_IDENTITY((false), (_GLF_IDENTITY((false), ! (! ((false))))) && true)) && true), false, true))))))))))), true, true, false)))), false, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true)))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false)))))), false, true)))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false))))), false, true)))))), true))), true))))))), false))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(false || (true), bool(bvec2(false || (true), true)))), false || (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(false, bool(bvec2(false, true))) || _GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, log(1.0), 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, cos(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0), mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3x4(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, log(1.0), 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, cos(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0))))).x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY((true), bool(bvec2((true), true))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((true), bool(bvec2((true), true))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY((true), bool(bvec2((true), true))), true))))))))))), bool(bvec2((_GLF_IDENTITY(true, ! _GLF_IDENTITY(_GLF_IDENTITY((! (true)), bool(bvec4((! (true)), false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((! (true)), bool(bvec4((! (true)), false, true, true))))))), false)))), ((_GLF_IDENTITY((_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY((true), bool(bvec2((true), true))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((true), bool(bvec2((true), true))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY((true), bool(bvec2((true), true))), true))))))))))), bool(bvec2((_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), bool(bvec4((! (true)), false, true, true))))), false))))) && true) || false)), true && (_GLF_IDENTITY(true, false || (true))))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(bvec4(! (! (false)), true, true, false)), _GLF_IDENTITY(bool(bvec4(bool(bvec4(! (! (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)))), true, true, false)), false, false, true)), bool(bvec2(bool(bvec4(bool(bvec4(! (! _GLF_IDENTITY((false), bool(bvec4((false), false, true, false)))), true, true, false)), false, false, true)), false)))))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bool(_GLF_IDENTITY(false, ! (! (false)))))), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), _GLF_IDENTITY((bool(bvec3(false, true, false))), false || ((bool(bvec3(false, true, false))))) && true)), true)))), false)))), (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false))))))) || false), false, _GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), false || (_GLF_IDENTITY(_GLF_IDENTITY(true, false || _GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))), (_GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))), bool(bvec2((_GLF_IDENTITY(true, ! (! (true)))), false)))) || false)), true && (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), false || _GLF_IDENTITY((true), ! (_GLF_IDENTITY(! ((true)), false || (! ((true)))))))))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(! (false), ! (! (! (_GLF_IDENTITY(false, ! (! (false)))))))), true, true, false)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(bool(bvec4(! _GLF_IDENTITY((! (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)))), bool(bvec3((! (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), true, true, false)), false, false, true)), bool(bvec2(bool(bvec4(bool(bvec4(_GLF_IDENTITY(! (! (false)), (! (! (false))) && true), _GLF_IDENTITY(true, true && (true)), true, false)), false, false, true)), _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))), ! (! (bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))))))))))))), (_GLF_IDENTITY(bool(bvec4(bool(bvec4(! _GLF_IDENTITY((! (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)))), bool(bvec3((! (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), true, true, false)), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), false, true)), bool(bvec2(bool(bvec4(bool(bvec4(_GLF_IDENTITY(! (! (false)), (! (! (false))) && true), _GLF_IDENTITY(true, true && (true)), true, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false)))))))), false, false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec3(bvec2(true, true), false)))), true && (bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec3(bvec2(true, true), false))))))))), _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(_GLF_IDENTITY(bvec2(bvec2(false, true)), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(false, true))), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec2(bvec2(false, true))), false), bvec3(bvec3(bvec3(bvec2(bvec2(bvec2(false, true))), false))))))), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(false, true))), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec2(bvec2(false, true))), false), bvec3(bvec3(bvec3(bvec2(bvec2(bvec2(false, true))), false))))))), false))))))), ! (! (bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))))))))))) || false)))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), (bool(bvec3(false, true, false))) && true)), true)))), false))))) && true)))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! _GLF_IDENTITY((false), ! (! ((false)))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, _GLF_IDENTITY(true, false || _GLF_IDENTITY((true), true && ((true))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), true, true, false)))), false, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, _GLF_IDENTITY(true, (true) && true)), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true), false)))))), false))))), true), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)), true)))))), false, _GLF_IDENTITY(true, false || (true))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec4(! _GLF_IDENTITY((! _GLF_IDENTITY((false), ((false)) && true)), ((! _GLF_IDENTITY((false), ((false)) && true))) || false), true, true, false)))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (! (false)), true && (! (! (false)))))), (bool(bool(! (! (false))))) && true))), false, true)))), false))))), true), _GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), false, false, true)), bool(bool(bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), false, false, true)))))), (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x < injectionSwitch.y)))), bvec2(bvec3(bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, _GLF_IDENTITY(true, _GLF_IDENTITY(false || _GLF_IDENTITY((true), true && ((true))), false || (false || _GLF_IDENTITY(_GLF_IDENTITY((true), ! (! (_GLF_IDENTITY((true), _GLF_IDENTITY(((true)) || false, true && (((true)) || false)))))), true && ((true))))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), _GLF_IDENTITY(true, true && (true)), true, false)))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(false)))))))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))), ! (! (false))), false, true)))), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))))), true), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY((! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! _GLF_IDENTITY((! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, 1.0), (max(1.0, 1.0)) - 0.0))) < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), _GLF_IDENTITY(vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, sqrt(1.0)), vec2(0.0, round(length(normalize(1.0))))), dot(vec2(0.0, sqrt(1.0)), vec2(0.0, round(length(normalize(1.0)))))), 0.0, 1.0)), clamp(vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, sqrt(1.0)), vec2(0.0, round(length(normalize(1.0))))), dot(vec2(0.0, sqrt(1.0)), vec2(0.0, round(length(normalize(1.0)))))), 0.0, 1.0)), vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, sqrt(1.0)), vec2(0.0, round(length(normalize(1.0))))), dot(vec2(0.0, sqrt(1.0)), vec2(0.0, round(length(normalize(1.0)))))), 0.0, 1.0)), vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, sqrt(1.0)), vec2(0.0, round(length(normalize(1.0))))), dot(vec2(0.0, sqrt(1.0)), vec2(0.0, round(length(normalize(1.0)))))), 0.0, 1.0))))).y)))), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(1.0, max(1.0, 1.0))) < _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).y)))), ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(1.0, max(1.0, 1.0))) < _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).y))))), true && (! ((! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(1.0, max(1.0, 1.0))) < _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).y))))))))))))))) || false, ((! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! _GLF_IDENTITY((! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, 1.0), (max(1.0, 1.0)) - 0.0))) < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), _GLF_IDENTITY(vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * _GLF_IDENTITY((injectionSwitch), vec2(0.0, 0.0) + (_GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))), _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))), _GLF_IDENTITY((injectionSwitch), vec2(1.0, 1.0) * ((injectionSwitch)))))))), 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, sqrt(1.0)), vec2(0.0, round(length(normalize(1.0))))), dot(vec2(0.0, sqrt(1.0)), vec2(0.0, round(length(normalize(1.0)))))), 0.0, 1.0)), clamp(vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, sqrt(1.0)), vec2(0.0, round(length(normalize(1.0))))), dot(vec2(0.0, sqrt(1.0)), vec2(0.0, round(length(normalize(1.0)))))), 0.0, 1.0)), vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, sqrt(1.0)), vec2(0.0, round(length(normalize(1.0))))), dot(vec2(0.0, sqrt(1.0)), vec2(0.0, round(length(normalize(1.0)))))), 0.0, 1.0)), vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, sqrt(1.0)), vec2(0.0, round(length(normalize(1.0))))), dot(vec2(0.0, sqrt(1.0)), vec2(0.0, round(length(normalize(1.0)))))), 0.0, 1.0))))).y)))), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(false || (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(1.0, max(1.0, 1.0))) < _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).y), bool(bvec3(_GLF_IDENTITY(false || (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(1.0, max(1.0, 1.0))) < _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).y), false || (_GLF_IDENTITY(false || (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(1.0, max(1.0, 1.0))) < _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).y), bool(bvec3(false || (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(1.0, max(1.0, 1.0))) < _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).y), true, true))))), false, false)))))), ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(1.0, max(1.0, 1.0))) < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), (false ? _GLF_FUZZED(vec2(2.0, -134.348)) : _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * _GLF_IDENTITY((injectionSwitch), mat2(1.0) * ((injectionSwitch)))))).y))))), true && (! ((! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(1.0, max(1.0, 1.0))) < _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).y))))))))))))))) || false) && true)))))))), false))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_IDENTITY(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), ! (! (bool((injectionSwitch.x > injectionSwitch.y)))))), false || _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), ! (! (bool((injectionSwitch.x > injectionSwitch.y)))))) || false), true && (_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), ! (! (bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y)))))) || false))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec3(_GLF_IDENTITY(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), (_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (bool((injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (! (bool((injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(! (! (bool((injectionSwitch.x > injectionSwitch.y)))), (! (! (bool((injectionSwitch.x > injectionSwitch.y))))) || false))))))))) || false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), ! (! (bool((injectionSwitch.x > injectionSwitch.y))))))), bool(bvec4(_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(bool((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), ! (! (bool((injectionSwitch.x > injectionSwitch.y)))))) || false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec3(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), ! (! (bool((injectionSwitch.x > injectionSwitch.y)))))) || false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), ! (! (bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(48.42, 50.57)) : _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, injectionSwitch)))).y))))))), ! (! (((_GLF_IDENTITY(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), ! (! (bool((injectionSwitch.x > injectionSwitch.y)))))) || false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec3(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), ! (! (bool((injectionSwitch.x > injectionSwitch.y)))))), ((_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), ! (! (bool((injectionSwitch.x > injectionSwitch.y))))))) && true) || false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), ! (! (bool((injectionSwitch.x > injectionSwitch.y)))))))))), true, true, true))))))))), (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), ! (! (bool((injectionSwitch.x > injectionSwitch.y)))))), false || _GLF_IDENTITY(((_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), ! (! (bool((injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(bool(bvec2(((_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), ! (! (bool((injectionSwitch.x > injectionSwitch.y))))))), false)), ! (! (bool(bvec2(((_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), ! (! (bool((injectionSwitch.x > injectionSwitch.y))))))), false)))))))))))), ! (! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x)) > injectionSwitch.y), bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), ! (! (bool((injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), ! (! (bool((injectionSwitch.x > injectionSwitch.y))))))), bool(bvec4(bool((_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), ! (! (bool((injectionSwitch.x > injectionSwitch.y))))))), true, false, false)))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))) && (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (! (bool((injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_IDENTITY(! (! (bool((injectionSwitch.x > injectionSwitch.y)))), ! (! (! (! (bool((injectionSwitch.x > injectionSwitch.y))))))))))), ! (! ((_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (! (bool((injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_IDENTITY(! (! (bool((injectionSwitch.x > injectionSwitch.y)))), ! (! (! (! (bool((injectionSwitch.x > injectionSwitch.y))))))))))))))), bool(bvec4(bool((_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), ! (! (bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))))), true, false, false))))))), false || ((_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), ! (! (bool((injectionSwitch.x > injectionSwitch.y))))))))))))))))) || false))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), mix(float(_GLF_IDENTITY(_GLF_FUZZED(9860.9648), min(_GLF_FUZZED(9860.9648), _GLF_IDENTITY(_GLF_FUZZED(9860.9648), 1.0 * (_GLF_FUZZED(9860.9648)))))), float(min(injectionSwitch.y, injectionSwitch.y)), bool(true))))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5.4), _GLF_FUZZED(2.1)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], float(_GLF_IDENTITY(vec2((injectionSwitch)[1], 1.0), min(vec2((injectionSwitch)[1], 1.0), vec2((injectionSwitch)[1], 1.0)))))), _GLF_IDENTITY(bvec2(true, true), bvec2(bvec2(bvec2(true, true)))))).y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((workgroup_size), clamp((workgroup_size), (workgroup_size), (workgroup_size))) << 0u) * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, ~ (~ (_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base))))) + _GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_id), max(_GLF_IDENTITY(~ (subgroup_id), (~ (subgroup_id)) + (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))), _GLF_IDENTITY(~ (subgroup_id), (~ (subgroup_id)) >> 0u))), (~ (subgroup_id)) / 1u))) * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), 0u ^ (workgroup_base + _GLF_IDENTITY(subgroup_id, ~ (~ (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id))))) * subgroup_size + ((subgroup_local_id + 1) % subgroup_size)));
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))), false || ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), true && (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec2(injectionSwitch), mix(vec2(_GLF_FUZZED(-4.9), (vec2(injectionSwitch))[1]), vec2((vec2(injectionSwitch))[0], _GLF_FUZZED(595.463)), bvec2(true, false))))).y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))) || false)))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   barrier();
  }
 buf[virtual_gid] = 1;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(subgroup_local_id + 1 < subgroup_size)
  {
   int i = _GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, min(0, 0)), 0)), 0));
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)) : _GLF_FUZZED(injectionSwitch))).y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-498.164) : 1.0)), 1.0)))) : _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), min(_GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), (true ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), (_GLF_FUZZED(injectionSwitch)) / vec2(1.0, 1.0)) : _GLF_FUZZED(injectionSwitch))), _GLF_FUZZED(injectionSwitch))))).y))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, ! (! (false)))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))))) && true)))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), false || (_GLF_IDENTITY(bool(bvec4(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), (bool(bvec4(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))) || false))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) || false))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(_GLF_IDENTITY(2, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (2), 1 * _GLF_IDENTITY((~ (2)), (false ? _GLF_FUZZED(47238) : _GLF_IDENTITY((~ (2)), ~ (~ ((~ (2))))))))), max(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (2), (_GLF_IDENTITY(~ (2), ~ (~ (~ (2))))) << 0), 1 * (~ (2)))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (2), ~ (~ (_GLF_IDENTITY(~ (2), ~ (~ (~ (2))))))), 1 * (~ (2)))))))), 0u ^ (uint(2))), 4, 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
