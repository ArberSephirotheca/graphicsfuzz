#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_24 {
 mat3x2 _f0;
} ;

struct _GLF_struct_25 {
 vec2 _f0;
 _GLF_struct_24 _f1;
 int _f2;
 vec2 _f3;
} ;

struct _GLF_struct_22 {
 uvec3 _f0;
 mat4x2 _f1;
 bvec2 _f2;
 uint workgroup_id;
 mat4 _f3;
} ;

struct _GLF_struct_21 {
 uvec4 _f0;
} ;

struct _GLF_struct_20 {
 vec3 _f0;
 mat2x3 _f1;
 uvec3 _f2;
 mat4x2 _f3;
 vec2 _f4;
 uvec4 _f5;
 float _f6;
} ;

struct _GLF_struct_23 {
 _GLF_struct_20 _f0;
 mat3x2 _f1;
 _GLF_struct_21 _f2;
 _GLF_struct_22 _f3;
 vec3 _f4;
} ;

struct _GLF_struct_26 {
 _GLF_struct_23 _f0;
 mat4x3 _f1;
 _GLF_struct_25 _f2;
} ;

struct _GLF_struct_17 {
 uvec3 _f0;
 uvec3 _f1;
 mat2x4 _f2;
 mat4x3 _f3;
 uvec4 _f4;
 int _f5;
 bvec3 _f6;
} ;

struct _GLF_struct_18 {
 _GLF_struct_17 _f0;
} ;

struct _GLF_struct_15 {
 vec2 _f0;
 mat4x2 _f1;
 uint _f2;
 uvec2 _f3;
 uvec3 _f4;
} ;

struct _GLF_struct_16 {
 int _f0;
 _GLF_struct_15 _f1;
} ;

struct _GLF_struct_13 {
 vec3 _f0;
} ;

struct _GLF_struct_12 {
 vec4 _f0;
 bvec4 _f1;
 bvec4 _f2;
 ivec2 _f3;
 ivec2 _f4;
 mat3x4 _f5;
} ;

struct _GLF_struct_11 {
 uvec3 _f0;
 float _f1;
 mat4x3 _f2;
 bvec2 _f3;
} ;

struct _GLF_struct_14 {
 uint _f0;
 _GLF_struct_11 _f1;
 _GLF_struct_12 _f2;
 _GLF_struct_13 _f3;
} ;

struct _GLF_struct_9 {
 int _f0;
} ;

struct _GLF_struct_8 {
 vec2 _f0;
 uvec3 _f1;
 mat3 _f2;
 mat4 _f3;
} ;

struct _GLF_struct_10 {
 _GLF_struct_8 _f0;
 _GLF_struct_9 _f1;
} ;

struct _GLF_struct_19 {
 _GLF_struct_10 _f0;
 bvec2 _f1;
 bvec4 _f2;
 uint virtual_gid;
 _GLF_struct_14 _f3;
 mat3x2 _f4;
 _GLF_struct_16 _f5;
 _GLF_struct_18 _f6;
} ;

struct _GLF_struct_5 {
 bvec4 _f0;
 mat2x3 _f1;
 mat4x3 _f2;
 mat3 _f3;
 mat4 _f4;
 bvec2 _f5;
} ;

struct _GLF_struct_4 {
 mat2 _f0;
} ;

struct _GLF_struct_6 {
 bool _f0;
 bvec2 _f1;
 _GLF_struct_4 _f2;
 _GLF_struct_5 _f3;
 ivec2 _f4;
} ;

struct _GLF_struct_2 {
 ivec4 _f0;
 bool _f1;
 vec3 _f2;
 float _f3;
 mat4 _f4;
 uvec4 _f5;
 mat3x4 _f6;
} ;

struct _GLF_struct_3 {
 ivec4 _f0;
 mat2x4 _f1;
 _GLF_struct_2 _f2;
 mat2x4 _f3;
} ;

struct _GLF_struct_0 {
 int _f0;
 int _f1;
 vec4 _f2;
 vec2 _f3;
} ;

struct _GLF_struct_1 {
 _GLF_struct_0 _f0;
} ;

struct _GLF_struct_7 {
 _GLF_struct_1 _f0;
 uint subgroup_local_id;
 mat2x4 _f1;
 _GLF_struct_3 _f2;
 _GLF_struct_6 _f3;
 mat3 _f4;
} ;

layout(set = 0, binding = 0) uniform buf0 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 _GLF_struct_7 _GLF_struct_replacement_7 = _GLF_struct_7(_GLF_struct_1(_GLF_struct_0(1, 1, vec4(1.0), vec2(1.0))), gl_SubgroupInvocationID, mat2x4(1.0), _GLF_struct_3(ivec4(1), mat2x4(1.0), _GLF_struct_2(ivec4(1), true, vec3(1.0), 1.0, mat4(1.0), uvec4(1u), mat3x4(1.0)), mat2x4(1.0)), _GLF_struct_6(true, bvec2(true), _GLF_struct_4(mat2(1.0)), _GLF_struct_5(bvec4(true), mat2x3(1.0), mat4x3(1.0), mat3(1.0), mat4(1.0), bvec2(true)), ivec2(1)), mat3(1.0));
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 _GLF_struct_26 _GLF_struct_replacement_26 = _GLF_struct_26(_GLF_struct_23(_GLF_struct_20(vec3(1.0), mat2x3(1.0), uvec3(1u), mat4x2(1.0), vec2(1.0), uvec4(1u), 1.0), mat3x2(1.0), _GLF_struct_21(uvec4(1u)), _GLF_struct_22(uvec3(1u), mat4x2(1.0), bvec2(true), gl_WorkGroupID.x, mat4(1.0)), vec3(1.0)), mat4x3(1.0), _GLF_struct_25(vec2(1.0), _GLF_struct_24(mat3x2(1.0)), 1, vec2(1.0)));
 uint workgroup_base = workgroup_size * _GLF_struct_replacement_26._f0._f3.workgroup_id;
 _GLF_struct_19 _GLF_struct_replacement_19 = _GLF_struct_19(_GLF_struct_10(_GLF_struct_8(vec2(1.0), uvec3(1u), mat3(1.0), mat4(1.0)), _GLF_struct_9(1)), bvec2(true), bvec4(true), workgroup_base + subgroup_id * subgroup_size + _GLF_struct_replacement_7.subgroup_local_id, _GLF_struct_14(1u, _GLF_struct_11(uvec3(1u), 1.0, mat4x3(1.0), bvec2(true)), _GLF_struct_12(vec4(1.0), bvec4(true), bvec4(true), ivec2(1), ivec2(1), mat3x4(1.0)), _GLF_struct_13(vec3(1.0))), mat3x2(1.0), _GLF_struct_16(1, _GLF_struct_15(vec2(1.0), mat4x2(1.0), 1u, uvec2(1u), uvec3(1u))), _GLF_struct_18(_GLF_struct_17(uvec3(1u), uvec3(1u), mat2x4(1.0), mat4x3(1.0), uvec4(1u), 1, bvec3(true))));
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((_GLF_struct_replacement_7.subgroup_local_id + 1) % subgroup_size);
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   buf[_GLF_struct_replacement_19.virtual_gid] = 1;
  }
 else
  {
  }
 do
  {
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 0);
  }
 while(_GLF_WRAPPED_LOOP(false));
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
