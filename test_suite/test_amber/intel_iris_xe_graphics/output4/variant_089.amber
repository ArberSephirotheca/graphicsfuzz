#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460
struct _GLF_struct_2 {
 uint num_workgroup;
 vec4 _f0;
} ;

struct _GLF_struct_0 {
 ivec4 _f0;
} ;

struct _GLF_struct_1 {
 uint subgroup_size;
 _GLF_struct_0 _f0;
 mat4 _f1;
 bvec4 _f2;
 mat4x2 _f3;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 _GLF_struct_1 _GLF_struct_replacement_1 = _GLF_struct_1(gl_SubgroupSize, _GLF_struct_0(ivec4(1)), mat4(1.0), bvec4(true), mat4x2(1.0));
 uint gid = gl_GlobalInvocationID.x;
 _GLF_struct_2 _GLF_struct_replacement_2 = _GLF_struct_2(gl_NumWorkGroups.x, vec4(1.0));
 uint workgroup_size = gl_WorkGroupSize.x;
 uint total_threads = _GLF_struct_replacement_2.num_workgroup * workgroup_size;
 buf[gid] = 1;
 atomicStore(buf[(gid + 1) % total_threads], uint(2), 4, 64, 0);
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
