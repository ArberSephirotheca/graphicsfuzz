#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec2(bvec2(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), true && (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))), bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), true && (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))), false, _GLF_IDENTITY(false, ! (! (false))), true))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(9.9)), vec2(_GLF_FUZZED(42.10), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))).y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = 16;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, max(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) - uvec3(0u, 0u, 0u)), gl_WorkGroupSize)))).x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0))) - vec2(0.0, 0.0)).y)), false)))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-8.3, 85.68)) : injectionSwitch)), injectionSwitch))) / _GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), mix(float(_GLF_FUZZED(-9470.8073)), float(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), bool(true))) : _GLF_FUZZED(0.4))), 1.0), clamp(vec2(1.0, 1.0), vec2(1.0, 1.0), vec2(1.0, 1.0)))).x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(_GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, max(0.0, 0.0)))), 0.0)).x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), vec2(_GLF_FUZZED(-4.8), _GLF_FUZZED((+ 5.6))), bvec2(false, false))) / vec2(1.0, 1.0)).y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true), (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(mat2x3((injectionSwitch) * mat2(1.0), 0.0, 0.0, 0.0, 0.0)))).x) / _GLF_IDENTITY(1.0, float(mat4(_GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0, 1.0, 1.0, sin(0.0), 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), (false ? _GLF_FUZZED(-40.49) : dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))))), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0)))) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)) * _GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, (1u) | (1u))))), 1u, 1u))), max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) * _GLF_IDENTITY(1u, (1u) << 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)), (workgroup_base) * 1u)) / 1u), _GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u))) + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(dot(vec3(abs(1.0), 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(abs(1.0), 0.0, 0.0), vec3(1.0, 0.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y), 1.0, abs(0.0), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), mix(float(_GLF_FUZZED(-3.7)), float(dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), bool(true)))), 1.0, 0.0, 1.0, 1.0), mat3(1.0) * (mat4x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(dot(vec3(abs(1.0), 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(abs(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(1.8)), bool(false))), 1.0, 1.0))), 0.0, 0.0), vec3(1.0, 0.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y), 1.0, abs(0.0), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 1.0, 0.0, 1.0, 1.0))))).x, (true ? _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(dot(vec3(abs(1.0), 0.0, 0.0), vec3(1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec3(abs(1.0), 0.0, 0.0), vec3(1.0, 0.0, 0.0)), (_GLF_IDENTITY(dot(vec3(abs(1.0), 0.0, 0.0), vec3(1.0, 0.0, 0.0)), 1.0 * (dot(vec3(abs(1.0), 0.0, 0.0), vec3(1.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))))) / 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 1.0, abs(0.0), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 1.0, 0.0, 1.0, 1.0), mat3(1.0) * (mat4x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(dot(vec3(abs(1.0), 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(_GLF_IDENTITY(vec3(abs(1.0), 0.0, 0.0), (vec3(abs(1.0), 0.0, 0.0)) - vec3(0.0, 0.0, 0.0)), vec3(1.0, 0.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y), 1.0, abs(0.0), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 1.0, 0.0, 1.0, 1.0))))).x : _GLF_FUZZED(-9.1))) > injectionSwitch.y), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, true && (true))), bvec2(bvec4(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, true && (true))), false, true))), bvec2(bvec3(bvec2((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), false, true, false))), (! (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y)) && true)))), true), true))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(6.6))) > injectionSwitch.y, true, false, false))), (injectionSwitch.x > injectionSwitch.y) || _GLF_IDENTITY(false, (false) && true))))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, _GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, false))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) || _GLF_IDENTITY(false, (false) && true), bool(bvec3((injectionSwitch.x > injectionSwitch.y) || false, false, false))))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, (false) || false), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (false ? _GLF_FUZZED(7700.3224) : injectionSwitch[1])))).x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, false))), (injectionSwitch.x > injectionSwitch.y) || false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, false))), (injectionSwitch.x > injectionSwitch.y) || false), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y, true, false, false))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) || false, false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) || false, bool(bvec2((injectionSwitch.x > injectionSwitch.y) || false, false))))))) || false)) && true))), bool(bvec4(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, (false) || false), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (false ? _GLF_FUZZED(7700.3224) : injectionSwitch[1])))).x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, false))), (injectionSwitch.x > injectionSwitch.y) || false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, false))), (injectionSwitch.x > injectionSwitch.y) || false), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y, true, false, false))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) || false, false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) || false, bool(bvec2((injectionSwitch.x > injectionSwitch.y) || false, false))))))) || false)) && true))), false, false, false))))))), true))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, _GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(dot(vec3(abs(1.0), 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(abs(1.0), 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, float(float(0.0))) : _GLF_FUZZED(vec3(256.221, -5.4, -9.7)[2])))) / 1.0)), vec3(1.0, 0.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y), 1.0, abs(0.0), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), mix(float(_GLF_FUZZED(-3.7)), float(dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), bool(true)))), 1.0, 0.0, 1.0, 1.0), mat3(1.0) * (mat4x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(dot(vec3(abs(1.0), 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(abs(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(1.8)), bool(false))), 1.0, 1.0))), 0.0, 0.0), vec3(1.0, 0.0, 0.0))), _GLF_ONE(_GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(70.72) : 1.0)), injectionSwitch.y), 1.0, abs(0.0), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 1.0, 0.0, 1.0, 1.0))))).x, (_GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(vec4(_GLF_ONE(1.0, injectionSwitch.y), 0.0, log(1.0), 1.0))), _GLF_IDENTITY(dot(vec3(abs(1.0), 0.0, 0.0), vec3(1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec3(abs(1.0), 0.0, 0.0), vec3(1.0, 0.0, 0.0)), (_GLF_IDENTITY(dot(vec3(abs(1.0), 0.0, 0.0), vec3(1.0, 0.0, 0.0)), 1.0 * (dot(vec3(abs(1.0), 0.0, 0.0), vec3(1.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))))) / 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 1.0, abs(0.0), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 1.0, 0.0, 1.0, 1.0), mat3(1.0) * (mat4x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(dot(vec3(abs(1.0), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(8201.6421)), bool(false))), 0.0), vec3(1.0, 0.0, 0.0)), dot(_GLF_IDENTITY(vec3(abs(1.0), 0.0, _GLF_IDENTITY(0.0, float(mat2x4(_GLF_IDENTITY(0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))) * (0.0)), tan(0.0), 0.0, 1.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, abs(1.0), 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0)), sqrt(1.0), 0.0)))), (vec3(abs(1.0), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(vec4(-0.8, 2250.6812, 88.90, 7.7).x)), bool(false))), 0.0)) - vec3(0.0, 0.0, 0.0)), vec3(1.0, 0.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y), 1.0, abs(0.0), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 1.0, 0.0, 1.0, 1.0))))).x : _GLF_FUZZED(-9.1), 1.0 * (true ? _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(vec4(_GLF_ONE(1.0, injectionSwitch.y), 0.0, log(1.0), 1.0))), _GLF_IDENTITY(dot(vec3(abs(1.0), 0.0, 0.0), vec3(1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec3(abs(1.0), 0.0, 0.0), vec3(1.0, 0.0, 0.0)), (_GLF_IDENTITY(dot(vec3(abs(1.0), 0.0, 0.0), vec3(1.0, 0.0, 0.0)), 1.0 * (dot(vec3(abs(1.0), 0.0, 0.0), vec3(1.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))))) / 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 1.0, abs(0.0), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 1.0, 0.0, 1.0, 1.0), mat3(1.0) * (mat4x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(dot(vec3(abs(1.0), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(8201.6421)), bool(false))), 0.0), vec3(1.0, 0.0, 0.0)), dot(_GLF_IDENTITY(vec3(abs(1.0), 0.0, _GLF_IDENTITY(0.0, float(mat2x4(_GLF_IDENTITY(0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))) * (0.0)), tan(0.0), 0.0, 1.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, abs(1.0), 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0)), sqrt(1.0), 0.0)))), (vec3(abs(1.0), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(vec4(-0.8, 2250.6812, 88.90, 7.7).x)), bool(false))), 0.0)) - vec3(0.0, 0.0, 0.0)), vec3(1.0, 0.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y), 1.0, abs(0.0), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 1.0, 0.0, 1.0, 1.0))))).x : _GLF_FUZZED(-9.1))))) > injectionSwitch.y), true && ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(dot(vec3(abs(1.0), 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(abs(1.0), 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, float(float(0.0))) : _GLF_FUZZED(vec3(256.221, -5.4, -9.7)[2])))) / 1.0)), vec3(1.0, 0.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y), 1.0, abs(0.0), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), mix(float(_GLF_FUZZED(-3.7)), float(dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), bool(true)))), 1.0, 0.0, 1.0, 1.0), mat3(1.0) * (mat4x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(dot(vec3(abs(1.0), 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(abs(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(1.8)), bool(false))), 1.0, 1.0))), 0.0, 0.0), vec3(1.0, 0.0, 0.0))), _GLF_ONE(_GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(70.72) : 1.0)), injectionSwitch.y), 1.0, abs(0.0), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 1.0, 0.0, 1.0, 1.0))))).x, (_GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(vec4(_GLF_ONE(1.0, injectionSwitch.y), 0.0, log(1.0), 1.0))), _GLF_IDENTITY(dot(vec3(abs(1.0), 0.0, 0.0), vec3(1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec3(abs(1.0), 0.0, 0.0), vec3(1.0, 0.0, 0.0)), (_GLF_IDENTITY(dot(vec3(abs(1.0), 0.0, 0.0), vec3(1.0, 0.0, 0.0)), 1.0 * (dot(vec3(abs(1.0), 0.0, 0.0), vec3(1.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))))) / 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 1.0, abs(0.0), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 1.0, 0.0, 1.0, 1.0), mat3(1.0) * (mat4x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(dot(vec3(abs(1.0), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(8201.6421)), bool(false))), 0.0), vec3(1.0, 0.0, 0.0)), dot(_GLF_IDENTITY(vec3(abs(1.0), 0.0, _GLF_IDENTITY(0.0, float(mat2x4(_GLF_IDENTITY(0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))) * (0.0)), tan(0.0), 0.0, 1.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, abs(1.0), 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0)), sqrt(1.0), 0.0)))), (vec3(abs(1.0), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(vec4(-0.8, 2250.6812, 88.90, 7.7).x)), bool(false))), 0.0)) - vec3(0.0, 0.0, 0.0)), vec3(1.0, 0.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y), 1.0, abs(0.0), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 1.0, 0.0, 1.0, 1.0))))).x : _GLF_FUZZED(-9.1), 1.0 * (true ? _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(vec4(_GLF_ONE(1.0, injectionSwitch.y), 0.0, log(1.0), 1.0))), _GLF_IDENTITY(dot(vec3(abs(1.0), 0.0, 0.0), vec3(1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec3(abs(1.0), 0.0, 0.0), vec3(1.0, 0.0, 0.0)), (_GLF_IDENTITY(dot(vec3(abs(1.0), 0.0, 0.0), vec3(1.0, 0.0, 0.0)), 1.0 * (dot(vec3(abs(1.0), 0.0, 0.0), vec3(1.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))))) / 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 1.0, abs(0.0), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 1.0, 0.0, 1.0, 1.0), mat3(1.0) * (mat4x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(dot(vec3(abs(1.0), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(8201.6421)), bool(false))), 0.0), vec3(1.0, 0.0, 0.0)), dot(_GLF_IDENTITY(vec3(abs(1.0), 0.0, _GLF_IDENTITY(0.0, float(mat2x4(_GLF_IDENTITY(0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))) * (0.0)), tan(0.0), 0.0, 1.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, abs(1.0), 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0)), sqrt(1.0), 0.0)))), (vec3(abs(1.0), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(vec4(-0.8, 2250.6812, 88.90, 7.7).x)), bool(false))), 0.0)) - vec3(0.0, 0.0, 0.0)), vec3(1.0, 0.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y), 1.0, abs(0.0), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 1.0, 0.0, 1.0, 1.0))))).x : _GLF_FUZZED(-9.1))))) > injectionSwitch.y))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, true && (true))), bvec2(bvec4(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, true && (true))), false, true))), bvec2(bvec3(bvec2((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), false, true, false))), (! (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y)) && true)))), true), true))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(6.6))) > injectionSwitch.y, true, false, false))), (injectionSwitch.x > injectionSwitch.y) || _GLF_IDENTITY(false, (false) && true))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, _GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, false))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) || _GLF_IDENTITY(false, (false) && true), bool(bvec3((injectionSwitch.x > injectionSwitch.y) || false, false, false))))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, (false) || false), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (false ? _GLF_FUZZED(7700.3224) : injectionSwitch[1])))).x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, false))), (injectionSwitch.x > injectionSwitch.y) || false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, false))), (injectionSwitch.x > injectionSwitch.y) || false), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y, true, false, false))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) || false, false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) || false, bool(bvec2((injectionSwitch.x > injectionSwitch.y) || false, false))))))) || false)) && true))), bool(bvec4(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, (false) || false), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (false ? _GLF_FUZZED(7700.3224) : injectionSwitch[1])))).x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, false))), (injectionSwitch.x > injectionSwitch.y) || false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, false))), (injectionSwitch.x > injectionSwitch.y) || false), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y, true, false, false))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) || false, false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) || false, bool(bvec2((injectionSwitch.x > injectionSwitch.y) || false, false))))))) || false)) && true))), false, false, false))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, _GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, false))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) || _GLF_IDENTITY(false, (false) && true), bool(bvec3((injectionSwitch.x > injectionSwitch.y) || false, false, false))))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, (false) || false), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (false ? _GLF_FUZZED(7700.3224) : injectionSwitch[1])))).x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, false))), (injectionSwitch.x > injectionSwitch.y) || false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, false))), (injectionSwitch.x > injectionSwitch.y) || false), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y, true, false, false))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) || false, false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) || false, bool(bvec2((injectionSwitch.x > injectionSwitch.y) || false, false))))))) || false)) && true))), bool(bvec4(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, (false) || false), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (false ? _GLF_FUZZED(7700.3224) : injectionSwitch[1])))).x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, false))), (injectionSwitch.x > injectionSwitch.y) || false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, false))), (injectionSwitch.x > injectionSwitch.y) || false), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y, true, false, false))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) || false, false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) || false, bool(bvec2((injectionSwitch.x > injectionSwitch.y) || false, false))))))) || false)) && true))), false, false, false)))))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, _GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, false))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) || _GLF_IDENTITY(false, (false) && true), bool(bvec3((injectionSwitch.x > injectionSwitch.y) || false, false, false))))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, (false) || false), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (false ? _GLF_FUZZED(7700.3224) : injectionSwitch[1])))).x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, false))), (injectionSwitch.x > injectionSwitch.y) || false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, false))), (injectionSwitch.x > injectionSwitch.y) || false), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y, true, false, false))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) || false, false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) || false, bool(bvec2((injectionSwitch.x > injectionSwitch.y) || false, false))))))) || false)) && true))), bool(bvec4(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, (false) || false), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (false ? _GLF_FUZZED(7700.3224) : injectionSwitch[1])))).x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, false))), (injectionSwitch.x > injectionSwitch.y) || false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, false))), (injectionSwitch.x > injectionSwitch.y) || false), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y, true, false, false))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) || false, false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) || false, bool(bvec2((injectionSwitch.x > injectionSwitch.y) || false, false))))))) || false)) && true))), false, false, false)))))))), true && (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, _GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)) - 0.0) > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, false))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) || _GLF_IDENTITY(false, (false) && true), bool(bvec3((injectionSwitch.x > injectionSwitch.y) || false, false, false))))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, (false) || false), false, _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (false ? _GLF_FUZZED(7700.3224) : injectionSwitch[1])))).x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (false ? _GLF_FUZZED(7700.3224) : injectionSwitch[1])))).x > injectionSwitch.y))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y) || false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, false))), (injectionSwitch.x > injectionSwitch.y) || false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, false))), (injectionSwitch.x > injectionSwitch.y) || false), true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, false))), (injectionSwitch.x > injectionSwitch.y) || false)))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y, true, false, false))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) || false, false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) || false, bool(bvec2((injectionSwitch.x > injectionSwitch.y) || false, false))))))) || false)) && true))), bool(bvec4(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, (false) || false), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec2(1, 1)), (int(ivec2(1, 1))) >> 0)), 1))], (false ? _GLF_FUZZED(7700.3224) : injectionSwitch[1])))).x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x)) > injectionSwitch.y, true, false, false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || false)))))), bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, false))), (injectionSwitch.x > injectionSwitch.y) || false), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y, true, false, false))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) || false, false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) || false, bool(bvec2((injectionSwitch.x > injectionSwitch.y) || false, false))))))) || false)) && true))), false, false, false))))))))))))))), true)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, (1) << 0)) % subgroup_size), min(((subgroup_local_id + _GLF_IDENTITY(1, (1) << 0)) % subgroup_size), ((subgroup_local_id + _GLF_IDENTITY(1, (1) << 0)) % subgroup_size)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 buf[virtual_gid] = 1;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(2), (uint(2)) / 1u), 4, 64, _GLF_IDENTITY(0, int(int(_GLF_IDENTITY(0, ~ (~ (0)))))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
