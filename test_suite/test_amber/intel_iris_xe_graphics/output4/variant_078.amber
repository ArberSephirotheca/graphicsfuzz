#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 0) uniform buf0 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), false || (! (false))), false || (! (false)))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))) || false))) || (! (false))), false || (! (false)))))), (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), false || (! (false))), false || (! (false))))))) || false)) && true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-8999.5747) : injectionSwitch.x)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec3(injectionSwitch.x, 0.0, 0.0)), (float(vec3(injectionSwitch.x, 0.0, 0.0))) - 0.0)) > injectionSwitch.y) && true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0) : _GLF_FUZZED(4.8))))), (false ? _GLF_FUZZED(7.2) : injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(8746.0091), _GLF_FUZZED(473.991)), vec2((injectionSwitch)[_GLF_IDENTITY(0, (false ? _GLF_FUZZED(-87932) : 0))], (injectionSwitch)[1]), bvec2(true, true)))) / vec2(1.0, 1.0)), 0.0, 1.0, _GLF_IDENTITY(dot(vec2(abs(0.0), 0.0), vec2(1.0, 1.0)), dot(vec2(abs(0.0), 0.0), vec2(1.0, 1.0))), abs(0.0), 0.0, 0.0)), _GLF_IDENTITY((vec2(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(8746.0091), _GLF_FUZZED(473.991)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))) / vec2(1.0, 1.0)), min(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(8746.0091), _GLF_FUZZED(473.991)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(8746.0091), _GLF_FUZZED(473.991)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))) / vec2(1.0, 1.0)))), 0.0, 1.0, _GLF_IDENTITY(dot(vec2(abs(_GLF_IDENTITY(0.0, float(mat3x2(0.0, 1.0, 0.0, 1.0, 0.0, 1.0)))), 0.0), vec2(1.0, 1.0)), dot(vec2(abs(0.0), 0.0), vec2(1.0, 1.0))), abs(0.0), 0.0, 0.0))) * mat2(1.0), (_GLF_IDENTITY(true ? (vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(8746.0091), _GLF_FUZZED(_GLF_IDENTITY(473.991, 0.0 + (473.991)))), vec2((injectionSwitch)[_GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, (0) >> int(_GLF_ZERO(0.0, injectionSwitch.x)))))], _GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, (1) << 0) : _GLF_FUZZED(-9005)))) / _GLF_IDENTITY(1, (1) - 0))], ((injectionSwitch)[_GLF_IDENTITY(1, (1) / _GLF_IDENTITY(1, (1) - 0))]) * abs(1.0))), bvec2(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, ! (! (true))), true))), true)))) / vec2(1.0, 1.0)), 0.0, 1.0, _GLF_IDENTITY(dot(vec2(abs(0.0), 0.0), vec2(1.0, 1.0)), dot(vec2(abs(0.0), 0.0), vec2(1.0, 1.0))), abs(0.0), 0.0, 0.0))) * mat2(1.0) : _GLF_FUZZED(injectionSwitch), sqrt(vec2(0.0, 0.0)) + (true ? (vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(8746.0091), _GLF_FUZZED(473.991)), vec2((injectionSwitch)[_GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, (0) >> int(_GLF_ZERO(0.0, injectionSwitch.x)))))], _GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(1, (1) / _GLF_IDENTITY(1, (1) - 0))], ((injectionSwitch)[_GLF_IDENTITY(1, (1) / _GLF_IDENTITY(1, (1) - 0))]) * abs(1.0))), bvec2(true, true)))) / vec2(1.0, 1.0), ((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(8746.0091), _GLF_FUZZED(473.991)), vec2((injectionSwitch)[_GLF_IDENTITY(0, (0) | _GLF_IDENTITY((_GLF_IDENTITY(0, (0) >> int(_GLF_ZERO(0.0, injectionSwitch.x)))), max((_GLF_IDENTITY(0, (0) >> int(_GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY((_GLF_IDENTITY(0, (0) >> int(_GLF_ZERO(0.0, injectionSwitch.x)))), ((_GLF_IDENTITY(0, (0) >> int(_GLF_ZERO(0.0, injectionSwitch.x))))) | 0))))], _GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(1, (1) / _GLF_IDENTITY(1, (1) - 0))], ((injectionSwitch)[_GLF_IDENTITY(1, (1) / _GLF_IDENTITY(1, (1) - 0))]) * abs(1.0))), bvec2(true, true)))) / vec2(_GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0)) * vec2(1.0, 1.0))), 0.0, 1.0, _GLF_IDENTITY(dot(vec2(abs(0.0), 0.0), vec2(1.0, 1.0)), dot(vec2(abs(0.0), 0.0), vec2(1.0, 1.0))), abs(0.0), _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-4.3) : 0.0)), 0.0)), 0.0))) * mat2(1.0) : _GLF_FUZZED(injectionSwitch))))))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(8746.0091), _GLF_FUZZED(473.991)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))) / vec2(1.0, 1.0)), 0.0, 1.0, _GLF_IDENTITY(dot(vec2(abs(0.0), 0.0), vec2(1.0, 1.0)), _GLF_IDENTITY(dot(vec2(abs(0.0), 0.0), vec2(1.0, 1.0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(ceil(7.8)) : dot(vec2(abs(0.0), 0.0), vec2(1.0, 1.0))))), _GLF_IDENTITY(abs(0.0), clamp(abs(0.0), _GLF_IDENTITY(abs(0.0), float(mat2(abs(0.0), 0.0, 0.0, 0.0))), abs(0.0))), 0.0, 0.0)), _GLF_IDENTITY((vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(8746.0091), _GLF_FUZZED(473.991)), vec2(_GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0))) / vec2(1.0, 1.0))[0], (injectionSwitch)[1]), bvec2(true, true)))) / vec2(1.0, 1.0)), 0.0, 1.0, _GLF_IDENTITY(dot(vec2(abs(0.0), 0.0), vec2(1.0, 1.0)), dot(vec2(abs(0.0), 0.0), vec2(1.0, 1.0))), abs(0.0), _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, 0.0 + (0.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 0.0))) * mat2(1.0), (_GLF_IDENTITY(true ? (vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(8746.0091), _GLF_FUZZED(473.991)), vec2((injectionSwitch)[_GLF_IDENTITY(0, (_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, (0) ^ 0), 0))) | (_GLF_IDENTITY(0, (0) >> int(_GLF_ZERO(0.0, injectionSwitch.x)))))], _GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) - 0)) / _GLF_IDENTITY(1, (1) - 0))], _GLF_IDENTITY(((injectionSwitch)[_GLF_IDENTITY(1, (1) / _GLF_IDENTITY(1, (1) - 0))]) * abs(1.0), mix(float(_GLF_FUZZED((-36.29 / 6.8))), float(((injectionSwitch)[_GLF_IDENTITY(1, (1) / _GLF_IDENTITY(1, (1) - 0))]) * abs(1.0)), bool(true))))), bvec2(true, true)))) / vec2(1.0, 1.0)), 0.0, 1.0, _GLF_IDENTITY(dot(vec2(abs(0.0), 0.0), vec2(1.0, 1.0)), dot(vec2(abs(0.0), 0.0), vec2(1.0, 1.0))), abs(0.0), 0.0, 0.0))) * mat2(1.0) : _GLF_FUZZED(injectionSwitch), sqrt(vec2(0.0, 0.0)) + (true ? (vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(8746.0091), _GLF_FUZZED(473.991)), vec2((injectionSwitch)[_GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, (0) >> int(_GLF_ZERO(0.0, injectionSwitch.x)))))], _GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(1, (1) / _GLF_IDENTITY(1, (1) - 0))], ((injectionSwitch)[_GLF_IDENTITY(1, (1) / _GLF_IDENTITY(1, (1) - 0))]) * abs(1.0))), bvec2(true, true)))) / vec2(1.0, 1.0)), 0.0, 1.0, _GLF_IDENTITY(dot(vec2(abs(0.0), 0.0), vec2(1.0, 1.0)), dot(vec2(abs(0.0), 0.0), vec2(1.0, 1.0))), abs(0.0), 0.0, 0.0))) * mat2(1.0) : _GLF_FUZZED(injectionSwitch)))))))) * mat2(1.0)).y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true))))))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, bool(bvec3(false, true, false))), true)))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true))), true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, true), bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, false, true), true))))))))))), _GLF_IDENTITY(! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true)))))), true && (! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true)))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! _GLF_IDENTITY((! ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))), _GLF_IDENTITY(((! ((injectionSwitch.x > injectionSwitch.y)))) || false, true && (((! ((injectionSwitch.x > injectionSwitch.y)))) || false)))), false))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_DEAD(false))), (! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false)))), (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false))))) && true))) && true))) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) && true)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, true && (false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, true && (false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), (bool(bvec4(_GLF_IDENTITY(false, true && (false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))) || false)) || false)), (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(7.7) : injectionSwitch.x)) > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(8.3)), float(injectionSwitch.y), bool(true)))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)))), false, true, false)), ! (! (bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), false, true, false)))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true), ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true)))), (false) || false)))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(13.80), _GLF_FUZZED(-19.65)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))).y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (((injectionSwitch.x > injectionSwitch.y))) && true)), false))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (! (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)))), false || (! _GLF_IDENTITY((! (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)))), ! (! ((! (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 1.0, cos(0.0), 0.0, 0.0))).x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)), ! (! (bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED((+ -191.524))), bool(false))) < injectionSwitch.y)), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), bool(bool(bool(bvec2(true, false)))))), true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (false ? _GLF_FUZZED(-10.10) : injectionSwitch[1])))).y, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 1.0, cos(0.0), 0.0, 0.0))).x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)))))).y, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(true))))))), ! (! (bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x < injectionSwitch.y, true)), (bool(bvec2(injectionSwitch.x < injectionSwitch.y, true))) && true)))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), bool(bool(bool(bvec2(true, false)))))), true))))))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))), true, true, false)))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), false || ((_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))))))), false, true))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0))))).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1]))[_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ (_GLF_IDENTITY(0 & -93204, min(0 & -93204, 0 & -93204)))), (_GLF_IDENTITY(0, (0) ^ (0 & -93204))) >> int(_GLF_ZERO(0.0, injectionSwitch.x)))], injectionSwitch[1])).x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, (0) ^ (_GLF_IDENTITY(0 & _GLF_IDENTITY(-93204, (-93204) | (-93204)), int(int(0 & -93204)))))], injectionSwitch[1])).x > injectionSwitch.y)), (! ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, _GLF_IDENTITY((0) ^ (0 & -93204), min((0) ^ (0 & -93204), (0) ^ (0 & -93204))))], injectionSwitch[1])).x > injectionSwitch.y))) || false))))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, true, false))))), _GLF_IDENTITY((bool(bool(_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), (bool(bvec2(false, true))) || false)))))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_IDENTITY(false, bool(bvec2(false, true)))))))), ! (! (bool(bool(_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_IDENTITY(false, bool(bvec2(false, true))))))))))))), ! (_GLF_IDENTITY(! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_IDENTITY(false, bool(bvec2(false, true)))))))), ! (_GLF_IDENTITY(! (bool(bool(_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_IDENTITY(false, bool(bvec2(false, true))))))))), true && (! (bool(bool(_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), ! (! (_GLF_IDENTITY(false, bool(bvec2(false, true))))))))))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_IDENTITY(false, bool(bvec2(false, true)))))))), ! (! (bool(bool(_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_IDENTITY(false, bool(bvec2(false, true)))))))))))))), false, true)), bool(bool(bool(bvec3(! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_IDENTITY(false, bool(bvec2(false, true)))))))), ! (! (bool(bool(_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_IDENTITY(false, bool(bvec2(false, true)))))))))))))), false, true))))), false || (_GLF_IDENTITY(bool(bvec3(! (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5036.8629), _GLF_FUZZED(3.7)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y)) && ((_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_IDENTITY(false, bool(bvec2(false, true)))))))), ! _GLF_IDENTITY((! (bool(bool(_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_IDENTITY(false, bool(bvec2(false, true)))))))))), _GLF_IDENTITY(bool(bvec4((! (bool(bool(_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_IDENTITY(false, bool(bvec2(false, true)))))))))), false, true, false)), bool(_GLF_IDENTITY(bvec2(bool(bvec4((! (bool(bool(_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_IDENTITY(false, bool(bvec2(false, true)))))))))), false, true, false)), true), bvec2(bvec4(bvec2(bool(bvec4((! (bool(bool(_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_IDENTITY(false, bool(bvec2(false, true)))))))))), false, true, false)), true), false, false)))))))))), false, true)), bool(_GLF_IDENTITY(bool(bool(bvec3(! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_IDENTITY(false, bool(bvec2(false, true)))))))), ! (! (bool(bool(_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_IDENTITY(false, bool(bvec2(false, true)))))))))))))), false, true))), ! (! (bool(bool(bvec3(! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_IDENTITY(false, bool(bvec2(false, true)))))))), ! (! (bool(bool(_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_IDENTITY(false, bool(bvec2(false, true)))))))))))))), false, true)))))))))))))) && true))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, false))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4(injectionSwitch.y, exp(0.0), 0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(float(0.0), min(float(0.0), _GLF_IDENTITY(float(0.0), (float(0.0)) / 1.0))))), _GLF_IDENTITY(0.0, float(mat3x4(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) / abs(1.0)), 0.0, 1.0, 0.0, 1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0, cos(0.0), 0.0, 0.0))), 0.0, 0.0, 1.0, 1.0, determinant(mat2(tan(0.0), 1.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 1.0, sqrt(0.0))), float(_GLF_IDENTITY(_GLF_IDENTITY(vec2(float(mat4(injectionSwitch.y, exp(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, determinant(mat2(tan(0.0), 1.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 1.0, sqrt(0.0))), 0.0), vec2(mat4x3(vec2(float(mat4(injectionSwitch.y, exp(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, determinant(mat2(tan(0.0), 1.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 1.0, sqrt(0.0))), 0.0), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0))), max(_GLF_IDENTITY(_GLF_IDENTITY(vec2(float(mat4(injectionSwitch.y, exp(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, determinant(mat2(tan(0.0), 1.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 1.0, sqrt(0.0))), 0.0), vec2(mat4x3(vec2(float(mat4(injectionSwitch.y, exp(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, determinant(mat2(tan(0.0), 1.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 1.0, sqrt(0.0))), 0.0), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0))), (_GLF_IDENTITY(vec2(float(mat4(injectionSwitch.y, exp(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, determinant(mat2(tan(0.0), 1.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 1.0, sqrt(0.0))), 0.0), vec2(mat4x3(vec2(float(mat4(injectionSwitch.y, exp(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, determinant(mat2(tan(0.0), 1.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 1.0, sqrt(0.0))), 0.0), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0)))) / vec2(1.0, 1.0)), _GLF_IDENTITY(vec2(float(mat4(injectionSwitch.y, exp(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, determinant(mat2(tan(0.0), 1.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 1.0, sqrt(0.0))), 0.0), vec2(mat4x3(vec2(float(mat4(injectionSwitch.y, exp(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, determinant(mat2(tan(0.0), 1.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 1.0, sqrt(0.0))), 0.0), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0))))))))), true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4(injectionSwitch.y, exp(0.0), 0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(float(0.0), min(float(0.0), _GLF_IDENTITY(float(0.0), (float(0.0)) / 1.0))))), _GLF_IDENTITY(0.0, float(mat3x4(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) / abs(1.0)), 0.0, 1.0, 0.0, 1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0, cos(0.0), 0.0, 0.0))), 0.0, 0.0, 1.0, 1.0, determinant(mat2(tan(0.0), 1.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 1.0, sqrt(0.0))), float(_GLF_IDENTITY(_GLF_IDENTITY(vec2(float(mat4(injectionSwitch.y, exp(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, determinant(mat2(tan(0.0), 1.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 1.0, sqrt(0.0))), 0.0), vec2(mat4x3(vec2(float(mat4(injectionSwitch.y, exp(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, determinant(mat2(tan(0.0), 1.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 1.0, sqrt(0.0))), 0.0), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0))), max(_GLF_IDENTITY(_GLF_IDENTITY(vec2(float(mat4(injectionSwitch.y, exp(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, determinant(mat2(tan(0.0), 1.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 1.0, sqrt(0.0))), 0.0), vec2(mat4x3(vec2(float(mat4(injectionSwitch.y, exp(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, determinant(mat2(tan(0.0), 1.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 1.0, sqrt(0.0))), 0.0), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0))), (_GLF_IDENTITY(vec2(float(mat4(injectionSwitch.y, exp(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, determinant(mat2(tan(0.0), 1.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 1.0, sqrt(0.0))), 0.0), vec2(mat4x3(vec2(float(mat4(injectionSwitch.y, exp(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, determinant(mat2(tan(0.0), 1.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 1.0, sqrt(0.0))), 0.0), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0)))) / vec2(1.0, 1.0)), _GLF_IDENTITY(vec2(float(mat4(injectionSwitch.y, exp(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, determinant(mat2(tan(0.0), 1.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 1.0, sqrt(0.0))), 0.0), vec2(mat4x3(vec2(float(mat4(injectionSwitch.y, exp(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, determinant(mat2(tan(0.0), 1.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 1.0, sqrt(0.0))), 0.0), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0))))))))), ((_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4(injectionSwitch.y, exp(0.0), 0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(float(0.0), min(float(0.0), _GLF_IDENTITY(float(0.0), (float(0.0)) / 1.0))))), _GLF_IDENTITY(0.0, float(mat3x4(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) / abs(1.0)), 0.0, 1.0, 0.0, 1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0, cos(0.0), 0.0, 0.0))), 0.0, 0.0, 1.0, 1.0, determinant(mat2(tan(0.0), 1.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 1.0, sqrt(0.0))), float(_GLF_IDENTITY(_GLF_IDENTITY(vec2(float(mat4(injectionSwitch.y, exp(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, determinant(mat2(tan(0.0), 1.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 1.0, sqrt(0.0))), 0.0), vec2(mat4x3(vec2(float(mat4(injectionSwitch.y, exp(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, determinant(mat2(tan(0.0), 1.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 1.0, sqrt(0.0))), 0.0), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0))), max(_GLF_IDENTITY(_GLF_IDENTITY(vec2(float(mat4(injectionSwitch.y, exp(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, determinant(mat2(tan(0.0), 1.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 1.0, sqrt(0.0))), 0.0), vec2(mat4x3(vec2(float(mat4(injectionSwitch.y, exp(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, determinant(mat2(tan(0.0), 1.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 1.0, sqrt(0.0))), 0.0), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0))), (_GLF_IDENTITY(vec2(float(mat4(injectionSwitch.y, exp(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, determinant(mat2(tan(0.0), 1.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 1.0, sqrt(0.0))), 0.0), vec2(mat4x3(vec2(float(mat4(injectionSwitch.y, exp(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, determinant(mat2(tan(0.0), 1.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 1.0, sqrt(0.0))), 0.0), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0)))) / vec2(1.0, 1.0)), _GLF_IDENTITY(vec2(float(mat4(injectionSwitch.y, exp(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, determinant(mat2(tan(0.0), 1.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 1.0, sqrt(0.0))), 0.0), vec2(mat4x3(vec2(float(mat4(injectionSwitch.y, exp(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, determinant(mat2(tan(0.0), 1.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 1.0, sqrt(0.0))), 0.0), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0)))))))))) || false))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)), bool(bvec2(bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)), false)))))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), false)), _GLF_IDENTITY(bool(bvec2(bool(bvec2(_GLF_DEAD(false), false)), true)), ! (! (bool(bvec2(bool(bvec2(_GLF_DEAD(false), false)), true))))))), true && (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), false)), _GLF_IDENTITY(bool(bvec2(bool(bvec2(_GLF_DEAD(false), false)), true)), ! (! (bool(bvec2(bool(bvec2(_GLF_DEAD(false), false)), true))))))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bool(! ((injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bool(! ((injectionSwitch.x > injectionSwitch.y)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY((gl_WorkGroupID.x) ^ _GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) | (0u)))), (_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) | (0u))))) / 1u), uint(uvec2((gl_WorkGroupID.x) ^ 0u, 1u))));
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) << (118803u & 0u)), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_size * workgroup_id, _GLF_IDENTITY(1u * (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, ~ (~ (workgroup_size)))) >> 0u) * _GLF_IDENTITY(workgroup_id, ~ (_GLF_IDENTITY(~ (workgroup_id), ~ (~ _GLF_IDENTITY((~ (workgroup_id)), 0u ^ (_GLF_IDENTITY((~ (_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))) / 1u))), (0u >> _GLF_IDENTITY(uint(8u), uint(8u))) ^ ((~ (workgroup_id)))))))))), clamp(workgroup_size * workgroup_id, workgroup_size * workgroup_id, workgroup_size * workgroup_id))), (1u * (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, ~ (~ (workgroup_size)))) >> 0u) * _GLF_IDENTITY(workgroup_id, ~ (_GLF_IDENTITY(~ (workgroup_id), ~ (~ _GLF_IDENTITY(_GLF_IDENTITY((~ (workgroup_id)), min((~ (workgroup_id)), (~ (workgroup_id)))), 0u ^ (_GLF_IDENTITY((~ (workgroup_id)), (0u >> _GLF_IDENTITY(uint(8u), uint(8u))) ^ ((~ (workgroup_id)))))))))), clamp(workgroup_size * workgroup_id, workgroup_size * workgroup_id, workgroup_size * _GLF_IDENTITY(workgroup_id, (true ? workgroup_id : _GLF_FUZZED(subgroup_id))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, ~ (~ (workgroup_size)))) >> 0u) * _GLF_IDENTITY(workgroup_id, ~ (_GLF_IDENTITY(~ (workgroup_id), ~ (~ _GLF_IDENTITY(_GLF_IDENTITY((~ (workgroup_id)), min((~ (workgroup_id)), (~ (workgroup_id)))), 0u ^ (_GLF_IDENTITY((~ (workgroup_id)), (0u >> _GLF_IDENTITY(uint(8u), uint(8u))) ^ ((~ (workgroup_id)))))))))), clamp(workgroup_size * workgroup_id, workgroup_size * workgroup_id, workgroup_size * _GLF_IDENTITY(workgroup_id, (true ? workgroup_id : _GLF_FUZZED(subgroup_id)))))))))) * ((1u ^ 0u) ^ 0u)))), (_GLF_IDENTITY(0u | 0u, max(0u | 0u, 0u | 0u))) | ((_GLF_IDENTITY(workgroup_size * workgroup_id, 1u * (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, ~ (~ (workgroup_size)))) >> 0u) * _GLF_IDENTITY(workgroup_id, ~ (_GLF_IDENTITY(~ (workgroup_id), ~ (~ (~ (workgroup_id)))))), clamp(workgroup_size * workgroup_id, _GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, workgroup_size * workgroup_id)), _GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((workgroup_size), _GLF_IDENTITY(((workgroup_size)) / 1u, ~ (~ (((workgroup_size)) / 1u)))) | (workgroup_size)) * workgroup_id))))))) << 0u), min(workgroup_size * workgroup_id, _GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))), uint(uvec4(workgroup_size * _GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) + _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u)), (_GLF_IDENTITY(0u, (0u) | (0u))) | _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) | (0u))), (_GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) | (0u))), ((_GLF_IDENTITY(0u, (0u) | (0u)))) | 0u)) >> 0u)))));
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 1.0, abs(0.0), 1.0, sqrt(0.0)))), 0.0, 1.0, 1.0, 1.0))).x > injectionSwitch.y))), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true && ((injectionSwitch.x > injectionSwitch.y)), (true && ((injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > injectionSwitch.y))))))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(3.6)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false) || false, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true))))) && ((false) || false)), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(0.1), _GLF_IDENTITY((injectionSwitch)[1], min(_GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1])), (injectionSwitch)[1]))), vec2((injectionSwitch)[0], _GLF_FUZZED(-66.84)), bvec2(true, false)), vec2(_GLF_IDENTITY(vec3(mix(vec2(_GLF_FUZZED(0.1), _GLF_IDENTITY((injectionSwitch)[1], min(_GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1])), (injectionSwitch)[1]))), vec2((injectionSwitch)[0], _GLF_FUZZED(-66.84)), bvec2(true, false)), 1.0), mat3(1.0) * (vec3(mix(vec2(_GLF_FUZZED(0.1), _GLF_IDENTITY((injectionSwitch)[1], min(_GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1])), (injectionSwitch)[1]))), vec2((injectionSwitch)[0], _GLF_FUZZED(-66.84)), bvec2(true, false)), 1.0)))))).y)), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(0.1), _GLF_IDENTITY((injectionSwitch)[1], min(_GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1])), (injectionSwitch)[1]))), vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(-66.84), float(_GLF_IDENTITY(vec4(_GLF_FUZZED(-66.84), 1.0, 1.0, abs(1.0)), mat4(1.0) * (vec4(_GLF_FUZZED(-66.84), 1.0, 1.0, abs(1.0))))))), bvec2(true, false))).y)))) || (_GLF_IDENTITY((false), ((false)) && true) || false)), true && (_GLF_IDENTITY(_GLF_IDENTITY((false) || false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4.9), _GLF_IDENTITY(_GLF_FUZZED(4332.9654), min(_GLF_FUZZED(4332.9654), _GLF_IDENTITY(_GLF_FUZZED(4332.9654), (_GLF_FUZZED(4332.9654)) / 1.0)))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0)) - 0.0) > injectionSwitch.y)), false || (((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))), true && ((_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0)) - 0.0) > injectionSwitch.y)), false || (((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))))) && true), (_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY((_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), false || (((injectionSwitch.x > injectionSwitch.y))))), true && ((_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), false || (((injectionSwitch.x > injectionSwitch.y))))))) && true), false || (_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (_GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y)), false || ((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(round(vec2(328.502, 7038.7848))) : injectionSwitch)) : _GLF_FUZZED(atan(vec2(91.77, 813.071))))).x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(round(vec2(328.502, 7038.7848))) : injectionSwitch)) : _GLF_FUZZED(atan(vec2(91.77, 813.071))))).x > injectionSwitch.y), false, true, false)), false || (bool(bvec4((_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(round(vec2(328.502, 7038.7848))) : injectionSwitch)) : _GLF_FUZZED(atan(vec2(91.77, 813.071))))).x > injectionSwitch.y), false, true, false))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(round(vec2(328.502, 7038.7848))) : injectionSwitch)) : _GLF_FUZZED(atan(vec2(91.77, 813.071))))).x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(round(vec2(328.502, 7038.7848))) : injectionSwitch)) : _GLF_FUZZED(atan(vec2(91.77, 813.071))))).x > injectionSwitch.y), false, true, false)), false || (bool(bvec4((_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(round(vec2(328.502, 7038.7848))) : injectionSwitch)) : _GLF_FUZZED(atan(vec2(91.77, 813.071))))).x > injectionSwitch.y), false, true, false))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), (true ? _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(round(vec2(328.502, _GLF_IDENTITY(7038.7848, (7038.7848) * 1.0)))) : injectionSwitch)) : _GLF_FUZZED(atan(vec2(91.77, 813.071))))).x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false ? _GLF_FUZZED(round(vec2(328.502, 7038.7848))) : injectionSwitch, mix(vec2(_GLF_FUZZED(float(81764)), _GLF_FUZZED(-8.6)), vec2((false ? _GLF_FUZZED(round(vec2(328.502, 7038.7848))) : injectionSwitch)[0], (false ? _GLF_FUZZED(round(vec2(328.502, 7038.7848))) : injectionSwitch)[1]), bvec2(true, true))))) : _GLF_FUZZED(atan(vec2(91.77, 813.071))))).x > injectionSwitch.y), false, true, false)), false || (bool(bvec4((_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(round(vec2(_GLF_IDENTITY(328.502, (false ? _GLF_FUZZED(-6.4) : _GLF_IDENTITY(328.502, mix(float(_GLF_FUZZED(769.205)), float(328.502), bool(true))))), 7038.7848))) : injectionSwitch)) : _GLF_FUZZED(atan(vec2(91.77, 813.071))))).x > injectionSwitch.y), _GLF_IDENTITY(false, ! (! (false))), true, false)))))) && true)))))))) && true)))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-321.814) : injectionSwitch.y)), false || (injectionSwitch.x < injectionSwitch.y))))))) || ((false) || false)), (_GLF_IDENTITY((false) || false, _GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x) - log(1.0)), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), mix(vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))[0], clamp((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))[0], (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))[0], (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))[0])), (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))[1]), vec2(_GLF_FUZZED(457.382), _GLF_FUZZED((-5.4 + -5.9))), bvec2(false, false))))).x, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), max(clamp(injectionSwitch, injectionSwitch, injectionSwitch), clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x))) - 0.0))) > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, length(vec2(0.0, 0.0)), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0)))) - 0.0), 0.0, 0.0, sin(0.0))), 1.0)))[0], _GLF_IDENTITY(injectionSwitch[1], _GLF_IDENTITY(float(vec2(injectionSwitch[1], 1.0)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true ? float(vec2(injectionSwitch[1], 1.0)) : _GLF_FUZZED(74.83), max(true ? float(vec2(injectionSwitch[1], 1.0)) : _GLF_FUZZED(74.83), true ? float(vec2(injectionSwitch[1], 1.0)) : _GLF_IDENTITY(_GLF_FUZZED(74.83), clamp(_GLF_FUZZED(74.83), _GLF_FUZZED(74.83), _GLF_FUZZED(74.83))))), min(_GLF_IDENTITY(_GLF_IDENTITY(true ? float(vec2(injectionSwitch[1], 1.0)) : _GLF_FUZZED(74.83), max(true ? float(vec2(injectionSwitch[1], 1.0)) : _GLF_FUZZED(74.83), true ? float(vec2(injectionSwitch[1], 1.0)) : _GLF_IDENTITY(_GLF_FUZZED(74.83), clamp(_GLF_FUZZED(74.83), _GLF_FUZZED(74.83), _GLF_FUZZED(74.83))))), float(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(true ? float(vec2(injectionSwitch[1], 1.0)) : _GLF_FUZZED(74.83), max(true ? float(vec2(injectionSwitch[1], 1.0)) : _GLF_FUZZED(74.83), true ? float(vec2(injectionSwitch[1], 1.0)) : _GLF_IDENTITY(_GLF_FUZZED(74.83), clamp(_GLF_FUZZED(74.83), _GLF_FUZZED(74.83), _GLF_FUZZED(74.83))))), (true ? _GLF_IDENTITY(true ? float(vec2(injectionSwitch[1], 1.0)) : _GLF_FUZZED(74.83), max(true ? float(vec2(injectionSwitch[1], 1.0)) : _GLF_FUZZED(74.83), true ? float(vec2(injectionSwitch[1], 1.0)) : _GLF_IDENTITY(_GLF_FUZZED(74.83), clamp(_GLF_FUZZED(74.83), _GLF_FUZZED(74.83), _GLF_FUZZED(74.83))))) : _GLF_FUZZED(7323.9451))), 1.0, 0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0, 1.0, 1.0, 0.0))), _GLF_IDENTITY(true ? float(vec2(injectionSwitch[1], 1.0)) : _GLF_FUZZED(74.83), max(true ? float(vec2(injectionSwitch[1], 1.0)) : _GLF_IDENTITY(_GLF_FUZZED(74.83), float(vec2(_GLF_IDENTITY(_GLF_FUZZED(74.83), clamp(_GLF_FUZZED(74.83), _GLF_FUZZED(74.83), _GLF_IDENTITY(_GLF_FUZZED(74.83), (true ? _GLF_FUZZED(74.83) : _GLF_FUZZED(5.4))))), 0.0))), true ? float(vec2(injectionSwitch[1], 1.0)) : _GLF_IDENTITY(_GLF_FUZZED(74.83), clamp(_GLF_FUZZED(74.83), _GLF_FUZZED(74.83), _GLF_FUZZED(74.83))))))), min(_GLF_IDENTITY(true ? float(vec2(injectionSwitch[1], 1.0)) : _GLF_FUZZED(74.83), max(true ? float(vec2(injectionSwitch[1], 1.0)) : _GLF_FUZZED(74.83), true ? float(vec2(injectionSwitch[1], 1.0)) : _GLF_FUZZED(74.83))), _GLF_IDENTITY(_GLF_IDENTITY(true ? _GLF_IDENTITY(float(vec2(injectionSwitch[1], 1.0)), clamp(float(vec2(injectionSwitch[1], 1.0)), float(vec2(injectionSwitch[1], 1.0)), _GLF_IDENTITY(float(vec2(injectionSwitch[1], 1.0)), float(_GLF_IDENTITY(vec4(float(vec2(injectionSwitch[1], 1.0)), 0.0, 1.0, 1.0), clamp(vec4(float(vec2(injectionSwitch[1], 1.0)), 0.0, 1.0, 1.0), vec4(float(vec2(injectionSwitch[1], 1.0)), 0.0, 1.0, 1.0), vec4(float(vec2(injectionSwitch[1], 1.0)), 0.0, 1.0, 1.0))))))) : _GLF_FUZZED(74.83), clamp(true ? _GLF_IDENTITY(float(vec2(injectionSwitch[1], 1.0)), clamp(float(vec2(injectionSwitch[1], 1.0)), float(vec2(injectionSwitch[1], 1.0)), _GLF_IDENTITY(float(vec2(injectionSwitch[1], 1.0)), float(_GLF_IDENTITY(vec4(float(vec2(injectionSwitch[1], 1.0)), 0.0, 1.0, 1.0), clamp(vec4(float(vec2(injectionSwitch[1], 1.0)), 0.0, 1.0, 1.0), vec4(float(vec2(injectionSwitch[1], 1.0)), 0.0, 1.0, 1.0), vec4(float(vec2(injectionSwitch[1], 1.0)), 0.0, 1.0, 1.0))))))) : _GLF_FUZZED(74.83), true ? _GLF_IDENTITY(float(vec2(injectionSwitch[1], 1.0)), clamp(float(vec2(injectionSwitch[1], 1.0)), float(vec2(injectionSwitch[1], 1.0)), _GLF_IDENTITY(float(vec2(injectionSwitch[1], 1.0)), float(_GLF_IDENTITY(vec4(float(vec2(injectionSwitch[1], 1.0)), 0.0, 1.0, 1.0), clamp(vec4(float(vec2(injectionSwitch[1], 1.0)), 0.0, 1.0, 1.0), vec4(float(vec2(injectionSwitch[1], 1.0)), 0.0, 1.0, 1.0), vec4(float(vec2(injectionSwitch[1], 1.0)), 0.0, 1.0, 1.0))))))) : _GLF_FUZZED(74.83), _GLF_IDENTITY(true ? _GLF_IDENTITY(float(vec2(injectionSwitch[1], 1.0)), clamp(float(vec2(injectionSwitch[1], 1.0)), float(vec2(injectionSwitch[1], 1.0)), _GLF_IDENTITY(float(vec2(injectionSwitch[1], 1.0)), float(_GLF_IDENTITY(vec4(float(vec2(injectionSwitch[1], 1.0)), 0.0, 1.0, 1.0), clamp(vec4(float(vec2(injectionSwitch[1], 1.0)), 0.0, 1.0, 1.0), vec4(float(vec2(injectionSwitch[1], 1.0)), 0.0, 1.0, 1.0), vec4(float(vec2(injectionSwitch[1], 1.0)), 0.0, 1.0, 1.0))))))) : _GLF_FUZZED(74.83), max(true ? _GLF_IDENTITY(float(vec2(injectionSwitch[1], 1.0)), clamp(float(vec2(injectionSwitch[1], 1.0)), float(vec2(injectionSwitch[1], 1.0)), _GLF_IDENTITY(float(vec2(injectionSwitch[1], 1.0)), float(_GLF_IDENTITY(vec4(float(vec2(injectionSwitch[1], 1.0)), 0.0, 1.0, 1.0), clamp(vec4(float(vec2(injectionSwitch[1], 1.0)), 0.0, 1.0, 1.0), vec4(float(vec2(injectionSwitch[1], 1.0)), 0.0, 1.0, 1.0), vec4(float(vec2(injectionSwitch[1], 1.0)), 0.0, 1.0, 1.0))))))) : _GLF_FUZZED(74.83), true ? _GLF_IDENTITY(float(vec2(injectionSwitch[1], 1.0)), clamp(float(vec2(injectionSwitch[1], 1.0)), float(vec2(injectionSwitch[1], 1.0)), _GLF_IDENTITY(float(vec2(injectionSwitch[1], 1.0)), float(_GLF_IDENTITY(vec4(float(vec2(injectionSwitch[1], 1.0)), 0.0, 1.0, 1.0), clamp(vec4(float(vec2(injectionSwitch[1], 1.0)), 0.0, 1.0, 1.0), vec4(float(vec2(injectionSwitch[1], 1.0)), 0.0, 1.0, 1.0), vec4(float(vec2(injectionSwitch[1], 1.0)), 0.0, 1.0, 1.0))))))) : _GLF_FUZZED(74.83))))), max(true ? float(vec2(injectionSwitch[1], _GLF_IDENTITY(1.0, min(1.0, 1.0)))) : _GLF_FUZZED(74.83), true ? float(vec2(injectionSwitch[1], 1.0)) : _GLF_FUZZED(74.83)))))))))).y)) || ((false) || false))) && _GLF_IDENTITY(true, ! (! (true)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), min(_GLF_FUZZED(injectionSwitch), _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(2.8), _GLF_IDENTITY(_GLF_FUZZED((vec3(8078.2189, -1443.7345, -803.347) * mat3(6307.0922, 6049.6299, _GLF_IDENTITY(105.465, max(105.465, _GLF_IDENTITY(105.465, clamp(105.465, 105.465, 105.465)))), -71.58, 6.4, 5369.6770, 4291.2192, 718.451, 88.64)).z), float(mat3x2(_GLF_FUZZED((vec3(8078.2189, -1443.7345, -803.347) * mat3(_GLF_IDENTITY(6307.0922, max(_GLF_IDENTITY(6307.0922, max(6307.0922, 6307.0922)), 6307.0922)), 6049.6299, 105.465, -71.58, 6.4, 5369.6770, 4291.2192, 718.451, 88.64)).z), 1.0, 0.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(1.0, 1.0, 1.0), min(vec3(1.0, 1.0, 1.0), _GLF_IDENTITY(vec3(1.0, 1.0, 1.0), mat3(1.0) * (vec3(1.0, 1.0, 1.0))))), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))), 0.0, 1.0)))), bvec2(false, false)))))))).y, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, (injectionSwitch.y) / 1.0) : _GLF_FUZZED(_GLF_IDENTITY(-7.7, mix(float(_GLF_FUZZED(18.38)), float(-7.7), _GLF_IDENTITY(bool(true), true && (_GLF_IDENTITY(_GLF_IDENTITY(bool(true), ! (_GLF_IDENTITY(! (bool(true)), ! (! (! (bool(true))))))), true && (bool(true)))))))))), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), min(_GLF_FUZZED(injectionSwitch), _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY(min(_GLF_FUZZED(injectionSwitch), _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(2.8), _GLF_IDENTITY(_GLF_FUZZED((_GLF_IDENTITY(vec3(8078.2189, -1443.7345, -803.347), (false ? _GLF_FUZZED(roundEven(vec3(-3465.8523, 19.36, -244.349))) : vec3(8078.2189, -1443.7345, -803.347))) * mat3(6307.0922, 6049.6299, 105.465, -71.58, 6.4, 5369.6770, 4291.2192, 718.451, 88.64)).z), float(mat3x2(_GLF_FUZZED((vec3(8078.2189, -1443.7345, -803.347) * mat3(6307.0922, 6049.6299, 105.465, -71.58, 6.4, 5369.6770, 4291.2192, 718.451, 88.64)).z), 1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))), 0.0, 1.0)))), bvec2(false, false))))), clamp(min(_GLF_FUZZED(injectionSwitch), _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_IDENTITY(_GLF_FUZZED(2.8), mix(float(_GLF_FUZZED(161.562)), float(_GLF_FUZZED(2.8)), bool(true))), _GLF_IDENTITY(_GLF_FUZZED((vec3(8078.2189, -1443.7345, -803.347) * mat3(6307.0922, _GLF_IDENTITY(6049.6299, min(6049.6299, 6049.6299)), 105.465, -71.58, 6.4, 5369.6770, 4291.2192, 718.451, 88.64)).z), float(mat3x2(_GLF_FUZZED((vec3(8078.2189, -1443.7345, -803.347) * mat3(6307.0922, 6049.6299, 105.465, -71.58, 6.4, 5369.6770, 4291.2192, 718.451, 88.64)).z), 1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))), 0.0, 1.0)))), bvec2(false, false))))), min(_GLF_FUZZED(injectionSwitch), _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(2.8), _GLF_IDENTITY(_GLF_FUZZED((vec3(8078.2189, -1443.7345, _GLF_IDENTITY(-803.347, min(_GLF_IDENTITY(-803.347, max(-803.347, -803.347)), -803.347))) * mat3(6307.0922, 6049.6299, 105.465, -71.58, 6.4, 5369.6770, 4291.2192, 718.451, 88.64)).z), float(mat3x2(_GLF_FUZZED((vec3(8078.2189, -1443.7345, -803.347) * mat3(6307.0922, 6049.6299, 105.465, -71.58, 6.4, 5369.6770, 4291.2192, 718.451, 88.64)).z), 1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, _GLF_IDENTITY(1.0, (1.0) / cos(0.0)), 1.0), vec3(0.0, 0.0, 0.0))), 0.0, 1.0)))), bvec2(false, false))))), min(_GLF_FUZZED(injectionSwitch), _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(2.8), _GLF_IDENTITY(_GLF_FUZZED((vec3(8078.2189, -1443.7345, -803.347) * mat3(6307.0922, 6049.6299, 105.465, -71.58, 6.4, 5369.6770, 4291.2192, 718.451, 88.64)).z), float(mat3x2(_GLF_FUZZED((vec3(8078.2189, -1443.7345, -803.347) * mat3(6307.0922, 6049.6299, 105.465, -71.58, 6.4, 5369.6770, 4291.2192, 718.451, 88.64)).z), 1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))), 0.0, 1.0)))), bvec2(false, false)))))))))).y, (true ? _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0) : _GLF_FUZZED(_GLF_IDENTITY(-7.7, mix(float(_GLF_FUZZED(18.38)), float(-7.7), _GLF_IDENTITY(bool(true), true && (_GLF_IDENTITY(bool(true), true && (_GLF_IDENTITY(bool(true), ! (! (bool(true)))))))))))))) && true)))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), ! (! (bool(bool(_GLF_DEAD(false)))))))) && true))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), sin(vec2(0.0, 0.0)) + (mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y))))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), false))))))))
          barrier();
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), _GLF_IDENTITY(bool(bool(true && (false))), false || (bool(bool(true && (false)))))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bool(! (! (false))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)), ((true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))) - sqrt(vec2(0.0, 0.0))), min((true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)), (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).y, _GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (! (! (injectionSwitch.x > injectionSwitch.y))), (! (! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ((! (injectionSwitch.x > injectionSwitch.y))) || false))) || false)))) && true)), bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), true, true)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) + 0.0), injectionSwitch.y))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), (bool(bvec4(false, false, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, true && (true)))), false))) && true))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), (bool(bvec4(false, false, true, false))) && true))), (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, _GLF_IDENTITY(true, false || (true)), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), bool(bvec3(bool(bvec3(false, true, true)), false, false))))) || _GLF_IDENTITY(false, (false) && true)))), (bool(bvec4(false, false, true, false))) && true)))) || false)))))))
    barrier();
   barrier();
  }
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u) + _GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)))))) * _GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))) + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)) + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y)))), 0u ^ (_GLF_IDENTITY(uint(uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y)))), (true ? uint(uvec2(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y)))) : _GLF_FUZZED(workgroup_base)))))), subgroup_size, subgroup_size))) | (workgroup_base + _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(max(subgroup_id, subgroup_id), min(_GLF_IDENTITY(max(subgroup_id, subgroup_id), min(max(subgroup_id, subgroup_id), max(subgroup_id, subgroup_id))), max(subgroup_id, subgroup_id)))) * subgroup_size)) + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(clamp(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id), (_GLF_IDENTITY((subgroup_local_id), (0u >> _GLF_IDENTITY(uint(6u), uint(6u))) | ((subgroup_local_id)))) ^ 0u) << 0u)), 0u | (clamp(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id), (_GLF_IDENTITY((subgroup_local_id), _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(6u), uint(6u))) | ((subgroup_local_id)), max(_GLF_IDENTITY((_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(6u), uint(6u)), (0u >> _GLF_IDENTITY(uint(6u), uint(6u))) + 0u)), max(_GLF_IDENTITY((_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(6u), uint(6u)), (0u >> _GLF_IDENTITY(uint(6u), uint(6u))) + 0u)), min(_GLF_IDENTITY((_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(6u), uint(6u)), (0u >> _GLF_IDENTITY(uint(6u), uint(6u))) + 0u)), min((_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(6u), uint(6u)), (0u >> _GLF_IDENTITY(uint(6u), uint(6u))) + 0u)), (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(6u), uint(6u)), (0u >> _GLF_IDENTITY(uint(6u), uint(6u))) + 0u)))), (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(6u), uint(6u)), (0u >> _GLF_IDENTITY(uint(6u), uint(6u))) + 0u)))), (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(6u), uint(6u)), (0u >> _GLF_IDENTITY(uint(6u), uint(6u))) + 0u)))) | ((subgroup_local_id)), (0u >> _GLF_IDENTITY(uint(6u), uint(6u))) | ((subgroup_local_id)))))) ^ 0u) << 0u)))), 0u ^ (clamp(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u))))) + 1), ((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(clamp(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(min(subgroup_local_id, subgroup_local_id), (_GLF_IDENTITY(min(subgroup_local_id, subgroup_local_id), (_GLF_IDENTITY(min(subgroup_local_id, subgroup_local_id), min(_GLF_IDENTITY(min(subgroup_local_id, subgroup_local_id), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(min(subgroup_local_id, subgroup_local_id), (min(subgroup_local_id, subgroup_local_id)) / 1u), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(min(subgroup_local_id, subgroup_local_id), (min(subgroup_local_id, subgroup_local_id)) / 1u), (_GLF_IDENTITY(min(subgroup_local_id, subgroup_local_id), (min(subgroup_local_id, subgroup_local_id)) / 1u)) - 0u))), 1u, 1u))), _GLF_IDENTITY(min(subgroup_local_id, subgroup_local_id), max(_GLF_IDENTITY(min(subgroup_local_id, subgroup_local_id), clamp(min(subgroup_local_id, subgroup_local_id), min(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + 0u)), (_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + 0u)), (uint(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + 0u))) - 0u)) * 1u)), ~ (~ (uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + 0u)), (_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + 0u)), (uint(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + 0u))) - 0u)) * 1u)))))), subgroup_local_id), min(subgroup_local_id, subgroup_local_id))), min(subgroup_local_id, subgroup_local_id)))))) * 1u)) | (_GLF_IDENTITY(min(subgroup_local_id, subgroup_local_id), (min(subgroup_local_id, subgroup_local_id)) - 0u)))), subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u), _GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) ^ 0u) << _GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), max(uvec4(0u, 0u, 0u, 0u), _GLF_IDENTITY(uvec4(0u, 0u, _GLF_IDENTITY(0u, (0u) ^ 0u), 0u), ~ (~ (uvec4(0u, 0u, 0u, 0u)))))))))), 0u ^ (clamp(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u))))) + 1)) | ((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), clamp(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)))), subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) ^ 0u) << 0u)), uint(uvec2(_GLF_IDENTITY(clamp(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) ^ 0u) << 0u)), (true ? clamp(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) ^ 0u) << 0u)) : _GLF_FUZZED(_GLF_IDENTITY(workgroup_base, (true ? workgroup_base : _GLF_FUZZED(num_workgroup)))))), uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + abs(0.0))))))), 0u ^ (clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(min(subgroup_local_id, subgroup_local_id), ~ (~ (min(subgroup_local_id, subgroup_local_id))))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(min(subgroup_local_id, subgroup_local_id), ~ (~ (min(subgroup_local_id, subgroup_local_id))))), ~ (~ (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(min(subgroup_local_id, subgroup_local_id), ~ (~ (min(subgroup_local_id, subgroup_local_id))))))))) | (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(min(subgroup_local_id, subgroup_local_id), ~ (~ (min(subgroup_local_id, subgroup_local_id))))))), subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u))))) + 1))) % subgroup_size);
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)), ! (! ((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))) && true))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))).x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(3.5)), float(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(5.4)))), bool(true))) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 buf[virtual_gid] = 1;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec4(bvec2(_GLF_DEAD(false), true), false, false))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec4(bvec2(_GLF_DEAD(false), true), false, false)))), bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec4(bvec2(_GLF_DEAD(false), true), false, false))))), true && (bool(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec4(bvec2(_GLF_DEAD(false), true), false, false)))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_DEAD(false), true), false, false)), bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_DEAD(false), true), false, false)), false, true))))))), true && (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec4(bvec2(_GLF_DEAD(false), true), false, false)))))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec4(bvec2(_GLF_DEAD(false), true), false, false))))), _GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec4(bvec2(_GLF_DEAD(false), true), false, false))))), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(9.7) : injectionSwitch.x)))), injectionSwitch.x)) > injectionSwitch.y))))))) || false)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec4(bvec2(_GLF_DEAD(false), true), false, false)))))) && true, bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec4(bvec2(_GLF_DEAD(false), true), false, false)))))) && true), bool(bvec3(bool((_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec4(bvec2(_GLF_DEAD(false), true), false, false)))))) && true), false, false))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec4(bvec2(_GLF_DEAD(false), true), false, false)))))) && true), (! ((_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(true, (true) && true)), bvec2(bvec4(bvec2(_GLF_DEAD(false), true), false, false)))))) && true)) && _GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x < injectionSwitch.y, false), bvec2(bvec4(bvec2(injectionSwitch.x < injectionSwitch.y, false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_DEAD(false), true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec2(_GLF_DEAD(false), true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec2(_GLF_DEAD(false), true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_DEAD(false), true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec2(_GLF_DEAD(false), true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec2(_GLF_DEAD(false), true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), true, false)))), bvec2(bvec4(bvec2(_GLF_DEAD(false), true), false, false)))))) && true, ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec4(bvec2(_GLF_DEAD(false), true), false, false)))))) && true, bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec4(bvec2(_GLF_DEAD(false), true), false, false)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec4(bvec2(_GLF_DEAD(false), true), false, false)))), ! (! (bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec4(bvec2(_GLF_DEAD(false), true), false, false)))))))) || false))) && true, false, true, false)))))))) && true)))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), true)), (bool(bvec2(_GLF_DEAD(false), true))) || false)), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, bool(bvec2(true, true))))))), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), true)), (_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), true)), (bool(bvec2(_GLF_DEAD(false), true))) && true)) || false))))))), false || (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (_GLF_IDENTITY(false, (false) && true)))), bool(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(true, ! (! (true)))))))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), true)), ! (! (bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), true)))))))), ! (! (bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), true)), ! (! (bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), true), bvec2(bvec4(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), true), true, true))))))))))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)), ! _GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || ((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-8122.6897)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) > injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))) || false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, ~ _GLF_IDENTITY((~ (next_virtual_gid)), ((~ (_GLF_IDENTITY(next_virtual_gid, uint(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x)) ^ (_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY((next_virtual_gid) | (next_virtual_gid), max((next_virtual_gid) | (next_virtual_gid), (next_virtual_gid) | _GLF_IDENTITY((next_virtual_gid), ~ (~ ((next_virtual_gid)))))))))))) | ((_GLF_IDENTITY(~ _GLF_IDENTITY((next_virtual_gid), uint(uvec3(_GLF_IDENTITY((next_virtual_gid), (_GLF_IDENTITY(true ? (next_virtual_gid) : _GLF_FUZZED(workgroup_base), clamp(true ? (next_virtual_gid) : _GLF_FUZZED(workgroup_base), _GLF_IDENTITY(_GLF_IDENTITY(true ? (next_virtual_gid) : _GLF_FUZZED(workgroup_base), 0u ^ (true ? (next_virtual_gid) : _GLF_FUZZED(workgroup_base))), clamp(_GLF_IDENTITY(true ? (next_virtual_gid) : _GLF_FUZZED(workgroup_base), 0u ^ (true ? (next_virtual_gid) : _GLF_FUZZED(workgroup_base))), _GLF_IDENTITY(true ? (next_virtual_gid) : _GLF_FUZZED(workgroup_base), 0u ^ (true ? (next_virtual_gid) : _GLF_FUZZED(workgroup_base))), _GLF_IDENTITY(true ? (next_virtual_gid) : _GLF_FUZZED(workgroup_base), _GLF_IDENTITY(0u, uint(uvec4(0u, (0u << _GLF_IDENTITY(uint(2u), uint(2u))), (0u | 0u), 0u))) ^ (true ? (next_virtual_gid) : _GLF_FUZZED(_GLF_IDENTITY(workgroup_base, min(workgroup_base, _GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base))))))))), true ? (next_virtual_gid) : _GLF_FUZZED(workgroup_base))))), 0u, 1u))), max(~ (_GLF_IDENTITY(next_virtual_gid, min(_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid)), _GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) << 0u)))), ~ _GLF_IDENTITY((next_virtual_gid), max((next_virtual_gid), (next_virtual_gid)))))))))], uint(_GLF_IDENTITY(2, clamp(2, 2, 2))), 4, 64, 0);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), ((_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))) && true)))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), injectionSwitch.x)) > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), injectionSwitch.x)) > injectionSwitch.y)))) && true))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), (bool(injectionSwitch.x > injectionSwitch.y)) || false))))), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false) && true)) && true)))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1])))), 1.0, 0.0, 1.0, 1.0))).y), bool(bool(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1])))), 1.0, 0.0, 1.0, 1.0))).y), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1])))), 1.0, 0.0, 1.0, 1.0))).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1])))), 1.0, 0.0, 1.0, 1.0))).y)) && true)) || false)))))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0))).y)))) || false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, 1.0, 0.0, 1.0, 1.0), mat3(1.0) * (mat2x3(injectionSwitch, 1.0, 0.0, 1.0, 1.0))))), injectionSwitch)).x, injectionSwitch.x)) > injectionSwitch.y, false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, false || _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), true, false, false)), (bool(bvec4((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), true, false, false))) || false))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))))) && true))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
