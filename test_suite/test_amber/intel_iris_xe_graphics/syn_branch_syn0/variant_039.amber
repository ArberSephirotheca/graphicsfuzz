#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 0) uniform buf0 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec3 GLF_merged3_0_1_11_1_1_17_2_1_12subgroup_idsubgroup_local_idworkgroup_id;
 uvec3 GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_base;
 uint subgroup_id = gl_SubgroupID;
 GLF_merged3_0_1_11_1_1_17_2_1_12subgroup_idsubgroup_local_idworkgroup_id.x = subgroup_id;
 uint subgroup_size = 16;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 GLF_merged3_0_1_11_1_1_17_2_1_12subgroup_idsubgroup_local_idworkgroup_id.y = _GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(subgroup_id))), subgroup_local_id));
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 GLF_merged3_0_1_11_1_1_17_2_1_12subgroup_idsubgroup_local_idworkgroup_id.z = workgroup_id;
 uint workgroup_base = workgroup_size * GLF_merged3_0_1_11_1_1_17_2_1_12subgroup_idsubgroup_local_idworkgroup_id.z;
 GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_base.z = workgroup_base;
 uint virtual_gid = _GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_base.z + GLF_merged3_0_1_11_1_1_17_2_1_12subgroup_idsubgroup_local_idworkgroup_id.x * subgroup_size + _GLF_IDENTITY(GLF_merged3_0_1_11_1_1_17_2_1_12subgroup_idsubgroup_local_idworkgroup_id, (GLF_merged3_0_1_11_1_1_17_2_1_12subgroup_idsubgroup_local_idworkgroup_id) | (GLF_merged3_0_1_11_1_1_17_2_1_12subgroup_idsubgroup_local_idworkgroup_id)).y, (GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_base.z + GLF_merged3_0_1_11_1_1_17_2_1_12subgroup_idsubgroup_local_idworkgroup_id.x * subgroup_size + GLF_merged3_0_1_11_1_1_17_2_1_12subgroup_idsubgroup_local_idworkgroup_id.y) | 0u);
 GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_base.y = virtual_gid;
 uint next_virtual_gid = GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_base.z + _GLF_IDENTITY(GLF_merged3_0_1_11_1_1_17_2_1_12subgroup_idsubgroup_local_idworkgroup_id.x * subgroup_size, 0u ^ (_GLF_IDENTITY(GLF_merged3_0_1_11_1_1_17_2_1_12subgroup_idsubgroup_local_idworkgroup_id.x * subgroup_size, (GLF_merged3_0_1_11_1_1_17_2_1_12subgroup_idsubgroup_local_idworkgroup_id.x * subgroup_size) - 0u))) + ((GLF_merged3_0_1_11_1_1_17_2_1_12subgroup_idsubgroup_local_idworkgroup_id.y + _GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, (1) | (1))) * 1, min((_GLF_IDENTITY(1, (1) | (1))) * 1, (_GLF_IDENTITY(1, (1) | (1))) * 1)))) % subgroup_size);
 _GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_base.x = next_virtual_gid, _GLF_IDENTITY((GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_base.x = next_virtual_gid) ^ 0u, ~ (_GLF_IDENTITY(~ ((GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_base.x = next_virtual_gid) ^ 0u), ~ (~ (~ ((GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_base.x = next_virtual_gid) ^ 0u)))))));
 buf[GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_base.y] = 1;
 if(_GLF_IDENTITY(GLF_merged3_0_1_11_1_1_17_2_1_12subgroup_idsubgroup_local_idworkgroup_id.y + _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) | 0), 1, 1)) < subgroup_size, (_GLF_IDENTITY(GLF_merged3_0_1_11_1_1_17_2_1_12subgroup_idsubgroup_local_idworkgroup_id.y + 1, 0u | (GLF_merged3_0_1_11_1_1_17_2_1_12subgroup_idsubgroup_local_idworkgroup_id.y + 1)) < subgroup_size) || _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), bool(bool(false)))))
  {
   int i = 0;
   buf[GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_base.x] = 2;
  }
 else
  {
   _GLF_IDENTITY(buf[GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_base.x] = 2, (0u >> _GLF_IDENTITY(uint(7u), uint(7u))) + (buf[GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_base.x] = 2));
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
