#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_7 {
 vec3 _f0;
 mat3x2 _f1;
 vec4 _f2;
 mat3x4 _f3;
 vec2 _f4;
 bvec2 _f5;
} ;

struct _GLF_struct_6 {
 mat4x2 _f0;
 uvec2 _f1;
 mat3x2 _f2;
 bool _f3;
 mat2x3 _f4;
} ;

struct _GLF_struct_5 {
 vec2 _f0;
 mat4x2 _f1;
 mat4 _f2;
 mat4 _f3;
} ;

struct _GLF_struct_8 {
 mat2x4 _f0;
 mat2x4 _f1;
 _GLF_struct_5 _f2;
 uvec2 _f3;
 mat4x2 _f4;
 _GLF_struct_6 _f5;
 _GLF_struct_7 _f6;
} ;

struct _GLF_struct_3 {
 mat3x2 _f0;
 mat2 _f1;
 mat4x2 _f2;
 int _f3;
 mat4x3 _f4;
} ;

struct _GLF_struct_2 {
 uvec2 _f0;
 mat2x4 _f1;
 mat4 _f2;
 uint _f3;
 bvec3 _f4;
 mat4x3 _f5;
} ;

struct _GLF_struct_4 {
 mat3x2 _f0;
 mat2x4 _f1;
 vec2 _f2;
 _GLF_struct_2 _f3;
 _GLF_struct_3 _f4;
 mat4x3 _f5;
 uvec3 _f6;
} ;

struct _GLF_struct_0 {
 mat3x4 _f0;
 mat4 _f1;
} ;

struct _GLF_struct_1 {
 _GLF_struct_0 _f0;
 bvec2 _f1;
} ;

struct _GLF_struct_9 {
 _GLF_struct_1 _f0;
 uint workgroup_base;
 _GLF_struct_4 _f1;
 mat2x4 _f2;
 mat4x2 _f3;
 _GLF_struct_8 _f4;
} ;

layout(set = 0, binding = 0) uniform buf0 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = 16;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 _GLF_struct_9 _GLF_struct_replacement_9 = _GLF_struct_9(_GLF_struct_1(_GLF_struct_0(mat3x4(1.0), mat4(1.0)), bvec2(true)), workgroup_size * workgroup_id, _GLF_struct_4(mat3x2(1.0), mat2x4(1.0), vec2(1.0), _GLF_struct_2(uvec2(1u), mat2x4(1.0), mat4(1.0), 1u, bvec3(true), mat4x3(1.0)), _GLF_struct_3(mat3x2(1.0), mat2(1.0), mat4x2(1.0), 1, mat4x3(1.0)), mat4x3(1.0), uvec3(1u)), mat2x4(1.0), mat4x2(1.0), _GLF_struct_8(mat2x4(1.0), mat2x4(1.0), _GLF_struct_5(vec2(1.0), mat4x2(1.0), mat4(1.0), mat4(1.0)), uvec2(1u), mat4x2(1.0), _GLF_struct_6(mat4x2(1.0), uvec2(1u), mat3x2(1.0), true, mat2x3(1.0)), _GLF_struct_7(vec3(1.0), mat3x2(1.0), vec4(1.0), mat3x4(1.0), vec2(1.0), bvec2(true))));
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_struct_replacement_9.workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 uint next_virtual_gid = _GLF_struct_replacement_9.workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size);
 buf = virtual_gid;
 subgroupAllEqual(buf);
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
