#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 0) uniform buf0 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))[1])).x > injectionSwitch.y))))
  return;
 uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY((gl_WorkGroupSize.x), ((gl_WorkGroupSize.x)) | _GLF_IDENTITY((_GLF_IDENTITY(36128u, (36128u) * (uint(_GLF_ONE(1.0, injectionSwitch.y)) & 1u)) & 0u), clamp((36128u & 0u), (36128u & 0u), (36128u & 0u)))) - 0u);
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, uint(uvec3(_GLF_IDENTITY(workgroup_size, (workgroup_size) >> 0u), 0u, 0u)))) | (_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size))) + _GLF_IDENTITY(0u, min(0u, 0u))))) * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (true ? workgroup_id : _GLF_FUZZED(subgroup_size))), (workgroup_id) | (workgroup_id))) | (workgroup_id)), (workgroup_id) << (0u ^ 0u));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2(! (injectionSwitch.x > injectionSwitch.y), false), bvec2(bvec4(bvec2(! (injectionSwitch.x > injectionSwitch.y), false), false, false)))))))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) - 0u), (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)) * subgroup_size, max(workgroup_base + _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_id) + (0u ^ 0u), clamp((subgroup_id) + (0u ^ 0u), (subgroup_id) + (0u ^ 0u), (subgroup_id) + (0u ^ 0u))), 0u | (_GLF_IDENTITY((subgroup_id) + (0u ^ 0u), clamp((subgroup_id) + (0u ^ 0u), (subgroup_id) + (0u ^ 0u), (subgroup_id) + (0u ^ 0u)))))) * subgroup_size, workgroup_base + subgroup_id * subgroup_size))) << 0u), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u) * subgroup_size, max(workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) + (0u ^ 0u)) * subgroup_size, workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (subgroup_id * subgroup_size))))) << 0u), ~ (~ (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u) + subgroup_id * subgroup_size, max(workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) + (0u ^ 0u)) * subgroup_size, workgroup_base + subgroup_id * subgroup_size))) << 0u, ((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u) + subgroup_id * subgroup_size, max(workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) + _GLF_IDENTITY((0u ^ 0u), (_GLF_IDENTITY((0u ^ 0u), uint(uvec3((0u ^ 0u), 1u, 0u)))) ^ 0u)) * subgroup_size, workgroup_base + subgroup_id * subgroup_size))) << 0u) * 1u)))))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) + subgroup_local_id, min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ 0u), (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, max(workgroup_base + _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) + (0u ^ 0u), clamp(_GLF_IDENTITY((subgroup_id) + (0u ^ 0u), clamp((subgroup_id) + (0u ^ 0u), (subgroup_id) + (0u ^ 0u), (subgroup_id) + (0u ^ 0u))), _GLF_IDENTITY((subgroup_id) + (0u ^ 0u), (true ? _GLF_IDENTITY((subgroup_id) + (0u ^ 0u), ((subgroup_id) + (0u ^ 0u)) ^ 0u) : _GLF_FUZZED(atomicOr(workgroup_base, workgroup_base)))), (subgroup_id) + (0u ^ 0u)))) * subgroup_size, workgroup_base + subgroup_id * subgroup_size))) << 0u), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u), max(_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u), _GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u))) * subgroup_size, max(_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(floatBitsToUint(32.93)) : _GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u))) + _GLF_IDENTITY(subgroup_id, (subgroup_id) + (0u ^ 0u)) * subgroup_size, workgroup_base + subgroup_id * subgroup_size))) << 0u), ~ (~ (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, max(workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) + (0u ^ 0u)) * subgroup_size, workgroup_base + subgroup_id * subgroup_size)), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(max(workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) + (0u ^ 0u)) * subgroup_size, workgroup_base + subgroup_id * subgroup_size), uint(_GLF_IDENTITY(uvec2(max(workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) + (0u ^ 0u)) * subgroup_size, workgroup_base + subgroup_id * subgroup_size), 1u), uvec2(0u, 0u) | (uvec2(max(workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) + (0u ^ 0u)) * subgroup_size, workgroup_base + subgroup_id * subgroup_size), 1u)))))), max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, max(workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) + (0u ^ 0u)) * subgroup_size, workgroup_base + subgroup_id * subgroup_size)), min(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, max(workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) + (0u ^ 0u)) * subgroup_size, _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, clamp(workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size)))), _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, max(workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) + (0u ^ 0u)) * subgroup_size, workgroup_base + subgroup_id * subgroup_size)))), _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, max(workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) + (0u ^ 0u)) * subgroup_size, workgroup_base + subgroup_id * subgroup_size)))))))) << 0u))))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) + subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, max(workgroup_base + _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_id), (_GLF_IDENTITY((subgroup_id), ((subgroup_id)) | (_GLF_IDENTITY((subgroup_id), min((subgroup_id), (subgroup_id)))))) | ((subgroup_id))) + (0u ^ 0u), clamp((subgroup_id) + (0u ^ 0u), (subgroup_id) + (0u ^ 0u), (subgroup_id) + (0u ^ 0u)))) * subgroup_size, workgroup_base + subgroup_id * subgroup_size))) << 0u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u) + subgroup_id * subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)) + _GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u) * subgroup_size, max(workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) + (0u ^ _GLF_IDENTITY(0u, 0u | (0u)))) * subgroup_size, workgroup_base + subgroup_id * subgroup_size))) << 0u), ~ (~ (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, max(workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) + (0u ^ 0u)) * subgroup_size, workgroup_base + subgroup_id * subgroup_size)), (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, max(workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) + (0u ^ 0u)) * subgroup_size, workgroup_base + subgroup_id * subgroup_size))) ^ 0u)) << 0u))))) ^ uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + _GLF_IDENTITY(0.0, (0.0) - 0.0))))))) + subgroup_local_id) - 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, max(workgroup_base + _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) + (0u ^ 0u), clamp((subgroup_id) + (0u ^ 0u), (subgroup_id) + (0u ^ _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED((num_workgroup ^ subgroup_local_id))))), (subgroup_id) + (0u ^ 0u)))) * subgroup_size, workgroup_base + subgroup_id * subgroup_size))) << 0u), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uint(subgroup_id)), uint(uvec4(uint(uint(subgroup_id)), (0u >> _GLF_IDENTITY(uint(1u), uint(1u))), 0u, 0u)))) * subgroup_size, (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u) * subgroup_size, max(workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) + (0u ^ 0u)) * subgroup_size, workgroup_base + subgroup_id * subgroup_size))) << 0u), ~ (~ (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, max(workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) + (0u ^ 0u)) * subgroup_size, workgroup_base + subgroup_id * subgroup_size))) << 0u))))) ^ uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-94.04)), vec2(_GLF_FUZZED(-665.748), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), injectionSwitch, injectionSwitch)).x))) + subgroup_local_id, 0u + (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, clamp(workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (true ? workgroup_base + subgroup_id * subgroup_size : _GLF_FUZZED(workgroup_size))))), max(workgroup_base + _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) + (0u ^ 0u), clamp((subgroup_id) + (0u ^ 0u), (subgroup_id) + (0u ^ 0u), (subgroup_id) + (0u ^ 0u)))) * subgroup_size, workgroup_base + subgroup_id * subgroup_size))) << 0u), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u) * subgroup_size, max(workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) + (0u ^ 0u)) * subgroup_size, workgroup_base + subgroup_id * subgroup_size))) << _GLF_IDENTITY(0u, min(0u, 0u))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u)) - 0u) * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) * ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u)))), (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, max(workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) + (_GLF_IDENTITY(0u, (0u) << 0u) ^ 0u)) * subgroup_size, _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, min(workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size))))) << _GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, (0u) * 1u))))))))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) + subgroup_local_id))));
 if(_GLF_DEAD(false))
  {
   do
    {
     return;
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bool(false)))));
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), false))))))), (false) || _GLF_IDENTITY(false, (false) || false)))) && true))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))) || false, false || (((injectionSwitch.x > injectionSwitch.y)) || false))))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 else
  {
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)) || false)), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)) || false))) || false))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)) || false)))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y) || _GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, true, false))))) || false)))), false || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)) || false))))))) || false)) && true))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true)))))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     else
      {
      }
    }
   else
    {
    }
  }
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), min(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(uvec2(workgroup_base, (1u ^ 0u)))), uint(uvec3(workgroup_base, 0u, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))))))))) + _GLF_IDENTITY(0u, 0u + (0u))) + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size))), (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), min((workgroup_base + subgroup_id * subgroup_size), (workgroup_base + subgroup_id * subgroup_size))), _GLF_IDENTITY((~ (_GLF_IDENTITY(workgroup_base, uint(uint(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base))))) + _GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) * (0u ^ 1u)))))) * subgroup_size)) - _GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, (0u) >> 0u)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((~ (workgroup_base + subgroup_id * subgroup_size)), ((~ (workgroup_base + subgroup_id * subgroup_size))) * 1u), max(_GLF_IDENTITY((~ (workgroup_base + subgroup_id * subgroup_size)), ((~ (workgroup_base + subgroup_id * subgroup_size))) * 1u), _GLF_IDENTITY((~ (workgroup_base + subgroup_id * subgroup_size)), ((~ (workgroup_base + subgroup_id * subgroup_size))) * 1u))) - 0u, _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY((~ (_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)) + subgroup_id * subgroup_size)), 0u | ((~ (_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)) + subgroup_id * subgroup_size)))) - 0u, uint(uvec3((~ (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(min(workgroup_base, workgroup_base), ~ (~ (min(workgroup_base, workgroup_base))))) + subgroup_id * subgroup_size)) - 0u, 1u, (0u | 0u)))), 1u, 1u, 0u)), min(uint(uvec4(_GLF_IDENTITY((~ (_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)) + subgroup_id * subgroup_size)) - 0u, uint(uvec3((_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)) + subgroup_id * subgroup_size), (~ (_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)) + subgroup_id * subgroup_size)) + uint(_GLF_ZERO(0.0, injectionSwitch.x)))) - 0u, 1u, (0u | 0u)))), 1u, 1u, 0u)), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY((~ (_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)) + subgroup_id * subgroup_size)) - 0u, uint(uvec3((~ (_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)) + subgroup_id * subgroup_size)) - 0u, 1u, (0u | 0u)))), 1u, 1u, 0u)), (false ? _GLF_FUZZED(subgroup_local_id) : uint(uvec4(_GLF_IDENTITY((~ (_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)) + subgroup_id * subgroup_size)) - 0u, uint(uvec3((~ (_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)) + subgroup_id * subgroup_size)) - 0u, 1u, (0u | 0u)))), 1u, 1u, 0u))))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((~ (workgroup_base + subgroup_id * subgroup_size)) - _GLF_IDENTITY(0u, min(0u, 0u)), ((~ (workgroup_base + subgroup_id * subgroup_size)) - 0u) << (_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, _GLF_IDENTITY(0u, 0u ^ (0u)))) | 0u)), min(_GLF_IDENTITY((~ (workgroup_base + subgroup_id * subgroup_size)) - _GLF_IDENTITY(0u, min(0u, 0u)), ((~ (workgroup_base + subgroup_id * subgroup_size)) - 0u) << (_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, _GLF_IDENTITY(0u, 0u ^ (0u)))) | 0u)), _GLF_IDENTITY((~ (workgroup_base + subgroup_id * subgroup_size)) - _GLF_IDENTITY(0u, min(0u, 0u)), ((~ (workgroup_base + subgroup_id * subgroup_size)) - 0u) << (_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, _GLF_IDENTITY(0u, 0u ^ (0u)))) | 0u)))), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((~ (workgroup_base + subgroup_id * subgroup_size)) - _GLF_IDENTITY(0u, max(0u, 0u)), (_GLF_IDENTITY((~ (workgroup_base + subgroup_id * subgroup_size)), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY((~ (workgroup_base + subgroup_id * subgroup_size)), min(_GLF_IDENTITY((~ (workgroup_base + subgroup_id * subgroup_size)), ((~ (workgroup_base + subgroup_id * subgroup_size))) | ((~ (workgroup_base + subgroup_id * subgroup_size)))), (~ (workgroup_base + subgroup_id * subgroup_size)))), ((~ (workgroup_base + subgroup_id * subgroup_size))) | 0u))) - 0u) << (_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) << 0u), 0u)), 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, _GLF_IDENTITY(0u | (0u), ~ (_GLF_IDENTITY(~ (0u | (0u)), (~ (0u | (0u))) | (~ (0u | (0u)))))))) ^ 0u) ^ (0u)))) | 0u)), min(_GLF_IDENTITY((~ (workgroup_base + subgroup_id * subgroup_size)) - _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (0u), uint(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (0u), _GLF_IDENTITY(1u, (1u) * 1u))))), ((~ (workgroup_base + subgroup_id * subgroup_size)) - _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, ~ (~ (0u)))))) << (_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, _GLF_IDENTITY(0u, 0u ^ (0u)))) | 0u)), _GLF_IDENTITY((~ (workgroup_base + subgroup_id * subgroup_size)) - 0u, ((~ (workgroup_base + subgroup_id * subgroup_size)) - 0u) << (_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, _GLF_IDENTITY(0u, 0u ^ (0u)))) | 0u, 0u ^ (_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, _GLF_IDENTITY(0u, 0u ^ (0u)))) | 0u)))))), (_GLF_IDENTITY(_GLF_IDENTITY((~ (workgroup_base + subgroup_id * subgroup_size)) - 0u, ((~ (workgroup_base + subgroup_id * subgroup_size)) - 0u) << _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, _GLF_IDENTITY(0u, 0u ^ (0u)))) | 0u, (_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, _GLF_IDENTITY(0u, 0u ^ (0u)))) | 0u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, _GLF_IDENTITY(0u, 0u ^ (0u)))) | 0u), (~ (_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, _GLF_IDENTITY(0u, 0u ^ (0u)))) | 0u)) << 0u)))) / uint(_GLF_ONE(1.0, injectionSwitch.y)))), min((_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, _GLF_IDENTITY(0u, 0u ^ (0u)))) | 0u), _GLF_IDENTITY((_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, _GLF_IDENTITY(0u, 0u ^ (0u)))) | 0u), max((_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, _GLF_IDENTITY(0u, 0u ^ (0u)))) | 0u), (_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(num_workgroup))), 0u ^ (0u)))) | 0u)))))), min(_GLF_IDENTITY(_GLF_IDENTITY((~ (workgroup_base + subgroup_id * subgroup_size)) - 0u, max((~ (workgroup_base + subgroup_id * subgroup_size)) - 0u, (~ (workgroup_base + subgroup_id * subgroup_size)) - 0u)), ((~ (_GLF_IDENTITY(workgroup_base, (workgroup_base) - (0u & 125581u)) + subgroup_id * subgroup_size)) - 0u) << (_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), min(_GLF_IDENTITY(~ (0u), 1u * (~ (0u))), ~ (0u))))), min(0u, 0u)), 0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, 0u ^ (0u)), clamp(_GLF_IDENTITY(0u, 0u ^ (0u)), _GLF_IDENTITY(0u, 0u ^ (0u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, 0u ^ (0u)), (_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u ^ (0u)), (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(0u, 0u ^ (0u))))) << 0u))))) | 0u)), _GLF_IDENTITY((~ (workgroup_base + subgroup_id * subgroup_size)) - 0u, ((~ (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec4(subgroup_size, 1u, 1u, 0u), min(_GLF_IDENTITY(uvec4(subgroup_size, 1u, 1u, 0u), (uvec4(subgroup_size, 1u, 1u, 0u)) | (uvec4(subgroup_size, 1u, 1u, 0u))), uvec4(subgroup_size, 1u, 1u, _GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_size)))))))))))) - 0u) << (_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, _GLF_IDENTITY(0u, 0u ^ (0u)))) | 0u))))) >> 0u), 0u, 1u))), (~ (workgroup_base + subgroup_id * subgroup_size)) - 0u))))) + ((subgroup_local_id + 1) % subgroup_size)) | 0u);
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   for(int _injected_loop_counter = (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), int(_GLF_IDENTITY(int(int(_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, (4) | (4)), _GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(66369))))))), 0 | (_GLF_IDENTITY(int(int(_GLF_IDENTITY(4, min(4, 4)))), (_GLF_IDENTITY(int(int(_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (4) << 0))))) * 1), min(4, 4)))), (int(int(_GLF_IDENTITY(4, min(4, 4))))) / 1)) / 1)))))), min(_GLF_IDENTITY(0 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(_GLF_IDENTITY(4, (4) << 0)), ~ (~ (int(4))))), _GLF_IDENTITY(int(ivec3(~ _GLF_IDENTITY((_GLF_IDENTITY(int(4), ~ (~ (int(4))))), 0 | (_GLF_IDENTITY((_GLF_IDENTITY(int(4), ~ (~ (int(4))))), clamp((_GLF_IDENTITY(int(4), ~ (~ (int(4))))), (_GLF_IDENTITY(int(4), ~ (~ (int(4))))), (_GLF_IDENTITY(int(4), ~ (~ (int(4))))))))), _GLF_IDENTITY(0, int(int(0))), int(_GLF_ONE(1.0, injectionSwitch.y)))), (int(ivec3(~ (_GLF_IDENTITY(int(4), ~ (~ (int(4))))), 0, int(_GLF_ONE(1.0, injectionSwitch.y))))) | (int(ivec3(~ (_GLF_IDENTITY(int(4), ~ (~ (int(4))))), 0, int(_GLF_ONE(1.0, injectionSwitch.y))))))))), _GLF_IDENTITY(int(4), int(int(int(_GLF_IDENTITY(_GLF_IDENTITY(4, 1 * (4)), min(4, 4))))))), _GLF_IDENTITY((_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, max(_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, ~ (~ (0))))), _GLF_IDENTITY(0, 0 ^ (0)))))) << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), int(int(int(_GLF_IDENTITY(4, min(4, 4)))))))) | (_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0 : _GLF_FUZZED(97098))), _GLF_IDENTITY(0, ~ (~ (0))))) << _GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) >> 0), _GLF_IDENTITY(int(4), int(int(int(_GLF_IDENTITY(4, min(4, 4)))))))), clamp((_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, max(_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, ~ (~ (0))))), _GLF_IDENTITY(0, 0 ^ (0)))))) << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), int(int(int(_GLF_IDENTITY(4, min(4, 4)))))))) | (_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0 : _GLF_FUZZED(97098))), _GLF_IDENTITY(0, ~ (~ (0))))) << _GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) >> 0), _GLF_IDENTITY(int(4), int(int(int(_GLF_IDENTITY(4, min(4, 4)))))))), _GLF_IDENTITY((_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, max(_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, ~ (~ (0))))), _GLF_IDENTITY(0, 0 ^ (0)))))) << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), int(int(int(_GLF_IDENTITY(4, min(4, 4)))))))) | (_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0 : _GLF_FUZZED(97098))), _GLF_IDENTITY(0, ~ (~ (0))))) << _GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) >> 0), _GLF_IDENTITY(int(4), int(int(int(_GLF_IDENTITY(4, min(4, 4)))))))), ~ (~ ((_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, max(_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, ~ (~ (0))))), _GLF_IDENTITY(0, 0 ^ (0)))))) << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), int(int(int(_GLF_IDENTITY(4, min(4, 4)))))))) | (_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0 : _GLF_FUZZED(97098))), _GLF_IDENTITY(0, ~ (~ (0))))) << _GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) >> 0), _GLF_IDENTITY(int(4), int(int(int(_GLF_IDENTITY(4, min(4, 4))))))))))), (_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, max(_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, ~ (~ (0))))), _GLF_IDENTITY(0, 0 ^ (0)))))) << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), int(int(int(_GLF_IDENTITY(4, min(4, 4)))))))) | (_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0 : _GLF_FUZZED(97098))), _GLF_IDENTITY(0, ~ (~ (0))))) << _GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) >> 0), _GLF_IDENTITY(int(4), int(int(int(_GLF_IDENTITY(4, min(4, 4))))))))))), 0 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(int(int(_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (4) + 0))))) | (4)), _GLF_IDENTITY(min(4, 4), _GLF_IDENTITY(clamp(min(4, 4), _GLF_IDENTITY(min(4, 4), ~ (~ (min(4, 4)))), _GLF_IDENTITY(_GLF_IDENTITY(min(4, 4), ~ (~ (_GLF_IDENTITY(min(4, 4), int(ivec3(min(4, 4), 1, 1)))))), (_GLF_IDENTITY(min(4, 4), ~ (~ (_GLF_IDENTITY(min(4, 4), int(ivec3(min(4, 4), 1, 1))))))) | 0)), (clamp(min(4, 4), _GLF_IDENTITY(min(4, 4), ~ (~ (min(4, 4)))), _GLF_IDENTITY(min(4, 4), ~ (~ (_GLF_IDENTITY(min(4, 4), int(ivec3(min(4, 4), 1, 1)))))))) >> 0)))))), (true ? int(int(int(_GLF_IDENTITY(4, _GLF_IDENTITY(min(4, 4), _GLF_IDENTITY(clamp(min(4, 4), _GLF_IDENTITY(min(4, 4), ~ (~ (min(4, 4)))), _GLF_IDENTITY(min(4, 4), ~ (~ (_GLF_IDENTITY(min(4, 4), _GLF_IDENTITY(int(ivec3(min(4, 4), 1, 1)), clamp(_GLF_IDENTITY(int(ivec3(min(4, 4), 1, 1)), max(int(ivec3(min(4, 4), 1, 1)), int(ivec3(min(4, 4), 1, 1)))), _GLF_IDENTITY(int(ivec3(min(4, 4), 1, 1)), (int(ivec3(min(4, 4), 1, 1))) - 0), int(ivec3(min(4, 4), 1, 1))))))))), _GLF_IDENTITY((clamp(min(4, 4), _GLF_IDENTITY(min(4, 4), ~ (~ (min(4, 4)))), _GLF_IDENTITY(min(4, 4), ~ (~ (_GLF_IDENTITY(min(4, 4), int(ivec3(min(4, 4), 1, 1)))))))) >> 0, clamp((clamp(min(4, 4), _GLF_IDENTITY(min(4, 4), ~ (~ (min(4, 4)))), _GLF_IDENTITY(min(4, 4), ~ (~ (_GLF_IDENTITY(min(4, 4), int(ivec3(min(4, 4), 1, 1)))))))) >> 0, (clamp(min(4, 4), _GLF_IDENTITY(min(4, 4), ~ (~ (min(4, 4)))), _GLF_IDENTITY(min(4, 4), ~ (~ (_GLF_IDENTITY(min(4, 4), int(ivec3(min(4, 4), 1, 1)))))))) >> 0, _GLF_IDENTITY((clamp(min(4, 4), _GLF_IDENTITY(min(4, 4), ~ (~ (min(4, 4)))), _GLF_IDENTITY(min(4, 4), ~ (~ (_GLF_IDENTITY(min(4, 4), int(ivec3(min(4, 4), 1, 1)))))))) >> 0, ~ (~ ((clamp(min(4, 4), _GLF_IDENTITY(min(4, 4), ~ (~ (min(4, 4)))), _GLF_IDENTITY(min(4, 4), ~ (~ (_GLF_IDENTITY(min(4, 4), int(ivec3(min(4, 4), 1, 1)))))))) >> 0))))))))))) : _GLF_FUZZED(-54409)))))))); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), true && (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1))); _injected_loop_counter ++)
    {
     buf[virtual_gid] = 1;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(1547.4046) : injectionSwitch.x)) > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(1547.4046) : _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-208.298)), float(injectionSwitch.x), bool(true))))) > injectionSwitch.y, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(1547.4046) : injectionSwitch.x)) > injectionSwitch.y, true && _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(1547.4046) : injectionSwitch.x)) > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(1547.4046) : injectionSwitch.x)) > injectionSwitch.y), true, true)), false || (bool(bvec3((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(1547.4046) : injectionSwitch.x)) > injectionSwitch.y), true, true)))))))))), (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(1547.4046) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x)) > injectionSwitch.y, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(1547.4046) : _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), 0.0, 1.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)))).x)) > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(1547.4046) : injectionSwitch.x)) > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(false ? _GLF_FUZZED(1547.4046) : injectionSwitch.x, 0.0 + (false ? _GLF_IDENTITY(_GLF_FUZZED(1547.4046), mix(float(_GLF_FUZZED(-82.06)), float(_GLF_FUZZED(1547.4046)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) : injectionSwitch.x)))) > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(1547.4046) : injectionSwitch.x)) > injectionSwitch.y))))))))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))))))))
      continue;
    }
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(subgroup_local_id + 1 < subgroup_size)
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), false || (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), (_GLF_IDENTITY(true && (false), (true && (false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true)))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false))))), false || (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false))))))))), true)))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         do
          {
           do
            {
             return;
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       else
        {
        }
      }
     if(_GLF_DEAD(false))
      return;
     do
      {
       if(_GLF_DEAD(false))
        break;
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         do
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)), (bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, true))) && true))), _GLF_IDENTITY(bool(bvec4(false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)), (bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, true))) && true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)), ! (! (_GLF_IDENTITY(bool(bvec4(false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)), (bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, true))) && true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)), ! (! (bool(bvec4(false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)), (bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, true))) && true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)))))))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-57.06)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-57.06)), float(injectionSwitch.x), bool(true))) > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-57.06)), float(injectionSwitch.x), bool(true))) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), abs(1.0), 1.0, abs(0.0), determinant(mat2(1.0, 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))))), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0))), injectionSwitch), max(_GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch), min(min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch), min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch))), _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch), vec2(mat2(min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch), 0.0, 0.0)))))).y, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-57.06)), float(injectionSwitch.x), bool(_GLF_IDENTITY(true, ! (! (true)))))) > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), injectionSwitch)).y) && true)))) && true), _GLF_IDENTITY(false, ! (! (false))), true, _GLF_IDENTITY(true, (true) || false))), bool(bvec3(_GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(true, (true) || false), true)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), bool(_GLF_IDENTITY(bvec3(! (true), true, true), bvec3(bvec4(bvec3(! (true), true, true), true))))), (! _GLF_IDENTITY((true), ! _GLF_IDENTITY((! ((_GLF_IDENTITY(true, false || (true))))), ! (_GLF_IDENTITY(! ((! ((_GLF_IDENTITY(true, false || (true)))))), ! (! (! ((! ((_GLF_IDENTITY(true, false || (true))))))))))))) || false))), true))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true)), bool(bvec2(bool(bvec3(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, false, true)), false)))), false, _GLF_IDENTITY(true, true && (true)), true))), false || ((bool(bvec4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y, false, true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false)))))))), (_GLF_IDENTITY(_GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true)), bool(bvec2(bool(bvec3(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, false, true)), false)))), false, _GLF_IDENTITY(true, true && (true)), true))), false || ((bool(bvec4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y, false, true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false)))))))), ! (! (_GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true)), bool(bvec2(bool(bvec3(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, false, true)), false)))), false, _GLF_IDENTITY(true, true && (true)), true))), false || ((bool(bvec4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y, false, true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false)))))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY((bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, true))), false || ((_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))), false, true, true)), _GLF_IDENTITY(bool(bool(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))), false, true, true)))), bool(bvec4(bool(bool(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))), false, true, true)))), false, true, true)))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(_GLF_IDENTITY((bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, _GLF_IDENTITY(true, false || (true))))), false || (_GLF_IDENTITY((bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, true))), false || ((bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, true)))))))), (bool(_GLF_IDENTITY((bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, true))), false || ((bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), true))))))) && true)), false || (! _GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_IDENTITY((bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, true))), false || ((bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, true)))))), (bool(_GLF_IDENTITY((bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-534.851, -1.5)))).y, false, true, true))), false || ((bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(true, true && (true)), true))))))) && true)), ! (! ((_GLF_IDENTITY(bool(_GLF_IDENTITY((bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, true))), false || ((bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, true)))))), (bool(_GLF_IDENTITY((bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, true))), false || ((bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), ! (! (_GLF_IDENTITY(true, true && (true))))), true))))))) && true))))))))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))) || false, bool(bvec2(_GLF_IDENTITY((bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! _GLF_IDENTITY((true), ! (! ((_GLF_IDENTITY(true, false || (true))))))) || false))), (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! _GLF_IDENTITY((true), ! (! ((_GLF_IDENTITY(true, false || (true))))))) || false))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! _GLF_IDENTITY((true), ! (! ((_GLF_IDENTITY(true, false || (true))))))) || false))), false)), (bool(bvec2(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! _GLF_IDENTITY((true), ! (! ((_GLF_IDENTITY(true, false || (true))))))) || false))), false))) || false))) && true), _GLF_IDENTITY(true, bool(bvec3(true, false, true)))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true)), bool(bvec2(bool(bvec3(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, false, true)), false)))), false, _GLF_IDENTITY(true, true && (true)), true))), false || ((bool(bvec4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y, false, true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false)))))))), bool(bool(_GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true)), bool(bvec2(bool(bvec3(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, false, true)), false)))), false, _GLF_IDENTITY(true, true && (true)), true))), false || ((bool(bvec4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y, false, true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false)))))))))))), bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY((bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, true))), false || ((bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, true)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(_GLF_IDENTITY((bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, ! (! (false))), true, true))), false || ((bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, true)))))), (bool(_GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-6868.0475) : injectionSwitch.x)), abs(1.0), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0))) > injectionSwitch.y, false, true, true))), false || ((bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, true))))))) && true)), false || (! _GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_IDENTITY((bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, true))), false || ((bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, true)))))), _GLF_IDENTITY((bool(_GLF_IDENTITY((bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, true))), false || ((bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(true, true && (true)), true))))))) && true, ! (! ((bool(_GLF_IDENTITY((bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, true))), false || ((bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(true, true && (true)), true))))))) && true))))), ! (! ((_GLF_IDENTITY(bool(_GLF_IDENTITY((bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, true))), false || ((bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(true, (true) && true), true)))))), (bool(_GLF_IDENTITY((bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, true))), false || ((bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(true, true && (true)), true))))))) && true))))))))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))) || false, true))), (_GLF_IDENTITY((_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-67.37), _GLF_FUZZED((-4781.4004 - (- -92.14)))), bvec2(false, _GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))).y, false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), _GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((true), ! (! ((true)))), (! _GLF_IDENTITY((true), ! (! ((true))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((true), ! (! ((true)))), (! _GLF_IDENTITY((true), ! (! ((true))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! ((_GLF_IDENTITY(! _GLF_IDENTITY((true), ! (! ((true)))), (! _GLF_IDENTITY((true), ! (! ((true))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true, true))) || false))), true)), bool(bvec3(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-67.37), _GLF_FUZZED((-4781.4004 - (- -92.14)))), bvec2(false, _GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))).y, false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), _GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((true), ! (! ((true)))), (! _GLF_IDENTITY((true), ! (! ((true))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((true), ! (! ((true)))), (! _GLF_IDENTITY((true), ! (! ((true))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! ((_GLF_IDENTITY(! _GLF_IDENTITY((true), ! (! ((true)))), (! _GLF_IDENTITY((true), ! (! ((true))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true, true))) || false))), true)), (bool(bvec4(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-67.37), _GLF_FUZZED((-4781.4004 - (- -92.14)))), bvec2(false, _GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))).y, false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), _GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((true), ! (! ((true)))), (! _GLF_IDENTITY((true), ! (! ((true))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((true), ! (! ((true)))), (! _GLF_IDENTITY((true), ! (! ((true))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! ((_GLF_IDENTITY(! _GLF_IDENTITY((true), ! (! ((true)))), (! _GLF_IDENTITY((true), ! (! ((true))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true, true))) || false))), true))) || false), false, false)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(true, false || (true)) && (true)), false || (_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), true && (_GLF_IDENTITY(true, false || (true))))) && true, bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), true && (_GLF_IDENTITY(true, false || (true))))) && true)))) && (true)))), true))), _GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (false) || false) || ((bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, _GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(true, (true) || false)) && _GLF_TRUE(_GLF_IDENTITY(true, (true) && true), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false)), true && ((_GLF_IDENTITY(true, (true) || false)) && _GLF_TRUE(_GLF_IDENTITY(true, (true) && true), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false))))))))))), bool(bvec2(bool(_GLF_IDENTITY((bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), false, true, true))), _GLF_IDENTITY(false, false || _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), bool(bvec3((false), true, true)))), (false) || false)), ((_GLF_IDENTITY(false, (false) || false))) && true), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (false) || false)), _GLF_IDENTITY(((_GLF_IDENTITY(false, (false) || false))) && true, bool(bvec4(((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false))) && true, false, true, false))))) && true)) || ((bool(bvec4(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)), min(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)), max(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)), min(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)))), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)))), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)))), float(_GLF_FUZZED(9926.5373)), bool(false)), _GLF_IDENTITY(min(_GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(9926.5373)), bool(false)), float(mat4x3(_GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(9926.5373)), bool(false)), float(mat3x2(mix(float(injectionSwitch.x), float(_GLF_FUZZED(9926.5373)), bool(false)), 1.0, 1.0, 0.0, 0.0, 0.0))), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 0.0, 0.0, 0.0, cos(0.0), 0.0, 0.0, 0.0, 1.0, 1.0))), _GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(9926.5373)), bool(false)), clamp(mix(float(injectionSwitch.x), float(_GLF_FUZZED(9926.5373)), bool(false)), mix(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((-715.913))), float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), bool(true)))), float(_GLF_FUZZED(9926.5373)), bool(false)), mix(float(injectionSwitch.x), float(_GLF_FUZZED(9926.5373)), bool(false))))), (true ? _GLF_IDENTITY(min(_GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(9926.5373)), bool(false)), float(mat4x3(_GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(9926.5373)), bool(false)), float(mat3x2(mix(float(injectionSwitch.x), float(_GLF_FUZZED(9926.5373)), bool(false)), 1.0, 1.0, 0.0, 0.0, 0.0))), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 0.0, 0.0, 0.0, cos(0.0), 0.0, 0.0, 0.0, 1.0, 1.0))), _GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(9926.5373)), bool(false)), clamp(mix(float(injectionSwitch.x), float(_GLF_FUZZED(9926.5373)), bool(false)), mix(float(injectionSwitch.x), float(_GLF_FUZZED(9926.5373)), bool(false)), mix(float(injectionSwitch.x), float(_GLF_FUZZED(9926.5373)), bool(false))))), _GLF_IDENTITY((min(_GLF_IDENTITY(mix(float(_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(5.1)))), float(_GLF_FUZZED(9926.5373)), bool(false)), float(mat4x3(_GLF_IDENTITY(mix(_GLF_IDENTITY(float(injectionSwitch.x), max(_GLF_IDENTITY(float(injectionSwitch.x), min(float(injectionSwitch.x), float(injectionSwitch.x))), float(injectionSwitch.x))), float(_GLF_FUZZED(9926.5373)), bool(false)), float(mat3x2(mix(float(injectionSwitch.x), float(_GLF_FUZZED(9926.5373)), bool(false)), 1.0, 1.0, 0.0, 0.0, 0.0))), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 0.0, 0.0, 0.0, cos(0.0), 0.0, 0.0, 0.0, 1.0, 1.0))), _GLF_IDENTITY(mix(_GLF_IDENTITY(float(injectionSwitch.x), (_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) / 1.0)) - tan(0.0)), float(_GLF_FUZZED(9926.5373)), _GLF_IDENTITY(bool(false), (bool(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), clamp(mix(float(injectionSwitch.x), float(_GLF_FUZZED(9926.5373)), bool(false)), mix(float(injectionSwitch.x), float(_GLF_FUZZED(9926.5373)), bool(false)), mix(_GLF_IDENTITY(float(injectionSwitch.x), _GLF_IDENTITY(float(vec3(float(injectionSwitch.x), 0.0, round(length(normalize(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)))))))), min(float(vec3(float(injectionSwitch.x), 0.0, round(length(normalize(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)))))))), float(vec3(float(injectionSwitch.x), 0.0, round(length(normalize(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))))))))))), float(_GLF_FUZZED(9926.5373)), bool(false)))))) * 1.0, (_GLF_IDENTITY((min(_GLF_IDENTITY(mix(float(_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(5.1)))), float(_GLF_FUZZED(9926.5373)), bool(false)), float(mat4x3(_GLF_IDENTITY(mix(_GLF_IDENTITY(float(injectionSwitch.x), max(_GLF_IDENTITY(float(injectionSwitch.x), min(float(injectionSwitch.x), float(injectionSwitch.x))), float(injectionSwitch.x))), float(_GLF_FUZZED(9926.5373)), bool(false)), float(mat3x2(mix(float(injectionSwitch.x), float(_GLF_FUZZED(9926.5373)), bool(false)), 1.0, 1.0, 0.0, 0.0, 0.0))), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 0.0, 0.0, 0.0, cos(0.0), 0.0, 0.0, 0.0, 1.0, 1.0))), _GLF_IDENTITY(mix(_GLF_IDENTITY(float(injectionSwitch.x), (_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) / 1.0)) - tan(0.0)), float(_GLF_FUZZED(9926.5373)), _GLF_IDENTITY(bool(false), (bool(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), clamp(mix(float(injectionSwitch.x), float(_GLF_FUZZED(9926.5373)), bool(false)), mix(float(injectionSwitch.x), float(_GLF_FUZZED(9926.5373)), bool(false)), mix(_GLF_IDENTITY(float(injectionSwitch.x), _GLF_IDENTITY(float(vec3(float(injectionSwitch.x), 0.0, round(length(normalize(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)))))))), min(float(vec3(float(injectionSwitch.x), 0.0, round(length(normalize(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)))))))), float(vec3(float(injectionSwitch.x), 0.0, round(length(normalize(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))))))))))), float(_GLF_FUZZED(9926.5373)), bool(false)))))) * 1.0, ((min(_GLF_IDENTITY(mix(float(_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(5.1)))), float(_GLF_FUZZED(9926.5373)), bool(false)), float(mat4x3(_GLF_IDENTITY(mix(_GLF_IDENTITY(_GLF_IDENTITY(float(injectionSwitch.x), (false ? _GLF_FUZZED(-7.7) : float(injectionSwitch.x))), max(_GLF_IDENTITY(float(injectionSwitch.x), min(float(injectionSwitch.x), float(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))))), float(injectionSwitch.x))), float(_GLF_FUZZED(9926.5373)), bool(false)), float(mat3x2(mix(float(injectionSwitch.x), float(_GLF_FUZZED(9926.5373)), bool(false)), 1.0, 1.0, 0.0, 0.0, 0.0))), round(length(normalize(vec3(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0)))), 0.0, 0.0, 0.0, 0.0, cos(0.0), 0.0, 0.0, 0.0, 1.0, 1.0))), _GLF_IDENTITY(mix(_GLF_IDENTITY(float(injectionSwitch.x), (_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) / 1.0)) - tan(0.0)), float(_GLF_FUZZED(9926.5373)), _GLF_IDENTITY(_GLF_IDENTITY(bool(false), (bool(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(false), (bool(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), _GLF_IDENTITY(bool(bvec4(bool(false), false, false, false)), false || (bool(bvec4(bool(false), false, false, false)))))) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), clamp(mix(float(injectionSwitch.x), float(_GLF_FUZZED(9926.5373)), bool(false)), mix(float(injectionSwitch.x), float(_GLF_FUZZED(9926.5373)), bool(false)), mix(_GLF_IDENTITY(float(injectionSwitch.x), _GLF_IDENTITY(float(vec3(float(injectionSwitch.x), 0.0, round(length(normalize(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)))))))), min(float(vec3(float(injectionSwitch.x), 0.0, round(length(normalize(_GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), min(_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), clamp(vec3(1.0, 0.0, 0.0), _GLF_IDENTITY(vec3(1.0, 0.0, 0.0), mix(vec3((vec3(1.0, 0.0, 0.0))[0], _GLF_FUZZED(-907.869), _GLF_FUZZED(78.15)), vec3(_GLF_FUZZED(4.8), (vec3(1.0, 0.0, 0.0))[1], (vec3(1.0, 0.0, 0.0))[2]), bvec3(false, true, true))), vec3(1.0, 0.0, 0.0))), vec3(1.0, 0.0, 0.0))), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)))))))), float(vec3(float(injectionSwitch.x), 0.0, round(length(normalize(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))))))))))), float(_GLF_FUZZED(_GLF_IDENTITY(9926.5373, (9926.5373) - 0.0))), bool(false)))))) * 1.0) - 0.0)) - 0.0)) : _GLF_FUZZED(radians(-5386.8496)))))) > injectionSwitch.y, false, true, true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(true, false || (true)) && (true)), false || (_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), true && (_GLF_IDENTITY(true, false || (true))))) && true, bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), true && (_GLF_IDENTITY(true, false || (true))))) && true)))) && (true)))), true))), _GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (false) || false) || ((bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, _GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(true, (true) || false)) && _GLF_TRUE(_GLF_IDENTITY(true, (true) && true), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false)), true && ((_GLF_IDENTITY(true, (true) || false)) && _GLF_TRUE(_GLF_IDENTITY(true, (true) && true), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false))))))))))), bool(bvec2(bool(_GLF_IDENTITY((bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), false, true, true))), _GLF_IDENTITY(false, false || _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), bool(bvec3((false), true, true)))), (false) || false)), ((_GLF_IDENTITY(false, (false) || false))) && true), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (false) || false)), _GLF_IDENTITY(((_GLF_IDENTITY(false, (false) || false))) && true, bool(bvec4(((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false))) && true, false, true, false))))) && true)) || ((bool(bvec4(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)), min(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)), max(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)), min(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)))), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)))), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)))), float(_GLF_FUZZED(9926.5373)), bool(false)), _GLF_IDENTITY(min(_GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(9926.5373)), bool(false)), float(mat4x3(_GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(9926.5373)), bool(false)), float(mat3x2(mix(float(injectionSwitch.x), float(_GLF_FUZZED(9926.5373)), bool(false)), 1.0, 1.0, 0.0, 0.0, 0.0))), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 0.0, 0.0, 0.0, cos(0.0), 0.0, 0.0, 0.0, 1.0, 1.0))), _GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(9926.5373)), bool(false)), clamp(mix(float(injectionSwitch.x), float(_GLF_FUZZED(9926.5373)), bool(false)), mix(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((-715.913))), float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), bool(true)))), float(_GLF_FUZZED(9926.5373)), bool(false)), mix(float(injectionSwitch.x), float(_GLF_FUZZED(9926.5373)), bool(false))))), (true ? _GLF_IDENTITY(min(_GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(9926.5373)), bool(false)), float(mat4x3(_GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(9926.5373)), bool(false)), float(mat3x2(mix(float(injectionSwitch.x), float(_GLF_FUZZED(9926.5373)), bool(false)), 1.0, 1.0, 0.0, 0.0, 0.0))), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 0.0, 0.0, 0.0, cos(0.0), 0.0, 0.0, 0.0, 1.0, 1.0))), _GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(9926.5373)), bool(false)), clamp(mix(float(injectionSwitch.x), float(_GLF_FUZZED(9926.5373)), bool(false)), mix(float(injectionSwitch.x), float(_GLF_FUZZED(9926.5373)), bool(false)), mix(float(injectionSwitch.x), float(_GLF_FUZZED(9926.5373)), bool(false))))), _GLF_IDENTITY((min(_GLF_IDENTITY(mix(float(_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(5.1)))), float(_GLF_FUZZED(9926.5373)), bool(false)), float(mat4x3(_GLF_IDENTITY(mix(_GLF_IDENTITY(float(injectionSwitch.x), max(_GLF_IDENTITY(float(injectionSwitch.x), min(float(injectionSwitch.x), float(injectionSwitch.x))), float(injectionSwitch.x))), float(_GLF_FUZZED(9926.5373)), bool(false)), float(mat3x2(mix(float(injectionSwitch.x), float(_GLF_FUZZED(9926.5373)), bool(false)), 1.0, 1.0, 0.0, 0.0, 0.0))), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 0.0, 0.0, 0.0, cos(0.0), 0.0, 0.0, 0.0, 1.0, 1.0))), _GLF_IDENTITY(mix(_GLF_IDENTITY(float(injectionSwitch.x), (_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) / 1.0)) - tan(0.0)), float(_GLF_FUZZED(9926.5373)), _GLF_IDENTITY(bool(false), (bool(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), clamp(mix(float(injectionSwitch.x), float(_GLF_FUZZED(9926.5373)), bool(false)), mix(float(injectionSwitch.x), float(_GLF_FUZZED(9926.5373)), bool(false)), mix(_GLF_IDENTITY(float(injectionSwitch.x), _GLF_IDENTITY(float(vec3(float(injectionSwitch.x), 0.0, round(length(normalize(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)))))))), min(float(vec3(float(injectionSwitch.x), 0.0, round(length(normalize(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)))))))), float(vec3(float(injectionSwitch.x), 0.0, round(length(normalize(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))))))))))), float(_GLF_FUZZED(9926.5373)), bool(false)))))) * 1.0, (_GLF_IDENTITY((min(_GLF_IDENTITY(mix(float(_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(5.1)))), float(_GLF_FUZZED(9926.5373)), bool(false)), float(mat4x3(_GLF_IDENTITY(mix(_GLF_IDENTITY(float(injectionSwitch.x), max(_GLF_IDENTITY(float(injectionSwitch.x), min(float(injectionSwitch.x), float(injectionSwitch.x))), float(injectionSwitch.x))), float(_GLF_FUZZED(9926.5373)), bool(false)), float(mat3x2(mix(float(injectionSwitch.x), float(_GLF_FUZZED(9926.5373)), bool(false)), 1.0, 1.0, 0.0, 0.0, 0.0))), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 0.0, 0.0, 0.0, cos(0.0), 0.0, 0.0, 0.0, 1.0, 1.0))), _GLF_IDENTITY(mix(_GLF_IDENTITY(float(injectionSwitch.x), (_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) / 1.0)) - tan(0.0)), float(_GLF_FUZZED(9926.5373)), _GLF_IDENTITY(bool(false), (bool(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), clamp(mix(float(injectionSwitch.x), float(_GLF_FUZZED(9926.5373)), bool(false)), mix(float(injectionSwitch.x), float(_GLF_FUZZED(9926.5373)), bool(false)), mix(_GLF_IDENTITY(float(injectionSwitch.x), _GLF_IDENTITY(float(vec3(float(injectionSwitch.x), 0.0, round(length(normalize(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)))))))), min(float(vec3(float(injectionSwitch.x), 0.0, round(length(normalize(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)))))))), float(vec3(float(injectionSwitch.x), 0.0, round(length(normalize(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))))))))))), float(_GLF_FUZZED(9926.5373)), bool(false)))))) * 1.0, ((min(_GLF_IDENTITY(mix(float(_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(5.1)))), float(_GLF_FUZZED(9926.5373)), bool(false)), float(mat4x3(_GLF_IDENTITY(mix(_GLF_IDENTITY(_GLF_IDENTITY(float(injectionSwitch.x), (false ? _GLF_FUZZED(-7.7) : float(injectionSwitch.x))), max(_GLF_IDENTITY(float(injectionSwitch.x), min(float(injectionSwitch.x), float(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))))), float(injectionSwitch.x))), float(_GLF_FUZZED(9926.5373)), bool(false)), float(mat3x2(mix(float(injectionSwitch.x), float(_GLF_FUZZED(9926.5373)), bool(false)), 1.0, 1.0, 0.0, 0.0, 0.0))), round(length(normalize(vec3(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0)))), 0.0, 0.0, 0.0, 0.0, cos(0.0), 0.0, 0.0, 0.0, 1.0, 1.0))), _GLF_IDENTITY(mix(_GLF_IDENTITY(float(injectionSwitch.x), (_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) / 1.0)) - tan(0.0)), float(_GLF_FUZZED(9926.5373)), _GLF_IDENTITY(_GLF_IDENTITY(bool(false), (bool(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(false), (bool(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), _GLF_IDENTITY(bool(bvec4(bool(false), false, false, false)), false || (bool(bvec4(bool(false), false, false, false)))))) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), clamp(mix(float(injectionSwitch.x), float(_GLF_FUZZED(9926.5373)), bool(false)), mix(float(injectionSwitch.x), float(_GLF_FUZZED(9926.5373)), bool(false)), mix(_GLF_IDENTITY(float(injectionSwitch.x), _GLF_IDENTITY(float(vec3(float(injectionSwitch.x), 0.0, round(length(normalize(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)))))))), min(float(vec3(float(injectionSwitch.x), 0.0, round(length(normalize(_GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), min(_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), clamp(vec3(1.0, 0.0, 0.0), _GLF_IDENTITY(vec3(1.0, 0.0, 0.0), mix(vec3((vec3(1.0, 0.0, 0.0))[0], _GLF_FUZZED(-907.869), _GLF_FUZZED(78.15)), vec3(_GLF_FUZZED(4.8), (vec3(1.0, 0.0, 0.0))[1], (vec3(1.0, 0.0, 0.0))[2]), bvec3(false, true, true))), vec3(1.0, 0.0, 0.0))), vec3(1.0, 0.0, 0.0))), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)))))))), float(vec3(float(injectionSwitch.x), 0.0, round(length(normalize(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))))))))))), float(_GLF_FUZZED(_GLF_IDENTITY(9926.5373, (9926.5373) - 0.0))), bool(false)))))) * 1.0) - 0.0)) - 0.0)) : _GLF_FUZZED(radians(-5386.8496)))))) > injectionSwitch.y, false, true, true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true)) || false) || _GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true))), ! (! (false))))), _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(true, true, true, false)), ! (! (_GLF_IDENTITY(bool(bvec4(true, true, true, false)), false || (bool(bvec4(true, true, true, false))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(true, true, true, false)), ! (! (_GLF_IDENTITY(bool(bvec4(true, true, true, false)), bool(bvec3(bool(bvec4(true, true, true, false)), true, true)))))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec4(true, true, true, false)), false || (bool(bvec4(true, true, true, false))))), _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(bool(bvec4(true, true, true, false)), false || (bool(bvec4(true, true, true, false))))), false)), (bool(bvec2((_GLF_IDENTITY(bool(bvec4(true, true, true, false)), false || (bool(bvec4(true, true, true, false))))), false))) || false))))))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(true, true, true, false)), false || (bool(bvec4(true, true, true, false)))), ! (! (bool(bvec4(true, true, true, false)))))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, true, false)), ! (! (bool(bvec4(true, true, true, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))))))))))), true), false, false))), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), ! (! (bool(bvec2(true, true)))))), true, true, false)), ! (! (bool(bvec4(true, true, true, false)))))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, true, false)), ! (! (bool(bvec4(true, true, true, false)))))), true), false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), (! (_GLF_IDENTITY(false, false || (false)))) || false)) && true)))))), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, true, false)), ! (! (bool(bvec4(true, true, true, false)))))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, true, false)), ! (! (bool(bvec4(true, true, true, false)))))), true), false, false))), true, false))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(true, true && (true)) && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true)), bvec2(bvec3(bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, true, false)), ! (! (bool(bvec4(true, true, true, false)))))), true), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, bool(bvec4(true, true, true, false))), true, true, false)), ! (! (bool(bvec4(true, true, true, false)))))), true)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, true, false)), ! (! (bool(bvec4(true, true, true, false)))))), true)), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, _GLF_IDENTITY(true, ! (! (true))), false)), ! (! (bool(bvec4(true, true, true, false)))))), true))))), true, true))))), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(true, true, true, false)), (_GLF_IDENTITY(bool(bvec4(true, true, true, false)), false || (_GLF_IDENTITY(bool(bvec4(true, true, true, false)), ! (! (bool(bvec4(true, true, true, false)))))))) && true), ! (! (bool(bvec4(true, true, true, false)))))), true), false, false)), _GLF_IDENTITY(bvec2(bvec3(bvec2(bvec4(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(true, true, true, false)), (_GLF_IDENTITY(bool(bvec4(true, true, true, false)), false || (_GLF_IDENTITY(bool(bvec4(true, true, true, false)), ! (! (bool(bvec4(true, true, true, false)))))))) && true), ! (! (bool(bvec4(true, true, true, false)))))), true), false, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec2(bvec4(bvec2(bvec3(bvec2(bvec4(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(true, true, true, false)), (_GLF_IDENTITY(bool(bvec4(true, true, true, false)), false || (_GLF_IDENTITY(bool(bvec4(true, true, true, false)), ! (! (bool(bvec4(true, true, true, false)))))))) && true), ! (! (bool(bvec4(true, true, true, false)))))), true), false, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true, true))))), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, (true) && true), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(true, (true) && true), false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true, false)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(bvec4(true, true, true, false))), bool(_GLF_IDENTITY(bvec2(! (bool(bvec4(true, true, true, false))), true), bvec2(bvec3(bvec2(! (bool(bvec4(true, true, true, false))), true), false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(! (bool(bvec4(true, true, true, false))), bool(_GLF_IDENTITY(bvec2(! (bool(bvec4(true, true, true, false))), true), bvec2(bvec3(bvec2(! (bool(bvec4(true, true, true, false))), true), false)))))))))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(true, true, true, false)), ! (! (bool(bvec4(true, true, true, false))))), bool(bvec2(_GLF_IDENTITY(bool(bvec4(true, true, true, false)), ! (! (bool(bvec4(true, true, true, false))))), false)))), true), false, false))), true, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), true)))))), _GLF_IDENTITY(true, (true) && true)))))))))
            {
             if(_GLF_IDENTITY(_GLF_DEAD(false), true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec2(true, _GLF_IDENTITY(false, ! (! (false))))))) || false) && (_GLF_DEAD(false)))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), _GLF_IDENTITY(false, ! (! (false))) || _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true, false || (true)) && _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), ! (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), _GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, (true) || false)))) && (false || (false))))))))), bool(bvec2(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), ! (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), true && (_GLF_IDENTITY(false || (false), ! (! (_GLF_IDENTITY(false || (false), (_GLF_IDENTITY(false || (false), ! (! (false || (false))))) && true)))))))))))), true)))))), ! (_GLF_IDENTITY(! ((_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), ! (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), true && (false || (false))))))))), bool(bvec2(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), ! (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), true && (false || (false))))))))), true))))))), (! ((_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), ! (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), true && (false || (false))))))))), bool(bvec2(! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), ! (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), true && (false || (false)))))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), ! (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), true && (false || (false)))))))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), ! (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), true && (false || (false)))))))))), _GLF_IDENTITY(true, (true) && true), true)), bool(bool(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), ! (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), true && (false || (false)))))))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), ! (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), true && (false || (false)))))))))), _GLF_IDENTITY(true, (true) && true), true))))))), true)))))))) || false)))))), ! (! (_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), false || (! (_GLF_IDENTITY(false, false || (false))))))))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), false || (! (_GLF_IDENTITY(false, false || (false))))))))))), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), false || (! (_GLF_IDENTITY(false, false || (false))))))))))), true), true, true)), bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), false || (! (_GLF_IDENTITY(false, false || (false))))))))))), true), true, true))))))))))))))), bool(bool((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), ! (! (! (_GLF_IDENTITY(false, false || (false))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), ! (! (! (_GLF_IDENTITY(false, false || (false)))))))), bool(bvec3(bool(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), ! (! (! (_GLF_IDENTITY(false, false || (false)))))))), false, true)))), (bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), ! (! (! (_GLF_IDENTITY(false, false || (false)))))))), bool(bvec3(bool(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), ! (! (! (_GLF_IDENTITY(false, false || (false)))))))), false, true))))) && true))))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), ! (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), _GLF_IDENTITY(bool(bool(false || (false))), ! (! (bool(bool(false || (false)))))))))))), (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), true && ((_GLF_IDENTITY(false, false || (false))))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), _GLF_IDENTITY(bool(bool(false || (false))), ! (! (bool(bool(false || (false)))))))), (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), _GLF_IDENTITY(bool(bool(false || (false))), ! (! (bool(bool(false || (false))))))))) && true)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), ! (! ((_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), ! (! (! _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), ! (! ((_GLF_IDENTITY(false, false || (false))))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), ! (! (! (_GLF_IDENTITY(false, false || (false))))))))))), ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), ! (! (! (_GLF_IDENTITY(false, false || (false)))))))))))))))))))))))))))))))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), false || ((_GLF_IDENTITY(_GLF_DEAD(false), true && _GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false))))))))), false), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, 0 | (0))], injectionSwitch[1])).x > injectionSwitch.y)), false)))))))
              {
               if(_GLF_DEAD(false))
                return;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y))))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  break;
                 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                  {
                   if(_GLF_DEAD(false))
                    return;
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    continue;
                  }
                 else
                  {
                  }
                 break;
                }
               do
                {
                 if(_GLF_DEAD(false))
                  break;
                 do
                  {
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     return;
                    }
                  }
                 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                }
               while(_GLF_WRAPPED_LOOP(false));
               if(_GLF_DEAD(false))
                break;
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  return;
                 continue;
                }
              }
             do
              {
               if(_GLF_DEAD(false))
                return;
               return;
              }
             while(_GLF_WRAPPED_LOOP(false));
             if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))))))
              break;
             if(_GLF_DEAD(false))
              continue;
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(faceforward(7887.2670, -3.4, 2141.4166)) : injectionSwitch.y))))), false || (! (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), ((injectionSwitch.x > injectionSwitch.y)) || false)))))))));
        }
       else
        {
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(false))
      return;
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
         return;
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, abs(0.0) + _GLF_IDENTITY((injectionSwitch.y), max(_GLF_IDENTITY((injectionSwitch.y), mix(float((injectionSwitch.y)), float(_GLF_FUZZED(-7.6)), bool(false))), _GLF_IDENTITY((injectionSwitch.y), max((injectionSwitch.y), (injectionSwitch.y))))))))));
     atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(2), (uint(2)) ^ 0u), 4, 64, 0);
     subgroupAll(_GLF_IDENTITY(false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) && true) && (false)));
    }
   else
    {
     for(int _injected_loop_counter = (_GLF_IDENTITY(1, (1) - int(_GLF_ZERO(_GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))), float(_GLF_IDENTITY(mat3(0.0, 0.0, 0.0, 1.0, sqrt(1.0), 0.0, 0.0, 1.0, 0.0), _GLF_IDENTITY(mat3(_GLF_IDENTITY(mat3x4(mat3(0.0, 0.0, 0.0, 1.0, sqrt(1.0), 0.0, 0.0, 1.0, 0.0)), transpose(transpose(mat3x4(mat3(0.0, 0.0, 0.0, 1.0, sqrt(1.0), 0.0, 0.0, 1.0, 0.0)))))), (true ? mat3(_GLF_IDENTITY(mat3x4(mat3(0.0, 0.0, 0.0, 1.0, sqrt(1.0), 0.0, 0.0, 1.0, 0.0)), transpose(transpose(mat3x4(mat3(0.0, 0.0, 0.0, 1.0, sqrt(1.0), 0.0, 0.0, 1.0, 0.0)))))) : _GLF_FUZZED(mat3(5096.2050, 7267.8000, -8.4, -781.780, -58.25, -0.7, 1219.5168, 4.6, -5.3))))))), injectionSwitch.x))) & 1); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != (0 & 366), ! (! (_GLF_IDENTITY(_injected_loop_counter != (0 & 366), bool(bool(_injected_loop_counter != (0 & 366)))))))); _injected_loop_counter --)
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          break;
        }
       else
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, ! (! (false))))))
          {
           if(_GLF_DEAD(false))
            break;
           if(_GLF_DEAD(false))
            return;
           do
            {
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
              return;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              continue;
             atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(2), (uint(2)) | _GLF_IDENTITY((uint(2)), min(_GLF_IDENTITY((uint(2)), uint(uint((uint(2))))), (uint(2))))), 4, _GLF_IDENTITY(64, ~ (~ (64))), _GLF_IDENTITY(_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, _GLF_IDENTITY((0) ^ _GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (0)), ((0) ^ 0) << 0)), 0)), max(_GLF_IDENTITY(0, max(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ (0 >> _GLF_IDENTITY(int(7), int(7)))), _GLF_IDENTITY((_GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(79727) : 0))) * 1)))) ^ 0, ((0) ^ 0) << 0)), 0)), _GLF_IDENTITY(0, max(_GLF_IDENTITY(0, _GLF_IDENTITY((0) ^ 0, ((0) ^ 0) << 0)), 0)))));
            }
           while(_GLF_WRAPPED_LOOP(false));
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              continue;
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               return;
              }
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
          }
         else
          {
          }
        }
       if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), bool(bool((_GLF_DEAD(false))))) || false), false, false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
         continue;
        }
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(false))
        continue;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         break;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, true && (false)), true)))))))))
        {
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(false))
          break;
         for(int _injected_loop_counter = (1 & 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             return;
            }
           else
            {
             if(_GLF_DEAD(false))
              continue;
            }
          }
        }
      }
     subgroupAll(true);
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 | 0)); _injected_loop_counter --)
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) | 0))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
            return;
           if(_GLF_DEAD(false))
            continue;
           return;
          }
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        break;
      }
     return;
    }
   return;
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false || (false)))))))))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch, (_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch) - log(vec2(1.0, 1.0)))))) * vec2(1.0, 1.0)).y))))
  return;
 if(_GLF_DEAD(false))
  return;
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
