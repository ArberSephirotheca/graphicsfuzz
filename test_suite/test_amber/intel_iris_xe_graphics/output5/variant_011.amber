#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, bool(bvec3(true, false, false))), true, true)))) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))) && true))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec2(true, false)))) && true) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-430.728), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(87.00)), bvec2(true, false))), injectionSwitch)), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), (true ? min(injectionSwitch, injectionSwitch) : _GLF_FUZZED(vec2(23.60, 5.8))))))).x > injectionSwitch.y), bool(bool((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) && true)))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, (false) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(false, false))))))), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, (false) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), false)), true))))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) + vec2(0.0, 0.0)).y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), false, false, false)))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), true, true, true)), true && (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), true, true, true)), ! (! _GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), true, true, true))), ((bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), true, true, true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) || false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), false, false, _GLF_IDENTITY(true, ! (! (true))))))) || false)) || false)), false, true, false))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))), false, true, true))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4(injectionSwitch.y, 0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, float(mat4x3(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0))), 1.0, 1.0, sqrt(sqrt(0.0)), 1.0, 1.0, 0.0, 0.0, 1.0)), max(float(mat4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch)).y, 0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, float(mat4x3(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0))), 1.0, 1.0, sqrt(sqrt(0.0)), 1.0, 1.0, 0.0, 0.0, 1.0)), float(mat4(injectionSwitch.y, 0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, float(mat4x3(0.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + log(1.0)))), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0))), 1.0, 1.0, sqrt(sqrt(0.0)), 1.0, 1.0, 0.0, 0.0, 1.0)))))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (_GLF_IDENTITY(bool(false), ! (! (bool(false)))))))))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), bool(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, false))), false)))))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, true && (false)))), bool(bvec4(_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, true && (false)))), true && (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, true && (false)))), ! (! (! (! (_GLF_IDENTITY(false, true && (false))))))))), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), _GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))))), (true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true)))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-949.346))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1]))), vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(6.3)), bvec2(false, false))))), vec2(mat3x2(injectionSwitch, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_IDENTITY(_GLF_FUZZED(71.57), (false ? _GLF_FUZZED(5.5) : _GLF_FUZZED(71.57)))), bool(false))), round(_GLF_IDENTITY(length(normalize(_GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(1.0, 0.0), mix(vec2(_GLF_IDENTITY((vec2(1.0, 0.0))[0], (false ? _GLF_FUZZED(sinh(max(-49.38, 5.3))) : (vec2(1.0, 0.0))[0])), _GLF_FUZZED(32.10)), vec2(_GLF_FUZZED(-449.658), _GLF_IDENTITY((_GLF_IDENTITY(vec2(1.0, 0.0), (vec2(1.0, 0.0)) * vec2(1.0, 1.0)))[1], (true ? (vec2(1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (0.0) / 1.0)), float(_GLF_FUZZED(-9639.9831)), bool(false)))))[1] : _GLF_FUZZED(-607.974)))), bvec2(false, true))), vec2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(-9432.4949) : 1.0)), _GLF_IDENTITY(0.0, min(0.0, 0.0)))), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), mix(float(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), mix(float(dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), float(_GLF_FUZZED(9.0)), bool(false)))), float(_GLF_FUZZED(-9.1)), bool(false)))))), 0.0 + (length(normalize(_GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(1.0, 0.0), mix(vec2(_GLF_IDENTITY((vec2(1.0, 0.0)), clamp(_GLF_IDENTITY((vec2(1.0, 0.0)), mix(vec2(_GLF_FUZZED(3.1), _GLF_FUZZED(-4.5)), vec2(((vec2(1.0, 0.0)))[0], ((vec2(1.0, 0.0)))[1]), bvec2(true, _GLF_IDENTITY(true, ! (! (true)))))), (vec2(1.0, 0.0)), _GLF_IDENTITY((vec2(1.0, 0.0)), max((vec2(1.0, 0.0)), (vec2(1.0, 0.0))))))[_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) - 0)) | (0))], _GLF_FUZZED(32.10)), vec2(_GLF_FUZZED(-449.658), _GLF_IDENTITY((_GLF_IDENTITY(vec2(1.0, 0.0), (vec2(1.0, 0.0)) * vec2(1.0, 1.0)))[1], (true ? (vec2(1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2x4(0.0, 1.0, 1.0, 0.0, 0.0, exp(0.0), 1.0, 0.0)), max(float(mat2x4(0.0, 1.0, 1.0, 0.0, 0.0, exp(0.0), 1.0, 0.0)), float(mat2x4(0.0, 1.0, 1.0, 0.0, 0.0, exp(0.0), 1.0, 0.0)))))))[1] : _GLF_FUZZED(-607.974)))), bvec2(false, true))), vec2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(-9432.4949) : 1.0, max(_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(-9432.4949) : 1.0, _GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(-9432.4949) : 1.0)))), _GLF_IDENTITY(0.0, min(0.0, 0.0)))), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))))))), _GLF_IDENTITY(0.0, float(float(0.0))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, sqrt(1.0), 1.0, cos(0.0), _GLF_ONE(1.0, injectionSwitch.y))), 0.0 + (float(mat4(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, sqrt(1.0), 1.0, cos(0.0), _GLF_ONE(1.0, injectionSwitch.y))))))))).y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 1.0, 0.0)))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true)))) && true)))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))), false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, true))))))))
    barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0, 1.0, 0.0, exp(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, sin(0.0), 1.0, 0.0))), (false ? _GLF_FUZZED(757.694) : _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0, 1.0, 0.0, exp(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, sin(0.0), 1.0, 0.0))))))), min(_GLF_IDENTITY(float(float(_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0, 1.0, 0.0, exp(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, sin(0.0), 1.0, 0.0))))), float(mat2(float(float(_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0, 1.0, 0.0, exp(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, sin(0.0), 1.0, 0.0))))), 0.0, 1.0, 0.0))), float(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0, 1.0, 0.0, exp(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, sin(0.0), 1.0, 0.0)))), (float(_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0, 1.0, 0.0, exp(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, sin(0.0), 1.0, 0.0))))) / _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)))))))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), bool(bvec3(false || (false), _GLF_IDENTITY(false, (false) && true), true))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))), true, true, false))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), true && (bool(bool(_GLF_DEAD(false)))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) || false)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec4(! (_GLF_DEAD(false)), false, false, false))))))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))), ! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! (false), bool(bvec4(_GLF_IDENTITY(! (false), true && _GLF_IDENTITY((! (false)), bool(bvec3((! (false)), true, true)))), true, false, true)))), ((_GLF_IDENTITY(! (false), bool(bvec4(_GLF_IDENTITY(! (false), true && (! (false))), true, false, true))))) && true), false || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), ! _GLF_IDENTITY((! (! (false))), ! (_GLF_IDENTITY(! ((! (! (false)))), (! ((! (! (false))))) && true)))))), bool(bvec4(_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), (! (false)) || false))), true, false, _GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), _GLF_IDENTITY((true), false || ((true))) && true))))), bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) && true), bool(bvec4(! (false), true, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))))))))), true))))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(bvec4(_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(bvec3(bool(_GLF_DEAD(false)), false, false))), _GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(false, ! (! (false))), false))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), injectionSwitch.x)), max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY(false, bool(bvec3(false, false, true)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(vec4(mat2(_GLF_IDENTITY(1.0, float(mat4(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-9.6)), bool(false))), 0.0, 1.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, cos(0.0), 0.0, 0.0, 0.0, tan(0.0), 0.0, 0.0, tan(0.0), 1.0)))) * (injectionSwitch), exp(0.0), 1.0)))).x > injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(distance(vec3(41.73, -0.0, 73.49), vec3(-11.53, -6.2, -4.8))) : injectionSwitch.x)))) > injectionSwitch.y)) || _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), bool(bool(_GLF_IDENTITY(bool(bvec2(false, true)), (bool(bvec2(false, true))) || false)))))), ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), bool(bool(_GLF_IDENTITY(bool(bvec2(false, true)), (bool(bvec2(false, true))) || false))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(bool(bool(false)), (bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))) || false)), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) || (false)), (_GLF_IDENTITY(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) || (false))) || false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, _GLF_IDENTITY(((false) && true) && true, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(((false) && true), ! (! (((false) && true)))) && true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec2(((false) && true) && _GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true)))))), (_GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))) || false)), false, true, true)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, true && (false)))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-8.2), _GLF_FUZZED(7.8)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-3.2), _GLF_FUZZED(-5837.7319)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))).x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-8.2), _GLF_FUZZED(7.8)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-3.2), _GLF_FUZZED(-5837.7319)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))).x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-8.2), _GLF_FUZZED(7.8)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-3.2), _GLF_FUZZED(-5837.7319)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))).x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-8.2), _GLF_FUZZED(7.8)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-3.2), _GLF_FUZZED(-5837.7319)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))).x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-8.2), _GLF_FUZZED(7.8)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-3.2), _GLF_FUZZED(-5837.7319)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))).x > injectionSwitch.y))))), false || (bool(bool(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-8.2), _GLF_FUZZED(7.8)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-3.2), _GLF_FUZZED(-5837.7319)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))).x > injectionSwitch.y)))))))))), true && (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(42.64) : _GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, sin(0.0), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)) : _GLF_FUZZED(1173.9373))))), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec3(bvec4(bvec3(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((3.0 + -5.5))), vec2(_GLF_FUZZED(float(95074u)), (injectionSwitch)[1]), bvec2(false, true))).x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((3.0 + -5.5))), vec2(_GLF_FUZZED(float(95074u)), (injectionSwitch)[1]), bvec2(false, true))).x > injectionSwitch.y)))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)))), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), true))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) + 0.0), injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) + 0.0), injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) + 0.0), injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) && true), false || (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), float(mat3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 0.0, 0.0, determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, length(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0)))), min((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), float(mat3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 0.0, 0.0, determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, length(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), float(mat3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 0.0, 0.0, determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, length(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0)))), max((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), float(mat3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 0.0, 0.0, determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, length(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0)))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), float(mat3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 0.0, 0.0, determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, length(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0)))))))) + 0.0), injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))) && true)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), true && ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), true && (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))))))))) || false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0))) + vec2(0.0, 0.0)).y, (injectionSwitch.y) / 1.0))) * (injectionSwitch)).y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(4.1) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0))) + vec2(0.0, 0.0)).y, (injectionSwitch.y) / 1.0))) * (injectionSwitch)).y, clamp(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0))) + vec2(0.0, 0.0)).y, (injectionSwitch.y) / 1.0))) * (injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0))) + vec2(0.0, 0.0)).y, (injectionSwitch.y) / 1.0))) * (injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0))) + vec2(0.0, 0.0)).y, (injectionSwitch.y) / 1.0))) * (injectionSwitch)).y))))))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y), (bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))) || false)))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], 1.0 * ((injectionSwitch)[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(vec3(475.122, -247.131, -500.030).x), _GLF_FUZZED(44.63)), bvec2(false, false))).y))))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, mix(float(_GLF_FUZZED(float(true))), float(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), bool(true)))))))), _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), false, false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   barrier();
  }
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, (workgroup_base) | uint(_GLF_ZERO(0.0, injectionSwitch.x))) + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)), subgroup_local_id)))), subgroup_local_id)))) + _GLF_IDENTITY(1, (1) >> 0)) % subgroup_size);
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))), false || (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(389.072), _GLF_FUZZED(vec3(-135.323, 154.519, 5700.9078).s)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))) && true))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), true, false)), bool(bvec3(bool(bvec3(_GLF_DEAD(false), true, false)), true, false)))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 _GLF_IDENTITY(buf[virtual_gid] = 1, _GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid] = _GLF_IDENTITY(1, (_GLF_IDENTITY(0, min(0, 0)) & -53169) | (_GLF_IDENTITY(1, (1) - _GLF_IDENTITY(0, 0 | (0))))), (_GLF_IDENTITY(true, false || _GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4((false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec2(true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, cos(0.0), log(1.0), log(1.0), 0.0, sin(0.0), 0.0, 0.0, abs(tan(0.0)), 1.0, 1.0, 0.0))) > injectionSwitch.y))))) || false)) && (bool(bvec3(true, _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false))), true))), ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || false)))))))))), _GLF_IDENTITY(bool(bvec4(true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(_GLF_IDENTITY(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false))))) || false)) && (bool(bvec3(true, true, _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, false, false, false))), _GLF_IDENTITY(true, true && (true))))), ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || false)))))))))), true, false, false)), (bool(bvec4(true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(true, true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(_GLF_IDENTITY(bvec2(true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)))))), bvec2(bvec2(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) || false)) && (bool(bvec3(true, true, _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, (false) || false), false))), true))), ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || false)))))))))), true, false, false))) && true))))), false || ((_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, _GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))) && true))), true && _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec3(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec2(true, _GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)) - sin(0.0)) > injectionSwitch.y))))) || false)) && (bool(bvec3(true, true, _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y, _GLF_IDENTITY(! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || false)), true && (! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || false)))))))))))), ((_GLF_IDENTITY(bool(bvec3(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))), (bool(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)) && (bool(bvec3(true, true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || false)), true && (! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-70.69), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(7.0)), _GLF_IDENTITY(bvec2(true, false), bvec2(bvec3(bvec2(true, false), true))))).x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY(false, bool(bool(false)))))))))))))))) || false))))))) ? buf[virtual_gid] = 1 : _GLF_FUZZED(workgroup_base)))) - ((0u << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(3u, (_GLF_IDENTITY(_GLF_IDENTITY(3u, min(3u, _GLF_IDENTITY(3u, _GLF_IDENTITY((3u), uint(uvec3(_GLF_IDENTITY((3u), max((3u), (3u))), 0u, 0u))) / 1u))), (_GLF_IDENTITY(_GLF_IDENTITY(3u, min(3u, 3u)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY(3u, _GLF_IDENTITY(min(3u, 3u), max(min(3u, 3u), min(3u, 3u)))), _GLF_IDENTITY((_GLF_IDENTITY(3u, min(3u, 3u))), max((_GLF_IDENTITY(3u, min(3u, 3u))), _GLF_IDENTITY((_GLF_IDENTITY(3u, _GLF_IDENTITY(min(3u, 3u), (min(3u, 3u)) | 0u))), _GLF_IDENTITY(((_GLF_IDENTITY(3u, min(3u, 3u)))), (_GLF_IDENTITY(((_GLF_IDENTITY(3u, min(3u, 3u)))), _GLF_IDENTITY(0u | (((_GLF_IDENTITY(3u, min(3u, 3u))))), (_GLF_IDENTITY(0u | (((_GLF_IDENTITY(3u, min(3u, 3u))))), (0u | (((_GLF_IDENTITY(3u, min(3u, 3u)))))) | (0u | (((_GLF_IDENTITY(3u, min(3u, 3u)))))))) << (1u ^ 1u)))) | 0u) | 0u))) << 0u)), max((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY(3u, _GLF_IDENTITY(_GLF_IDENTITY(min(3u, 3u), max(min(3u, 3u), min(3u, 3u))), max(_GLF_IDENTITY(_GLF_IDENTITY(min(3u, 3u), max(min(3u, 3u), min(3u, 3u))), clamp(_GLF_IDENTITY(min(3u, 3u), max(min(3u, 3u), min(3u, 3u))), _GLF_IDENTITY(min(3u, 3u), max(min(3u, 3u), min(3u, 3u))), _GLF_IDENTITY(min(3u, 3u), max(min(3u, 3u), min(3u, 3u))))), _GLF_IDENTITY(min(3u, 3u), max(min(3u, 3u), min(3u, 3u)))))), _GLF_IDENTITY((_GLF_IDENTITY(3u, min(3u, 3u))), max((_GLF_IDENTITY(_GLF_IDENTITY(3u, min(3u, 3u)), min(_GLF_IDENTITY(_GLF_IDENTITY(3u, min(3u, 3u)), (_GLF_IDENTITY(3u, min(3u, 3u))) ^ 0u), _GLF_IDENTITY(_GLF_IDENTITY(3u, min(3u, 3u)), (_GLF_IDENTITY(3u, min(3u, 3u))) << 0u)))), _GLF_IDENTITY((_GLF_IDENTITY(3u, min(3u, _GLF_IDENTITY(3u, (3u) - 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(3u, min(3u, 3u)))) | 0u, (((_GLF_IDENTITY(_GLF_IDENTITY(3u, clamp(3u, 3u, 3u)), min(3u, 3u)))) | 0u) >> 0u), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (_GLF_IDENTITY((_GLF_IDENTITY(3u, min(3u, 3u))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(3u, min(3u, 3u)), (_GLF_IDENTITY(3u, min(3u, 3u))) ^ 0u), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(3u, min(3u, 3u)), (_GLF_IDENTITY(3u, min(3u, 3u))) ^ 0u))))) - 0u)) | 0u : _GLF_FUZZED(next_virtual_gid)))))) << 0u)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY(3u, _GLF_IDENTITY(min(3u, 3u), max(min(3u, _GLF_IDENTITY(3u, 0u + (_GLF_IDENTITY(3u, clamp(3u, 3u, 3u))))), min(3u, _GLF_IDENTITY(3u, clamp(3u, 3u, 3u)))))), _GLF_IDENTITY((_GLF_IDENTITY(3u, min(3u, 3u))), max((_GLF_IDENTITY(3u, min(3u, 3u))), _GLF_IDENTITY((_GLF_IDENTITY(3u, min(3u, 3u))), ((_GLF_IDENTITY(3u, min(3u, 3u)))) | 0u))) << 0u)))))) ^ 0u)) >> _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec4(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_id) : 0u, (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).y), bool(bool((injectionSwitch.x < injectionSwitch.y))))), (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bool((injectionSwitch.x < injectionSwitch.y)))))) || false)))) ? false ? _GLF_FUZZED(workgroup_id) : 0u : _GLF_FUZZED(workgroup_base))))), 0u)), 0u + (uint(uvec4(0u, 0u, 0u, 0u))))))))), uint(3u)), min(_GLF_IDENTITY(uint(_GLF_IDENTITY(3u, (_GLF_IDENTITY(_GLF_IDENTITY(3u, min(3u, _GLF_IDENTITY(3u, _GLF_IDENTITY((3u), uint(uvec3(_GLF_IDENTITY((3u), max((3u), (3u))), 0u, 0u))) / 1u))), (_GLF_IDENTITY(_GLF_IDENTITY(3u, min(3u, 3u)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY(3u, _GLF_IDENTITY(min(3u, 3u), max(min(3u, 3u), min(3u, 3u)))), _GLF_IDENTITY((_GLF_IDENTITY(3u, min(3u, 3u))), max((_GLF_IDENTITY(3u, min(3u, 3u))), _GLF_IDENTITY((_GLF_IDENTITY(3u, _GLF_IDENTITY(min(3u, 3u), (min(3u, 3u)) | 0u))), _GLF_IDENTITY(((_GLF_IDENTITY(3u, min(3u, 3u)))), (_GLF_IDENTITY(((_GLF_IDENTITY(3u, min(3u, 3u)))), _GLF_IDENTITY(0u | (((_GLF_IDENTITY(3u, min(3u, 3u))))), (_GLF_IDENTITY(0u | (((_GLF_IDENTITY(3u, min(3u, 3u))))), (0u | (((_GLF_IDENTITY(3u, min(3u, 3u)))))) | (0u | (((_GLF_IDENTITY(3u, min(3u, 3u)))))))) << (1u ^ 1u)))) | 0u) | 0u))) << 0u)), max((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY(3u, _GLF_IDENTITY(_GLF_IDENTITY(min(3u, 3u), max(min(3u, 3u), min(3u, 3u))), max(_GLF_IDENTITY(_GLF_IDENTITY(min(3u, 3u), max(min(3u, 3u), min(3u, 3u))), clamp(_GLF_IDENTITY(min(3u, 3u), max(min(3u, 3u), min(3u, 3u))), _GLF_IDENTITY(min(3u, 3u), max(min(3u, 3u), min(3u, 3u))), _GLF_IDENTITY(min(3u, 3u), max(min(3u, 3u), min(3u, 3u))))), _GLF_IDENTITY(min(3u, 3u), max(min(3u, 3u), min(3u, 3u)))))), _GLF_IDENTITY((_GLF_IDENTITY(3u, min(3u, 3u))), max((_GLF_IDENTITY(_GLF_IDENTITY(3u, min(3u, 3u)), min(_GLF_IDENTITY(_GLF_IDENTITY(3u, min(3u, 3u)), (_GLF_IDENTITY(3u, min(3u, 3u))) ^ 0u), _GLF_IDENTITY(_GLF_IDENTITY(3u, min(3u, 3u)), (_GLF_IDENTITY(3u, min(3u, 3u))) << 0u)))), _GLF_IDENTITY((_GLF_IDENTITY(3u, min(3u, _GLF_IDENTITY(3u, (3u) - 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(3u, min(3u, 3u)))) | 0u, (((_GLF_IDENTITY(_GLF_IDENTITY(3u, clamp(3u, 3u, 3u)), min(3u, 3u)))) | 0u) >> 0u), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (_GLF_IDENTITY((_GLF_IDENTITY(3u, min(3u, 3u))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(3u, min(3u, 3u)), (_GLF_IDENTITY(3u, min(3u, 3u))) ^ 0u), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(3u, min(3u, 3u)), (_GLF_IDENTITY(3u, min(3u, 3u))) ^ 0u))))) - 0u)) | 0u : _GLF_FUZZED(next_virtual_gid)))))) << 0u)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY(3u, _GLF_IDENTITY(min(3u, 3u), max(min(3u, _GLF_IDENTITY(3u, 0u + (_GLF_IDENTITY(3u, clamp(3u, 3u, 3u))))), min(3u, _GLF_IDENTITY(3u, clamp(3u, 3u, 3u)))))), _GLF_IDENTITY((_GLF_IDENTITY(3u, min(3u, 3u))), max((_GLF_IDENTITY(3u, min(3u, 3u))), _GLF_IDENTITY((_GLF_IDENTITY(3u, min(3u, 3u))), ((_GLF_IDENTITY(3u, min(3u, 3u)))) | 0u))) << 0u)))))) ^ 0u)) >> _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec4(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_id) : 0u, (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).y), bool(bool((injectionSwitch.x < injectionSwitch.y))))), (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bool((injectionSwitch.x < injectionSwitch.y)))))) || false)))) ? false ? _GLF_FUZZED(workgroup_id) : 0u : _GLF_FUZZED(workgroup_base))))), 0u)), 0u + (uint(uvec4(0u, 0u, 0u, 0u))))))))), uint(3u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(3u, (_GLF_IDENTITY(_GLF_IDENTITY(3u, min(3u, _GLF_IDENTITY(3u, _GLF_IDENTITY((3u), uint(uvec3(_GLF_IDENTITY((3u), max((3u), (3u))), 0u, 0u))) / 1u))), (_GLF_IDENTITY(_GLF_IDENTITY(3u, min(3u, 3u)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY(3u, _GLF_IDENTITY(min(3u, 3u), max(min(3u, 3u), min(3u, 3u)))), _GLF_IDENTITY((_GLF_IDENTITY(3u, min(3u, 3u))), max((_GLF_IDENTITY(3u, min(3u, 3u))), _GLF_IDENTITY((_GLF_IDENTITY(3u, _GLF_IDENTITY(min(3u, 3u), (min(3u, 3u)) | 0u))), _GLF_IDENTITY(((_GLF_IDENTITY(3u, min(3u, 3u)))), (_GLF_IDENTITY(((_GLF_IDENTITY(3u, min(3u, 3u)))), _GLF_IDENTITY(0u | (((_GLF_IDENTITY(3u, min(3u, 3u))))), (_GLF_IDENTITY(0u | (((_GLF_IDENTITY(3u, min(3u, 3u))))), (0u | (((_GLF_IDENTITY(3u, min(3u, 3u)))))) | (0u | (((_GLF_IDENTITY(3u, min(3u, 3u)))))))) << (1u ^ 1u)))) | 0u) | 0u))) << 0u)), max((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY(3u, _GLF_IDENTITY(_GLF_IDENTITY(min(3u, 3u), max(min(3u, 3u), min(3u, 3u))), max(_GLF_IDENTITY(_GLF_IDENTITY(min(3u, 3u), max(min(3u, 3u), min(3u, 3u))), clamp(_GLF_IDENTITY(min(3u, 3u), max(min(3u, 3u), min(3u, 3u))), _GLF_IDENTITY(min(3u, 3u), max(min(3u, 3u), min(3u, 3u))), _GLF_IDENTITY(min(3u, 3u), max(min(3u, 3u), min(3u, 3u))))), _GLF_IDENTITY(min(3u, 3u), max(min(3u, 3u), min(3u, 3u)))))), _GLF_IDENTITY((_GLF_IDENTITY(3u, min(3u, 3u))), max((_GLF_IDENTITY(_GLF_IDENTITY(3u, min(3u, 3u)), min(_GLF_IDENTITY(_GLF_IDENTITY(3u, min(3u, 3u)), (_GLF_IDENTITY(3u, min(3u, 3u))) ^ 0u), _GLF_IDENTITY(_GLF_IDENTITY(3u, min(3u, 3u)), (_GLF_IDENTITY(3u, min(3u, 3u))) << 0u)))), _GLF_IDENTITY((_GLF_IDENTITY(3u, min(3u, _GLF_IDENTITY(3u, (3u) - 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(3u, min(3u, 3u)))) | 0u, (((_GLF_IDENTITY(_GLF_IDENTITY(3u, clamp(3u, 3u, 3u)), min(3u, 3u)))) | 0u) >> 0u), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (_GLF_IDENTITY((_GLF_IDENTITY(3u, min(3u, 3u))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(3u, min(3u, 3u)), (_GLF_IDENTITY(3u, min(3u, 3u))) ^ 0u), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(3u, min(3u, 3u)), (_GLF_IDENTITY(3u, min(3u, 3u))) ^ 0u))))) - 0u)) | 0u : _GLF_FUZZED(next_virtual_gid)))))) << 0u)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY(3u, _GLF_IDENTITY(min(3u, 3u), max(min(3u, _GLF_IDENTITY(3u, 0u + (_GLF_IDENTITY(3u, clamp(3u, 3u, 3u))))), min(3u, _GLF_IDENTITY(3u, clamp(3u, 3u, 3u)))))), _GLF_IDENTITY((_GLF_IDENTITY(3u, min(3u, 3u))), max((_GLF_IDENTITY(3u, min(3u, 3u))), _GLF_IDENTITY((_GLF_IDENTITY(3u, min(3u, 3u))), ((_GLF_IDENTITY(3u, min(3u, 3u)))) | 0u))) << 0u)))))) ^ 0u)) >> _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec4(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_id) : 0u, (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).y), bool(bool((injectionSwitch.x < injectionSwitch.y))))), (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bool((injectionSwitch.x < injectionSwitch.y)))))) || false)))) ? false ? _GLF_FUZZED(workgroup_id) : 0u : _GLF_FUZZED(workgroup_base))))), 0u)), 0u + (uint(uvec4(0u, 0u, 0u, 0u))))))))), uint(3u)), max(_GLF_IDENTITY(uint(_GLF_IDENTITY(3u, (_GLF_IDENTITY(_GLF_IDENTITY(3u, min(3u, _GLF_IDENTITY(3u, _GLF_IDENTITY((3u), uint(uvec3(_GLF_IDENTITY((3u), max((3u), (3u))), 0u, 0u))) / 1u))), (_GLF_IDENTITY(_GLF_IDENTITY(3u, min(3u, 3u)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY(3u, _GLF_IDENTITY(min(3u, 3u), max(min(3u, 3u), min(3u, 3u)))), _GLF_IDENTITY((_GLF_IDENTITY(3u, min(3u, 3u))), max((_GLF_IDENTITY(3u, min(3u, 3u))), _GLF_IDENTITY((_GLF_IDENTITY(3u, _GLF_IDENTITY(min(3u, 3u), (min(3u, 3u)) | 0u))), _GLF_IDENTITY(((_GLF_IDENTITY(3u, min(3u, 3u)))), (_GLF_IDENTITY(((_GLF_IDENTITY(3u, min(3u, 3u)))), _GLF_IDENTITY(0u | (((_GLF_IDENTITY(3u, min(3u, 3u))))), (_GLF_IDENTITY(0u | (((_GLF_IDENTITY(3u, min(3u, 3u))))), (0u | (((_GLF_IDENTITY(3u, min(3u, 3u)))))) | (0u | (((_GLF_IDENTITY(3u, min(3u, 3u)))))))) << (1u ^ 1u)))) | 0u) | 0u))) << 0u)), max((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY(3u, _GLF_IDENTITY(_GLF_IDENTITY(min(3u, 3u), max(min(3u, 3u), min(3u, 3u))), max(_GLF_IDENTITY(_GLF_IDENTITY(min(3u, 3u), max(min(3u, 3u), min(3u, 3u))), clamp(_GLF_IDENTITY(min(3u, 3u), max(min(3u, 3u), min(3u, 3u))), _GLF_IDENTITY(min(3u, 3u), max(min(3u, 3u), min(3u, 3u))), _GLF_IDENTITY(min(3u, 3u), max(min(3u, 3u), min(3u, 3u))))), _GLF_IDENTITY(min(3u, 3u), max(min(3u, 3u), min(3u, 3u)))))), _GLF_IDENTITY((_GLF_IDENTITY(3u, min(3u, 3u))), max((_GLF_IDENTITY(_GLF_IDENTITY(3u, min(3u, 3u)), min(_GLF_IDENTITY(_GLF_IDENTITY(3u, min(3u, 3u)), (_GLF_IDENTITY(3u, min(3u, 3u))) ^ 0u), _GLF_IDENTITY(_GLF_IDENTITY(3u, min(3u, 3u)), (_GLF_IDENTITY(3u, min(3u, 3u))) << 0u)))), _GLF_IDENTITY((_GLF_IDENTITY(3u, min(3u, _GLF_IDENTITY(3u, (3u) - 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(3u, min(3u, 3u)))) | 0u, (((_GLF_IDENTITY(_GLF_IDENTITY(3u, clamp(3u, 3u, 3u)), min(3u, 3u)))) | 0u) >> 0u), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (_GLF_IDENTITY((_GLF_IDENTITY(3u, min(3u, 3u))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(3u, min(3u, 3u)), (_GLF_IDENTITY(3u, min(3u, 3u))) ^ 0u), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(3u, min(3u, 3u)), (_GLF_IDENTITY(3u, min(3u, 3u))) ^ 0u))))) - 0u)) | 0u : _GLF_FUZZED(next_virtual_gid)))))) << 0u)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY(3u, _GLF_IDENTITY(min(3u, 3u), max(min(3u, _GLF_IDENTITY(3u, 0u + (_GLF_IDENTITY(3u, clamp(3u, 3u, 3u))))), min(3u, _GLF_IDENTITY(3u, clamp(3u, 3u, 3u)))))), _GLF_IDENTITY((_GLF_IDENTITY(3u, min(3u, 3u))), max((_GLF_IDENTITY(3u, min(3u, 3u))), _GLF_IDENTITY((_GLF_IDENTITY(3u, min(3u, 3u))), ((_GLF_IDENTITY(3u, min(3u, 3u)))) | 0u))) << 0u)))))) ^ 0u)) >> _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec4(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_id) : 0u, (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).y), bool(bool((injectionSwitch.x < injectionSwitch.y))))), (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bool((injectionSwitch.x < injectionSwitch.y)))))) || false)))) ? false ? _GLF_FUZZED(workgroup_id) : 0u : _GLF_FUZZED(workgroup_base))))), 0u)), 0u + (uint(uvec4(0u, 0u, 0u, 0u))))))))), uint(3u)), _GLF_IDENTITY(uint(_GLF_IDENTITY(3u, (_GLF_IDENTITY(_GLF_IDENTITY(3u, min(3u, _GLF_IDENTITY(3u, _GLF_IDENTITY((3u), uint(uvec3(_GLF_IDENTITY((3u), max((3u), (3u))), 0u, 0u))) / 1u))), (_GLF_IDENTITY(_GLF_IDENTITY(3u, min(3u, 3u)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY(3u, _GLF_IDENTITY(min(3u, 3u), max(min(3u, 3u), min(3u, 3u)))), _GLF_IDENTITY((_GLF_IDENTITY(3u, min(3u, 3u))), max((_GLF_IDENTITY(3u, min(3u, 3u))), _GLF_IDENTITY((_GLF_IDENTITY(3u, _GLF_IDENTITY(min(3u, 3u), (min(3u, 3u)) | 0u))), _GLF_IDENTITY(((_GLF_IDENTITY(3u, min(3u, 3u)))), (_GLF_IDENTITY(((_GLF_IDENTITY(3u, min(3u, 3u)))), _GLF_IDENTITY(0u | (((_GLF_IDENTITY(3u, min(3u, 3u))))), (_GLF_IDENTITY(0u | (((_GLF_IDENTITY(3u, min(3u, 3u))))), (0u | (((_GLF_IDENTITY(3u, min(3u, 3u)))))) | (0u | (((_GLF_IDENTITY(3u, min(3u, 3u)))))))) << (1u ^ 1u)))) | 0u) | 0u))) << 0u)), max((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY(3u, _GLF_IDENTITY(_GLF_IDENTITY(min(3u, 3u), max(min(3u, 3u), min(3u, 3u))), max(_GLF_IDENTITY(_GLF_IDENTITY(min(3u, 3u), max(min(3u, 3u), min(3u, 3u))), clamp(_GLF_IDENTITY(min(3u, 3u), max(min(3u, 3u), min(3u, 3u))), _GLF_IDENTITY(min(3u, 3u), max(min(3u, 3u), min(3u, 3u))), _GLF_IDENTITY(min(3u, 3u), max(min(3u, 3u), min(3u, 3u))))), _GLF_IDENTITY(min(3u, 3u), max(min(3u, 3u), min(3u, 3u)))))), _GLF_IDENTITY((_GLF_IDENTITY(3u, min(3u, 3u))), max((_GLF_IDENTITY(_GLF_IDENTITY(3u, min(3u, 3u)), min(_GLF_IDENTITY(_GLF_IDENTITY(3u, min(3u, 3u)), (_GLF_IDENTITY(3u, min(3u, 3u))) ^ 0u), _GLF_IDENTITY(_GLF_IDENTITY(3u, min(3u, 3u)), (_GLF_IDENTITY(3u, min(3u, 3u))) << 0u)))), _GLF_IDENTITY((_GLF_IDENTITY(3u, min(3u, _GLF_IDENTITY(3u, (3u) - 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(3u, min(3u, 3u)))) | 0u, (((_GLF_IDENTITY(_GLF_IDENTITY(3u, clamp(3u, 3u, 3u)), min(3u, 3u)))) | 0u) >> 0u), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (_GLF_IDENTITY((_GLF_IDENTITY(3u, min(3u, 3u))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(3u, min(3u, 3u)), (_GLF_IDENTITY(3u, min(3u, 3u))) ^ 0u), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(3u, min(3u, 3u)), (_GLF_IDENTITY(3u, min(3u, 3u))) ^ 0u))))) - 0u)) | 0u : _GLF_FUZZED(next_virtual_gid)))))) << 0u)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY(3u, _GLF_IDENTITY(min(3u, 3u), max(min(3u, _GLF_IDENTITY(3u, 0u + (_GLF_IDENTITY(3u, clamp(3u, 3u, 3u))))), min(3u, _GLF_IDENTITY(3u, clamp(3u, 3u, 3u)))))), _GLF_IDENTITY((_GLF_IDENTITY(3u, min(3u, 3u))), max((_GLF_IDENTITY(3u, min(3u, 3u))), _GLF_IDENTITY((_GLF_IDENTITY(3u, min(3u, 3u))), ((_GLF_IDENTITY(3u, min(3u, 3u)))) | 0u))) << 0u)))))) ^ 0u)) >> _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec4(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_id) : 0u, (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).y), bool(bool((injectionSwitch.x < injectionSwitch.y))))), (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bool((injectionSwitch.x < injectionSwitch.y)))))) || false)))) ? false ? _GLF_FUZZED(workgroup_id) : 0u : _GLF_FUZZED(workgroup_base))))), 0u)), 0u + (uint(uvec4(0u, 0u, 0u, 0u))))))))), uint(3u)))))), min(_GLF_IDENTITY(uint(_GLF_IDENTITY(3u, (_GLF_IDENTITY(_GLF_IDENTITY(3u, _GLF_IDENTITY(min(3u, 3u), (min(3u, _GLF_IDENTITY(3u, uint(uvec3(3u, 0u, 0u))))) | (0u << _GLF_IDENTITY(uint(5u), uint(5u))))), (_GLF_IDENTITY(_GLF_IDENTITY(3u, min(3u, 3u)), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0 ^ 0) | (0)), _GLF_IDENTITY(0, 0 ^ (0))))], _GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(max((injectionSwitch), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0))), (false ? _GLF_FUZZED(vec2(1.5, -7867.2435)) : max((injectionSwitch), (injectionSwitch)))))[1]), vec2(_GLF_FUZZED(-943.065), _GLF_FUZZED(-7.2)), bvec2(false, _GLF_IDENTITY(false, (false) || false)))).x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, (false ? _GLF_FUZZED(70000) : _GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) >> 0), 0))))], (injectionSwitch)[1]), vec2(_GLF_IDENTITY(_GLF_FUZZED(-943.065), clamp(_GLF_FUZZED(-943.065), _GLF_FUZZED(-943.065), _GLF_FUZZED(-943.065))), _GLF_FUZZED(-7.2)), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(false, (false) || false)), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(bvec2(false, _GLF_IDENTITY(false, (false) || false)))), _GLF_IDENTITY(bvec2(bvec3(bvec2(bvec2(bvec2(false, _GLF_IDENTITY(false, (false) || false)))), true)), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec3(bvec2(bvec2(bvec2(false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false)))), true)))), bvec2(bvec2(bvec2(bvec2(bvec2(bvec3(bvec2(bvec2(bvec2(false, _GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (false) || false)))), true))))))))), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(bvec2(false, _GLF_IDENTITY(false, (false) || false)))), bvec2(bvec4(bvec2(bvec2(bvec2(false, _GLF_IDENTITY(false, (false) || false)))), false, true))), true, false)))), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(false, (false) || false)), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(bvec2(false, _GLF_IDENTITY(false, (false) || false)))), _GLF_IDENTITY(bvec2(bvec3(bvec2(bvec2(bvec2(false, _GLF_IDENTITY(false, (false) || false)))), true)), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec3(bvec2(bvec2(bvec2(false, _GLF_IDENTITY(false, (false) || false)))), true)))), bvec2(bvec2(bvec2(bvec2(bvec2(bvec3(bvec2(bvec2(bvec2(false, _GLF_IDENTITY(false, (false) || false)))), true))))))))), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(bvec2(false, _GLF_IDENTITY(false, (false) || false)))), bvec2(bvec4(bvec2(bvec2(bvec2(false, _GLF_IDENTITY(false, (false) || false)))), false, true))), true, false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))).x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)))), true))) ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY(3u, min(3u, _GLF_IDENTITY(3u, 0u + (3u)))), (_GLF_IDENTITY(3u, min(3u, 3u))) << 0u)))) ^ 0u)) >> 0u)), uint(3u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(3u, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(3u, (false ? _GLF_FUZZED(subgroup_id) : 3u)), min(3u, 3u)), (_GLF_IDENTITY(_GLF_IDENTITY(3u, min(3u, _GLF_IDENTITY(3u, _GLF_IDENTITY(min(3u, 3u), _GLF_IDENTITY(uint(uvec4(min(3u, 3u), 0u, 1u, 0u)), 0u | (_GLF_IDENTITY(uint(uvec4(min(3u, 3u), 0u, 1u, 0u)), clamp(uint(uvec4(min(3u, 3u), 0u, 1u, 0u)), uint(_GLF_IDENTITY(uvec4(min(_GLF_IDENTITY(3u, (true ? 3u : _GLF_FUZZED(num_workgroup))), 3u), 0u, 1u, 0u), (_GLF_IDENTITY(uvec4(min(_GLF_IDENTITY(3u, (true ? 3u : _GLF_FUZZED(num_workgroup))), 3u), 0u, 1u, 0u), (uvec4(min(_GLF_IDENTITY(3u, (true ? 3u : _GLF_FUZZED(num_workgroup))), 3u), 0u, 1u, 0u)) / uvec4(1u, 1u, 1u, 1u))) - uvec4(0u, 0u, 0u, 0u))), uint(uvec4(min(3u, 3u), 0u, 1u, 0u)))))))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(3u, min(3u, 3u)), (_GLF_IDENTITY(3u, min(3u, 3u))) << 0u), (_GLF_IDENTITY(_GLF_IDENTITY(3u, min(3u, 3u)), _GLF_IDENTITY((_GLF_IDENTITY(3u, min(3u, 3u))), ((_GLF_IDENTITY(3u, min(3u, 3u)))) | ((_GLF_IDENTITY(3u, min(3u, 3u))))) << 0u)) - 0u)))) ^ 0u)) >> 0u), (_GLF_IDENTITY(3u, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(3u, (false ? _GLF_FUZZED(subgroup_id) : 3u)), min(3u, 3u)), (_GLF_IDENTITY(_GLF_IDENTITY(3u, min(3u, _GLF_IDENTITY(3u, _GLF_IDENTITY(min(3u, 3u), _GLF_IDENTITY(uint(uvec4(min(3u, 3u), 0u, 1u, 0u)), 0u | (_GLF_IDENTITY(uint(uvec4(min(3u, 3u), 0u, 1u, 0u)), clamp(uint(uvec4(min(3u, 3u), 0u, 1u, 0u)), uint(_GLF_IDENTITY(uvec4(min(_GLF_IDENTITY(3u, (true ? 3u : _GLF_FUZZED(num_workgroup))), 3u), 0u, 1u, 0u), (_GLF_IDENTITY(uvec4(min(_GLF_IDENTITY(3u, (true ? 3u : _GLF_FUZZED(num_workgroup))), 3u), 0u, 1u, 0u), (uvec4(min(_GLF_IDENTITY(3u, (true ? 3u : _GLF_FUZZED(num_workgroup))), 3u), 0u, 1u, 0u)) / uvec4(1u, 1u, 1u, 1u))) - uvec4(0u, 0u, 0u, 0u))), uint(uvec4(min(3u, 3u), 0u, 1u, 0u)))))))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(3u, min(3u, 3u)), (_GLF_IDENTITY(3u, min(3u, 3u))) << 0u), (_GLF_IDENTITY(_GLF_IDENTITY(3u, min(3u, 3u)), _GLF_IDENTITY((_GLF_IDENTITY(3u, min(3u, 3u))), ((_GLF_IDENTITY(3u, min(3u, 3u)))) | ((_GLF_IDENTITY(3u, min(3u, 3u))))) << 0u)) - 0u)))) ^ 0u)) >> 0u)) | (_GLF_IDENTITY(3u, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(3u, (false ? _GLF_FUZZED(subgroup_id) : 3u)), min(3u, 3u)), (_GLF_IDENTITY(_GLF_IDENTITY(3u, min(3u, _GLF_IDENTITY(3u, _GLF_IDENTITY(min(3u, 3u), _GLF_IDENTITY(uint(uvec4(min(3u, 3u), 0u, 1u, 0u)), 0u | (_GLF_IDENTITY(uint(uvec4(min(3u, 3u), 0u, 1u, 0u)), clamp(uint(uvec4(min(3u, 3u), 0u, 1u, 0u)), uint(_GLF_IDENTITY(uvec4(min(_GLF_IDENTITY(3u, (true ? 3u : _GLF_FUZZED(num_workgroup))), 3u), 0u, 1u, 0u), (_GLF_IDENTITY(uvec4(min(_GLF_IDENTITY(3u, (true ? 3u : _GLF_FUZZED(num_workgroup))), 3u), 0u, 1u, _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))), (uvec4(min(_GLF_IDENTITY(3u, (true ? 3u : _GLF_FUZZED(num_workgroup))), 3u), 0u, 1u, 0u)) / uvec4(1u, 1u, 1u, 1u))) - uvec4(0u, 0u, 0u, 0u))), uint(uvec4(min(3u, 3u), 0u, 1u, 0u)))))))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(3u, min(3u, 3u)), (_GLF_IDENTITY(3u, min(3u, 3u))) << 0u), (_GLF_IDENTITY(_GLF_IDENTITY(3u, min(3u, 3u)), _GLF_IDENTITY((_GLF_IDENTITY(3u, min(3u, 3u))), ((_GLF_IDENTITY(3u, min(3u, 3u)))) | ((_GLF_IDENTITY(3u, min(3u, 3u))))) << 0u)) - 0u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(3u, min(3u, 3u)), (_GLF_IDENTITY(3u, min(3u, 3u))) << 0u), (_GLF_IDENTITY(_GLF_IDENTITY(3u, min(3u, 3u)), _GLF_IDENTITY((_GLF_IDENTITY(3u, min(3u, 3u))), ((_GLF_IDENTITY(3u, min(3u, 3u)))) | ((_GLF_IDENTITY(3u, min(3u, 3u))))) << 0u)) - 0u)) | 0u)))) ^ 0u)) >> 0u)))), 0u | (_GLF_IDENTITY(uint(_GLF_IDENTITY(3u, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(3u, (false ? _GLF_FUZZED(subgroup_id) : 3u)), min(3u, 3u)), (_GLF_IDENTITY(_GLF_IDENTITY(3u, min(3u, _GLF_IDENTITY(3u, _GLF_IDENTITY(min(3u, 3u), _GLF_IDENTITY(uint(uvec4(min(3u, 3u), 0u, 1u, 0u)), 0u | _GLF_IDENTITY((_GLF_IDENTITY(uint(uvec4(min(3u, 3u), 0u, 1u, 0u)), clamp(uint(uvec4(min(3u, 3u), 0u, 1u, 0u)), uint(_GLF_IDENTITY(uvec4(min(_GLF_IDENTITY(3u, (true ? _GLF_IDENTITY(3u, 0u | (3u)) : _GLF_FUZZED(num_workgroup))), 3u), 0u, 1u, 0u), (_GLF_IDENTITY(uvec4(min(_GLF_IDENTITY(3u, (true ? 3u : _GLF_FUZZED(num_workgroup))), 3u), 0u, 1u, 0u), (uvec4(min(_GLF_IDENTITY(3u, (true ? 3u : _GLF_FUZZED(num_workgroup))), 3u), 0u, 1u, 0u)) / uvec4(1u, 1u, 1u, 1u))) - uvec4(0u, 0u, 0u, 0u))), uint(uvec4(min(3u, 3u), 0u, 1u, 0u))))), (_GLF_IDENTITY((_GLF_IDENTITY(uint(uvec4(min(3u, 3u), 0u, 1u, 0u)), clamp(uint(uvec4(min(3u, 3u), 0u, 1u, 0u)), uint(_GLF_IDENTITY(uvec4(min(_GLF_IDENTITY(3u, (true ? 3u : _GLF_FUZZED(num_workgroup))), 3u), 0u, 1u, 0u), (_GLF_IDENTITY(uvec4(min(_GLF_IDENTITY(3u, (true ? 3u : _GLF_FUZZED(num_workgroup))), 3u), 0u, 1u, 0u), (uvec4(min(_GLF_IDENTITY(3u, (true ? 3u : _GLF_FUZZED(num_workgroup))), 3u), 0u, 1u, 0u)) / uvec4(1u, 1u, 1u, 1u))) - uvec4(0u, 0u, 0u, 0u))), uint(uvec4(min(3u, 3u), 0u, 1u, 0u))))), ((_GLF_IDENTITY(uint(uvec4(min(3u, 3u), 0u, 1u, 0u)), clamp(uint(uvec4(min(_GLF_IDENTITY(3u, (3u) / 1u), 3u), 0u, _GLF_IDENTITY(1u, min(1u, 1u)), 0u)), uint(_GLF_IDENTITY(uvec4(min(_GLF_IDENTITY(3u, (_GLF_IDENTITY(true ? 3u : _GLF_FUZZED(num_workgroup), (true ? 3u : _GLF_FUZZED(num_workgroup)) - (0u >> _GLF_IDENTITY(uint(6u), uint(6u)))))), 3u), 0u, 1u, 0u), (_GLF_IDENTITY(_GLF_IDENTITY(uvec4(min(_GLF_IDENTITY(3u, (true ? 3u : _GLF_FUZZED(num_workgroup))), 3u), 0u, 1u, 0u), (uvec4(min(_GLF_IDENTITY(3u, (true ? 3u : _GLF_FUZZED(num_workgroup))), 3u), 0u, 1u, 0u)) / uvec4(1u, 1u, 1u, 1u)), uvec4(0u, 0u, 0u, 0u) ^ (_GLF_IDENTITY(uvec4(min(_GLF_IDENTITY(3u, (true ? 3u : _GLF_FUZZED(num_workgroup))), 3u), 0u, 1u, 0u), (uvec4(min(_GLF_IDENTITY(3u, (true ? 3u : _GLF_FUZZED(num_workgroup))), 3u), 0u, 1u, 0u)) / uvec4(1u, 1u, 1u, 1u))))) - uvec4(0u, 0u, 0u, 0u))), uint(uvec4(min(3u, 3u), 0u, 1u, 0u)))))) - 0u)) ^ 0u)))))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(3u, min(3u, 3u)), _GLF_IDENTITY((_GLF_IDENTITY(3u, min(3u, 3u))), 0u + ((_GLF_IDENTITY(3u, min(3u, 3u))))) << 0u), (_GLF_IDENTITY(_GLF_IDENTITY(3u, min(3u, 3u)), _GLF_IDENTITY((_GLF_IDENTITY(3u, min(3u, 3u))), ((_GLF_IDENTITY(3u, min(3u, 3u)))) | ((_GLF_IDENTITY(3u, min(3u, 3u))))) << 0u)) - 0u), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(3u, min(3u, 3u)), _GLF_IDENTITY((_GLF_IDENTITY(3u, min(3u, 3u))), 0u + ((_GLF_IDENTITY(3u, min(3u, 3u))))) << 0u), (_GLF_IDENTITY(_GLF_IDENTITY(3u, min(3u, 3u)), _GLF_IDENTITY((_GLF_IDENTITY(3u, min(3u, 3u))), ((_GLF_IDENTITY(3u, min(3u, 3u)))) | ((_GLF_IDENTITY(3u, min(3u, 3u))))) << 0u)) - 0u)) | 0u)))) ^ 0u)) >> 0u)), (uint(_GLF_IDENTITY(3u, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(3u, (false ? _GLF_FUZZED(subgroup_id) : 3u)), min(3u, 3u)), (_GLF_IDENTITY(_GLF_IDENTITY(3u, min(3u, _GLF_IDENTITY(3u, _GLF_IDENTITY(min(3u, 3u), _GLF_IDENTITY(uint(uvec4(min(3u, 3u), 0u, 1u, 0u)), _GLF_IDENTITY(0u, 0u | (0u)) | (_GLF_IDENTITY(uint(uvec4(min(3u, 3u), 0u, 1u, 0u)), clamp(uint(uvec4(min(3u, 3u), 0u, 1u, 0u)), uint(_GLF_IDENTITY(uvec4(min(_GLF_IDENTITY(3u, (true ? 3u : _GLF_FUZZED(num_workgroup))), 3u), 0u, 1u, 0u), (_GLF_IDENTITY(uvec4(min(_GLF_IDENTITY(3u, (true ? 3u : _GLF_FUZZED(num_workgroup))), 3u), 0u, 1u, 0u), (uvec4(min(_GLF_IDENTITY(3u, (true ? 3u : _GLF_FUZZED(num_workgroup))), 3u), 0u, _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, ~ (~ (1u))), 1u)), 0u)) / uvec4(1u, 1u, 1u, 1u))) - uvec4(0u, 0u, 0u, 0u))), uint(uvec4(min(3u, 3u), 0u, 1u, 0u)))))))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(3u, min(3u, 3u)), (_GLF_IDENTITY(3u, min(3u, 3u))) << 0u), (_GLF_IDENTITY(_GLF_IDENTITY(3u, min(3u, _GLF_IDENTITY(3u, (3u) ^ 0u))), _GLF_IDENTITY((_GLF_IDENTITY(3u, min(3u, 3u))), _GLF_IDENTITY(((_GLF_IDENTITY(3u, min(3u, 3u)))), min(((_GLF_IDENTITY(3u, min(3u, 3u)))), ((_GLF_IDENTITY(3u, min(3u, 3u)))))) | ((_GLF_IDENTITY(3u, min(3u, 3u))))) << 0u)) - 0u)))) ^ 0u)) >> 0u))) << 0u))), uint(3u))))) | 0u), (false ? _GLF_FUZZED(subgroup_size) : (_GLF_IDENTITY(buf[virtual_gid] = _GLF_IDENTITY(1, (_GLF_IDENTITY(0 & -53169, (0 & -53169) / 1)) | (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), (_GLF_IDENTITY(1, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (1), _GLF_IDENTITY((~ (1)), 1 * ((~ (1)))) / 1)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (_GLF_IDENTITY(~ (1), (~ (1)) / 1)) : _GLF_FUZZED(57778))))) - 0))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, _GLF_FALSE(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0))))), (true ? _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0))))) : _GLF_FUZZED(274.093)))), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, determinant(_GLF_IDENTITY(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3x2(1.0, sqrt(abs(0.0)), 1.0, 1.0, 0.0, 1.0), (_GLF_IDENTITY(mat3x2(1.0, sqrt(abs(0.0)), 1.0, 1.0, 0.0, 1.0), (true ? mat3x2(1.0, sqrt(abs(0.0)), 1.0, 1.0, 0.0, 1.0) : _GLF_FUZZED(mat3x2(7.1, -7.7, 95.97, 0.9, 5332.5691, -42.93))))) - mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), 0.0), (false ? _GLF_FUZZED(mat4(6.2, 287.128, -1894.1542, 6.7, -804.883, 6.2, -8.6, -3.7, -72.81, -371.243, -213.052, 73.89, 2.2, -689.359, -392.515, -4.6)) : _GLF_IDENTITY(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), 1.0, 0.0), (mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), 1.0, 0.0)) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))))))), ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0))))))) && true)) && true)))), true && (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, true && (true)), true, _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))), injectionSwitch))) / vec2(1.0, 1.0)), mix(vec2(_GLF_FUZZED((+ -2313.5288)), _GLF_FUZZED(7090.8133)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], (injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(true, true))).x > injectionSwitch.y)))), true && _GLF_IDENTITY((bool(bvec3(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(false || ((bool(bvec3(true, true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))))))), (false || ((bool(bvec3(true, true, _GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (true ? injectionSwitch[1] : _GLF_FUZZED(mix(-5.8, 3.7, -7704.6442)))))).x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) * mat2(1.0))) + tan(vec2(0.0, 0.0))), injectionSwitch)).y))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), bool(bvec3(_GLF_IDENTITY(true, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false) || (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, _GLF_FALSE(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 0.0)))))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec2(injectionSwitch.y, determinant(mat4(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((mat3x4(-285.009, -1.9, 2.5, -530.021, -72.22, -1.9, 7.4, 1.8, 496.231, 94.21, 3803.5649, 1.5) * vec3(-4.0, 4.4, -922.953)).z)), float(0.0), bool(true))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), 1.0, 0.0))), (vec2(injectionSwitch.y, determinant(mat4(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((mat3x4(-285.009, -1.9, 2.5, -530.021, -72.22, -1.9, 7.4, 1.8, 496.231, 94.21, 3803.5649, 1.5) * vec3(-4.0, 4.4, -922.953)).z)), float(0.0), bool(true))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), 1.0, 0.0)))) - vec2(0.0, 0.0)))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), 1.0, 0.0)))))) || false)), bool(bvec4((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec2(injectionSwitch.y, determinant(mat4(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((mat3x4(-285.009, -1.9, 2.5, -530.021, -72.22, -1.9, 7.4, 1.8, 496.231, 94.21, 3803.5649, 1.5) * vec3(-4.0, 4.4, -922.953)).z)), float(0.0), bool(true))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), 1.0, 0.0))), (vec2(injectionSwitch.y, determinant(mat4(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((mat3x4(-285.009, -1.9, 2.5, -530.021, -72.22, -1.9, 7.4, 1.8, 496.231, 94.21, 3803.5649, 1.5) * vec3(-4.0, 4.4, -922.953)).z)), float(0.0), bool(true))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), 1.0, 0.0)))) - vec2(0.0, 0.0)))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), 1.0, 0.0)))))) || false)), true, true, true))), ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) * 1.0), 0.0 + (_GLF_IDENTITY(1.0, (1.0) * 1.0))), 1.0)).x > _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0))))))) && true)) && true)))), true && (_GLF_IDENTITY(bool(bvec3(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && _GLF_IDENTITY((bool(bvec3(true, true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((+ 8.0))), vec2(_GLF_FUZZED(104.282), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))).y))))), _GLF_IDENTITY(false || ((bool(bvec3(true, true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))))))), (_GLF_IDENTITY(false || ((bool(bvec3(true, true, _GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (injectionSwitch.x > injectionSwitch.y)))))), ! (_GLF_IDENTITY(! (false || ((bool(bvec3(true, true, _GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (injectionSwitch.x > injectionSwitch.y))))))), ! (! (! _GLF_IDENTITY((false || ((bool(bvec3(true, true, _GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false))))), true)))))))))), ((false || ((bool(bvec3(true, true, _GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false))))), true))))))))))) && true))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), false, false))) ? buf[virtual_gid] = 1 : _GLF_FUZZED(_GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) | 0u, uint(uvec3((workgroup_base) | 0u, (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), (uint(8u)) << 0u))), 1u)))), _GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))))), (_GLF_IDENTITY(true, _GLF_IDENTITY(false || (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec2(bvec2(true, false)))))), _GLF_FALSE(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) * 1.0)) / 1.0), 1.0, 1.0, 0.0)))))), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec2(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true, bool(bvec4(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))) ? injectionSwitch.y : _GLF_FUZZED(1797.4249))), determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) / exp(0.0)), min(1.0, 1.0)), 1.0)), 1.0, 0.0)))), max(_GLF_IDENTITY(float(vec2(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true, bool(bvec4(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))) ? injectionSwitch.y : _GLF_FUZZED(1797.4249))), determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) / exp(0.0)), min(1.0, 1.0)), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) / exp(0.0)), min(1.0, 1.0)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) / exp(0.0)), min(1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) / exp(0.0)), min(1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) / exp(0.0)), min(1.0, 1.0)))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) / exp(0.0)), min(1.0, 1.0)))), 1.0)), 1.0, 0.0)))), (float(vec2(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true, bool(bvec4(true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), false, false))) ? injectionSwitch.y : _GLF_FUZZED(1797.4249))), determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) * 1.0), max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) / exp(0.0)), min(1.0, 1.0)), 1.0)), 1.0, 0.0))))) + 0.0), float(vec2(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true, bool(bvec4(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))) ? injectionSwitch.y : _GLF_FUZZED(1797.4249))), determinant(mat4(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)) + (_GLF_IDENTITY(0.0, float(float(0.0))))), 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - sin(0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) / exp(0.0)), min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) / exp(0.0)), (true ? _GLF_IDENTITY(1.0, (1.0) / exp(0.0)) : _GLF_FUZZED(-3.9))), _GLF_IDENTITY(1.0, (1.0) / exp(0.0)))), min(1.0, 1.0)), 1.0)), 1.0, 0.0)))))))), _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)).x > _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0))))))) && true, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0))))))) && true, true && (((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))).x > _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0))))))) && true)), bool(bvec4(((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0))))))) && true, false, false, false))), false)), bool(bool(bool(bvec2(_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, _GLF_IDENTITY(determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)), min(_GLF_IDENTITY(determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)), (determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0))) * 1.0), determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0))))))))) && true, bool(bvec4(((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0))))))) && true, false, false, false))), false)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, determinant(mat4(0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-27.99)), float(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(6038.4551)), bool(false)))), bool(true)))) * 1.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0))))))) && true, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0))))))) && true, bool(bvec4(((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x)) > _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0))))))) && true, false, false, false))), false)), bool(bool(bool(bvec2(_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, determinant(mat4(0.0, _GLF_IDENTITY(0.0, float(vec4(_GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0))))))) && true, bool(bvec4(((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0))))))) && true, false, false, false))), false))))))), false || (! (_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * vec2(1.0, 1.0), max((injectionSwitch) * vec2(1.0, 1.0), _GLF_IDENTITY((injectionSwitch) * vec2(1.0, 1.0), vec2(mat2x3((injectionSwitch) * vec2(1.0, 1.0), 1.0, 1.0, abs(0.0), 1.0)))))).x > _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0))))))) && true, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)))))), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)))))), true, false)), true && (bool(bvec3((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)))))), true, false)))))) && true, bool(bvec4(((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch.y, float(vec2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0))))))) && true, false, false, false))), false)), bool(bool(bool(bvec2(_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)).x > _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0))))))) && true, bool(bvec4(_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(789.231)), vec2(_GLF_FUZZED(-5.2), (injectionSwitch)[1]), bvec2(false, true))), _GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), vec2(_GLF_FUZZED(-8079.6346), _GLF_FUZZED(918.504)), bvec2(false, false))) * vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0))))))) && true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(789.231)), vec2(_GLF_FUZZED(-5.2), (injectionSwitch)[1]), bvec2(false, true))), _GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), vec2(_GLF_FUZZED(-8079.6346), _GLF_FUZZED(918.504)), bvec2(false, false))) * vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0))))))) && true, ! (! (((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(789.231)), vec2(_GLF_FUZZED(-5.2), (injectionSwitch)[1]), bvec2(false, true))), _GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), vec2(_GLF_FUZZED(-8079.6346), _GLF_FUZZED(918.504)), bvec2(false, false))) * vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0))))))) && true)))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(789.231)), vec2(_GLF_FUZZED(-5.2), (injectionSwitch)[1]), bvec2(false, true))), _GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), vec2(_GLF_FUZZED(-8079.6346), _GLF_FUZZED(918.504)), bvec2(false, false))) * vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0))))))) && true, ! (! (((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(789.231)), vec2(_GLF_FUZZED(-5.2), (injectionSwitch)[1]), bvec2(false, true))), _GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), vec2(_GLF_FUZZED(-8079.6346), _GLF_FUZZED(918.504)), bvec2(false, false))) * vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0))))))) && true))))), bool(bvec4(! (! (_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(789.231)), vec2(_GLF_FUZZED(-5.2), (injectionSwitch)[1]), bvec2(false, true))), _GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), vec2(_GLF_FUZZED(-8079.6346), _GLF_FUZZED(918.504)), bvec2(false, false))) * vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0))))))) && true, ! (! (((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(789.231)), vec2(_GLF_FUZZED(-5.2), (injectionSwitch)[1]), bvec2(false, true))), _GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), vec2(_GLF_FUZZED(-8079.6346), _GLF_FUZZED(918.504)), bvec2(false, false))) * vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0))))))) && true))))), false, false, true))))))), false, false, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))))), _GLF_IDENTITY(false, ! (! (false)))))))))))))))) && true)))), true && (_GLF_IDENTITY(bool(bvec3(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && _GLF_IDENTITY((bool(bvec3(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(false || ((bool(bvec3(true, true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))))))), (false || ((bool(bvec3(true, true, _GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(injectionSwitch)))) - vec2(0.0, 0.0)), (true ? _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(injectionSwitch)))) - vec2(0.0, 0.0)) : _GLF_FUZZED(injectionSwitch))).x < injectionSwitch.y))))), (injectionSwitch.x > injectionSwitch.y))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), bool(_GLF_IDENTITY(bool(false || (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, _GLF_FALSE(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)))))), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, (1.0) / _GLF_ONE(1.0, injectionSwitch.y)))), 1.0, 0.0)))))), ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, determinant(mat4(0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(758.927))), 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0), (false ? _GLF_FUZZED(sin(4649.4845)) : (0.0))) + 0.0))), 0.0, 1.0, 1.0, 1.0, 0.0))))))) && true)) && true)))), true && (_GLF_IDENTITY(bool(bvec3(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && _GLF_IDENTITY(_GLF_IDENTITY((bool(bvec3(true, true, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, true && (false))) || false) || ((injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((bool(bvec3(true, true, _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)) * 1.0, ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)) * 1.0) * 1.0)) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / cos(0.0))), _GLF_IDENTITY(false, true && (false)) || ((injectionSwitch.x > injectionSwitch.y)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool((bool(bvec3(true, true, _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), _GLF_IDENTITY(false, true && (false)) || ((injectionSwitch.x > injectionSwitch.y)))))))), bool(bvec2(bool((bool(bvec3(true, true, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, true && (false)) || ((injectionSwitch.x > injectionSwitch.y)))))))), false))), ! (! (_GLF_IDENTITY(bool((bool(bvec3(true, true, _GLF_FALSE(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), _GLF_IDENTITY(false, true && (false)) || ((injectionSwitch.x > injectionSwitch.y)))))))), bool(bvec2(_GLF_IDENTITY(bool((bool(bvec3(true, true, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, true && (false)) || ((injectionSwitch.x > injectionSwitch.y)))))))), ! (! (bool((bool(bvec3(true, true, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, true && (false)) || ((injectionSwitch.x > injectionSwitch.y))))))))))), false))))))) && true)), ! (! (bool(_GLF_IDENTITY(bool((bool(bvec3(true, true, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, true && (false)) || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))))), (_GLF_IDENTITY(bool((_GLF_IDENTITY(bool(bvec3(true, true, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, true && (false)) || ((injectionSwitch.x > injectionSwitch.y)))))), (bool(bvec3(true, true, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, true && (false)) || ((injectionSwitch.x > injectionSwitch.y))))))) || false))), bool(bvec2(bool((bool(bvec3(true, true, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, true && (false)) || ((injectionSwitch.x > injectionSwitch.y)))))))), false)))) && true)))))), _GLF_IDENTITY(false || ((bool(bvec3(true, true, _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) / vec2(1.0, 1.0)).x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(mat2(37.99, 6212.5189, 833.842, 0.2)[1]) : _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y)))))))))))))), (false || (_GLF_IDENTITY((bool(bvec3(true, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) && true))), _GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))) : _GLF_FUZZED(tanh(vec2(889.057, -7.2))))).y))))), (injectionSwitch.x > injectionSwitch.y))))), bool(_GLF_IDENTITY(bvec2((bool(bvec3(true, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) && true))), _GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))) : _GLF_FUZZED(tanh(vec2(889.057, -7.2))))).y))))), (injectionSwitch.x > injectionSwitch.y))))), false), bvec2(bvec4(bvec2((bool(bvec3(true, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) && true))), _GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))) : _GLF_FUZZED(tanh(vec2(889.057, -7.2))))).y))))), (injectionSwitch.x > injectionSwitch.y))))), false), true, false))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), ! (! (bool(false || (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, _GLF_FALSE(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)))))), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, determinant(_GLF_IDENTITY(mat4(0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0), mat4(1.0) * (_GLF_IDENTITY(mat4(0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0), transpose(transpose(mat4(0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0))))))))))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).x > _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, _GLF_IDENTITY(determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0)), max(_GLF_IDENTITY(determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0)), mix(float(determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0))), float(_GLF_FUZZED(0.9)), bool(false))), determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0)))))))), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(7.0) : _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) - 0.0)) + 0.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0))))))))))), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), 1.0, 0.0)))))), ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), float(vec2(injectionSwitch.y, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0))))))) && true)) && true)))), true && (_GLF_IDENTITY(bool(bvec3(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && _GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(_GLF_IDENTITY(bvec3(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))), false))))), _GLF_IDENTITY(false || ((bool(bvec3(true, true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))), bool(bvec4(_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, _GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), (! (! (injectionSwitch.x > injectionSwitch.y))) && true))))))), (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))) || false), false, true, false))))))))), (false || ((bool(bvec3(true, true, _GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * round(length(normalize(vec2(1.0, 1.0))))) < injectionSwitch.y))))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > injectionSwitch.y))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))))))) ? buf[virtual_gid] = 1 : _GLF_FUZZED(_GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)), _GLF_IDENTITY((workgroup_base), ((workgroup_base)) | ((workgroup_base))) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)), (true ? _GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)) : _GLF_FUZZED(workgroup_size))))))) >> 0u)))) - ((0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(3u, (_GLF_IDENTITY(_GLF_IDENTITY(3u, _GLF_IDENTITY(min(3u, 3u), clamp(min(3u, 3u), min(3u, 3u), _GLF_IDENTITY(min(3u, 3u), (min(3u, 3u)) | (min(3u, 3u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(3u, min(3u, 3u)), (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (_GLF_IDENTITY(bool(bvec2(false, false)), _GLF_IDENTITY(bool(bvec2(bool(bvec2(false, false)), true)), ! (_GLF_IDENTITY(! (bool(bvec2(bool(bvec2(false, false)), true))), _GLF_IDENTITY((! (bool(bvec2(bool(bvec2(false, false)), true)))) || false, ((! (bool(bvec2(bool(bvec2(false, false)), true)))) || false) || false))))))))), true))), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec2(injectionSwitch), (_GLF_IDENTITY(vec2(injectionSwitch), (vec2(injectionSwitch)) * vec2(1.0, 1.0))) * vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))), clamp(vec2(vec2(injectionSwitch)), vec2(vec2(injectionSwitch)), vec2(vec2(injectionSwitch))))), _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), (vec2(injectionSwitch[0], injectionSwitch[1])) / cos(vec2(0.0, 0.0)))))).x > _GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0))))), bool(_GLF_IDENTITY(bool(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false)))))), true))), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(injectionSwitch)), clamp(vec2(vec2(injectionSwitch)), vec2(vec2(injectionSwitch)), vec2(vec2(injectionSwitch))))), vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))[0], injectionSwitch[1])))).x > _GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)))))), ! (! (bool(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))))), ! (! (bool(bvec2(false, false)))))), true))), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(injectionSwitch)), clamp(vec2(vec2(injectionSwitch)), vec2(vec2(injectionSwitch)), vec2(vec2(injectionSwitch))))), vec2(injectionSwitch[0], injectionSwitch[1])))).x > _GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0))))))))))) ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY(3u, min(3u, 3u)), (_GLF_IDENTITY(_GLF_IDENTITY(3u, _GLF_IDENTITY(min(3u, 3u), ~ (_GLF_IDENTITY(~ (min(3u, 3u)), 0u + (_GLF_IDENTITY(~ (min(3u, 3u)), (~ (min(3u, 3u))) | (_GLF_IDENTITY(~ (min(3u, 3u)), (~ (min(3u, 3u))) << 0u)))))))), (_GLF_IDENTITY(3u, _GLF_IDENTITY(min(3u, 3u), ~ (~ (min(3u, 3u)))))) | (_GLF_IDENTITY(3u, _GLF_IDENTITY(min(3u, 3u), ~ _GLF_IDENTITY((~ (min(3u, 3u))), ((~ (min(3u, 3u)))) | ((~ (min(3u, 3u)))))))))) << 0u)))) ^ 0u)) >> _GLF_IDENTITY(0u, ~ (~ (0u))))), uint(3u))) | 0u))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && (! (! _GLF_IDENTITY((false), ((false)) || false)))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, log(1.0), 0.0, _GLF_IDENTITY(exp(0.0), min(_GLF_IDENTITY(exp(0.0), float(mat4x3(exp(0.0), 1.0, 1.0, 1.0, 0.0, exp(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0))), exp(0.0))), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0))).x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))) || false), bool(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), true, true, true)))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), ! (! (_GLF_DEAD(false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
