#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
  return;
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = _GLF_IDENTITY(16, ~ (~ (16)));
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     return;
    }
   else
    {
    }
  }
 do
  {
   if(_GLF_DEAD(false))
    return;
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 do
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0)))))), min(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0)))))), vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0)))))))))).y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    continue;
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ((false) || false) && true))))
  {
   do
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, gl_NumWorkGroups, _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) << uvec3(0u, 0u, 0u)), (gl_NumWorkGroups) | _GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, 0u, 0u), min(uvec3(0u, 0u, 0u), uvec3(0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(atomicMax(subgroup_local_id, subgroup_local_id)) : 0u)), 0u))), (false ? _GLF_FUZZED(uvec3(53550u, 33250u, 51829u)) : _GLF_IDENTITY(uvec3(0u, 0u, 0u), min(uvec3(0u, 0u, 0u), uvec3(0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(atomicMax(subgroup_local_id, subgroup_local_id)) : 0u)), 0u)))))))), (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(clamp(gl_NumWorkGroups, gl_NumWorkGroups, _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u)), min(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u)), max(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u)), _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u)))), _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u)), _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(_GLF_IDENTITY(0u, max(0u, 0u)), 0u, 0u))))))), (clamp(gl_NumWorkGroups, gl_NumWorkGroups, _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec3(0u, 0u, 1u)), (uint(uvec3(0u, 0u, 1u))) << (0u >> _GLF_IDENTITY(uint(6u), uint(6u))))), 0u)), min(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, 0u))), ((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, 0u)))) / uvec3(1u, 1u, 1u)) | uvec3(0u, 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, 0u | (0u))), clamp((_GLF_IDENTITY(0u, 0u | (0u))), (_GLF_IDENTITY(0u, 0u | (0u))), (_GLF_IDENTITY(0u, 0u | (0u))))) | (0u)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)), (gl_NumWorkGroups) | uvec3(0u, 0u, 0u)), clamp(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, min(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)), gl_NumWorkGroups)), gl_NumWorkGroups))) | uvec3(0u, 0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | _GLF_IDENTITY((gl_NumWorkGroups), uvec3(uvec4((gl_NumWorkGroups), 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | _GLF_IDENTITY((gl_NumWorkGroups), uvec3(uvec4((gl_NumWorkGroups), 0u)))), (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | _GLF_IDENTITY((gl_NumWorkGroups), uvec3(uvec4((gl_NumWorkGroups), 0u))))) << (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(1u), uvec3(1u))))) ^ uvec3(0u, 0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups) | uvec3(0u, _GLF_IDENTITY(0u, (75561u & 0u) | (0u)), 0u), (_GLF_IDENTITY((gl_NumWorkGroups) | uvec3(0u, _GLF_IDENTITY(0u, (75561u & 0u) | (0u)), 0u), (true ? (gl_NumWorkGroups) | uvec3(0u, _GLF_IDENTITY(0u, (75561u & 0u) | (0u)), 0u) : _GLF_FUZZED(uvec3(135688u, 27732u, 174205u))))) | ((gl_NumWorkGroups) | uvec3(0u, _GLF_IDENTITY(0u, (75561u & 0u) | (0u)), 0u))), ((gl_NumWorkGroups) | uvec3(0u, 0u, 0u)) * uvec3(1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) / 1u), (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) - 0u)) ^ 0u), 1u))), _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u)), (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u))) | (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u))))) / uvec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))))))) * uvec3(1u, 1u, 1u)))) - uvec3(0u, 0u, 0u)))).x;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
  {
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true)), bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), true))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true)), bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), true))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true)), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), true))), true))))))))) || false), _GLF_IDENTITY(true && (_GLF_DEAD(false)), (true && (_GLF_DEAD(false))) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           return;
          }
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, false || (_GLF_IDENTITY((false) || false, bool(_GLF_IDENTITY(bvec2((false) || false, true), bvec2(bvec3(bvec2((_GLF_IDENTITY(false, (false) && true)) || false, true), false)))))))), (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4x3(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, exp(0.0), 0.0, 1.0, 1.0), (mat4x3(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(76.45) : _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(4.5) : 1.0)))), exp(0.0), 0.0, 1.0, 1.0)) * mat4(1.0)))), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    continue;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) && true)))), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) && true)))), true, false, false)))), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).y)))))))
    {
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-7120.1282, -96.35)) : injectionSwitch)), injectionSwitch)).x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))))));
     if(_GLF_DEAD(false))
      return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
              }
             else
              {
               return;
              }
            }
          }
         else
          {
          }
         return;
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ((false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-34.19)), float(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(6.5) : _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-99.45)))))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))))
          return;
         return;
        }
      }
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) >> 0u);
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
  }
 for(int _injected_loop_counter = (0 & 21853); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(-9267.6029), (true ? _GLF_FUZZED(-9267.6029) : _GLF_FUZZED(roundEven(fma(6.4, 1.2, 5196.7476))))), _GLF_FUZZED(37.02)), _GLF_IDENTITY(vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(61965)))]), clamp(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-987.771, 5.9)) : _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(4.0, -26.04)))))))[0], (injectionSwitch)[1]), _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch)[1], float(mat2x3((injectionSwitch)[1], 1.0, 1.0, 0.0, 0.0, 0.0))), (injectionSwitch)[1]))), (_GLF_IDENTITY(true, (true) && true) ? vec2(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(200.878), _GLF_FUZZED(-7602.0662)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))[0], _GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_FUZZED(568.488)), float((injectionSwitch)[1]), bool(true)))) : _GLF_FUZZED(vec2(2.6, 870.358)))))), bvec2(true, true))))).y))); _GLF_IDENTITY(_injected_loop_counter ++, (_GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) / 1)) - 0))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), _GLF_IDENTITY(0 + (int(4)), (_GLF_IDENTITY(0 + (int(4)), 0 ^ (0 + (int(4))))) - 0)))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
       barrier();
      }
    }
  }
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + _GLF_IDENTITY(1, (1) + _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(1), int(1))), int(ivec4((0 >> _GLF_IDENTITY(int(1), int(1))), 0, (1 | 1), 0))))) % subgroup_size), uint(uvec2(workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (false ? _GLF_FUZZED(virtual_gid) : (subgroup_local_id + 1) % subgroup_size))) * 1u)), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (((subgroup_local_id + 1) % subgroup_size)) << 0u), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))), (((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | uint(_GLF_ZERO(0.0, injectionSwitch.x))) + 1) % subgroup_size)) << 0u), (_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY((((subgroup_local_id + 1) % subgroup_size)) << _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, 1u * (0u)) : _GLF_FUZZED(virtual_gid)))) | 0u), ((((subgroup_local_id + 1) % subgroup_size)) << 0u) | ((((subgroup_local_id + 1) % subgroup_size)) << 0u)))) << (_GLF_IDENTITY(0u, (0u) ^ 0u) | _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_size) : 0u))) ^ 0u), _GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(workgroup_id)))))))))), 0u), max(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), uint(uvec2(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), ~ (~ (((subgroup_local_id + 1) % subgroup_size)))), uint(_GLF_ZERO(0.0, injectionSwitch.x))))), (((subgroup_local_id + 1) % subgroup_size)) << 0u), (_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, clamp(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, min((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)), (subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)))), ~ (~ (_GLF_IDENTITY(((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, clamp(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, min((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)), (subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)))), max(((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, clamp(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, min((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)), (subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)))), ((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, clamp(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, min((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)), (subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size))))))))) << 0u)) << (0u | 0u)), 0u), uvec2(_GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (((subgroup_local_id + 1) % subgroup_size)) << 0u), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ~ (_GLF_IDENTITY(~ ((subgroup_local_id + 1)), min(~ ((subgroup_local_id + 1)), ~ ((subgroup_local_id + 1)))))), _GLF_IDENTITY((true ? (subgroup_local_id + 1) : _GLF_FUZZED(uvec3(44573u, 119101u, 124207u)[2])), _GLF_IDENTITY(uint(uvec4((true ? (subgroup_local_id + 1) : _GLF_FUZZED(uvec3(44573u, 119101u, 124207u)[2])), uint(_GLF_ZERO(0.0, injectionSwitch.x)), (0u >> _GLF_IDENTITY(uint(2u), uint(2u))), 1u)), min(uint(uvec4((true ? (subgroup_local_id + 1) : _GLF_FUZZED(uvec3(44573u, 119101u, 124207u)[2])), uint(_GLF_ZERO(0.0, injectionSwitch.x)), (0u >> _GLF_IDENTITY(uint(2u), uint(2u))), 1u)), _GLF_IDENTITY(uint(uvec4((true ? (subgroup_local_id + 1) : _GLF_FUZZED(uvec3(44573u, 119101u, 124207u)[2])), uint(_GLF_ZERO(0.0, injectionSwitch.x)), (0u >> _GLF_IDENTITY(uint(2u), uint(2u))), 1u)), (uint(uvec4((true ? (subgroup_local_id + 1) : _GLF_FUZZED(uvec3(44573u, 119101u, 124207u)[2])), uint(_GLF_ZERO(0.0, injectionSwitch.x)), (0u >> _GLF_IDENTITY(uint(2u), uint(2u))), 1u))) | (uint(uvec4((true ? (subgroup_local_id + 1) : _GLF_FUZZED(uvec3(44573u, 119101u, 124207u)[2])), uint(_GLF_ZERO(0.0, injectionSwitch.x)), (0u >> _GLF_IDENTITY(uint(2u), uint(2u))), 1u)))))))) % subgroup_size), (((subgroup_local_id + 1) % subgroup_size)) << 0u)) << _GLF_IDENTITY((0u | 0u), uint(uvec4((0u | 0u), 0u, 0u, 0u)))), 0u)))), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), clamp((subgroup_local_id + 1), (subgroup_local_id + 1), _GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))), ((subgroup_local_id + 1)) / 1u))) % subgroup_size), _GLF_IDENTITY((((subgroup_local_id + 1) % subgroup_size)) << 0u, ((((subgroup_local_id + 1) % subgroup_size)) << 0u) | ((((subgroup_local_id + 1) % subgroup_size)) << 0u))), (_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), ((_GLF_IDENTITY((subgroup_local_id + 1), 0u | ((subgroup_local_id + 1))) % subgroup_size)) << 0u)) << _GLF_IDENTITY((0u | 0u), ~ (~ ((0u | 0u))))), 0u), max(uvec2(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, 0u | ((subgroup_local_id + 1) % subgroup_size)), 1u), (false ? _GLF_FUZZED(uvec2(41731u, 187334u)) : uvec2(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, 0u | ((subgroup_local_id + 1) % subgroup_size)), 1u)))))), (((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1)))) >> 0u)) % subgroup_size)) << 0u), (_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (((subgroup_local_id + 1) % subgroup_size)) << _GLF_IDENTITY(0u, (0u) / 1u))) << (0u | 0u)), _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, 0u + (0u))))), uvec2(_GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (((subgroup_local_id + 1) % subgroup_size)) << 0u), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (((subgroup_local_id + 1) % subgroup_size)) << 0u)), uint(uvec2((_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (((subgroup_local_id + 1) % subgroup_size)) << 0u)), 1u))) << (0u | 0u), 0u | ((_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1))) - 0u)) % subgroup_size), (((subgroup_local_id + 1) % subgroup_size)) << 0u), (0u ^ 0u) + (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, clamp((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (true ? (subgroup_local_id + 1) % subgroup_size : _GLF_FUZZED(workgroup_size))))), (subgroup_local_id + 1) % subgroup_size))), (((subgroup_local_id + 1) % subgroup_size)) << 0u)))) << (0u | 0u)))), 0u))))), 0u ^ (_GLF_IDENTITY((uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), clamp((subgroup_local_id + 1), (subgroup_local_id + 1), _GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))), ((subgroup_local_id + 1)) / 1u))) % subgroup_size), _GLF_IDENTITY((((subgroup_local_id + 1) % subgroup_size)) << 0u, ((((subgroup_local_id + 1) % subgroup_size)) << 0u) | ((((subgroup_local_id + 1) % subgroup_size)) << 0u))), (_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), ((_GLF_IDENTITY((subgroup_local_id + 1), 0u | ((subgroup_local_id + 1))) % subgroup_size)) << 0u)) << _GLF_IDENTITY((0u | 0u), ~ (~ ((0u | 0u))))), 0u), max(uvec2(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, 0u | ((subgroup_local_id + 1) % subgroup_size)), 1u), (false ? _GLF_FUZZED(uvec2(41731u, 187334u)) : uvec2(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, 0u | ((subgroup_local_id + 1) % subgroup_size)), 1u)))))), (((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1)))) >> 0u)) % subgroup_size)) << 0u), (_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (((subgroup_local_id + 1) % subgroup_size)) << _GLF_IDENTITY(0u, (0u) / 1u))) << (0u | 0u)), _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, 0u + (0u))))), uvec2(_GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (((subgroup_local_id + 1) % subgroup_size)) << 0u), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (((subgroup_local_id + 1) % subgroup_size)) << 0u)), uint(uvec2((_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (((subgroup_local_id + 1) % subgroup_size)) << 0u)), 1u))) << (0u | 0u), 0u | ((_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1))) - 0u)) % subgroup_size), (((subgroup_local_id + 1) % subgroup_size)) << 0u), (0u ^ 0u) + (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, clamp((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (true ? (subgroup_local_id + 1) % subgroup_size : _GLF_FUZZED(workgroup_size))))), (subgroup_local_id + 1) % subgroup_size))), (((subgroup_local_id + 1) % subgroup_size)) << 0u)))) << (0u | 0u)))), 0u))))), (_GLF_IDENTITY((uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), clamp((subgroup_local_id + 1), (subgroup_local_id + 1), _GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))), ((subgroup_local_id + 1)) / 1u))) % subgroup_size), _GLF_IDENTITY((((subgroup_local_id + 1) % subgroup_size)) << 0u, ((((subgroup_local_id + 1) % subgroup_size)) << 0u) | ((((subgroup_local_id + 1) % subgroup_size)) << 0u))), (_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), ((_GLF_IDENTITY((subgroup_local_id + 1), 0u | ((subgroup_local_id + 1))) % subgroup_size)) << 0u)) << _GLF_IDENTITY((0u | 0u), ~ (~ ((0u | 0u))))), 0u), max(uvec2(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, 0u | ((subgroup_local_id + 1) % subgroup_size)), 1u), (false ? _GLF_FUZZED(uvec2(41731u, 187334u)) : uvec2(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, 0u | ((subgroup_local_id + 1) % subgroup_size)), 1u)))))), (((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1)))) >> 0u)) % subgroup_size)) << 0u), (_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (((subgroup_local_id + 1) % subgroup_size)) << _GLF_IDENTITY(0u, (0u) / 1u))) << (0u | 0u)), _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, 0u + (0u))))), uvec2(_GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (((subgroup_local_id + 1) % subgroup_size)) << 0u), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (((subgroup_local_id + 1) % subgroup_size)) << 0u)), uint(uvec2((_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (((subgroup_local_id + 1) % subgroup_size)) << 0u)), 1u))) << (0u | 0u), 0u | ((_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1))) - 0u)) % subgroup_size), (((subgroup_local_id + 1) % subgroup_size)) << 0u), (0u ^ 0u) + (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, clamp((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (true ? (subgroup_local_id + 1) % subgroup_size : _GLF_FUZZED(workgroup_size))))), (subgroup_local_id + 1) % subgroup_size))), (((subgroup_local_id + 1) % subgroup_size)) << 0u)))) << (0u | 0u)))), 0u))))), ((uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), clamp((subgroup_local_id + 1), (subgroup_local_id + 1), _GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))), ((subgroup_local_id + 1)) / 1u))) % subgroup_size), _GLF_IDENTITY((((subgroup_local_id + 1) % subgroup_size)) << 0u, ((((subgroup_local_id + 1) % subgroup_size)) << 0u) | ((((subgroup_local_id + 1) % subgroup_size)) << 0u))), (_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), ((_GLF_IDENTITY((subgroup_local_id + 1), 0u | ((subgroup_local_id + 1))) % subgroup_size)) << 0u)) << _GLF_IDENTITY((0u | 0u), ~ (~ ((0u | 0u))))), 0u), max(uvec2(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, 0u | ((subgroup_local_id + 1) % subgroup_size)), 1u), (false ? _GLF_FUZZED(uvec2(41731u, 187334u)) : uvec2(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, 0u | ((subgroup_local_id + 1) % subgroup_size)), 1u)))))), (((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1)))) >> 0u)) % subgroup_size)) << 0u), (_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (((subgroup_local_id + 1) % subgroup_size)) << _GLF_IDENTITY(0u, (0u) / 1u))) << (0u | 0u)), _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, 0u + (0u))))), uvec2(_GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (((subgroup_local_id + 1) % subgroup_size)) << 0u), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (((subgroup_local_id + 1) % subgroup_size)) << 0u)), uint(uvec2((_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (((subgroup_local_id + 1) % subgroup_size)) << 0u)), 1u))) << (0u | 0u), 0u | ((_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1))) - 0u)) % subgroup_size), (((subgroup_local_id + 1) % subgroup_size)) << 0u), (0u ^ 0u) + (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, clamp((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (true ? (subgroup_local_id + 1) % subgroup_size : _GLF_FUZZED(workgroup_size))))), (subgroup_local_id + 1) % subgroup_size))), (((subgroup_local_id + 1) % subgroup_size)) << 0u)))) << (0u | 0u)))), 0u)))))) >> 0u)) - 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))) ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base), (_GLF_IDENTITY((workgroup_base), ~ (~ ((workgroup_base))))) >> 0u) >> 0u)) : ~ (uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY((((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(ivec2(1, _GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec2(0, 0), (ivec2(0, 0)) * ivec2(1, 1)))))))) | (1))))) >> 0u)) % subgroup_size)), ~ (_GLF_IDENTITY(~ ((((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, int(ivec2(1, 0)))), 0 + ((_GLF_IDENTITY(1, int(ivec2(1, 0)))))) | (1))))) >> 0u)) % subgroup_size))), max(_GLF_IDENTITY(~ ((((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, int(ivec2(1, 0)))) | (1), int(_GLF_IDENTITY(ivec4((_GLF_IDENTITY(1, int(ivec2(1, 0)))) | (1), _GLF_IDENTITY(0, 1 * (0)), 0, 1), (ivec4((_GLF_IDENTITY(1, int(ivec2(1, 0)))) | (1), _GLF_IDENTITY(0, 1 * (0)), 0, 1)) | ivec4(0, 0, 0, 0)))))))) >> 0u)) % subgroup_size))), ~ (~ (~ ((((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(ivec2(1, 0)))) | (1))))) >> 0u)) % subgroup_size)))))), _GLF_IDENTITY(~ ((((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(ivec2(1, 0)))) | (1))))) >> 0u)) % subgroup_size))), max(~ ((((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(ivec2(1, 0)))) | (1))))) >> 0u)) % subgroup_size))), ~ ((((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(ivec2(1, 0)))) | (1))))) >> 0u)) % subgroup_size))))))))) << 0u), (_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (((subgroup_local_id + 1) % subgroup_size)) << 0u)) << (0u | _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(workgroup_size)))) + (1u ^ 1u)))), 0u), max(uvec2(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (false ? _GLF_FUZZED((110958u / uvec2(102190u, 96046u))[0]) : _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, min((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size))))), (((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), (_GLF_IDENTITY(1, clamp(1, 1, 1))) * 1), 1))) >> 0)) % _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)))) << 0u), (_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (((subgroup_local_id + 1) % subgroup_size)) << 0u)) << (0u | 0u)), 0u), uvec2(_GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (((subgroup_local_id + 1) % subgroup_size)) << 0u), (_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (((subgroup_local_id + 1) % subgroup_size)) << 0u)) << (0u | 0u)), 0u))))), 0u ^ (false ? _GLF_FUZZED(workgroup_base) : ~ (uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u)) % subgroup_size)) << 0u), (_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), ((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) | ((subgroup_local_id + 1) % subgroup_size)))) << 0u)) << (0u | 0u)), 0u), max(uvec2(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (false ? _GLF_FUZZED((110958u / uvec2(102190u, 96046u))[0]) : _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, min((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size))))), (((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, clamp(1, 1, 1)), 1))) >> 0)) % _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)))) << 0u), (_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (((subgroup_local_id + 1) % subgroup_size)) << 0u)) << (0u | 0u)), 0u), uvec2(_GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(int(_GLF_IDENTITY(1, 0 ^ (1))), int(ivec3(int(_GLF_IDENTITY(1, 0 ^ _GLF_IDENTITY((1), (_GLF_IDENTITY((1), ((1)) - 0)) >> 0))), 0, 1)))), ~ (~ (int(_GLF_IDENTITY(int(_GLF_IDENTITY(1, 0 ^ (1))), int(ivec3(int(_GLF_IDENTITY(1, 0 ^ (1))), 0, 1))))))))) % subgroup_size), (((subgroup_local_id + 1) % subgroup_size)) << 0u), (_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (((subgroup_local_id + 1) % subgroup_size)) << 0u)) << _GLF_IDENTITY((0u | 0u), 1u * ((0u | 0u)))), 0u)))))))))))))), ((~ (_GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (((subgroup_local_id + 1) % subgroup_size)) << 0u), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))), (((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | uint(_GLF_ZERO(0.0, injectionSwitch.x))) + 1) % subgroup_size)) << 0u), (_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY((((subgroup_local_id + 1) % subgroup_size)) << _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, 1u * (0u)) : _GLF_FUZZED(virtual_gid)))) | 0u), ((((subgroup_local_id + 1) % subgroup_size)) << 0u) | ((((subgroup_local_id + 1) % subgroup_size)) << 0u)))) << (_GLF_IDENTITY(0u, (0u) ^ 0u) | _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_size) : 0u))) ^ 0u), _GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(workgroup_id)))))))))), 0u), max(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), uint(uvec2(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), ~ (~ (((subgroup_local_id + 1) % subgroup_size)))), uint(_GLF_ZERO(0.0, injectionSwitch.x))))), (((subgroup_local_id + 1) % subgroup_size)) << 0u), (_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, clamp(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, min((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)), (subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)))), ~ (~ (_GLF_IDENTITY(((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, clamp(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, min((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)), (subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)))), max(((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, clamp(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, min((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)), (subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)))), ((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, clamp(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, min((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)), (subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size))))))))) << 0u)) << (0u | 0u)), 0u), uvec2(_GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (((subgroup_local_id + 1) % subgroup_size)) << 0u), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ~ (_GLF_IDENTITY(~ ((subgroup_local_id + 1)), min(~ ((subgroup_local_id + 1)), ~ ((subgroup_local_id + 1)))))), _GLF_IDENTITY((true ? (subgroup_local_id + 1) : _GLF_FUZZED(uvec3(44573u, 119101u, 124207u)[2])), _GLF_IDENTITY(uint(uvec4((true ? (subgroup_local_id + 1) : _GLF_FUZZED(uvec3(44573u, 119101u, 124207u)[2])), uint(_GLF_ZERO(0.0, injectionSwitch.x)), (0u >> _GLF_IDENTITY(uint(2u), uint(2u))), 1u)), min(uint(uvec4((true ? (subgroup_local_id + 1) : _GLF_FUZZED(uvec3(44573u, 119101u, 124207u)[2])), uint(_GLF_ZERO(0.0, injectionSwitch.x)), (0u >> _GLF_IDENTITY(uint(2u), uint(2u))), 1u)), _GLF_IDENTITY(uint(uvec4((true ? (subgroup_local_id + 1) : _GLF_FUZZED(uvec3(44573u, 119101u, 124207u)[2])), uint(_GLF_ZERO(0.0, injectionSwitch.x)), (0u >> _GLF_IDENTITY(uint(2u), uint(2u))), 1u)), (uint(uvec4((true ? (subgroup_local_id + 1) : _GLF_FUZZED(uvec3(44573u, 119101u, 124207u)[2])), uint(_GLF_ZERO(0.0, injectionSwitch.x)), (0u >> _GLF_IDENTITY(uint(2u), uint(2u))), 1u))) | (uint(uvec4((true ? (subgroup_local_id + 1) : _GLF_FUZZED(uvec3(44573u, 119101u, 124207u)[2])), uint(_GLF_ZERO(0.0, injectionSwitch.x)), (0u >> _GLF_IDENTITY(uint(2u), uint(2u))), 1u)))))))) % subgroup_size), (((subgroup_local_id + 1) % subgroup_size)) << 0u)) << _GLF_IDENTITY((0u | 0u), uint(uvec4((0u | 0u), 0u, 0u, 0u)))), 0u)))), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), clamp((subgroup_local_id + 1), (subgroup_local_id + 1), _GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))), ((subgroup_local_id + 1)) / 1u))) % subgroup_size), _GLF_IDENTITY((((subgroup_local_id + 1) % subgroup_size)) << 0u, ((((subgroup_local_id + 1) % subgroup_size)) << 0u) | ((((subgroup_local_id + 1) % subgroup_size)) << 0u))), (_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), ((_GLF_IDENTITY((subgroup_local_id + 1), 0u | ((subgroup_local_id + 1))) % subgroup_size)) << 0u)) << _GLF_IDENTITY((0u | 0u), ~ (~ ((0u | 0u))))), 0u), max(uvec2(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, 0u | ((subgroup_local_id + 1) % subgroup_size)), 1u), (false ? _GLF_FUZZED(uvec2(41731u, 187334u)) : uvec2(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, 0u | ((subgroup_local_id + 1) % subgroup_size)), 1u)))))), (((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1)))) >> 0u)) % subgroup_size)) << 0u), (_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (((subgroup_local_id + 1) % subgroup_size)) << _GLF_IDENTITY(0u, (0u) / 1u))) << (0u | 0u)), _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, 0u + (0u))))), uvec2(_GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (((subgroup_local_id + 1) % subgroup_size)) << 0u), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (((subgroup_local_id + 1) % subgroup_size)) << 0u)), uint(uvec2((_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (((subgroup_local_id + 1) % subgroup_size)) << 0u)), 1u))) << (0u | 0u), 0u | ((_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1))) - 0u)) % subgroup_size), (((subgroup_local_id + 1) % subgroup_size)) << 0u), (0u ^ 0u) + (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, clamp((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (true ? (subgroup_local_id + 1) % subgroup_size : _GLF_FUZZED(workgroup_size))))), (subgroup_local_id + 1) % subgroup_size))), (((subgroup_local_id + 1) % subgroup_size)) << 0u)))) << (0u | 0u)))), 0u))))), 0u ^ (_GLF_IDENTITY((uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), clamp((subgroup_local_id + 1), (subgroup_local_id + 1), _GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))), ((subgroup_local_id + 1)) / 1u))) % subgroup_size), _GLF_IDENTITY((((subgroup_local_id + 1) % subgroup_size)) << 0u, ((((subgroup_local_id + 1) % subgroup_size)) << 0u) | ((((subgroup_local_id + 1) % subgroup_size)) << 0u))), (_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), ((_GLF_IDENTITY((subgroup_local_id + 1), 0u | ((subgroup_local_id + 1))) % subgroup_size)) << 0u)) << _GLF_IDENTITY((0u | 0u), ~ (~ ((0u | 0u))))), 0u), max(uvec2(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, 0u | ((subgroup_local_id + 1) % subgroup_size)), 1u), (false ? _GLF_FUZZED(uvec2(41731u, 187334u)) : uvec2(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, 0u | ((subgroup_local_id + 1) % subgroup_size)), 1u)))))), (((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1)))) >> 0u)) % subgroup_size)) << 0u), (_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (((subgroup_local_id + 1) % subgroup_size)) << _GLF_IDENTITY(0u, (0u) / 1u))) << (0u | 0u)), _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, 0u + (0u))))), uvec2(_GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (((subgroup_local_id + 1) % subgroup_size)) << 0u), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (((subgroup_local_id + 1) % subgroup_size)) << 0u)), uint(uvec2((_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (((subgroup_local_id + 1) % subgroup_size)) << 0u)), 1u))) << (0u | 0u), 0u | ((_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1))) - 0u)) % subgroup_size), (((subgroup_local_id + 1) % subgroup_size)) << 0u), (0u ^ 0u) + (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, clamp((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (true ? (subgroup_local_id + 1) % subgroup_size : _GLF_FUZZED(workgroup_size))))), (subgroup_local_id + 1) % subgroup_size))), (((subgroup_local_id + 1) % subgroup_size)) << 0u)))) << (0u | 0u)))), 0u))))), (_GLF_IDENTITY((uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), clamp((subgroup_local_id + 1), (subgroup_local_id + 1), _GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))), ((subgroup_local_id + 1)) / 1u))) % subgroup_size), _GLF_IDENTITY((((subgroup_local_id + 1) % subgroup_size)) << 0u, ((((subgroup_local_id + 1) % subgroup_size)) << 0u) | ((((subgroup_local_id + 1) % subgroup_size)) << 0u))), (_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), ((_GLF_IDENTITY((subgroup_local_id + 1), 0u | ((subgroup_local_id + 1))) % subgroup_size)) << 0u)) << _GLF_IDENTITY((0u | 0u), ~ (~ ((0u | 0u))))), 0u), max(uvec2(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, 0u | ((subgroup_local_id + 1) % subgroup_size)), 1u), (false ? _GLF_FUZZED(uvec2(41731u, 187334u)) : uvec2(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, 0u | ((subgroup_local_id + 1) % subgroup_size)), 1u)))))), (((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1)))) >> 0u)) % subgroup_size)) << 0u), (_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (((subgroup_local_id + 1) % subgroup_size)) << _GLF_IDENTITY(0u, (0u) / 1u))) << (0u | 0u)), _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, 0u + (0u))))), uvec2(_GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (((subgroup_local_id + 1) % subgroup_size)) << 0u), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (((subgroup_local_id + 1) % subgroup_size)) << 0u)), uint(uvec2((_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (((subgroup_local_id + 1) % subgroup_size)) << 0u)), 1u))) << (0u | 0u), 0u | ((_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1))) - 0u)) % subgroup_size), (((subgroup_local_id + 1) % subgroup_size)) << 0u), (0u ^ 0u) + (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, clamp((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (true ? (subgroup_local_id + 1) % subgroup_size : _GLF_FUZZED(workgroup_size))))), (subgroup_local_id + 1) % subgroup_size))), (((subgroup_local_id + 1) % subgroup_size)) << 0u)))) << (0u | 0u)))), 0u))))), ((uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), clamp((subgroup_local_id + 1), (subgroup_local_id + 1), _GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))), ((subgroup_local_id + 1)) / 1u))) % subgroup_size), _GLF_IDENTITY((((subgroup_local_id + 1) % subgroup_size)) << 0u, ((((subgroup_local_id + 1) % subgroup_size)) << 0u) | ((((subgroup_local_id + 1) % subgroup_size)) << 0u))), (_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), ((_GLF_IDENTITY((subgroup_local_id + 1), 0u | ((subgroup_local_id + 1))) % subgroup_size)) << 0u)) << _GLF_IDENTITY((0u | 0u), ~ (~ ((0u | 0u))))), 0u), max(uvec2(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, 0u | ((subgroup_local_id + 1) % subgroup_size)), 1u), (false ? _GLF_FUZZED(uvec2(41731u, 187334u)) : uvec2(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, 0u | ((subgroup_local_id + 1) % subgroup_size)), 1u)))))), (((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1)))) >> 0u)) % subgroup_size)) << 0u), (_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (((subgroup_local_id + 1) % subgroup_size)) << _GLF_IDENTITY(0u, (0u) / 1u))) << (0u | 0u)), _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, 0u + (0u))))), uvec2(_GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (((subgroup_local_id + 1) % subgroup_size)) << 0u), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (((subgroup_local_id + 1) % subgroup_size)) << 0u)), uint(uvec2((_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (((subgroup_local_id + 1) % subgroup_size)) << 0u)), 1u))) << (0u | 0u), 0u | ((_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1))) - 0u)) % subgroup_size), (((subgroup_local_id + 1) % subgroup_size)) << 0u), (0u ^ 0u) + (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, clamp((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (true ? (subgroup_local_id + 1) % subgroup_size : _GLF_FUZZED(workgroup_size))))), (subgroup_local_id + 1) % subgroup_size))), (((subgroup_local_id + 1) % subgroup_size)) << 0u)))) << (0u | 0u)))), 0u)))))) >> 0u)) - 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))) ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base), (_GLF_IDENTITY((workgroup_base), ~ (~ ((workgroup_base))))) >> 0u) >> 0u)) : ~ (uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY((((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(ivec2(1, _GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec2(0, 0), (ivec2(0, 0)) * ivec2(1, 1)))))))) | (1))))) >> 0u)) % subgroup_size)), ~ (_GLF_IDENTITY(~ ((((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, int(ivec2(1, 0)))), 0 + ((_GLF_IDENTITY(1, int(ivec2(1, 0)))))) | (1))))) >> 0u)) % subgroup_size))), max(_GLF_IDENTITY(~ ((((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, int(ivec2(1, 0)))) | (1), int(_GLF_IDENTITY(ivec4((_GLF_IDENTITY(1, int(ivec2(1, 0)))) | (1), _GLF_IDENTITY(0, 1 * (0)), 0, 1), (ivec4((_GLF_IDENTITY(1, int(ivec2(1, 0)))) | (1), _GLF_IDENTITY(0, 1 * (0)), 0, 1)) | ivec4(0, 0, 0, 0)))))))) >> 0u)) % subgroup_size))), ~ (~ (~ ((((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(ivec2(1, 0)))) | (1))))) >> 0u)) % subgroup_size)))))), _GLF_IDENTITY(~ ((((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(ivec2(1, 0)))) | (1))))) >> 0u)) % subgroup_size))), max(~ ((((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(ivec2(1, 0)))) | (1))))) >> 0u)) % subgroup_size))), ~ ((((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(ivec2(1, 0)))) | (1))))) >> 0u)) % subgroup_size))))))))) << 0u), (_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (((subgroup_local_id + 1) % subgroup_size)) << 0u)) << (0u | _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(workgroup_size)))) + (1u ^ 1u)))), 0u), max(uvec2(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (false ? _GLF_FUZZED((110958u / uvec2(102190u, 96046u))[0]) : _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, min((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size))))), (((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), (_GLF_IDENTITY(1, clamp(1, 1, 1))) * 1), 1))) >> 0)) % _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)))) << 0u), (_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (((subgroup_local_id + 1) % subgroup_size)) << 0u)) << (0u | 0u)), 0u), uvec2(_GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (((subgroup_local_id + 1) % subgroup_size)) << 0u), (_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (((subgroup_local_id + 1) % subgroup_size)) << 0u)) << (0u | 0u)), 0u))))), 0u ^ (false ? _GLF_FUZZED(workgroup_base) : ~ (uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u)) % subgroup_size)) << 0u), (_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), ((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) | ((subgroup_local_id + 1) % subgroup_size)))) << 0u)) << (0u | 0u)), 0u), max(uvec2(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (false ? _GLF_FUZZED((110958u / uvec2(102190u, 96046u))[0]) : _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, min((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size))))), (((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, clamp(1, 1, 1)), 1))) >> 0)) % _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)))) << 0u), (_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (((subgroup_local_id + 1) % subgroup_size)) << 0u)) << (0u | 0u)), 0u), uvec2(_GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(int(_GLF_IDENTITY(1, 0 ^ (1))), int(ivec3(int(_GLF_IDENTITY(1, 0 ^ _GLF_IDENTITY((1), (_GLF_IDENTITY((1), ((1)) - 0)) >> 0))), 0, 1)))), ~ (~ (int(_GLF_IDENTITY(int(_GLF_IDENTITY(1, 0 ^ (1))), int(ivec3(int(_GLF_IDENTITY(1, 0 ^ (1))), 0, 1))))))))) % subgroup_size), (((subgroup_local_id + 1) % subgroup_size)) << 0u), (_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (((subgroup_local_id + 1) % subgroup_size)) << 0u)) << _GLF_IDENTITY((0u | 0u), 1u * ((0u | 0u)))), 0u))))))))))))))) + uint(_GLF_ZERO(0.0, injectionSwitch.x)))), 0u)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0)), injectionSwitch.x))); _injected_loop_counter --)
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       barrier();
       if(_GLF_DEAD(false))
        return;
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), clamp(int(0), _GLF_IDENTITY(int(0), ~ (~ (int(0)))), int(0)))))); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
        }
      }
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), true && (_GLF_WRAPPED_IF_FALSE(false))))
    {
    }
   else
    {
     buf[virtual_gid] = 1;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 0u, 1u), ~ (~ (_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 0u, 1u), uvec3(uvec3(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 0u, 1u), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 0u, 1u), uvec3(uvec3(uvec3(subgroup_local_id + 1, 0u, 1u)))))))))))))) < subgroup_size)
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, true), true)), bvec3(bvec3(bvec3(bvec4(bvec3(false, false, true), true))))))), (bool(_GLF_IDENTITY(bvec3(false, false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true))))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, true), true)), bvec3(bvec3(bvec3(bvec4(bvec3(false, false, true), true)))))))) || false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       else
        {
        }
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(498.614, 6.9)) : _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0))))))).x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(498.614, 6.9)) : _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0))))))).x > injectionSwitch.y))), true), bvec2(bvec4(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(498.614, 6.9)) : _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0))))))).x > injectionSwitch.y))), true), false, true))))))
        return;
      }
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       barrier();
      }
     else
      {
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), _GLF_IDENTITY(false, bool(bvec3(false, true, false))), true, true))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-98.64) : injectionSwitch.y))), max(_GLF_IDENTITY(min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-98.64) : injectionSwitch.y))), float(mat2x3(min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-98.64) : injectionSwitch.y))), 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 0.0))), min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-98.64) : injectionSwitch.y)))))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))), injectionSwitch, injectionSwitch)).y))))
      return;
     return;
    }
   int i = _GLF_IDENTITY(0, (true ? 0 : _GLF_IDENTITY(_GLF_FUZZED(52035), min(_GLF_FUZZED(52035), _GLF_IDENTITY(_GLF_FUZZED(52035), _GLF_IDENTITY(_GLF_IDENTITY((true ? _GLF_FUZZED(52035) : _GLF_IDENTITY(_GLF_FUZZED(69272), (_GLF_IDENTITY(_GLF_FUZZED(69272), (_GLF_FUZZED(69272)) | 0)) | 0)), ((true ? _GLF_FUZZED(52035) : _GLF_IDENTITY(_GLF_FUZZED(69272), (_GLF_IDENTITY(_GLF_FUZZED(69272), (_GLF_FUZZED(69272)) | 0)) | 0))) ^ 0), 0 + (_GLF_IDENTITY(_GLF_IDENTITY((true ? _GLF_FUZZED(52035) : _GLF_IDENTITY(_GLF_FUZZED(69272), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FUZZED(69272), (_GLF_FUZZED(69272)) | 0)) | 0, min((_GLF_IDENTITY(_GLF_FUZZED(69272), (_GLF_FUZZED(69272)) | 0)) | 0, (_GLF_IDENTITY(_GLF_FUZZED(69272), (_GLF_FUZZED(69272)) | 0)) | 0)))), ((true ? _GLF_FUZZED(52035) : _GLF_IDENTITY(_GLF_FUZZED(69272), (_GLF_IDENTITY(_GLF_FUZZED(69272), (_GLF_FUZZED(69272)) | 0)) | 0))) ^ 0), (_GLF_IDENTITY((true ? _GLF_FUZZED(52035) : _GLF_IDENTITY(_GLF_FUZZED(69272), (_GLF_IDENTITY(_GLF_FUZZED(69272), (_GLF_FUZZED(69272)) | 0)) | 0)), ((true ? _GLF_FUZZED(52035) : _GLF_IDENTITY(_GLF_FUZZED(69272), (_GLF_IDENTITY(_GLF_FUZZED(69272), (_GLF_FUZZED(69272)) | 0)) | 0))) ^ 0)) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))))))))));
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       return;
      }
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0))), injectionSwitch)).x > injectionSwitch.y)), false))))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
    }
   buf[next_virtual_gid] = _GLF_IDENTITY(2, (false ? _GLF_FUZZED(30512) : 2));
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   do
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = (_GLF_IDENTITY(1, (1) + 0) & 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
          {
           return;
          }
        }
       continue;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                continue;
               barrier();
              }
             break;
            }
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             return;
            }
           else
            {
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
          }
         else
          {
          }
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        break;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            break;
           return;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             break;
            }
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true, true))))
            break;
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
            continue;
          }
         else
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              continue;
             if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
              continue;
             if(_GLF_DEAD(false))
              break;
             return;
            }
          }
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          break;
         return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
        barrier();
      }
     else
      {
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
       break;
      }
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        return;
      }
     else
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
        return;
      }
     else
      {
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
           return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y), ((injectionSwitch.x > injectionSwitch.y)) || false)) || false))));
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
          {
           if(_GLF_DEAD(false))
            return;
           continue;
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, true && _GLF_IDENTITY((true), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, bool(bvec4(true, true, false, false))))))), _GLF_IDENTITY(bool(bvec3((true), _GLF_FALSE(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true && _GLF_IDENTITY(((! (_GLF_IDENTITY(false, ! (! (false)))))), false || (_GLF_IDENTITY(((! (_GLF_IDENTITY(false, ! (! (false)))))), (((! (_GLF_IDENTITY(false, ! (! (false))))))) || false))))), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, true && (false)))), _GLF_IDENTITY(! (! (bool(bvec3((true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), ! (! (! (! (bool(bvec3((true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))))))))))
            {
             if(_GLF_DEAD(false))
              break;
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
           else
            {
             if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
              break;
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
          }
        }
       buf[next_virtual_gid] = 2;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
        return;
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) * 1) > _GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec3(0, 1, 1)), 0 | (int(ivec3(0, 1, 1)))))); _injected_loop_counter --)
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
            {
             if(_GLF_DEAD(false))
              return;
             barrier();
            }
           if(_GLF_DEAD(false))
            continue;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(8.1), _GLF_FUZZED(43.32)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], (true ? (injectionSwitch)[1] : _GLF_FUZZED(7.5)))), bvec2(true, true))).y))))
            break;
          }
        }
       else
        {
        }
      }
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(3), int(3))); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))).x > injectionSwitch.y))))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false)))))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(7, _GLF_IDENTITY(min(7, 7), (true ? min(7, 7) : _GLF_FUZZED(bitfieldReverse(_injected_loop_counter)))))), int(7))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(_GLF_IDENTITY(int(7), (_GLF_IDENTITY(int(7), 0 ^ _GLF_IDENTITY((int(7)), ~ (~ (_GLF_IDENTITY((int(7)), int(ivec2(_GLF_IDENTITY((int(7)), clamp((int(7)), (int(7)), (int(7)))), 1)))))))) >> 0), (0 >> _GLF_IDENTITY(int(1), int(1))) + (_GLF_IDENTITY(_GLF_IDENTITY(int(7), (_GLF_IDENTITY(int(7), _GLF_IDENTITY(0 ^ (int(7)), (0 ^ (int(7))) | (_GLF_IDENTITY(0 ^ (int(7)), (0 ^ (int(7))) + 0))))) >> 0), _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(int(7), (_GLF_IDENTITY(int(7), _GLF_IDENTITY(0 ^ (int(7)), (0 ^ (int(7))) | (_GLF_IDENTITY(0 ^ (int(7)), (0 ^ (int(7))) + 0))))) >> 0), 0)), (int(ivec2(_GLF_IDENTITY(int(7), (_GLF_IDENTITY(int(7), _GLF_IDENTITY(0 ^ (int(7)), (0 ^ (int(7))) | (_GLF_IDENTITY(0 ^ (int(7)), (0 ^ (int(7))) + 0))))) >> 0), 0))) * 1))))))); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           do
            {
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         return;
         if(_GLF_DEAD(false))
          continue;
        }
      }
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_IDENTITY(true, bool(bvec2(true, false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), min(injectionSwitch, injectionSwitch)).y)), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), vec2(injectionSwitch[0], injectionSwitch[1])), min(injectionSwitch, injectionSwitch)).y)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        break;
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))))))
        {
         return;
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            return;
          }
         else
          {
          }
         if(_GLF_DEAD(false))
          break;
        }
       else
        {
        }
      }
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         do
          {
           do
            {
             return;
            }
           while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))));
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       else
        {
        }
      }
    }
   if(_GLF_DEAD(false))
    {
     do
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
      }
     while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false))));
     for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(4), int(4))); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, min(1, 1)))), max(1, _GLF_IDENTITY(1, _GLF_IDENTITY((1), (false ? _GLF_FUZZED(atomicXor(_injected_loop_counter, _injected_loop_counter)) : (1))) | (1)))) << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(ivec2(int(6), 0), (_GLF_IDENTITY(ivec2(int(6), 0), min(ivec2(int(6), 0), ivec2(int(6), 0)))) << ivec2(0, 0))))))); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, sin(0.0)))) > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_IDENTITY(determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, sin(0.0))), 0.0 + (determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, sin(0.0)))))) > injectionSwitch.y)))))))
        {
         if(_GLF_DEAD(false))
          continue;
         continue;
        }
       do
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, true)), false || (bool(bvec2(false, true)))), bool(bool(_GLF_IDENTITY(bool(bvec2(false, _GLF_IDENTITY(true, bool(bool(true))))), false || (bool(bvec2(false, true))))))))))
          {
           if(_GLF_DEAD(false))
            continue;
           continue;
          }
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
         if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), false || (_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), false || (_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), false || (_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)), bool(_GLF_IDENTITY(bvec3(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), false || (_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), false || (_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)), false, false), bvec3(bvec4(bvec3(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), false || (_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), false || (_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)), false, false), true)))))))
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)), false || (_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), false || (_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), ! (! (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))))))))) || false)))))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                return;
               return;
              }
            }
           else
            {
            }
           continue;
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
        return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec3(_GLF_IDENTITY(false, false || (false)), false, true))), true, true), bvec3(bvec4(bvec3(false, true, true), false))), false)))), ! (! (bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec3(_GLF_IDENTITY(false, false || (false)), false, true))), true, true), bvec3(bvec4(bvec3(false, true, true), false))), false))))))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
              return;
             do
              {
               return;
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
           else
            {
            }
          }
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != (int(_GLF_ONE(1.0, injectionSwitch.y)) ^ 1)); _injected_loop_counter --)
        {
         return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          continue;
        }
      }
    }
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
  }
 do
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
  }
 while(_GLF_WRAPPED_LOOP(false));
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
