#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, true)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(! (! (false)), true, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(! (! (false)), true, false)), bvec3(bvec4(bvec3(bvec3(! (! (false)), true, false)), false)))))), false || (bool(_GLF_IDENTITY(bvec3(! (! (false)), true, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(! (! (false)), true, false)), bvec3(bvec4(bvec3(bvec3(! (! (false)), true, false)), false))))))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! _GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), bool(bool((false))))))))))
    {
     for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1)), bool(_GLF_IDENTITY(bvec2(! (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1)), true), bvec2(bvec3(bvec2(! (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1)), true), true))))))); _injected_loop_counter ++)
      {
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
      }
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     return;
    }
   else
    {
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  return;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     do
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         do
          {
           return;
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            break;
           barrier();
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + sin(0.0)), mix(float(injectionSwitch.y), float(_GLF_FUZZED((+ 2.2))), bool(false)))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(mat2(injectionSwitch.x, _GLF_IDENTITY(exp(0.0), (exp(0.0)) - 0.0), 0.0, 0.0), mat2(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(mat2(injectionSwitch.x, _GLF_IDENTITY(exp(0.0), (exp(0.0)) - 0.0), 0.0, 0.0), _GLF_IDENTITY(mat2(0.0, 0.0, 0.0, 0.0) + (mat2(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(exp(0.0), float(mat4(exp(0.0), 0.0, 1.0, 0.0, length(0.0), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, abs(1.0), 1.0, exp(0.0), 1.0, 0.0))), (exp(0.0)) - 0.0), (_GLF_IDENTITY(exp(0.0), (exp(0.0)) - 0.0)) / 1.0), 0.0, 0.0)), transpose(transpose(mat2(0.0, 0.0, 0.0, 0.0) + (mat2(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(exp(0.0), float(mat4(exp(0.0), 0.0, 1.0, 0.0, length(0.0), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, abs(1.0), 1.0, exp(0.0), 1.0, 0.0))), (exp(0.0)) - 0.0), (_GLF_IDENTITY(exp(0.0), (exp(0.0)) - 0.0)) / 1.0), 0.0, 0.0))))))), (mat2x4(_GLF_IDENTITY(mat2(injectionSwitch.x, _GLF_IDENTITY(exp(0.0), (exp(0.0)) - 0.0), 0.0, 0.0), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(exp(0.0), 1.0 * (exp(0.0))), (exp(0.0)) - 0.0), 0.0, 0.0))))) * mat2(1.0)))), (false ? _GLF_FUZZED(mat2(-180.141, -794.663, 1.7, -3173.6278)) : _GLF_IDENTITY(_GLF_IDENTITY(mat2(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(exp(0.0), (exp(0.0)) - 0.0), clamp(_GLF_IDENTITY(exp(0.0), (exp(0.0)) - 0.0), _GLF_IDENTITY(exp(0.0), (exp(0.0)) - 0.0), _GLF_IDENTITY(exp(0.0), (exp(0.0)) - 0.0))), 0.0, 0.0), mat2(mat4x2(mat2(injectionSwitch.x, _GLF_IDENTITY(exp(0.0), _GLF_IDENTITY((exp(0.0)) - 0.0, min((exp(0.0)) - 0.0, _GLF_IDENTITY((exp(0.0)) - 0.0, (false ? _GLF_FUZZED(-7.8) : (exp(0.0)) - 0.0))))), 0.0, 0.0)))), mat2(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(exp(0.0), (_GLF_IDENTITY(exp(0.0), mix(float(_GLF_FUZZED((vec3(_GLF_IDENTITY(5575.7668, max(_GLF_IDENTITY(5575.7668, clamp(5575.7668, 5575.7668, _GLF_IDENTITY(5575.7668, min(_GLF_IDENTITY(5575.7668, clamp(5575.7668, 5575.7668, 5575.7668)), 5575.7668)))), _GLF_IDENTITY(5575.7668, _GLF_IDENTITY(min(5575.7668, 5575.7668), (_GLF_IDENTITY(min(5575.7668, 5575.7668), (false ? _GLF_FUZZED(-637.027) : min(5575.7668, 5575.7668)))) - 0.0)))), 1.5, 3120.4512)).r)), float(exp(0.0)), bool(true)))) - 0.0), _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-4.5))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(2040.2671) : 0.0)), mix(float(0.0), _GLF_IDENTITY(float(_GLF_FUZZED(-4611.3150)), clamp(_GLF_IDENTITY(float(_GLF_FUZZED(-4611.3150)), max(float(_GLF_FUZZED(-4611.3150)), float(_GLF_FUZZED(-4611.3150)))), float(_GLF_FUZZED(-4611.3150)), float(_GLF_FUZZED(-4611.3150)))), _GLF_IDENTITY(bool(false), bool(bvec4(_GLF_IDENTITY(bool(false), ! (! (bool(false)))), false, false, true)))))), mat2(0.0, 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)))), 0.0, 0.0)), 0.0) + (mat2(injectionSwitch.x, _GLF_IDENTITY(exp(0.0), (_GLF_IDENTITY(exp(0.0), _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2x3(0.0, determinant(mat4(cos(0.0), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, sqrt(0.0), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, round(length(normalize(vec2(1.0, 1.0)))), tan(0.0), sqrt(0.0))), (true ? float(mat2x3(0.0, determinant(mat4(cos(0.0), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, sqrt(0.0), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, round(length(normalize(vec2(1.0, 1.0)))), tan(0.0), sqrt(0.0))) : _GLF_FUZZED(-0.0)))) + (_GLF_IDENTITY(exp(0.0), (exp(0.0)) - 0.0)))) - 0.0), 0.0, 0.0)))), (mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(mat2(injectionSwitch.x, _GLF_IDENTITY(exp(0.0), (exp(0.0)) - 0.0), 0.0, 0.0), _GLF_IDENTITY(transpose(transpose(mat2(injectionSwitch.x, _GLF_IDENTITY(exp(0.0), (exp(0.0)) - 0.0), 0.0, 0.0))), (_GLF_IDENTITY(transpose(transpose(mat2(injectionSwitch.x, _GLF_IDENTITY(exp(0.0), (exp(0.0)) - 0.0), 0.0, 0.0))), (transpose(transpose(mat2(injectionSwitch.x, _GLF_IDENTITY(exp(0.0), (exp(0.0)) - 0.0), 0.0, 0.0)))) - mat2(0.0, 0.0, 0.0, 0.0))) - _GLF_IDENTITY(mat2(0.0, 0.0, 0.0, 0.0), mat2(mat2x3(mat2(0.0, _GLF_IDENTITY(0.0, float(vec3(0.0, 1.0, 0.0))), 0.0, 0.0)))))), mat2(0.0, _GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(asinh(-1.0)))), 0.0, 0.0) + (mat2(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(exp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), mix(float(_GLF_FUZZED(580.731)), float(exp(0.0)), bool(true))), _GLF_IDENTITY((exp(_GLF_IDENTITY(0.0, float(mat2x4(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, length(0.0), 1.0, 0.0, 1.0))))), mix(float(_GLF_FUZZED(55.54)), float((exp(0.0))), bool(true))) - 0.0), 0.0, 0.0))))) * mat2(1.0))))))), min(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(mat2(injectionSwitch.x, _GLF_IDENTITY(exp(0.0), (exp(0.0)) - 0.0), 0.0, 0.0), mat2(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(mat2(injectionSwitch.x, _GLF_IDENTITY(exp(0.0), (exp(0.0)) - 0.0), 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0)))) / 1.0)), _GLF_IDENTITY(mat2(0.0, 0.0, 0.0, 0.0) + (mat2(injectionSwitch.x, _GLF_IDENTITY(exp(0.0), (exp(0.0)) - 0.0), 0.0, 0.0)), mat2(mat3x4(_GLF_IDENTITY(mat2(0.0, 0.0, 0.0, 0.0) + (mat2(injectionSwitch.x, _GLF_IDENTITY(exp(0.0), (exp(0.0)) - _GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, (0.0) * 1.0)))), 0.0, 0.0)), mat2(mat2(mat2(0.0, 0.0, 0.0, 0.0) + (mat2(injectionSwitch.x, _GLF_IDENTITY(exp(0.0), _GLF_IDENTITY((exp(0.0)) - 0.0, (_GLF_IDENTITY((exp(0.0)) - 0.0, (_GLF_IDENTITY((exp(0.0)) - 0.0, ((exp(0.0)) - 0.0) / 1.0)) - 0.0)) / 1.0)), 0.0, 0.0)))))))))), (mat2x4(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2(injectionSwitch.x, 0.0, 1.0, 0.0), transpose(transpose(_GLF_IDENTITY(mat2(injectionSwitch.x, 0.0, 1.0, 0.0), mat2(1.0) * (_GLF_IDENTITY(mat2(injectionSwitch.x, 0.0, 1.0, 0.0), (true ? mat2(injectionSwitch.x, 0.0, 1.0, 0.0) : _GLF_FUZZED(mat2(-0.7, 32.82, 9022.1115, 22.54))))))))))), injectionSwitch.x)), _GLF_IDENTITY(exp(0.0), (exp(0.0)) - 0.0), 0.0, 0.0), mat2(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0) + (mat2(injectionSwitch.x, _GLF_IDENTITY(exp(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-7.8)), float(0.0), bool(true)))), (exp(0.0)) - 0.0), 0.0, 0.0))))) * mat2(1.0)))), (_GLF_IDENTITY(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x) * _GLF_IDENTITY(1.0, min(1.0, 1.0))), (false ? _GLF_FUZZED(3121.1089) : injectionSwitch.x)), _GLF_IDENTITY(exp(0.0), (exp(0.0)) - 0.0), 0.0, 0.0), mat2(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(mat2(injectionSwitch.x, _GLF_IDENTITY(exp(0.0), (exp(0.0)) - _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0))), 0.0, 0.0), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(injectionSwitch.x, _GLF_IDENTITY(exp(0.0), (exp(0.0)) - 0.0), 0.0, 0.0))), transpose(transpose(_GLF_IDENTITY(mat2(injectionSwitch.x, _GLF_IDENTITY(exp(_GLF_IDENTITY(0.0, 0.0 + (0.0))), (exp(0.0)) - 0.0), 0.0, 0.0), mat2(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0) + (mat2(injectionSwitch.x, _GLF_IDENTITY(exp(0.0), (exp(0.0)) - 0.0), 0.0, 0.0))))))), (mat2x4(_GLF_IDENTITY(mat2(injectionSwitch.x, _GLF_IDENTITY(exp(0.0), (exp(0.0)) - 0.0), 0.0, 0.0), mat2(0.0, 0.0, 0.0, 0.0) + (_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(sin(0.0), length(vec3(0.0, 0.0, 0.0)), 1.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(sin(0.0), length(vec3(0.0, 0.0, 0.0)), 1.0)), max(dot(vec3(0.0, 0.0, 1.0), vec3(sin(0.0), length(vec3(0.0, 0.0, 0.0)), 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(sin(0.0), length(vec3(0.0, 0.0, 0.0)), 1.0)))))), _GLF_IDENTITY(exp(0.0), (exp(0.0)) - 0.0), 0.0, 0.0), (false ? _GLF_FUZZED(mat2(201.155, -9.6, 6.1, -8.6)) : mat2(injectionSwitch.x, _GLF_IDENTITY(exp(0.0), (exp(0.0)) - 0.0), 0.0, 0.0))))))) * mat2(1.0))))) * mat2(1.0)), (_GLF_IDENTITY(false ? _GLF_FUZZED(mat2(-180.141, -794.663, 1.7, -3173.6278)) : _GLF_IDENTITY(_GLF_IDENTITY(mat2(injectionSwitch.x, _GLF_IDENTITY(exp(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(atanh(955.253))))), (exp(0.0)) - 0.0), 0.0, 0.0), mat2(mat4x2(mat2(injectionSwitch.x, _GLF_IDENTITY(exp(0.0), (exp(0.0)) - 0.0), 0.0, 0.0)))), mat2(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), mix(float(_GLF_FUZZED(5.4)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), float(_GLF_IDENTITY(mat3x4(max(injectionSwitch.x, injectionSwitch.x), sqrt(0.0), 1.0, 0.0, 0.0, log(1.0), 0.0, abs(1.0), 0.0, 0.0, 1.0, 0.0), (mat3x4(max(injectionSwitch.x, injectionSwitch.x), sqrt(0.0), 1.0, 0.0, 0.0, log(1.0), 0.0, abs(1.0), 0.0, 0.0, 1.0, 0.0)) - mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(round(22.75)))), injectionSwitch.x)), _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), (clamp(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) + 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), (max(injectionSwitch.x, injectionSwitch.x)) + 0.0)), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))))))), bool(true))), _GLF_IDENTITY(exp(0.0), (_GLF_IDENTITY(exp(0.0), mix(float(_GLF_FUZZED((vec3(5575.7668, 1.5, 3120.4512)).r)), float(exp(0.0)), bool(true)))) - 0.0), _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-3.1)))) - 0.0) : _GLF_FUZZED(-4.5))), 0.0), mat2(0.0, 0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0) + (mat2(injectionSwitch.x, _GLF_IDENTITY(exp(0.0), (exp(0.0)) - 0.0), 0.0, 0.0)))), (mat2x4(_GLF_IDENTITY(mat2(injectionSwitch.x, _GLF_IDENTITY(exp(0.0), (_GLF_IDENTITY(exp(0.0), clamp(exp(0.0), _GLF_IDENTITY(_GLF_IDENTITY(exp(0.0), (exp(0.0)) - 0.0), min(exp(0.0), exp(0.0))), _GLF_IDENTITY(exp(0.0), (exp(0.0)) / 1.0)))) - 0.0), 0.0, 0.0), mat2(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(0.4), (_GLF_IDENTITY(_GLF_FUZZED(0.4), float(mat2x3(_GLF_FUZZED(0.4), 0.0, 1.0, 1.0, 0.0, 0.0)))) - 0.0), min(_GLF_IDENTITY(_GLF_FUZZED(0.4), (_GLF_IDENTITY(_GLF_FUZZED(0.4), float(mat2x3(_GLF_FUZZED(0.4), 0.0, 1.0, 1.0, 0.0, 0.0)))) - 0.0), _GLF_IDENTITY(_GLF_FUZZED(0.4), (_GLF_IDENTITY(_GLF_FUZZED(0.4), float(mat2x3(_GLF_FUZZED(0.4), 0.0, 1.0, 1.0, 0.0, 0.0)))) - 0.0)))), bool(false))), 0.0) + (mat2(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(exp(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-82.62) : 0.0))), mix(float(_GLF_FUZZED(580.731)), float(exp(0.0)), bool(_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), (! (! (true))) || false))))), (exp(0.0)) - _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (0.0) / abs(1.0))), float(_GLF_FUZZED(7.9)), bool(false)))), 0.0, 0.0))))) * mat2(1.0)))), (_GLF_IDENTITY(false ? _GLF_FUZZED(mat2(-180.141, -794.663, 1.7, -3173.6278)) : _GLF_IDENTITY(_GLF_IDENTITY(mat2(injectionSwitch.x, _GLF_IDENTITY(exp(0.0), (exp(0.0)) - 0.0), 0.0, 0.0), mat2(mat4x2(mat2(injectionSwitch.x, _GLF_IDENTITY(exp(0.0), (exp(0.0)) - 0.0), 0.0, 0.0)))), mat2(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), mix(float(_GLF_FUZZED(5.4)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, injectionSwitch.x)), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, float(vec4(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), 0.0, 0.0, 1.0))), injectionSwitch.x)), clamp(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))).x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))))), _GLF_IDENTITY(bool(true), (bool(true)) || false))), _GLF_IDENTITY(_GLF_IDENTITY(exp(0.0), (_GLF_IDENTITY(exp(0.0), mix(float(_GLF_FUZZED((_GLF_IDENTITY(vec3(5575.7668, 1.5, 3120.4512), _GLF_IDENTITY(mat3(1.0) * (vec3(5575.7668, 1.5, 3120.4512)), vec3(mat3x2(_GLF_IDENTITY(mat3(1.0) * (vec3(5575.7668, 1.5, 3120.4512)), mix(vec3(_GLF_FUZZED(437.763), _GLF_FUZZED(43.79), (mat3(1.0) * (vec3(5575.7668, 1.5, 3120.4512)))[2]), vec3((mat3(1.0) * (vec3(5575.7668, 1.5, 3120.4512)))[0], (mat3(1.0) * (vec3(5575.7668, 1.5, 3120.4512)))[1], _GLF_FUZZED(-31.83)), bvec3(true, true, false))), 1.0, 0.0, 0.0))))).r)), float(exp(0.0)), bool(true)))) - 0.0), min(_GLF_IDENTITY(exp(0.0), (_GLF_IDENTITY(exp(0.0), mix(float(_GLF_FUZZED((_GLF_IDENTITY(vec3(5575.7668, 1.5, 3120.4512), _GLF_IDENTITY(mat3(1.0) * (vec3(5575.7668, 1.5, 3120.4512)), vec3(mat3x2(_GLF_IDENTITY(mat3(1.0) * (vec3(5575.7668, 1.5, 3120.4512)), mix(vec3(_GLF_FUZZED(437.763), _GLF_FUZZED(43.79), (mat3(1.0) * (vec3(5575.7668, 1.5, 3120.4512)))[2]), vec3((mat3(1.0) * (vec3(5575.7668, 1.5, 3120.4512)))[0], (mat3(1.0) * (vec3(5575.7668, 1.5, 3120.4512)))[1], _GLF_FUZZED(-31.83)), bvec3(true, true, false))), 1.0, 0.0, 0.0))))).r)), float(exp(0.0)), bool(true)))) - 0.0), _GLF_IDENTITY(exp(0.0), (_GLF_IDENTITY(exp(0.0), mix(float(_GLF_FUZZED((_GLF_IDENTITY(vec3(5575.7668, 1.5, 3120.4512), _GLF_IDENTITY(mat3(1.0) * (vec3(5575.7668, 1.5, 3120.4512)), vec3(mat3x2(_GLF_IDENTITY(mat3(1.0) * (vec3(5575.7668, 1.5, 3120.4512)), mix(vec3(_GLF_FUZZED(437.763), _GLF_FUZZED(43.79), (mat3(1.0) * (vec3(5575.7668, 1.5, 3120.4512)))[2]), vec3((mat3(1.0) * (vec3(5575.7668, 1.5, 3120.4512)))[0], (mat3(1.0) * (vec3(5575.7668, 1.5, 3120.4512)))[1], _GLF_FUZZED(-31.83)), bvec3(true, true, false))), 1.0, 0.0, 0.0))))).r)), float(exp(0.0)), bool(true)))) - 0.0))), _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-3.1)))) - 0.0) : _GLF_FUZZED(_GLF_IDENTITY(-4.5, mix(float(_GLF_FUZZED(-7794.9344)), float(-4.5), bool(_GLF_IDENTITY(true, false || (true)))))))), 0.0), mat2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0, 0.0) + (mat2(injectionSwitch.x, _GLF_IDENTITY(exp(0.0), (exp(0.0)) - 0.0), 0.0, 0.0)))), (mat2x4(_GLF_IDENTITY(mat2(injectionSwitch.x, _GLF_IDENTITY(exp(0.0), (_GLF_IDENTITY(_GLF_IDENTITY(exp(0.0), clamp(exp(0.0), _GLF_IDENTITY(exp(0.0), min(exp(0.0), exp(0.0))), _GLF_IDENTITY(exp(0.0), (exp(0.0)) / 1.0))), (_GLF_IDENTITY(exp(0.0), clamp(exp(0.0), _GLF_IDENTITY(exp(0.0), min(exp(0.0), exp(0.0))), _GLF_IDENTITY(exp(0.0), (exp(0.0)) / 1.0)))) / 1.0)) - 0.0), 0.0, 0.0), mat2(0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, float(mat4x2(0.0, 1.0, 0.0, 0.0, abs(0.0), 0.0, 1.0, 1.0))) : _GLF_FUZZED(vec3(4.3, 1.5, 8484.7441)[0]))), mix(float(0.0), float(_GLF_FUZZED(_GLF_IDENTITY(0.4, tan(0.0) + (0.4)))), bool(false))), 0.0) + (mat2(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(exp(0.0), (exp(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))))) * 1.0), mix(float(_GLF_FUZZED(580.731)), float(_GLF_IDENTITY(exp(0.0), _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(exp(0.0), max(exp(0.0), exp(0.0))), 1.0, 0.0, 1.0, 0.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 1.0)), float(vec4(float(mat3(_GLF_IDENTITY(exp(0.0), max(exp(0.0), exp(0.0))), 1.0, 0.0, 1.0, 0.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 1.0)), 0.0, 1.0, 1.0))))), bool(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false))))))), (exp(0.0)) - 0.0), 0.0, 0.0))))) * mat2(1.0)))), mat2(mat4x3(false ? _GLF_FUZZED(mat2(-180.141, -794.663, 1.7, -3173.6278)) : _GLF_IDENTITY(_GLF_IDENTITY(mat2(injectionSwitch.x, _GLF_IDENTITY(exp(0.0), (exp(0.0)) - 0.0), 0.0, 0.0), mat2(mat4x2(mat2(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(exp(0.0), (exp(0.0)) - 0.0), (_GLF_IDENTITY(exp(0.0), (exp(0.0)) - 0.0)) / 1.0), 0.0, 0.0)))), mat2(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(mat2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), mix(float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(57.79)), bool(false))), mix(float(_GLF_FUZZED(5.4)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), clamp(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(dot(vec4(-5.9, 5913.0394, 3563.5419, -999.848), vec4(-835.683, 162.114, vec2(-8.0, 8.9)))))))), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))))), bool(true))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), mix(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), mix(float(float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))), float(_GLF_FUZZED(-6.0)), bool(false))), float(_GLF_FUZZED(57.79)), bool(false))), mix(_GLF_IDENTITY(float(_GLF_FUZZED(5.4)), (true ? float(_GLF_FUZZED(5.4)) : _GLF_FUZZED(-5.1))), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, injectionSwitch.x)), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), clamp(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(dot(vec4(-5.9, 5913.0394, 3563.5419, -999.848), vec4(-835.683, 162.114, vec2(-8.0, 8.9))))), max((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(dot(vec4(-5.9, 5913.0394, 3563.5419, -999.848), vec4(-835.683, 162.114, vec2(-8.0, 8.9))))), _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(dot(vec4(-5.9, 5913.0394, 3563.5419, -999.848), vec4(-835.683, 162.114, vec2(-8.0, 8.9))))), max((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(dot(vec4(-5.9, 5913.0394, 3563.5419, -999.848), vec4(-835.683, 162.114, vec2(-8.0, 8.9))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(dot(vec4(-5.9, 5913.0394, 3563.5419, -999.848), vec4(-835.683, 162.114, vec2(-8.0, 8.9)))))))))))), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))))), _GLF_IDENTITY(bool(true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(true), ! (! (bool(true))))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(true), ! (! (bool(true))))), (! (_GLF_IDENTITY(bool(true), ! (! (bool(true)))))) || false)))))))) / 1.0), _GLF_IDENTITY(exp(0.0), (_GLF_IDENTITY(exp(0.0), mix(float(_GLF_IDENTITY(_GLF_FUZZED((vec3(5575.7668, 1.5, 3120.4512)).r), (_GLF_FUZZED((vec3(5575.7668, 1.5, 3120.4512)).r)) / 1.0)), float(_GLF_IDENTITY(exp(0.0), min(exp(0.0), _GLF_IDENTITY(exp(0.0), float(mat2x4(exp(0.0), 0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), mix(float(_GLF_FUZZED(52.75)), float(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), (dot(vec2(0.0, 1.0), vec2(0.0, 1.0))) * 1.0)), bool(true))), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 1.0, 1.0, 1.0)))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(true, false || (true))), ! (! (bool(_GLF_IDENTITY(true, false || (true))))))))) - 0.0), _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-3.1)))) - 0.0) : _GLF_IDENTITY(_GLF_FUZZED(-4.5), max(_GLF_FUZZED(-4.5), _GLF_FUZZED(-4.5))))), 0.0), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(injectionSwitch.x, _GLF_IDENTITY(exp(0.0), (exp(0.0)) - 0.0), 0.0, 0.0)))), (mat2x4(_GLF_IDENTITY(mat2(injectionSwitch.x, _GLF_IDENTITY(exp(0.0), (_GLF_IDENTITY(exp(0.0), clamp(exp(0.0), _GLF_IDENTITY(exp(0.0), min(exp(0.0), exp(0.0))), _GLF_IDENTITY(exp(0.0), (exp(0.0)) / 1.0)))) - 0.0), 0.0, 0.0), mat2(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(0.4)), bool(false))), 0.0) + (mat2(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(exp(0.0), mix(float(_GLF_FUZZED(580.731)), float(exp(0.0)), bool(_GLF_IDENTITY(true, ! (! (true)))))), mix(float(_GLF_FUZZED(float(53382))), float(_GLF_IDENTITY(exp(0.0), mix(_GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(580.731, (false ? _GLF_FUZZED(0.5) : 580.731)))), (float(_GLF_FUZZED(_GLF_IDENTITY(580.731, (false ? _GLF_FUZZED(0.5) : 580.731))))) / 1.0), float(exp(0.0)), bool(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), true && (_GLF_IDENTITY(true, ! (! (true)))))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), true && (_GLF_IDENTITY(true, ! (! (true))))))) || false)), bool(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), true && (_GLF_IDENTITY(true, ! (! (true)))))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), true && (_GLF_IDENTITY(true, ! (! (true))))))) || false)), false), bvec2(bvec2(bvec2(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), true && (_GLF_IDENTITY(true, ! (! (true)))))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), true && (_GLF_IDENTITY(true, ! (! (true))))))) || false)), false))))))))))), bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), (exp(0.0)) - 0.0), 0.0, 0.0))))) * mat2(1.0)))))))) / mat2(1.0, 1.0, 1.0, 1.0))))), float(_GLF_IDENTITY(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(_GLF_IDENTITY(vec2(injectionSwitch.x, 1.0), mix(vec2(_GLF_FUZZED(37.25), _GLF_FUZZED(-13.27)), vec2((vec2(injectionSwitch.x, 1.0))[0], (vec2(injectionSwitch.x, 1.0))[1]), bvec2(true, true))), max(_GLF_IDENTITY(_GLF_IDENTITY(vec2(injectionSwitch.x, 1.0), mix(vec2(_GLF_FUZZED(37.25), _GLF_FUZZED(-13.27)), vec2((vec2(injectionSwitch.x, 1.0))[0], (vec2(injectionSwitch.x, 1.0))[1]), bvec2(true, true))), (_GLF_IDENTITY(vec2(injectionSwitch.x, 1.0), mix(vec2(_GLF_FUZZED(37.25), _GLF_FUZZED(-13.27)), vec2((vec2(injectionSwitch.x, 1.0))[0], (vec2(injectionSwitch.x, 1.0))[1]), bvec2(true, true)))) * mat2(1.0)), _GLF_IDENTITY(vec2(injectionSwitch.x, 1.0), mix(vec2(_GLF_FUZZED(37.25), _GLF_FUZZED(-13.27)), vec2((vec2(injectionSwitch.x, 1.0))[0], (vec2(injectionSwitch.x, 1.0))[1]), bvec2(true, true))))))), _GLF_IDENTITY(exp(0.0), (_GLF_IDENTITY(exp(0.0), max(exp(0.0), exp(0.0)))) - 0.0), 0.0, 0.0), mat2(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(mat2(injectionSwitch.x, _GLF_IDENTITY(exp(_GLF_IDENTITY(0.0, (0.0) * 1.0)), (exp(0.0)) - 0.0), 0.0, 0.0), _GLF_IDENTITY(mat2(0.0, 0.0, 0.0, 0.0) + (mat2(injectionSwitch.x, _GLF_IDENTITY(exp(0.0), (exp(0.0)) - 0.0), 0.0, 0.0)), mat2(mat4(_GLF_IDENTITY(mat2(0.0, 0.0, 0.0, 0.0) + (mat2(injectionSwitch.x, _GLF_IDENTITY(exp(0.0), (exp(0.0)) - 0.0), 0.0, 0.0)), (mat2(0.0, 0.0, 0.0, 0.0) + _GLF_IDENTITY((mat2(injectionSwitch.x, _GLF_IDENTITY(exp(0.0), (exp(0.0)) - 0.0), 0.0, 0.0)), (true ? (mat2(injectionSwitch.x, _GLF_IDENTITY(exp(0.0), (exp(0.0)) - 0.0), 0.0, 0.0)) : _GLF_FUZZED(mat2(10.91, -37.07, 6.5, -5.0))))) * mat2(1.0))))))), (mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(mat2(injectionSwitch.x, _GLF_IDENTITY(exp(0.0), (exp(0.0)) - 0.0), 0.0, 0.0), mat2(mat2(mat2(injectionSwitch.x, _GLF_IDENTITY(exp(0.0), (exp(0.0)) - 0.0), 0.0, 0.0)))), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(injectionSwitch.x, _GLF_IDENTITY(exp(0.0), (exp(_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(65.42)), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) : _GLF_FUZZED(dot(vec3(4.9, -3.4, -652.362), (vec4(-3837.7748, -2683.1568, 8248.7956, 3194.4235) * mat3x4(-192.266, 9.9, -3810.4385, -461.078, -8834.6700, -5527.1264, 2.6, 44.49, 1484.5450, 834.901, 5.3, -1213.7757)))))))) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(clamp(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-623.678)), float(0.0), bool(true))), 0.0), min(clamp(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-623.678)), float(0.0), bool(true))), 0.0), clamp(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-623.678)), float(0.0), bool(true))), 0.0)))), 0.0))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(mat2(injectionSwitch.x, _GLF_IDENTITY(exp(0.0), (exp(0.0)) - 0.0), 0.0, 0.0), mat2(mat2(mat2(injectionSwitch.x, _GLF_IDENTITY(exp(0.0), (exp(0.0)) - 0.0), 0.0, 0.0)))), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(injectionSwitch.x, _GLF_IDENTITY(exp(0.0), (exp(_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(65.42)), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) : _GLF_FUZZED(dot(vec3(4.9, -3.4, -652.362), (vec4(-3837.7748, -2683.1568, 8248.7956, 3194.4235) * mat3x4(-192.266, 9.9, -3810.4385, -461.078, -8834.6700, -5527.1264, 2.6, 44.49, 1484.5450, 834.901, 5.3, -1213.7757)))))))) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(clamp(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-623.678)), float(0.0), bool(true))), 0.0), min(clamp(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-623.678)), float(0.0), bool(true))), 0.0), clamp(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-623.678)), float(0.0), bool(true))), 0.0)))), 0.0))), (_GLF_IDENTITY(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch.x, sin(0.0) + (injectionSwitch.x)), _GLF_IDENTITY(exp(0.0), (exp(0.0)) - 0.0), 0.0, 0.0), mat2(mat2(mat2(injectionSwitch.x, _GLF_IDENTITY(exp(0.0), (exp(0.0)) - 0.0), 0.0, 0.0)))), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, _GLF_IDENTITY(exp(0.0), (exp(_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(65.42)), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) : _GLF_FUZZED(dot(vec3(4.9, -3.4, -652.362), _GLF_IDENTITY((vec4(-3837.7748, -2683.1568, 8248.7956, 3194.4235) * mat3x4(-192.266, 9.9, -3810.4385, -461.078, -8834.6700, -5527.1264, 2.6, 44.49, 1484.5450, 834.901, 5.3, -1213.7757)), _GLF_IDENTITY(vec3(mat4((vec4(-3837.7748, -2683.1568, 8248.7956, 3194.4235) * mat3x4(-192.266, 9.9, -3810.4385, -461.078, -8834.6700, -5527.1264, 2.6, 44.49, 1484.5450, 834.901, 5.3, -1213.7757)), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, exp(0.0), 0.0, 1.0, determinant(mat4(1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 0.0, 0.0, 0.0, 1.0)), 1.0, sqrt(abs(0.0)), 1.0)), mat3(1.0) * (vec3(mat4((vec4(-3837.7748, -2683.1568, 8248.7956, 3194.4235) * mat3x4(-192.266, 9.9, -3810.4385, -461.078, -8834.6700, -5527.1264, 2.6, 44.49, 1484.5450, 834.901, 5.3, -1213.7757)), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, exp(0.0), 0.0, 1.0, determinant(mat4(1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 0.0, 0.0, 0.0, 1.0)), 1.0, sqrt(abs(0.0)), 1.0))))))))))) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(clamp(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-623.678)), float(0.0), bool(true))), 0.0), min(clamp(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-623.678)), float(0.0), bool(true))), 0.0), clamp(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, min(0.0, 0.0))), float(_GLF_FUZZED(-7.0)), bool(false))), mix(float(_GLF_FUZZED(-623.678)), float(0.0), bool(true))), 0.0)))), 0.0)))) - mat2(0.0, 0.0, 0.0, 0.0)) : _GLF_FUZZED(mat2(5.5, -2.6, -1589.3401, -363.838)))))) * mat2(1.0)))), _GLF_IDENTITY((false ? _GLF_FUZZED(mat2(-180.141, -794.663, 1.7, -3173.6278)) : _GLF_IDENTITY(_GLF_IDENTITY(mat2(injectionSwitch.x, _GLF_IDENTITY(exp(0.0), (exp(0.0)) - 0.0), 0.0, 0.0), mat2(mat4x2(mat2(injectionSwitch.x, _GLF_IDENTITY(exp(0.0), (exp(0.0)) - 0.0), 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat4x2(0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0), (mat4x2(0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)) * mat4(1.0)))), 0.0)))))), mat2(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(exp(0.0), clamp(exp(0.0), _GLF_IDENTITY(exp(0.0), float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(exp(0.0), max(exp(0.0), exp(0.0))), 1.0, 1.0, 0.0, 0.0, log(1.0), 1.0, 0.0), mat4x2(_GLF_IDENTITY(mat4x3(mat4x2(_GLF_IDENTITY(exp(0.0), max(exp(0.0), exp(0.0))), 1.0, 1.0, 0.0, 0.0, log(1.0), 1.0, 0.0)), (false ? _GLF_FUZZED(mat4x3(8.7, -2917.4359, -3.3, -438.397, 2241.4992, -31.59, -6044.7463, -2.5, 9954.5553, -8.0, -9.4, 8.3)) : mat4x3(mat4x2(_GLF_IDENTITY(exp(0.0), max(exp(0.0), exp(0.0))), 1.0, 1.0, 0.0, 0.0, log(1.0), 1.0, 0.0)))))))), _GLF_IDENTITY(exp(0.0), max(exp(0.0), _GLF_IDENTITY(_GLF_IDENTITY(exp(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-5707.3546)), bool(false)))), max(exp(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-5707.3546)), bool(false)))), exp(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-5707.3546)), bool(false)))))), mix(float(exp(0.0)), float(_GLF_FUZZED(_GLF_IDENTITY(5.7, max(_GLF_IDENTITY(5.7, mix(float(_GLF_FUZZED(628.069)), float(5.7), bool(true))), _GLF_IDENTITY(5.7, _GLF_IDENTITY(float(mat3x4(5.7, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)), (false ? _GLF_FUZZED(-60.97) : float(mat3x4(5.7, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0))))))))), bool(false))))))), (_GLF_IDENTITY(_GLF_IDENTITY(exp(0.0), (exp(0.0)) / 1.0), mix(float(_GLF_FUZZED((vec3(5575.7668, 1.5, 3120.4512)).r)), float(exp(0.0)), bool(true)))) - 0.0), _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-4.5))), 0.0), _GLF_IDENTITY(mat2(0.0, 0.0, 0.0, 0.0), transpose(_GLF_IDENTITY(transpose(_GLF_IDENTITY(mat2(0.0, 0.0, 0.0, 0.0), (mat2(0.0, 0.0, 0.0, 0.0)) / mat2(1.0, 1.0, 1.0, 1.0))), (transpose(_GLF_IDENTITY(mat2(0.0, 0.0, 0.0, 0.0), (mat2(0.0, 0.0, 0.0, 0.0)) / mat2(1.0, 1.0, 1.0, 1.0)))) - mat2(0.0, 0.0, 0.0, 0.0)))) + (mat2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))), _GLF_IDENTITY(_GLF_IDENTITY(exp(0.0), (exp(0.0)) * 1.0), (exp(0.0)) - 0.0), 0.0, 0.0)))), (mat2x4(_GLF_IDENTITY(mat2(injectionSwitch.x, _GLF_IDENTITY(exp(0.0), (exp(0.0)) - 0.0), 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))), mat2(0.0, 0.0, 0.0, 0.0) + _GLF_IDENTITY((mat2(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(exp(0.0), (_GLF_IDENTITY(exp(0.0), max(_GLF_IDENTITY(exp(0.0), min(_GLF_IDENTITY(exp(0.0), 0.0 + (exp(0.0))), exp(0.0))), exp(0.0)))) - 0.0), mix(float(_GLF_FUZZED(580.731)), float(exp(0.0)), bool(true))), (exp(0.0)) - 0.0), _GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0)), ((mat2(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(exp(0.0), (_GLF_IDENTITY(exp(0.0), max(_GLF_IDENTITY(exp(0.0), min(_GLF_IDENTITY(exp(0.0), 0.0 + (exp(0.0))), exp(0.0))), exp(0.0)))) - 0.0), mix(float(_GLF_FUZZED(580.731)), float(exp(0.0)), bool(true))), (exp(0.0)) - 0.0), _GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0))) / mat2(1.0, 1.0, 1.0, 1.0))))) * mat2(1.0))))), (false ? _GLF_FUZZED((9234.5708 - mat2(-833.553, -1.6, -5.5, -1806.5615))) : (false ? _GLF_FUZZED(mat2(-180.141, -794.663, 1.7, -3173.6278)) : _GLF_IDENTITY(_GLF_IDENTITY(mat2(injectionSwitch.x, _GLF_IDENTITY(exp(0.0), (exp(0.0)) - 0.0), 0.0, 0.0), mat2(mat4x2(mat2(injectionSwitch.x, _GLF_IDENTITY(exp(0.0), (exp(0.0)) - 0.0), 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat4x2(0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0), (mat4x2(0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)) * mat4(1.0)))), 0.0)))))), mat2(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(exp(0.0), clamp(exp(0.0), _GLF_IDENTITY(exp(0.0), float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(exp(0.0), max(exp(0.0), exp(0.0))), 1.0, 1.0, 0.0, 0.0, log(1.0), 1.0, 0.0), mat4x2(_GLF_IDENTITY(mat4x3(mat4x2(_GLF_IDENTITY(exp(0.0), max(exp(0.0), exp(0.0))), 1.0, 1.0, 0.0, 0.0, log(1.0), 1.0, 0.0)), (false ? _GLF_FUZZED(mat4x3(8.7, -2917.4359, -3.3, -438.397, 2241.4992, -31.59, -6044.7463, -2.5, 9954.5553, -8.0, -9.4, 8.3)) : mat4x3(mat4x2(_GLF_IDENTITY(exp(0.0), max(exp(0.0), exp(0.0))), 1.0, 1.0, 0.0, 0.0, log(1.0), 1.0, 0.0)))))))), _GLF_IDENTITY(exp(0.0), max(exp(0.0), _GLF_IDENTITY(_GLF_IDENTITY(exp(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-5707.3546)), bool(false)))), max(exp(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-5707.3546)), bool(false)))), exp(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-5707.3546)), bool(false)))))), mix(float(exp(0.0)), float(_GLF_FUZZED(_GLF_IDENTITY(5.7, max(_GLF_IDENTITY(5.7, mix(float(_GLF_FUZZED(628.069)), float(5.7), bool(true))), _GLF_IDENTITY(5.7, _GLF_IDENTITY(float(mat3x4(5.7, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)), (false ? _GLF_FUZZED(-60.97) : float(mat3x4(5.7, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0))))))))), bool(false))))))), (_GLF_IDENTITY(_GLF_IDENTITY(exp(0.0), (exp(0.0)) / 1.0), mix(float(_GLF_FUZZED((vec3(5575.7668, 1.5, 3120.4512)).r)), float(exp(0.0)), bool(true)))) - 0.0), _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-4.5))), 0.0), _GLF_IDENTITY(mat2(0.0, 0.0, 0.0, 0.0), transpose(_GLF_IDENTITY(transpose(_GLF_IDENTITY(mat2(0.0, 0.0, 0.0, 0.0), (mat2(0.0, 0.0, 0.0, 0.0)) / mat2(1.0, 1.0, 1.0, 1.0))), (transpose(_GLF_IDENTITY(mat2(0.0, 0.0, 0.0, 0.0), (mat2(0.0, 0.0, 0.0, 0.0)) / mat2(1.0, 1.0, 1.0, 1.0)))) - mat2(0.0, 0.0, 0.0, 0.0)))) + (mat2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))), _GLF_IDENTITY(_GLF_IDENTITY(exp(0.0), (exp(0.0)) * 1.0), (exp(0.0)) - 0.0), 0.0, 0.0)))), (mat2x4(_GLF_IDENTITY(mat2(injectionSwitch.x, _GLF_IDENTITY(exp(0.0), (exp(0.0)) - 0.0), 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))), mat2(0.0, 0.0, 0.0, 0.0) + _GLF_IDENTITY((mat2(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(exp(0.0), (_GLF_IDENTITY(exp(0.0), max(_GLF_IDENTITY(exp(0.0), min(_GLF_IDENTITY(exp(0.0), 0.0 + (exp(0.0))), exp(0.0))), exp(0.0)))) - 0.0), mix(float(_GLF_FUZZED(580.731)), float(exp(0.0)), bool(true))), (exp(0.0)) - 0.0), _GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0)), ((mat2(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(exp(0.0), (_GLF_IDENTITY(exp(0.0), max(_GLF_IDENTITY(exp(0.0), min(_GLF_IDENTITY(exp(0.0), 0.0 + (exp(0.0))), exp(0.0))), exp(0.0)))) - 0.0), mix(float(_GLF_FUZZED(580.731)), float(exp(0.0)), bool(true))), (exp(0.0)) - 0.0), _GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0))) / mat2(1.0, 1.0, 1.0, 1.0))))) * mat2(1.0)))))))))))) > injectionSwitch.y))))
  {
   do
    {
     do
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
        {
        }
       else
        {
         return;
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       do
        {
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bvec4(true, false, false, false)))))
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                continue;
               barrier();
              }
             else
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
             if(_GLF_DEAD(false))
              barrier();
            }
          }
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), _GLF_IDENTITY((bool(bvec3(false, false, false))), true && ((bool(bvec3(false, false, false))))) || false)), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))
          barrier();
        }
       else
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
            return;
           barrier();
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4(injectionSwitch, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0), vec2(0.0, 1.0)), dot(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0), vec2(0.0, 1.0))), cos(sin(0.0)), 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, 1.0, sqrt(0.0), 1.0, 0.0), (false ? _GLF_FUZZED(mat4(2.1, 3.4, -3725.1239, -6.1, 568.295, -4.0, 2.5, -5.1, 7.1, -248.850, -5.9, 7.6, 492.952, -7.4, -8.5, 4323.8176)) : mat4(injectionSwitch, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0), vec2(0.0, 1.0)), dot(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0), vec2(0.0, 1.0))), cos(sin(0.0)), 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, 1.0, sqrt(0.0), 1.0, 0.0))))).y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     else
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), ! (! (bool(bvec2(true, false)))))))))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 return;
                }
               for(int _injected_loop_counter = _GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec2(1, 1)), (int(ivec2(1, 1))) ^ 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false)))))))))))))
                  barrier();
                 barrier();
                }
              }
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 >> _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(_GLF_IDENTITY(8, min(8, _GLF_IDENTITY(8, (8) / 1)))), 0 ^ (int(8)))))); _injected_loop_counter --)
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                return;
               if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    continue;
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   barrier();
                  }
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
                    barrier();
                  }
                 else
                  {
                   return;
                  }
                }
              }
             barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
          }
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y))))
                  break;
                 barrier();
                }
               barrier();
              }
             if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
              barrier();
             do
              {
               if(_GLF_DEAD(false))
                break;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               do
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
                  barrier();
                 if(_GLF_DEAD(false))
                  return;
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
             while(_GLF_WRAPPED_LOOP(false));
             barrier();
            }
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
          return;
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           else
            {
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, false || (false)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
              barrier();
            }
          }
         else
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
           if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true)))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                return;
               if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))
                barrier();
               do
                {
                 return;
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
               if(_GLF_DEAD(false))
                barrier();
              }
            }
           else
            {
            }
           if(_GLF_DEAD(false))
            barrier();
           for(int _injected_loop_counter = (_GLF_IDENTITY(_GLF_IDENTITY((int(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(int(1), int(1))) & -35468, ~ (_GLF_IDENTITY(~ ((int(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(int(1), int(1))) & -35468), min(~ ((int(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(int(1), int(1))) & -35468), ~ ((int(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(int(1), int(1))) & -35468))))), 1 * (_GLF_IDENTITY(_GLF_IDENTITY((int(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(int(1), int(1))) & -35468, ~ (_GLF_IDENTITY(~ ((int(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(int(1), int(1))) & -35468), min(~ ((int(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(int(1), int(1))) & -35468), ~ ((int(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(int(1), int(1))) & -35468))))), int(ivec3(_GLF_IDENTITY((int(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(int(1), int(1))) & -35468, ~ (_GLF_IDENTITY(~ ((int(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(int(1), int(1))) & -35468), min(~ ((int(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(int(1), int(1))) & -35468), ~ ((int(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(int(1), int(1))) & -35468))))), 0, 0)))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), int(_GLF_IDENTITY(ivec3(int(_GLF_ONE(1.0, injectionSwitch.y)), 1, 1), ~ (~ (ivec3(int(_GLF_ONE(_GLF_IDENTITY(1.0, min(1.0, 1.0)), injectionSwitch.y)), 1, 1))))))); _injected_loop_counter ++)
            {
             return;
            }
          }
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))))), bool(bvec4((! (_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), (false) && true)))
          barrier();
        }
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), true && (! (false)))) || false)))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), true && ((_GLF_IDENTITY(false, true && (false))))))) && true)))
        return;
      }
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_WRAPPED_IF_TRUE(true)) && _GLF_IDENTITY(true, ! (! (true)))))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
        }
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x < injectionSwitch.y))))
        {
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       do
        {
         return;
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      {
       if(_GLF_DEAD(false))
        {
         do
          {
           barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bvec2(false, true)))), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(false, bool(bvec2(false, true)))), false, false, false)), (bool(bvec4(bool(_GLF_IDENTITY(false, bool(bvec2(false, true)))), false, false, false))) || false))))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
          }
         while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))), bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false || (_GLF_WRAPPED_LOOP(false)))))));
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
            barrier();
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
           else
            {
            }
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
             if(_GLF_DEAD(false))
              return;
            }
           else
            {
             return;
             if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
              return;
            }
          }
        }
       for(int _injected_loop_counter = (84661 & 0); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) * 1) < (1 & 1)); _injected_loop_counter ++)
        {
         do
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (true ? _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) >> (0 | 0)) : _GLF_FUZZED(_injected_loop_counter))) < 1); _injected_loop_counter ++)
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
                  continue;
                 barrier();
                }
               if(_GLF_DEAD(false))
                break;
               if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))) - abs(vec2(0.0, 0.0))).x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
                barrier();
              }
             else
              {
              }
             if(_GLF_DEAD(false))
              {
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                {
                 barrier();
                 if(_GLF_DEAD(false))
                  return;
                }
              }
             if(_GLF_DEAD(false))
              barrier();
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            {
             do
              {
               barrier();
               if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))).x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))).x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true && (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))), _GLF_IDENTITY(mat2(1.0) * (clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))), (mat2(1.0) * (clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))))) * mat2(1.0)))).x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))
                {
                 if(_GLF_DEAD(false))
                  return;
                 barrier();
                }
               if(_GLF_DEAD(false))
                return;
              }
             while(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), true && (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(false)))))), false || (_GLF_WRAPPED_LOOP(false))));
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
          }
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true, false))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true)))
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x < injectionSwitch.y))))
            {
             barrier();
            }
           else
            {
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, true)), bool(bvec2(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, true)), true))))))))
            barrier();
           if(_GLF_DEAD(false))
            break;
          }
        }
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false)), false || (bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false)))))), (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false)), false || (bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false))))))) && true)))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
  }
 uint gid = gl_GlobalInvocationID.x;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 & 1)); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     do
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true)))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         do
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              continue;
             barrier();
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))
              {
              }
             else
              {
               barrier();
               if(_GLF_DEAD(false))
                barrier();
              }
             if(_GLF_DEAD(false))
              barrier();
            }
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y))))
              barrier();
             barrier();
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       else
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           do
            {
             if(_GLF_DEAD(false))
              return;
            }
           while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(false)))));
          }
         else
          {
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))) || (false))));
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         do
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                return;
               barrier();
              }
             return;
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))
              {
               if(_GLF_DEAD(false))
                return;
               barrier();
              }
             return;
            }
           barrier();
           if(_GLF_DEAD(false))
            return;
          }
         else
          {
          }
        }
      }
    }
   else
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))), ! (! (bool(bvec4(true, _GLF_IDENTITY(true, ! (! (true))), false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))))))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     else
      {
      }
    }
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       return;
      }
     else
      {
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     for(int _injected_loop_counter = ((((1 & _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) * 1)) / int(_GLF_ONE(1.0, injectionSwitch.y)))) / 1)) << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(6, clamp(6, 6, 6))), int(6))) | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))).y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, true)))), true && (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, true)))), ! (! ((_GLF_IDENTITY(false, bool(bvec2(false, true)))))))))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 do
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        continue;
       barrier();
      }
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_DEAD(false))
      barrier();
     for(int _injected_loop_counter = (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), (_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), int(ivec4(_GLF_IDENTITY(int(7), int(7)), 0, 0, 0)))) ^ 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
      {
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))) - 0.0)))));
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 << _GLF_IDENTITY(int(4), int(4)))); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 uint total_threads = num_workgroup * workgroup_size;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, true), true)), bvec3(bvec4(bvec3(bvec4(bvec3(false, false, true), true)), true))))), bool(bool(bool(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, false || (false)), true), bvec3(bvec4(bvec3(false, false, true), true))))))))), _GLF_IDENTITY(false, bool(bvec2(false, true))) || _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, true), true)), bvec3(bvec4(bvec3(bvec4(bvec3(false, false, true), true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, true), true)), bvec3(bvec4(bvec3(bvec4(bvec3(false, false, true), true)), false)))), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), _GLF_IDENTITY(true, ! (! (true)))))))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true))), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true)))))), bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true))), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true)))))), true))))), (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true))), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true))), true))), bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true))), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true))), false))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true)))), bool(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, true && (false)), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, true && (false)), false, true), true))), bvec3(bvec4(bvec3(false, false, true), true))))))))), true && (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true)))), bool(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, true && (false)), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), false || ((false))), true, true)))), false, true), true))), bvec3(bvec4(bvec3(false, false, true), true))))))))))))))), true && (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true)))), bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true))), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true))))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true))), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true)))))))), _GLF_IDENTITY((_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true))), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true)))))))), false || (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true))), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true)))))))), ! (_GLF_IDENTITY(! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true))), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true))))))))), ! (! (! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true))), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true))))))))))))))))), bool(bvec4((_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true))), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true)))))))), false || (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true))), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true)))))))), ! (_GLF_IDENTITY(! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true))), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true))))))))), ! (! (! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true))), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true))))))))))))))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), ! (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, _GLF_IDENTITY(false, false || (false)), true), true)))), bool(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, true && (false)), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, true && (false)), false, true), true))), bvec3(bvec4(bvec3(false, false, true), true))))))))))))), ! (! ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true))), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true))), true)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true))), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true))), true)))))))))), bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true))), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true))))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true))), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true)))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true)))))))), (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true))), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), false))), true))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true)))), bool(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, true && (false)), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, true && (false)), false, true), true))), bvec3(bvec4(bvec3(false, false, true), true)))))))))), bool(bool(! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true)))), bool(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, true && (false)), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, true && (false)), false, true), true))), bvec3(bvec4(bvec3(false, false, true), true)))))))))))))))))))))))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
     do
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, 0 | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> 0), (_GLF_IDENTITY(true ? 1 : _GLF_FUZZED(20954), (_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, (true) || false), true, true, true))) ? true ? 1 : _GLF_FUZZED(20954) : _GLF_FUZZED(_injected_loop_counter)))))), ((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, true && (true))), bool(bvec4(! (_GLF_IDENTITY(true, true && (true))), true, true, false))))) ? 1 : _GLF_FUZZED(20954), (_GLF_IDENTITY(true ? true ? 1 : _GLF_FUZZED(20954) : _GLF_FUZZED(_injected_loop_counter), clamp(_GLF_IDENTITY(true ? true ? 1 : _GLF_FUZZED(20954) : _GLF_FUZZED(_injected_loop_counter), (true ? true ? 1 : _GLF_FUZZED(20954) : _GLF_FUZZED(_injected_loop_counter)) >> 0), _GLF_IDENTITY(true ? true ? 1 : _GLF_IDENTITY(_GLF_FUZZED(20954), (_GLF_FUZZED(20954)) >> 0) : _GLF_FUZZED(_injected_loop_counter), int(int(_GLF_IDENTITY(true ? true ? 1 : _GLF_FUZZED(20954) : _GLF_IDENTITY(_GLF_FUZZED(_injected_loop_counter), (_GLF_FUZZED(_injected_loop_counter)) / _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, 0), clamp(ivec2(1, 0), ivec2(1, 0), ivec2(1, 0)))))), ~ (~ (true ? true ? 1 : _GLF_FUZZED(20954) : _GLF_IDENTITY(_GLF_FUZZED(_injected_loop_counter), (_GLF_FUZZED(_injected_loop_counter)) / _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, 0), clamp(ivec2(1, 0), ivec2(1, 0), ivec2(1, 0)))))))))))), true ? true ? 1 : _GLF_FUZZED(20954) : _GLF_FUZZED(_injected_loop_counter))))))))) | ((_GLF_IDENTITY(1, (_GLF_IDENTITY(true ? 1 : _GLF_FUZZED(20954), (true ? true ? 1 : _GLF_FUZZED(20954) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(_injected_loop_counter), min(_GLF_FUZZED(_injected_loop_counter), _GLF_FUZZED(_injected_loop_counter))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(_injected_loop_counter), min(_GLF_FUZZED(_injected_loop_counter), _GLF_FUZZED(_injected_loop_counter))), (_GLF_IDENTITY(_GLF_FUZZED(_injected_loop_counter), min(_GLF_FUZZED(_injected_loop_counter), _GLF_FUZZED(_injected_loop_counter)))) + 0)) >> 0)))))))))); _injected_loop_counter ++)
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
        barrier();
       do
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(log(6205.5102)))), injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)), (bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))) || false))))))
              {
               if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
                barrier();
               barrier();
              }
             if(_GLF_DEAD(false))
              barrier();
             continue;
             if(_GLF_DEAD(false))
              barrier();
            }
           do
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               barrier();
              }
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))))))));
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
      }
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec4(! (_GLF_DEAD(false)), false, false, true)))))) || false))
      barrier();
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         return;
        }
       else
        {
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(true, (true) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true)))))
  return;
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false)), bool(bvec4(_GLF_IDENTITY(bool(bvec3(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false)), true && (bool(bvec3(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false)))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         do
          {
           return;
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
    }
  }
 else
  {
   buf[gid] = 1;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
  }
 for(int _injected_loop_counter = (1 & 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
  {
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, max(_injected_loop_counter, _injected_loop_counter)))) > int(_GLF_ZERO(0.0, injectionSwitch.x)))) || false); _injected_loop_counter --)
      {
       if(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u) + 1 < subgroup_size)
        {
         if(_GLF_DEAD(false))
          barrier();
         do
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            continue;
          }
         while(_GLF_WRAPPED_LOOP(false));
         int i = _GLF_IDENTITY(0, max(0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY((true ? 0 : _GLF_FUZZED(5280)), (_GLF_IDENTITY((true ? 0 : _GLF_FUZZED(5280)), ~ (~ ((_GLF_IDENTITY(true ? 0 : _GLF_FUZZED(5280), int(_GLF_IDENTITY(ivec3(true ? 0 : _GLF_FUZZED(5280), 0, 1), (ivec3(true ? 0 : _GLF_FUZZED(5280), 0, 1)) | (ivec3(true ? 0 : _GLF_FUZZED(5280), 0, 1)))))))))) - 0)), 0 | (_GLF_IDENTITY(0, _GLF_IDENTITY((true ? 0 : _GLF_FUZZED(5280)), (_GLF_IDENTITY((true ? 0 : _GLF_FUZZED(5280)), ~ (~ ((_GLF_IDENTITY(true ? 0 : _GLF_FUZZED(5280), int(_GLF_IDENTITY(ivec3(true ? 0 : _GLF_FUZZED(5280), 0, 1), (ivec3(true ? 0 : _GLF_FUZZED(5280), 0, 1)) | (ivec3(true ? 0 : _GLF_FUZZED(5280), 0, 1)))))))))) - 0)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY((true ? 0 : _GLF_FUZZED(5280)), (_GLF_IDENTITY((true ? 0 : _GLF_FUZZED(5280)), ~ (~ ((_GLF_IDENTITY(true ? 0 : _GLF_FUZZED(5280), int(_GLF_IDENTITY(ivec3(true ? 0 : _GLF_FUZZED(5280), 0, 1), (ivec3(true ? 0 : _GLF_FUZZED(5280), 0, 1)) | (ivec3(true ? 0 : _GLF_FUZZED(5280), 0, 1)))))))))) - 0)), 0 | (_GLF_IDENTITY(0, _GLF_IDENTITY((true ? 0 : _GLF_FUZZED(5280)), (_GLF_IDENTITY((true ? 0 : _GLF_FUZZED(5280)), ~ (~ ((_GLF_IDENTITY(true ? 0 : _GLF_FUZZED(5280), int(_GLF_IDENTITY(ivec3(true ? 0 : _GLF_FUZZED(5280), 0, 1), (ivec3(true ? 0 : _GLF_FUZZED(5280), 0, 1)) | (ivec3(true ? 0 : _GLF_FUZZED(5280), 0, 1)))))))))) - 0)))), (_GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY((true ? 0 : _GLF_FUZZED(5280)), (_GLF_IDENTITY((true ? 0 : _GLF_FUZZED(5280)), ~ (~ ((_GLF_IDENTITY(true ? 0 : _GLF_FUZZED(5280), int(_GLF_IDENTITY(ivec3(true ? 0 : _GLF_FUZZED(5280), 0, 1), (ivec3(true ? 0 : _GLF_FUZZED(5280), 0, 1)) | (ivec3(true ? 0 : _GLF_FUZZED(5280), 0, 1)))))))))) - 0)), 0 | (_GLF_IDENTITY(0, _GLF_IDENTITY((true ? 0 : _GLF_FUZZED(5280)), (_GLF_IDENTITY((true ? 0 : _GLF_FUZZED(5280)), ~ (~ ((_GLF_IDENTITY(true ? 0 : _GLF_FUZZED(5280), int(_GLF_IDENTITY(ivec3(true ? 0 : _GLF_FUZZED(5280), 0, 1), (ivec3(true ? 0 : _GLF_FUZZED(5280), 0, 1)) | (ivec3(true ? 0 : _GLF_FUZZED(5280), 0, 1)))))))))) - 0))))) + 0)) ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))));
         do
          {
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true))), false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, bool(bvec4(true, true, false, true))), true)))), bool(bvec4(! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, bool(bvec4(true, true, false, true))), true)), (bool(bvec2(_GLF_IDENTITY(true, bool(bvec4(true, true, false, true))), true))) && true))), true, false, false)))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))))))) || false, ! (_GLF_IDENTITY(! ((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(2.1, _GLF_IDENTITY(-2322.0349, max(_GLF_IDENTITY(-2322.0349, float(_GLF_IDENTITY(mat2x3(-2322.0349, 0.0, 1.0, tan(0.0), 1.0, 1.0), (mat2x3(-2322.0349, 0.0, 1.0, tan(0.0), 1.0, 1.0)) * mat2(1.0)))), -2322.0349)))))).y)))) || false), false || (! ((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), max(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(2.1, -2322.0349)))).y)))) || false)))))))))
            return;
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
            barrier();
           if(_GLF_DEAD(false))
            continue;
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(float(true))), vec2(_GLF_FUZZED(51.60), (injectionSwitch)[1]), bvec2(false, true))).x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), injectionSwitch.x)))) > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            break;
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
           barrier();
          }
         if(_GLF_DEAD(false))
          continue;
         do
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 barrier();
                }
              }
             return;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           if(_GLF_DEAD(false))
            return;
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false))))))))))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            continue;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                return;
               if(_GLF_DEAD(false))
                barrier();
               return;
              }
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))
              return;
             barrier();
             if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
              barrier();
            }
           for(int _injected_loop_counter = _GLF_IDENTITY(1, (1) - 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
            {
             return;
            }
           if(_GLF_DEAD(false))
            barrier();
          }
         do
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
            barrier();
           atomicStore(buf[(gid + _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, clamp(1, 1, 1)), 1))) % total_threads], uint(2), 4, 64, _GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec2(0, ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) ^ 0)) >> 0)), _GLF_IDENTITY(int(4), _GLF_IDENTITY((_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) ? _GLF_IDENTITY(_GLF_IDENTITY(int(4), clamp(_GLF_IDENTITY(int(4), clamp(int(4), _GLF_IDENTITY(int(4), _GLF_IDENTITY(0 ^ _GLF_IDENTITY((int(4)), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY((int(4)), (true ? (int(4)) : _GLF_FUZZED(i)))), (_GLF_IDENTITY((_GLF_IDENTITY((int(4)), (true ? (int(4)) : _GLF_FUZZED(i)))), ~ (~ ((_GLF_IDENTITY((int(4)), (true ? (int(4)) : _GLF_FUZZED(i)))))))) << 0), ~ (~ (~ (_GLF_IDENTITY((int(4)), (true ? (int(4)) : _GLF_FUZZED(_GLF_IDENTITY(i, (false ? _GLF_FUZZED(i) : i))))))))))), min(0 ^ _GLF_IDENTITY((int(4)), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY((int(4)), (true ? (int(4)) : _GLF_FUZZED(i)))), (_GLF_IDENTITY((_GLF_IDENTITY((int(4)), (true ? (int(4)) : _GLF_FUZZED(i)))), ~ (~ ((_GLF_IDENTITY((int(4)), (true ? (int(4)) : _GLF_FUZZED(i)))))))) << 0), ~ (~ (~ (_GLF_IDENTITY((int(4)), (true ? (int(4)) : _GLF_FUZZED(_GLF_IDENTITY(i, (false ? _GLF_FUZZED(i) : i))))))))))), 0 ^ _GLF_IDENTITY((int(4)), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY((int(4)), (true ? (int(4)) : _GLF_FUZZED(i)))), (_GLF_IDENTITY((_GLF_IDENTITY((int(4)), (true ? (int(4)) : _GLF_FUZZED(i)))), ~ (~ ((_GLF_IDENTITY((int(4)), (true ? (int(4)) : _GLF_FUZZED(i)))))))) << 0), ~ (~ (~ (_GLF_IDENTITY((int(4)), (true ? (int(4)) : _GLF_FUZZED(_GLF_IDENTITY(i, (false ? _GLF_FUZZED(i) : i)))))))))))))), int(4))), int(4), _GLF_IDENTITY(int(4), (int(4)) | (int(_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) << 0)) - 0), _GLF_IDENTITY(4, ~ (~ (4)))))))))), (_GLF_IDENTITY(int(4), clamp(_GLF_IDENTITY(int(4), clamp(int(4), _GLF_IDENTITY(int(4), _GLF_IDENTITY(0 ^ _GLF_IDENTITY((int(4)), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY((int(4)), (true ? (int(4)) : _GLF_FUZZED(i)))), (_GLF_IDENTITY((_GLF_IDENTITY((int(4)), (true ? (int(4)) : _GLF_FUZZED(i)))), ~ (~ ((_GLF_IDENTITY((int(4)), (true ? (int(4)) : _GLF_FUZZED(i)))))))) << 0), ~ (~ (~ (_GLF_IDENTITY((int(4)), (true ? (int(4)) : _GLF_FUZZED(_GLF_IDENTITY(i, (false ? _GLF_FUZZED(i) : i))))))))))), min(0 ^ _GLF_IDENTITY((int(4)), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY((int(4)), (true ? (int(4)) : _GLF_FUZZED(i)))), (_GLF_IDENTITY((_GLF_IDENTITY((int(4)), (true ? (int(4)) : _GLF_FUZZED(i)))), ~ (~ ((_GLF_IDENTITY((int(4)), (true ? (int(4)) : _GLF_FUZZED(i)))))))) << 0), ~ (~ (~ (_GLF_IDENTITY((int(4)), (true ? (int(4)) : _GLF_FUZZED(_GLF_IDENTITY(i, (false ? _GLF_FUZZED(i) : i))))))))))), 0 ^ _GLF_IDENTITY((int(4)), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY((int(4)), (true ? (int(4)) : _GLF_FUZZED(i)))), (_GLF_IDENTITY((_GLF_IDENTITY((int(4)), (true ? (int(4)) : _GLF_FUZZED(i)))), ~ (~ ((_GLF_IDENTITY((int(4)), (true ? (int(4)) : _GLF_FUZZED(i)))))))) << 0), ~ (~ (~ (_GLF_IDENTITY((int(4)), (true ? (int(4)) : _GLF_FUZZED(_GLF_IDENTITY(i, (false ? _GLF_FUZZED(i) : i)))))))))))))), int(4))), int(4), _GLF_IDENTITY(int(4), (int(4)) | (int(_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) << 0)) - 0), _GLF_IDENTITY(4, ~ (~ (4))))))))))) >> 0) : _GLF_FUZZED(-25489)), (_GLF_IDENTITY((_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) ? _GLF_IDENTITY(_GLF_IDENTITY(int(4), clamp(_GLF_IDENTITY(int(4), clamp(int(4), _GLF_IDENTITY(int(4), _GLF_IDENTITY(0 ^ _GLF_IDENTITY((int(4)), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY((int(4)), (true ? (int(4)) : _GLF_FUZZED(i)))), (_GLF_IDENTITY((_GLF_IDENTITY((int(4)), (true ? (int(4)) : _GLF_FUZZED(i)))), ~ (~ ((_GLF_IDENTITY((int(4)), (true ? (int(4)) : _GLF_FUZZED(i)))))))) << 0), ~ (~ (~ (_GLF_IDENTITY((int(4)), (true ? (int(4)) : _GLF_FUZZED(_GLF_IDENTITY(i, (false ? _GLF_FUZZED(i) : i))))))))))), min(0 ^ _GLF_IDENTITY((int(4)), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY((int(4)), (true ? (int(4)) : _GLF_FUZZED(i)))), (_GLF_IDENTITY((_GLF_IDENTITY((int(4)), (true ? (int(4)) : _GLF_FUZZED(i)))), ~ (~ ((_GLF_IDENTITY((int(4)), (true ? (int(4)) : _GLF_FUZZED(i)))))))) << 0), ~ (~ (~ (_GLF_IDENTITY((int(4)), (true ? (int(4)) : _GLF_FUZZED(_GLF_IDENTITY(i, (false ? _GLF_FUZZED(i) : i))))))))))), 0 ^ _GLF_IDENTITY((int(4)), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY((int(4)), (true ? (int(4)) : _GLF_FUZZED(i)))), (_GLF_IDENTITY((_GLF_IDENTITY((int(4)), (true ? (int(4)) : _GLF_FUZZED(i)))), ~ (~ ((_GLF_IDENTITY((int(4)), (true ? (int(4)) : _GLF_FUZZED(i)))))))) << 0), ~ (~ (~ (_GLF_IDENTITY((int(4)), (true ? (int(4)) : _GLF_FUZZED(_GLF_IDENTITY(i, (false ? _GLF_FUZZED(i) : i)))))))))))))), int(4))), int(4), _GLF_IDENTITY(int(4), (int(4)) | (int(_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) << 0)) - 0), _GLF_IDENTITY(4, ~ (~ (4)))))))))), (_GLF_IDENTITY(int(4), clamp(_GLF_IDENTITY(int(4), clamp(int(4), _GLF_IDENTITY(int(4), _GLF_IDENTITY(0 ^ _GLF_IDENTITY((int(4)), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY((int(4)), (true ? (int(4)) : _GLF_FUZZED(i)))), (_GLF_IDENTITY((_GLF_IDENTITY((int(4)), (true ? (int(4)) : _GLF_FUZZED(i)))), ~ (~ ((_GLF_IDENTITY((int(4)), (true ? (int(4)) : _GLF_FUZZED(i)))))))) << 0), ~ (~ (~ (_GLF_IDENTITY((int(4)), (true ? (int(4)) : _GLF_FUZZED(_GLF_IDENTITY(i, (false ? _GLF_FUZZED(i) : i))))))))))), min(0 ^ _GLF_IDENTITY((int(4)), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY((int(4)), (true ? (int(4)) : _GLF_FUZZED(i)))), (_GLF_IDENTITY((_GLF_IDENTITY((int(4)), (true ? (int(4)) : _GLF_FUZZED(i)))), ~ (~ ((_GLF_IDENTITY((int(4)), (true ? (int(4)) : _GLF_FUZZED(i)))))))) << 0), ~ (~ (~ (_GLF_IDENTITY((int(4)), (true ? (int(4)) : _GLF_FUZZED(_GLF_IDENTITY(i, (false ? _GLF_FUZZED(i) : i))))))))))), 0 ^ _GLF_IDENTITY((int(4)), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY((int(4)), (true ? (int(4)) : _GLF_FUZZED(i)))), (_GLF_IDENTITY((_GLF_IDENTITY((int(4)), (true ? (int(4)) : _GLF_FUZZED(i)))), ~ (~ ((_GLF_IDENTITY((int(4)), (true ? (int(4)) : _GLF_FUZZED(i)))))))) << 0), ~ (~ (~ (_GLF_IDENTITY((int(4)), (true ? (int(4)) : _GLF_FUZZED(_GLF_IDENTITY(i, (false ? _GLF_FUZZED(i) : i)))))))))))))), int(4))), int(4), _GLF_IDENTITY(int(4), (int(4)) | (int(_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) << 0)) - 0), _GLF_IDENTITY(4, ~ (~ (4))))))))))) >> 0) : _GLF_FUZZED(-25489)), clamp(_GLF_IDENTITY((_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) ? _GLF_IDENTITY(_GLF_IDENTITY(int(4), clamp(_GLF_IDENTITY(int(4), clamp(int(4), _GLF_IDENTITY(int(4), _GLF_IDENTITY(0 ^ _GLF_IDENTITY((int(4)), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY((int(4)), (true ? (int(4)) : _GLF_FUZZED(i)))), (_GLF_IDENTITY((_GLF_IDENTITY((int(4)), (true ? (int(4)) : _GLF_FUZZED(i)))), ~ (~ ((_GLF_IDENTITY((int(4)), (true ? (int(4)) : _GLF_FUZZED(i)))))))) << 0), ~ (~ (~ (_GLF_IDENTITY((int(4)), (true ? (int(4)) : _GLF_FUZZED(_GLF_IDENTITY(i, (false ? _GLF_FUZZED(i) : i))))))))))), min(0 ^ _GLF_IDENTITY((int(4)), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY((int(4)), (true ? (int(4)) : _GLF_FUZZED(i)))), (_GLF_IDENTITY((_GLF_IDENTITY((int(4)), (true ? (int(4)) : _GLF_FUZZED(i)))), ~ (~ ((_GLF_IDENTITY((int(4)), (true ? (int(4)) : _GLF_FUZZED(i)))))))) << 0), ~ (~ (~ (_GLF_IDENTITY((int(4)), (true ? (int(4)) : _GLF_FUZZED(_GLF_IDENTITY(i, (false ? _GLF_FUZZED(i) : i))))))))))), 0 ^ _GLF_IDENTITY((int(4)), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY((int(4)), (true ? (int(4)) : _GLF_FUZZED(i)))), (_GLF_IDENTITY((_GLF_IDENTITY((int(4)), (true ? (int(4)) : _GLF_FUZZED(i)))), ~ (~ ((_GLF_IDENTITY((int(4)), (true ? (int(4)) : _GLF_FUZZED(i)))))))) << 0), ~ (~ (~ (_GLF_IDENTITY((int(4)), (true ? (int(4)) : _GLF_FUZZED(_GLF_IDENTITY(i, (false ? _GLF_FUZZED(i) : i)))))))))))))), int(4))), int(4), _GLF_IDENTITY(int(4), (int(4)) | (int(_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) << 0)) - 0), _GLF_IDENTITY(4, ~ (~ (4)))))))))), (_GLF_IDENTITY(int(4), clamp(_GLF_IDENTITY(int(4), clamp(int(4), _GLF_IDENTITY(int(4), _GLF_IDENTITY(0 ^ _GLF_IDENTITY((int(4)), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY((int(4)), (true ? (int(4)) : _GLF_FUZZED(i)))), (_GLF_IDENTITY((_GLF_IDENTITY((int(4)), (true ? (int(4)) : _GLF_FUZZED(i)))), ~ (~ ((_GLF_IDENTITY((int(4)), (true ? (int(4)) : _GLF_FUZZED(i)))))))) << 0), ~ (~ (~ (_GLF_IDENTITY((int(4)), (true ? (int(4)) : _GLF_FUZZED(_GLF_IDENTITY(i, (false ? _GLF_FUZZED(i) : i))))))))))), min(0 ^ _GLF_IDENTITY((int(4)), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY((int(4)), (true ? (int(4)) : _GLF_FUZZED(i)))), (_GLF_IDENTITY((_GLF_IDENTITY((int(4)), (true ? (int(4)) : _GLF_FUZZED(i)))), ~ (~ ((_GLF_IDENTITY((int(4)), (true ? (int(4)) : _GLF_FUZZED(i)))))))) << 0), ~ (~ (~ (_GLF_IDENTITY((int(4)), (true ? (int(4)) : _GLF_FUZZED(_GLF_IDENTITY(i, (false ? _GLF_FUZZED(i) : i))))))))))), 0 ^ _GLF_IDENTITY((int(4)), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY((int(4)), (true ? (int(4)) : _GLF_FUZZED(i)))), (_GLF_IDENTITY((_GLF_IDENTITY((int(4)), (true ? (int(4)) : _GLF_FUZZED(i)))), ~ (~ ((_GLF_IDENTITY((int(4)), (true ? (int(4)) : _GLF_FUZZED(i)))))))) << 0), ~ (~ (~ (_GLF_IDENTITY((int(4)), (true ? (int(4)) : _GLF_FUZZED(_GLF_IDENTITY(i, (false ? _GLF_FUZZED(i) : i)))))))))))))), int(4))), int(4), _GLF_IDENTITY(int(4), (int(4)) | (int(_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) << 0)) - 0), _GLF_IDENTITY(4, ~ (~ (4))))))))))) >> 0) : _GLF_FUZZED(-25489)), ~ (~ ((_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) ? _GLF_IDENTITY(_GLF_IDENTITY(int(4), clamp(_GLF_IDENTITY(int(4), clamp(int(4), _GLF_IDENTITY(int(4), _GLF_IDENTITY(0 ^ _GLF_IDENTITY((int(4)), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY((int(4)), (true ? (int(4)) : _GLF_FUZZED(i)))), (_GLF_IDENTITY((_GLF_IDENTITY((int(4)), (true ? (int(4)) : _GLF_FUZZED(i)))), ~ (~ ((_GLF_IDENTITY((int(4)), (true ? (int(4)) : _GLF_FUZZED(i)))))))) << 0), ~ (~ (~ (_GLF_IDENTITY((int(4)), (true ? (int(4)) : _GLF_FUZZED(_GLF_IDENTITY(i, (false ? _GLF_FUZZED(i) : i))))))))))), min(0 ^ _GLF_IDENTITY((int(4)), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY((int(4)), (true ? (int(4)) : _GLF_FUZZED(i)))), (_GLF_IDENTITY((_GLF_IDENTITY((int(4)), (true ? (int(4)) : _GLF_FUZZED(i)))), ~ (~ ((_GLF_IDENTITY((int(4)), (true ? (int(4)) : _GLF_FUZZED(i)))))))) << 0), ~ (~ (~ (_GLF_IDENTITY((int(4)), (true ? (int(4)) : _GLF_FUZZED(_GLF_IDENTITY(i, (false ? _GLF_FUZZED(i) : i))))))))))), 0 ^ _GLF_IDENTITY((int(4)), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY((int(4)), (true ? (int(4)) : _GLF_FUZZED(i)))), (_GLF_IDENTITY((_GLF_IDENTITY((int(4)), (true ? (int(4)) : _GLF_FUZZED(i)))), ~ (~ ((_GLF_IDENTITY((int(4)), (true ? (int(4)) : _GLF_FUZZED(i)))))))) << 0), ~ (~ (~ (_GLF_IDENTITY((int(4)), (true ? (int(4)) : _GLF_FUZZED(_GLF_IDENTITY(i, (false ? _GLF_FUZZED(i) : i)))))))))))))), int(4))), int(4), _GLF_IDENTITY(int(4), (int(4)) | (int(_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) << 0)) - 0), _GLF_IDENTITY(4, ~ (~ (4)))))))))), (_GLF_IDENTITY(int(4), clamp(_GLF_IDENTITY(int(4), clamp(int(4), _GLF_IDENTITY(int(4), _GLF_IDENTITY(0 ^ _GLF_IDENTITY((int(4)), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY((int(4)), (true ? (int(4)) : _GLF_FUZZED(i)))), (_GLF_IDENTITY((_GLF_IDENTITY((int(4)), (true ? (int(4)) : _GLF_FUZZED(i)))), ~ (~ ((_GLF_IDENTITY((int(4)), (true ? (int(4)) : _GLF_FUZZED(i)))))))) << 0), ~ (~ (~ (_GLF_IDENTITY((int(4)), (true ? (int(4)) : _GLF_FUZZED(_GLF_IDENTITY(i, (false ? _GLF_FUZZED(i) : i))))))))))), min(0 ^ _GLF_IDENTITY((int(4)), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY((int(4)), (true ? (int(4)) : _GLF_FUZZED(i)))), (_GLF_IDENTITY((_GLF_IDENTITY((int(4)), (true ? (int(4)) : _GLF_FUZZED(i)))), ~ (~ ((_GLF_IDENTITY((int(4)), (true ? (int(4)) : _GLF_FUZZED(i)))))))) << 0), ~ (~ (~ (_GLF_IDENTITY((int(4)), (true ? (int(4)) : _GLF_FUZZED(_GLF_IDENTITY(i, (false ? _GLF_FUZZED(i) : i))))))))))), 0 ^ _GLF_IDENTITY((int(4)), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY((int(4)), (true ? (int(4)) : _GLF_FUZZED(i)))), (_GLF_IDENTITY((_GLF_IDENTITY((int(4)), (true ? (int(4)) : _GLF_FUZZED(i)))), ~ (~ ((_GLF_IDENTITY((int(4)), (true ? (int(4)) : _GLF_FUZZED(i)))))))) << 0), ~ (~ (~ (_GLF_IDENTITY((int(4)), (true ? (int(4)) : _GLF_FUZZED(_GLF_IDENTITY(i, (false ? _GLF_FUZZED(i) : i)))))))))))))), int(4))), int(4), _GLF_IDENTITY(int(4), (int(4)) | (int(_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) << 0)) - 0), _GLF_IDENTITY(4, ~ (~ (4))))))))))) >> 0) : _GLF_FUZZED(-25489))))), (_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) ? _GLF_IDENTITY(_GLF_IDENTITY(int(4), clamp(_GLF_IDENTITY(int(4), clamp(int(4), _GLF_IDENTITY(int(4), _GLF_IDENTITY(0 ^ _GLF_IDENTITY((int(4)), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY((int(4)), (true ? (int(4)) : _GLF_FUZZED(i)))), (_GLF_IDENTITY((_GLF_IDENTITY((int(4)), (true ? (int(4)) : _GLF_FUZZED(i)))), ~ (~ ((_GLF_IDENTITY((int(4)), (true ? (int(4)) : _GLF_FUZZED(i)))))))) << 0), ~ (~ (~ (_GLF_IDENTITY((int(4)), (true ? (int(4)) : _GLF_FUZZED(_GLF_IDENTITY(i, (false ? _GLF_FUZZED(i) : i))))))))))), min(0 ^ _GLF_IDENTITY((int(4)), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY((int(4)), (true ? (int(4)) : _GLF_FUZZED(i)))), (_GLF_IDENTITY((_GLF_IDENTITY((int(4)), (true ? (int(4)) : _GLF_FUZZED(i)))), ~ (~ ((_GLF_IDENTITY((int(4)), (true ? (int(4)) : _GLF_FUZZED(i)))))))) << 0), ~ (~ (~ (_GLF_IDENTITY((int(4)), (true ? (int(4)) : _GLF_FUZZED(_GLF_IDENTITY(i, (false ? _GLF_FUZZED(i) : i))))))))))), 0 ^ _GLF_IDENTITY((int(4)), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY((int(4)), (true ? (int(4)) : _GLF_FUZZED(i)))), (_GLF_IDENTITY((_GLF_IDENTITY((int(4)), (true ? (int(4)) : _GLF_FUZZED(i)))), ~ (~ ((_GLF_IDENTITY((int(4)), (true ? (int(4)) : _GLF_FUZZED(i)))))))) << 0), ~ (~ (~ (_GLF_IDENTITY((int(4)), (true ? (int(4)) : _GLF_FUZZED(_GLF_IDENTITY(i, (false ? _GLF_FUZZED(i) : i)))))))))))))), int(4))), int(4), _GLF_IDENTITY(int(4), (int(4)) | (int(_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) << 0)) - 0), _GLF_IDENTITY(4, ~ (~ (4)))))))))), (_GLF_IDENTITY(int(4), clamp(_GLF_IDENTITY(int(4), clamp(int(4), _GLF_IDENTITY(int(4), _GLF_IDENTITY(0 ^ _GLF_IDENTITY((int(4)), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY((int(4)), (true ? (int(4)) : _GLF_FUZZED(i)))), (_GLF_IDENTITY((_GLF_IDENTITY((int(4)), (true ? (int(4)) : _GLF_FUZZED(i)))), ~ (~ ((_GLF_IDENTITY((int(4)), (true ? (int(4)) : _GLF_FUZZED(i)))))))) << 0), ~ (~ (~ (_GLF_IDENTITY((int(4)), (true ? (int(4)) : _GLF_FUZZED(_GLF_IDENTITY(i, (false ? _GLF_FUZZED(i) : i))))))))))), min(0 ^ _GLF_IDENTITY((int(4)), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY((int(4)), (true ? (int(4)) : _GLF_FUZZED(i)))), (_GLF_IDENTITY((_GLF_IDENTITY((int(4)), (true ? (int(4)) : _GLF_FUZZED(i)))), ~ (~ ((_GLF_IDENTITY((int(4)), (true ? (int(4)) : _GLF_FUZZED(i)))))))) << 0), ~ (~ (~ (_GLF_IDENTITY((int(4)), (true ? (int(4)) : _GLF_FUZZED(_GLF_IDENTITY(i, (false ? _GLF_FUZZED(i) : i))))))))))), 0 ^ _GLF_IDENTITY((int(4)), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY((int(4)), (true ? (int(4)) : _GLF_FUZZED(i)))), (_GLF_IDENTITY((_GLF_IDENTITY((int(4)), (true ? (int(4)) : _GLF_FUZZED(i)))), ~ (~ ((_GLF_IDENTITY((int(4)), (true ? (int(4)) : _GLF_FUZZED(i)))))))) << 0), ~ (~ (~ (_GLF_IDENTITY((int(4)), (true ? (int(4)) : _GLF_FUZZED(_GLF_IDENTITY(i, (false ? _GLF_FUZZED(i) : i)))))))))))))), int(4))), int(4), _GLF_IDENTITY(int(4), (int(4)) | (int(_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) << 0)) - 0), _GLF_IDENTITY(4, ~ (~ (4))))))))))) >> 0) : _GLF_FUZZED(-25489)), (_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) ? _GLF_IDENTITY(_GLF_IDENTITY(int(4), clamp(_GLF_IDENTITY(int(4), clamp(int(4), _GLF_IDENTITY(int(4), _GLF_IDENTITY(0 ^ _GLF_IDENTITY((int(4)), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY((int(4)), (true ? (int(4)) : _GLF_FUZZED(i)))), (_GLF_IDENTITY((_GLF_IDENTITY((int(4)), (true ? (int(4)) : _GLF_FUZZED(i)))), ~ (~ ((_GLF_IDENTITY((int(4)), (true ? (int(4)) : _GLF_FUZZED(i)))))))) << 0), ~ (~ (~ (_GLF_IDENTITY((int(4)), (true ? (int(4)) : _GLF_FUZZED(_GLF_IDENTITY(i, (false ? _GLF_FUZZED(i) : i))))))))))), min(0 ^ _GLF_IDENTITY((int(4)), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY((int(4)), (true ? (int(4)) : _GLF_FUZZED(i)))), (_GLF_IDENTITY((_GLF_IDENTITY((int(4)), (true ? (int(4)) : _GLF_FUZZED(i)))), ~ (~ ((_GLF_IDENTITY((int(4)), (true ? (int(4)) : _GLF_FUZZED(i)))))))) << 0), ~ (~ (~ (_GLF_IDENTITY((int(4)), (true ? (int(4)) : _GLF_FUZZED(_GLF_IDENTITY(i, (false ? _GLF_FUZZED(i) : i))))))))))), 0 ^ _GLF_IDENTITY((int(4)), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY((int(4)), (true ? (int(4)) : _GLF_FUZZED(i)))), (_GLF_IDENTITY((_GLF_IDENTITY((int(4)), (true ? (int(4)) : _GLF_FUZZED(i)))), ~ (~ ((_GLF_IDENTITY((int(4)), (true ? (int(4)) : _GLF_FUZZED(i)))))))) << 0), ~ (~ (~ (_GLF_IDENTITY((int(4)), (true ? (int(4)) : _GLF_FUZZED(_GLF_IDENTITY(i, (false ? _GLF_FUZZED(i) : i)))))))))))))), int(4))), int(4), _GLF_IDENTITY(int(4), (int(4)) | (int(_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) << 0)) - 0), _GLF_IDENTITY(4, ~ (~ (4)))))))))), (_GLF_IDENTITY(int(4), clamp(_GLF_IDENTITY(int(4), clamp(int(4), _GLF_IDENTITY(int(4), _GLF_IDENTITY(0 ^ _GLF_IDENTITY((int(4)), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY((int(4)), (true ? (int(4)) : _GLF_FUZZED(i)))), (_GLF_IDENTITY((_GLF_IDENTITY((int(4)), (true ? (int(4)) : _GLF_FUZZED(i)))), ~ (~ ((_GLF_IDENTITY((int(4)), (true ? (int(4)) : _GLF_FUZZED(i)))))))) << 0), ~ (~ (~ (_GLF_IDENTITY((int(4)), (true ? (int(4)) : _GLF_FUZZED(_GLF_IDENTITY(i, (false ? _GLF_FUZZED(i) : i))))))))))), min(0 ^ _GLF_IDENTITY((int(4)), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY((int(4)), (true ? (int(4)) : _GLF_FUZZED(i)))), (_GLF_IDENTITY((_GLF_IDENTITY((int(4)), (true ? (int(4)) : _GLF_FUZZED(i)))), ~ (~ ((_GLF_IDENTITY((int(4)), (true ? (int(4)) : _GLF_FUZZED(i)))))))) << 0), ~ (~ (~ (_GLF_IDENTITY((int(4)), (true ? (int(4)) : _GLF_FUZZED(_GLF_IDENTITY(i, (false ? _GLF_FUZZED(i) : i))))))))))), 0 ^ _GLF_IDENTITY((int(4)), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY((int(4)), (true ? (int(4)) : _GLF_FUZZED(i)))), (_GLF_IDENTITY((_GLF_IDENTITY((int(4)), (true ? (int(4)) : _GLF_FUZZED(i)))), ~ (~ ((_GLF_IDENTITY((int(4)), (true ? (int(4)) : _GLF_FUZZED(i)))))))) << 0), ~ (~ (~ (_GLF_IDENTITY((int(4)), (true ? (int(4)) : _GLF_FUZZED(_GLF_IDENTITY(i, (false ? _GLF_FUZZED(i) : i)))))))))))))), int(4))), int(4), _GLF_IDENTITY(int(4), (int(4)) | (int(_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) << 0)) - 0), _GLF_IDENTITY(4, ~ (~ (4))))))))))) >> 0) : _GLF_FUZZED(-25489))))) << (0 & -92740))))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(4, 1 * (4))), int(_GLF_IDENTITY(4, 1 * (_GLF_IDENTITY(4, int(ivec3(4, 0, 0))))))))), (ivec2(0, ((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (true ? int(4) : _GLF_FUZZED(-25489))))) >> _GLF_IDENTITY(int(4), int(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, ~ (~ (4)))) + 0)))))) / ivec2(1, 1)))));
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, true && (false))));
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), false || (bool(false)))))))
              barrier();
            }
           else
            {
             return;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(false))
            barrier();
           do
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(false))
              break;
             atomicStore(buf[(gid + 1) % total_threads], uint(2), 4, 64, 0);
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
        }
      }
     if(_GLF_DEAD(false))
      continue;
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], (false ? _GLF_FUZZED(-541.529) : _GLF_IDENTITY((injectionSwitch)[0], (false ? _GLF_FUZZED(8508.5199) : (injectionSwitch)[0])))), _GLF_FUZZED(3.7)), vec2(_GLF_FUZZED(6.2), (injectionSwitch)[1]), bvec2(false, true))).x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], (false ? _GLF_FUZZED(-541.529) : _GLF_IDENTITY((injectionSwitch)[0], (false ? _GLF_FUZZED(8508.5199) : (injectionSwitch)[0])))), _GLF_FUZZED(3.7)), vec2(_GLF_FUZZED(6.2), (injectionSwitch)[1]), bvec2(false, true))).x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], (false ? _GLF_FUZZED(-541.529) : _GLF_IDENTITY((injectionSwitch)[0], (_GLF_IDENTITY(false ? _GLF_FUZZED(8508.5199) : (injectionSwitch)[0], (_GLF_IDENTITY(false ? _GLF_FUZZED(8508.5199) : (injectionSwitch)[0], float(vec4(false ? _GLF_FUZZED(8508.5199) : (injectionSwitch)[0], 0.0, 0.0, 0.0)))) / 1.0))))), _GLF_FUZZED(3.7)), vec2(_GLF_FUZZED(6.2), _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) - 0.0)), bvec2(false, true))).x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], (false ? _GLF_FUZZED(-541.529) : _GLF_IDENTITY((injectionSwitch)[0], (_GLF_IDENTITY(false ? _GLF_FUZZED(8508.5199) : (injectionSwitch)[0], (_GLF_IDENTITY(false ? _GLF_FUZZED(8508.5199) : (injectionSwitch)[0], float(vec4(false ? _GLF_FUZZED(8508.5199) : (injectionSwitch)[0], 0.0, 0.0, 0.0)))) / 1.0))))), _GLF_FUZZED(3.7)), vec2(_GLF_FUZZED(6.2), _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) - 0.0)), bvec2(false, true))).x, (false ? _GLF_FUZZED(-9.2) : _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], (false ? _GLF_FUZZED(-541.529) : _GLF_IDENTITY((injectionSwitch)[0], (_GLF_IDENTITY(false ? _GLF_FUZZED(8508.5199) : (injectionSwitch)[0], (_GLF_IDENTITY(false ? _GLF_FUZZED(8508.5199) : (injectionSwitch)[0], float(vec4(false ? _GLF_FUZZED(8508.5199) : (injectionSwitch)[0], 0.0, 0.0, 0.0)))) / 1.0))))), _GLF_FUZZED(3.7)), vec2(_GLF_FUZZED(6.2), _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) - 0.0)), bvec2(false, true))).x)), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], (false ? _GLF_FUZZED(-541.529) : _GLF_IDENTITY((injectionSwitch)[0], (_GLF_IDENTITY(false ? _GLF_FUZZED(8508.5199) : (injectionSwitch)[0], (_GLF_IDENTITY(false ? _GLF_FUZZED(8508.5199) : (injectionSwitch)[0], float(vec4(false ? _GLF_FUZZED(8508.5199) : (injectionSwitch)[0], 0.0, 0.0, 0.0)))) / 1.0))))), _GLF_FUZZED(3.7)), vec2(_GLF_FUZZED(6.2), _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) - 0.0)), bvec2(false, true))).x)) > injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x)) > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false)))))))))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), ! (! (! (_GLF_IDENTITY(true, ! (! (true)))))))) && true)))))
    {
     barrier();
    }
   else
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false, false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
    barrier();
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
