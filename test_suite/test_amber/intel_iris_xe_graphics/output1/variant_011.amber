#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460
struct _GLF_struct_0 {
 uint workgroup_size;
 mat2x3 _f0;
 ivec4 _f1;
} ;

layout(set = 0, binding = 0) uniform buf0 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint gid = gl_GlobalInvocationID.x;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 _GLF_struct_0 _GLF_struct_replacement_0 = _GLF_struct_0(gl_WorkGroupSize.x, mat2x3(1.0), ivec4(1));
 uint total_threads = num_workgroup * _GLF_struct_replacement_0.workgroup_size;
 buf[gid] = 1;
 if(subgroup_local_id + 1 < subgroup_size)
  {
   int i = 0;
   atomicStore(buf[(gid + 1) % total_threads], uint(2), 4, 64, 0);
  }
 else
  {
   atomicStore(buf[(gid + 1) % total_threads], uint(2), 4, 64, 0);
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
