#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 430

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_13 {
 bvec2 _f0;
} ;

struct _GLF_struct_12 {
 ivec3 _f0;
 float _f1;
} ;

struct _GLF_struct_14 {
 _GLF_struct_12 _f0;
 uvec3 _f1;
 _GLF_struct_13 _f2;
 uvec3 _f3;
} ;

struct _GLF_struct_10 {
 mat2x4 _f0;
 bool _f1;
 mat4x2 _f2;
 uvec2 _f3;
} ;

struct _GLF_struct_9 {
 mat2x3 _f0;
 mat4x2 _f1;
} ;

struct _GLF_struct_11 {
 mat3 _f0;
 _GLF_struct_9 _f1;
 uvec2 _f2;
 uvec2 _f3;
 _GLF_struct_10 _f4;
 mat3x2 _f5;
} ;

struct _GLF_struct_7 {
 bool _f0;
 ivec2 _f1;
 uvec4 _f2;
} ;

struct _GLF_struct_6 {
 mat4 _f0;
 bvec3 _f1;
 mat3 _f2;
 uvec3 _f3;
} ;

struct _GLF_struct_5 {
 vec4 _f0;
 ivec4 _f1;
 bvec4 _f2;
 ivec4 _f3;
 vec4 _f4;
 vec2 _f5;
 mat3 _f6;
} ;

struct _GLF_struct_8 {
 _GLF_struct_5 _f0;
 bvec2 _f1;
 _GLF_struct_6 _f2;
 _GLF_struct_7 _f3;
} ;

struct _GLF_struct_3 {
 uvec3 _f0;
} ;

struct _GLF_struct_4 {
 bool _f0;
 _GLF_struct_3 _f1;
 mat4x2 _f2;
 uint _f3;
 uint _f4;
} ;

struct _GLF_struct_2 {
 uvec3 _f0;
 mat4 _f1;
} ;

struct _GLF_struct_0 {
 ivec3 _f0;
 bvec3 _f1;
} ;

struct _GLF_struct_1 {
 mat3x4 _f0;
 mat2 _f1;
 _GLF_struct_0 _f2;
} ;

struct _GLF_struct_15 {
 _GLF_struct_1 _f0;
 _GLF_struct_2 _f1;
 _GLF_struct_4 _f2;
 _GLF_struct_8 _f3;
 uint workgroup_base;
 _GLF_struct_11 _f4;
 _GLF_struct_14 _f5;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)))), 0.0, 1.0))))))) > injectionSwitch.y), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0))))))) > injectionSwitch.y)), true && (! ((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0)))))), (true ? _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0)))))), clamp(_GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0)))))), (true ? min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0)))))) : _GLF_FUZZED(5.2))), min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0)))))), min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0)))))))) : _GLF_FUZZED(tanh(-2.6))))) > injectionSwitch.y)))))))))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     return;
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 else
  {
  }
 uvec2 GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x < injectionSwitch.y))))
  {
   do
    {
     if(_GLF_DEAD(false))
      return;
    }
   while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), false || (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(false))))))))));
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          continue;
         return;
        }
      }
    }
   else
    {
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false), false || ((false))), bool(bvec2((false), true))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((false), bool(bvec2((false), true))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY((false), bool(bvec2((false), true))), true, true))))))), true && (! (_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2((false), true), bvec2(bvec2(_GLF_IDENTITY(bvec2((false), true), bvec2(_GLF_IDENTITY(bvec3(bvec2((false), true), true), bvec3(bvec3(bvec3(bvec2((false), true), true))))))))))))))), false || ((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false), false || ((false))), bool(bvec2((false), true))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((false), bool(bvec2((false), true))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY((false), bool(bvec2((false), true))), true, true))))))), true && (! (_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2((false), true), bvec2(bvec2(_GLF_IDENTITY(bvec2((false), true), bvec2(_GLF_IDENTITY(bvec3(bvec2((false), true), true), bvec3(bvec3(bvec3(bvec2((false), true), true)))))))))))))))))) || false), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))) || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y)))))))))
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
          {
           return;
          }
        }
       GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.x = subgroup_id;
      }
     else
      {
      }
    }
  }
 else
  {
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y = subgroup_size;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))), (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
  {
  }
 else
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
    }
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   else
    {
    }
   do
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
        return;
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
         return;
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize)))), (uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(uvec4(gl_WorkGroupSize, 0u), uvec4(1u, 1u, 1u, 1u) * (uvec4(gl_WorkGroupSize, 0u)))))))))) | ((uvec3(_GLF_IDENTITY(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (0u)), 0u, 0u) >> _GLF_IDENTITY(_GLF_IDENTITY(uvec3(6u), ~ (~ (uvec3(6u)))), uvec3(6u))) >> _GLF_IDENTITY(uvec3(6u), uvec3(6u))))), (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize)), min(_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize)), _GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize)))))))) ^ uvec3(0u, 0u, 0u)).x;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  return;
 _GLF_struct_15 _GLF_struct_replacement_15 = _GLF_struct_15(_GLF_struct_1(mat3x4(1.0), _GLF_IDENTITY(mat2(1.0), _GLF_IDENTITY(mat2(mat4x3(mat2(1.0))), transpose(transpose(mat2(mat4x3(mat2(1.0))))))), _GLF_struct_0(ivec3(_GLF_IDENTITY(1, min(1, 1))), bvec3(true))), _GLF_struct_2(uvec3(_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uint(1u)), uint(uint(uint(uint(1u))))))), mat4(_GLF_IDENTITY(1.0, _GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-9124.3217), float(mat3x2(_GLF_FUZZED(-9124.3217), 0.0, tan(0.0), round(length(normalize(vec2(1.0, 1.0)))), _GLF_IDENTITY(dot(vec4(0.0, 0.0, sqrt(1.0), 0.0), vec4(0.0, sin(0.0), 1.0, 0.0)), dot(vec4(0.0, 0.0, sqrt(1.0), 0.0), vec4(0.0, sin(0.0), 1.0, 0.0))), 1.0))), 1.0 * (_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-9124.3217, 0.0 + (-9124.3217))), float(mat3x2(_GLF_FUZZED(-9124.3217), 0.0, tan(0.0), round(length(normalize(vec2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec2(1.0, tan(sqrt(0.0)))), _GLF_IDENTITY(float(mat3x4(float(vec2(1.0, tan(sqrt(0.0)))), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), max(float(mat3x4(float(vec2(1.0, tan(sqrt(0.0)))), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), float(mat3x4(float(vec2(1.0, tan(sqrt(0.0)))), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)))))), 1.0)))), _GLF_IDENTITY(dot(vec4(0.0, 0.0, sqrt(1.0), 0.0), vec4(0.0, _GLF_IDENTITY(sin(0.0), max(sin(0.0), _GLF_IDENTITY(_GLF_IDENTITY(sin(0.0), float(mat3(sin(0.0), 0.0, 0.0, cos(0.0), 0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, 1.0))), (_GLF_IDENTITY(sin(0.0), float(mat3(sin(0.0), 0.0, 0.0, cos(0.0), 0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, 1.0)))) / 1.0))), 1.0, 0.0)), dot(vec4(0.0, 0.0, sqrt(1.0), 0.0), vec4(0.0, sin(0.0), 1.0, 0.0))), 1.0))))) : 1.0), max((false ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-9124.3217), float(mat3x2(_GLF_FUZZED(-9124.3217), 0.0, tan(0.0), round(length(normalize(vec2(1.0, 1.0)))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 0.0, sqrt(1.0), 0.0), vec4(0.0, sin(0.0), 1.0, 0.0)), float(mat2x4(dot(vec4(0.0, 0.0, sqrt(1.0), 0.0), vec4(0.0, sin(0.0), 1.0, 0.0)), 1.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, log(1.0), 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), sqrt(cos(0.0))))), dot(vec4(0.0, 0.0, sqrt(1.0), 0.0), vec4(0.0, sin(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-4.4) : 0.0)), _GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0))), 1.0, 0.0))), 1.0))), _GLF_IDENTITY(1.0 * (_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-9124.3217, 0.0 + (-9124.3217))), float(mat3x2(_GLF_FUZZED(-9124.3217), 0.0, tan(0.0), round(length(normalize(vec2(1.0, 1.0)))), _GLF_IDENTITY(dot(vec4(0.0, 0.0, sqrt(1.0), 0.0), vec4(0.0, _GLF_IDENTITY(sin(0.0), max(sin(0.0), _GLF_IDENTITY(sin(0.0), float(mat3(sin(0.0), 0.0, 0.0, cos(0.0), 0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, 1.0))))), 1.0, 0.0)), dot(vec4(0.0, 0.0, sqrt(1.0), 0.0), vec4(0.0, sin(0.0), 1.0, 0.0))), 1.0)))), (true ? 1.0 * (_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-9124.3217, 0.0 + (-9124.3217))), float(mat3x2(_GLF_FUZZED(-9124.3217), 0.0, tan(0.0), round(length(normalize(vec2(1.0, 1.0)))), _GLF_IDENTITY(dot(vec4(0.0, 0.0, sqrt(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-61.55)))))), 0.0), vec4(0.0, _GLF_IDENTITY(sin(0.0), max(sin(0.0), _GLF_IDENTITY(sin(0.0), float(mat3(sin(0.0), 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-42.96) : 0.0)), 0.0, 0.0)), cos(0.0), 0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, 1.0))))), 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, sqrt(1.0), 0.0), vec4(0.0, sin(0.0), 1.0, 0.0)), clamp(_GLF_IDENTITY(dot(vec4(0.0, 0.0, sqrt(1.0), 0.0), vec4(0.0, sin(0.0), 1.0, 0.0)), min(dot(vec4(0.0, 0.0, sqrt(1.0), 0.0), vec4(0.0, sin(0.0), 1.0, 0.0)), dot(vec4(0.0, 0.0, sqrt(1.0), 0.0), vec4(0.0, sin(0.0), 1.0, 0.0)))), _GLF_IDENTITY(dot(vec4(0.0, 0.0, sqrt(1.0), 0.0), vec4(0.0, sin(0.0), 1.0, 0.0)), max(dot(vec4(0.0, 0.0, sqrt(1.0), 0.0), vec4(0.0, sin(0.0), 1.0, 0.0)), dot(vec4(0.0, 0.0, sqrt(1.0), 0.0), vec4(0.0, sin(0.0), 1.0, 0.0)))), dot(vec4(0.0, 0.0, sqrt(1.0), 0.0), vec4(0.0, sin(0.0), 1.0, 0.0))))), 1.0)))) : _GLF_FUZZED(398.022)))) : 1.0), (false ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-9124.3217), float(mat3x2(_GLF_FUZZED(-9124.3217), 0.0, tan(0.0), round(length(normalize(vec2(1.0, 1.0)))), _GLF_IDENTITY(dot(vec4(0.0, 0.0, sqrt(1.0), 0.0), _GLF_IDENTITY(vec4(0.0, sin(0.0), 1.0, 0.0), mat4(_GLF_ONE(1.0, injectionSwitch.y)) * (vec4(0.0, sin(0.0), 1.0, 0.0)))), dot(vec4(0.0, 0.0, sqrt(1.0), 0.0), vec4(0.0, sin(0.0), 1.0, 0.0))), 1.0))), 1.0 * (_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-9124.3217, 0.0 + (-9124.3217))), float(mat3x2(_GLF_FUZZED(-9124.3217), 0.0, tan(0.0), round(length(normalize(vec2(1.0, 1.0)))), _GLF_IDENTITY(dot(vec4(0.0, 0.0, sqrt(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, (1.0) - 0.0)))), 0.0), vec4(0.0, _GLF_IDENTITY(sin(0.0), max(sin(0.0), _GLF_IDENTITY(sin(0.0), float(mat3(sin(0.0), 0.0, 0.0, cos(0.0), 0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, 1.0))))), 1.0, 0.0)), dot(vec4(0.0, 0.0, sqrt(1.0), 0.0), vec4(0.0, sin(0.0), 1.0, 0.0))), 1.0))))) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))))))), _GLF_struct_4(true, _GLF_struct_3(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, true && (true)), true, true))) ? _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) ^ 0u), (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u) : _GLF_FUZZED(workgroup_id))), (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((false))) || _GLF_IDENTITY(false, bool(bvec2(false, false)))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(1u, 0u ^ _GLF_IDENTITY((1u), clamp((1u), (1u), (1u)))))))), mat4x2(1.0), 1u, 1u), _GLF_struct_8(_GLF_struct_5(vec4(1.0), ivec4(1), bvec4(true), ivec4(1), vec4(1.0), vec2(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0))), mat3(1.0)), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(true), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, (true) && true)), bvec2(bvec4(bvec2(_GLF_IDENTITY(true, false || (true))), true, false))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y), bool(bool((injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(bvec2(_GLF_IDENTITY(true, false || (true))), true, _GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec2(_GLF_IDENTITY(false, false || (false)), true)))))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))))) : injectionSwitch)).y), bool(_GLF_IDENTITY(bool((injectionSwitch.x < injectionSwitch.y)), true && (bool((injectionSwitch.x < injectionSwitch.y)))))))), true)), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(bvec2(_GLF_IDENTITY(true, false || (true))), true, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(uintBitsToFloat(uvec2(6135u, 5395u))) : injectionSwitch)), min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))))) : injectionSwitch)).y), bool(bool((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-6024.9072) : injectionSwitch.x)) < injectionSwitch.y)))))), true)))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(bvec2(_GLF_IDENTITY(true, false || (true))), true, _GLF_IDENTITY(false, false || _GLF_IDENTITY((false), false || ((false))))))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))))) : injectionSwitch)).y), bool(bool((injectionSwitch.x < injectionSwitch.y)))))), true)))), false))))))), bvec2(bvec2(_GLF_IDENTITY(bvec2(true), bvec2(bvec3(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(bvec2(_GLF_IDENTITY(true, false || (true))), true, _GLF_IDENTITY(false, false || (false))))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bool((_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x < injectionSwitch.y))))))))))), _GLF_struct_6(mat4(1.0), bvec3(true), mat3(_GLF_IDENTITY(1.0, 0.0 + (1.0))), uvec3(1u)), _GLF_struct_7(true, ivec2(1), _GLF_IDENTITY(uvec4(1u), max(uvec4(1u), uvec4(1u))))), workgroup_size * workgroup_id, _GLF_struct_11(mat3(1.0), _GLF_struct_9(mat2x3(1.0), mat4x2(1.0)), uvec2(1u), uvec2(1u), _GLF_struct_10(mat2x4(1.0), true, mat4x2(1.0), uvec2(1u)), mat3x2(1.0)), _GLF_struct_14(_GLF_struct_12(ivec3(1), 1.0), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, 0u ^ (1u))), _GLF_IDENTITY((_GLF_IDENTITY(uvec3(1u), _GLF_IDENTITY(uvec3(uvec3(uvec3(1u))), (uvec3(uvec3(uvec3(1u)))) | (uvec3(uvec3(uvec3(1u))))))) - uvec3(0u, 0u, 0u), (_GLF_IDENTITY((_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, uint(uint(1u)))), _GLF_IDENTITY(uvec3(uvec3(uvec3(1u))), (uvec3(uvec3(uvec3(1u)))) | (uvec3(uvec3(_GLF_IDENTITY(uvec3(1u), (uvec3(1u)) | (uvec3(1u))))))))) - uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) ^ ((_GLF_IDENTITY(uvec3(1u), _GLF_IDENTITY(uvec3(uvec3(uvec3(1u))), (uvec3(uvec3(_GLF_IDENTITY(uvec3(1u), uvec3(uvec4(_GLF_IDENTITY(uvec3(1u), (uvec3(1u)) / uvec3(1u, 1u, 1u)), 0u)))))) | (uvec3(uvec3(uvec3(1u))))))) - uvec3(0u, 0u, 0u)))) | ((_GLF_IDENTITY(uvec3(1u), _GLF_IDENTITY(uvec3(uvec3(_GLF_IDENTITY(uvec3(1u), clamp(_GLF_IDENTITY(uvec3(1u), _GLF_IDENTITY(uvec3(uvec3(uvec3(1u))), (uvec3(uvec3(uvec3(1u)))) >> uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), uvec3(1u), uvec3(1u))))), _GLF_IDENTITY((uvec3(uvec3(uvec3(1u)))) | (uvec3(uvec3(uvec3(1u)))), ~ (~ (_GLF_IDENTITY((uvec3(uvec3(uvec3(1u)))) | (uvec3(uvec3(uvec3(1u)))), clamp((uvec3(uvec3(uvec3(1u)))) | (uvec3(uvec3(uvec3(1u)))), (uvec3(uvec3(uvec3(1u)))) | (uvec3(uvec3(uvec3(1u)))), (uvec3(uvec3(uvec3(1u)))) | (uvec3(uvec3(uvec3(1u)))))))))))) - uvec3(0u, 0u, 0u)))), _GLF_struct_13(bvec2(true)), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), ~ (~ (uvec3(1u)))), _GLF_IDENTITY(uvec3(uvec4(_GLF_IDENTITY(uvec3(1u), ~ (~ (uvec3(1u)))), 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(uvec4(_GLF_IDENTITY(uvec3(1u), ~ (_GLF_IDENTITY(~ (uvec3(1u)), (~ (uvec3(1u))) >> (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(4u), uvec3(4u)))))), 0u)), clamp(uvec3(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), ~ (_GLF_IDENTITY(~ (uvec3(1u)), clamp(~ (uvec3(1u)), ~ (uvec3(1u)), ~ (uvec3(1u)))))), ~ (~ (_GLF_IDENTITY(uvec3(1u), clamp(_GLF_IDENTITY(uvec3(1u), max(_GLF_IDENTITY(uvec3(1u), max(uvec3(1u), uvec3(1u))), _GLF_IDENTITY(uvec3(1u), (uvec3(1u)) | uvec3(0u, 0u, 0u)))), uvec3(1u), uvec3(1u)))))), 0u)), uvec3(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), ~ (~ (uvec3(1u)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), ~ (~ (uvec3(1u)))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), ~ (~ (uvec3(1u)))), (false ? _GLF_FUZZED(uvec3(11933u, 51701u, 78565u)) : _GLF_IDENTITY(uvec3(1u), ~ (~ (uvec3(1u))))))) / uvec3(1u, 1u, 1u)) : _GLF_FUZZED(uvec3(56718u, 118677u, 87065u)))), 0u)), uvec3(uvec4(_GLF_IDENTITY(uvec3(1u), ~ (~ (uvec3(1u)))), 0u)))), (_GLF_IDENTITY(uvec3(uvec4(_GLF_IDENTITY(uvec3(1u), ~ (~ (uvec3(1u)))), 0u)), clamp(uvec3(uvec4(_GLF_IDENTITY(uvec3(1u), ~ (~ (uvec3(1u)))), 0u)), uvec3(uvec4(_GLF_IDENTITY(uvec3(1u), ~ (~ (uvec3(1u)))), 0u)), uvec3(uvec4(_GLF_IDENTITY(uvec3(1u), ~ (~ (uvec3(1u)))), 0u))))) | (_GLF_IDENTITY(uvec3(uvec4(_GLF_IDENTITY(uvec3(1u), ~ (~ (uvec3(1u)))), 0u)), clamp(uvec3(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uvec3(1u), ~ (~ (uvec3(1u)))), 0u), (uvec4(_GLF_IDENTITY(uvec3(1u), ~ (~ (uvec3(1u)))), 0u)) * uvec4(1u, 1u, 1u, 1u))), uvec3(uvec4(_GLF_IDENTITY(uvec3(1u), ~ _GLF_IDENTITY((~ (uvec3(1u))), clamp((~ (uvec3(1u))), _GLF_IDENTITY((~ (uvec3(1u))), clamp((~ (uvec3(1u))), (~ (uvec3(1u))), _GLF_IDENTITY((~ (uvec3(1u))), min((~ (uvec3(1u))), (~ (uvec3(1u))))))), _GLF_IDENTITY((~ (uvec3(1u))), ((~ (uvec3(1u)))) | uvec3(0u, 0u, 0u))))), 0u)), uvec3(uvec4(_GLF_IDENTITY(uvec3(1u), ~ (~ (uvec3(1u)))), 0u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(uvec4(_GLF_IDENTITY(uvec3(1u), ~ (_GLF_IDENTITY(~ (uvec3(1u)), (~ (uvec3(1u))) >> (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(4u), uvec3(4u)))))), 0u)), clamp(uvec3(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), ~ (_GLF_IDENTITY(~ (uvec3(1u)), clamp(~ (uvec3(1u)), ~ (uvec3(1u)), ~ (uvec3(1u)))))), ~ (~ (_GLF_IDENTITY(uvec3(1u), clamp(_GLF_IDENTITY(uvec3(1u), max(_GLF_IDENTITY(uvec3(1u), max(uvec3(1u), uvec3(1u))), _GLF_IDENTITY(uvec3(1u), (uvec3(1u)) | uvec3(0u, 0u, 0u)))), uvec3(1u), uvec3(1u)))))), 0u)), uvec3(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), ~ (~ (uvec3(1u)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), ~ (~ (uvec3(1u)))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), ~ (~ (uvec3(1u)))), (false ? _GLF_FUZZED(uvec3(11933u, 51701u, 78565u)) : _GLF_IDENTITY(uvec3(1u), ~ (~ (uvec3(1u))))))) / uvec3(1u, 1u, 1u)) : _GLF_FUZZED(uvec3(56718u, 118677u, 87065u)))), 0u)), uvec3(uvec4(_GLF_IDENTITY(uvec3(1u), ~ (~ (uvec3(1u)))), 0u)))), (_GLF_IDENTITY(uvec3(uvec4(_GLF_IDENTITY(uvec3(1u), ~ (~ (uvec3(1u)))), 0u)), clamp(uvec3(uvec4(_GLF_IDENTITY(uvec3(1u), ~ (~ (uvec3(1u)))), 0u)), uvec3(uvec4(_GLF_IDENTITY(uvec3(1u), ~ (~ (uvec3(1u)))), 0u)), uvec3(uvec4(_GLF_IDENTITY(uvec3(1u), ~ (~ (uvec3(1u)))), 0u))))) | (_GLF_IDENTITY(uvec3(uvec4(_GLF_IDENTITY(uvec3(1u), ~ (~ (uvec3(1u)))), 0u)), clamp(uvec3(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uvec3(1u), ~ (~ (uvec3(1u)))), 0u), (uvec4(_GLF_IDENTITY(uvec3(1u), ~ (~ (uvec3(1u)))), 0u)) * uvec4(1u, 1u, 1u, 1u))), uvec3(uvec4(_GLF_IDENTITY(uvec3(1u), ~ _GLF_IDENTITY((~ (uvec3(1u))), clamp((~ (uvec3(1u))), _GLF_IDENTITY((~ (uvec3(1u))), clamp((~ (uvec3(1u))), (~ (uvec3(1u))), _GLF_IDENTITY((~ (uvec3(1u))), min((~ (uvec3(1u))), (~ (uvec3(1u))))))), _GLF_IDENTITY((~ (uvec3(1u))), ((~ (uvec3(1u)))) | uvec3(0u, 0u, 0u))))), 0u)), uvec3(uvec4(_GLF_IDENTITY(uvec3(1u), ~ (~ (uvec3(1u)))), 0u))))))) >> uvec3(0u, 0u, 0u))) | uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))));
 uint virtual_gid = _GLF_IDENTITY(_GLF_struct_replacement_15.workgroup_base + GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.x * GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y, _GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, (workgroup_size) / 1u)) * _GLF_IDENTITY(1u, ~ (~ (1u))))) : _GLF_IDENTITY(_GLF_struct_replacement_15.workgroup_base + GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.x * _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, min(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size)), (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, min(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size))) << uvec2(0u, 0u)).y, (_GLF_struct_replacement_15.workgroup_base + GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.x * _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, min(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, min(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size)), (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, min(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size))) - uvec2(0u, 0u))) << uvec2(0u, 0u)).y) + 0u)), min(_GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, (workgroup_size) / 1u)), (true ? (_GLF_IDENTITY(workgroup_size, (workgroup_size) / 1u)) : _GLF_FUZZED(subgroup_size))) * 1u)) : _GLF_struct_replacement_15.workgroup_base + GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.x * GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y), uint(_GLF_IDENTITY(uvec3((false ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, (workgroup_size) / 1u)), (true ? (_GLF_IDENTITY(workgroup_size, (workgroup_size) / 1u)) : _GLF_FUZZED(subgroup_size))) * 1u)) : _GLF_struct_replacement_15.workgroup_base + GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.x * GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y), 0u, 0u), min(uvec3((false ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, (workgroup_size) / 1u)), (true ? (_GLF_IDENTITY(workgroup_size, (workgroup_size) / 1u)) : _GLF_FUZZED(subgroup_size))) * 1u)) : _GLF_struct_replacement_15.workgroup_base + GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.x * GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y), 0u, 0u), _GLF_IDENTITY(uvec3((false ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, (workgroup_size) / 1u)), (true ? (_GLF_IDENTITY(workgroup_size, (workgroup_size) / 1u)) : _GLF_FUZZED(subgroup_size))) * 1u)) : _GLF_struct_replacement_15.workgroup_base + GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.x * _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y, (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y, min(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y, GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y))) + 0u)), 0u, 0u), (uvec3((false ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, (workgroup_size) / 1u)), (true ? (_GLF_IDENTITY(workgroup_size, (workgroup_size) / 1u)) : _GLF_FUZZED(subgroup_size))) * 1u)) : _GLF_struct_replacement_15.workgroup_base + GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.x * GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y), 0u, 0u)) << uvec3(0u, 0u, 0u)))))), min((false ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, (workgroup_size) / 1u)) * 1u)) : _GLF_struct_replacement_15.workgroup_base + GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.x * _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y, (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y) | (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y))), (false ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, (workgroup_size) / 1u)), ((_GLF_IDENTITY(workgroup_size, (workgroup_size) / 1u))) - uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))))) * 1u)) : _GLF_struct_replacement_15.workgroup_base + GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.x * GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y))), _GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, max(workgroup_size, workgroup_size))) / 1u)) * 1u)) : _GLF_struct_replacement_15.workgroup_base + _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.x, _GLF_IDENTITY((GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.x), clamp(_GLF_IDENTITY((GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.x), min((GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.x), (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.x))), _GLF_IDENTITY((GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.x), 1u * ((GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.x))), (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.x))) << _GLF_IDENTITY(0u, (0u) | (0u >> _GLF_IDENTITY(uint(2u), uint(2u))))) * GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y), (_GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, (workgroup_size) / 1u)) * 1u)) : _GLF_struct_replacement_15.workgroup_base + _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.x, (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.x) | (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, max(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size)).x)) * GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y), ((false ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (1u ^ 1u) | (_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, (0u << _GLF_IDENTITY(uint(1u), uint(1u))) ^ (workgroup_size))) / ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u)))))), (_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((workgroup_size), max(_GLF_IDENTITY((workgroup_size), ((workgroup_size)) ^ 0u), _GLF_IDENTITY((workgroup_size), (true ? (workgroup_size) : _GLF_FUZZED(subgroup_size))))) / 1u)) * 1u)) : _GLF_struct_replacement_15.workgroup_base + GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.x * _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y, _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y, (false ? _GLF_FUZZED(workgroup_id) : GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y))) >> 0u, _GLF_IDENTITY(0u, (0u) | (40522u & 0u)) | ((_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y, (false ? _GLF_FUZZED(workgroup_id) : GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y))) >> 0u))))) << 0u)) << 0u)))) + _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id));
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))))
  return;
 do
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).x > injectionSwitch.y))))
      break;
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(false))
        break;
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), ! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))) || false), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y))))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x < injectionSwitch.y))))))) && true)))))) || false), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, ! (! (true))) && (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_IDENTITY(true, bool(bvec4(true, true, true, true))), _GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(true, true, true), bvec3(bvec4(bvec3(true, true, true), true)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(true, true, true), bvec3(bvec4(bvec3(true, true, true), true)))), bool(bvec2(bool(_GLF_IDENTITY(bvec3(true, true, true), bvec3(bvec4(bvec3(true, true, true), true)))), true)))) && true)), (injectionSwitch.x < injectionSwitch.y))))), ! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))) || false), (injectionSwitch.x > injectionSwitch.y)))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
        {
         if(_GLF_DEAD(false))
          break;
        }
       else
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            return;
          }
         else
          {
          }
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))
          {
           if(_GLF_DEAD(false))
            continue;
          }
         else
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            continue;
           return;
          }
        }
      }
     else
      {
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))))))
    break;
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), (! (_GLF_IDENTITY(false, (false) && true))) && true))))) || false))
    continue;
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = (0 & 63407); _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, (false ? _GLF_FUZZED(_injected_loop_counter) : 1))); _injected_loop_counter ++)
      {
       return;
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(false))
      break;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(false ? _GLF_FUZZED(7.9) : _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), (false ? _GLF_FUZZED(-92.75) : false ? _GLF_FUZZED(7.9) : _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))))) > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))), (_GLF_IDENTITY(false ? _GLF_FUZZED(7.9) : _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), (false ? _GLF_FUZZED(-92.75) : _GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) ? _GLF_FUZZED(7.9) : _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)) - 0.0))))) > injectionSwitch.y)))))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), ! (_GLF_IDENTITY(! (false || (false)), ! (! (! (false || (false))))))))))) || (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-76.49) : injectionSwitch.y))) - 0.0, max((_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-76.49) : injectionSwitch.y))) - 0.0, (_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(-76.49) : injectionSwitch.y))) - 0.0))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)) || false)))), true && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(vec2(-3405.7187, -5.6))), ((true ? injectionSwitch : _GLF_FUZZED(vec2(-3405.7187, -5.6)))) + tan(vec2(0.0, 0.0)))).y) - 0.0)), ! _GLF_IDENTITY((! ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), (injectionSwitch.y) - 0.0)))), bool(bvec2((! ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), (injectionSwitch.y) - 0.0)))), false)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), ! (! ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), (injectionSwitch.y) - 0.0))))), false || _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), ! (! _GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), (injectionSwitch.y) - 0.0))), _GLF_IDENTITY(true, (true) && true) && (_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), (injectionSwitch.y) - 0.0))), _GLF_IDENTITY(! (! (((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), (injectionSwitch.y) - 0.0))))), false || (! (! (((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), (injectionSwitch.y) - 0.0))))))))))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), ! (! _GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), (injectionSwitch.y) - 0.0))), _GLF_IDENTITY(true, (true) && true) && (_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), (injectionSwitch.y) - 0.0))), _GLF_IDENTITY(! (! (((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), (injectionSwitch.y) - 0.0))))), false || (! (! (((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), (injectionSwitch.y) - 0.0)))))))))))))), ! (! (! ((_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), ! (! _GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), (injectionSwitch.y) - 0.0))), _GLF_IDENTITY(true, (true) && true) && (_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), (injectionSwitch.y) - 0.0))), _GLF_IDENTITY(! (! (((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), (injectionSwitch.y) - 0.0))))), false || (! (! (((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), (injectionSwitch.y) - 0.0)))))))))))))))))))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), ! (! ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), (injectionSwitch.y) - 0.0))))), false || (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), ! (! ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), (injectionSwitch.y) - 0.0))))))), true, false), false)))), _GLF_IDENTITY(bool(bvec2(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), ! (! ((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(1829.5736, -9.9)) : injectionSwitch)).y, injectionSwitch.y)), (injectionSwitch.y) - 0.0))))), false || _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), (true ? (injectionSwitch.y) : _GLF_FUZZED(-9.4))) - 0.0)), ! (! ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), (injectionSwitch.y) - 0.0)))))), ! (! ((_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), ! (! ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), (injectionSwitch.y) - 0.0), float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), (injectionSwitch.y) - 0.0), 0.0, 0.0, 0.0, 1.0, sin(0.0), abs(1.0), 0.0, 1.0, 0.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat4x3(979.926, -3.2, 161.675, -50.31, 2.8, -6.7, -843.961, 8784.5854, -1118.4233, 9280.8895, 53.83, -901.985)) : mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), (injectionSwitch.y) - 0.0), 0.0, 0.0, 0.0, 1.0, sin(0.0), abs(1.0), 0.0, 1.0, 0.0, 1.0, 0.0)))))))))))))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), ! (! ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), (injectionSwitch.y) - 0.0))))), false || (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x2(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, sqrt(0.0))), 0.0 + (float(mat3x2(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, sqrt(0.0))))))))) - 0.0)), ! (! ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), (injectionSwitch.y) - 0.0))))))), true, _GLF_IDENTITY(false, bool(bvec2(false, true)))), false)))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))), bool(bvec2(bool(bvec2(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), ! (! ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), (injectionSwitch.y) - 0.0))))), false || (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.y) - 0.0, float(mat3x4((injectionSwitch.y) - 0.0, 0.0, 0.0, abs(1.0), 0.0, sqrt(0.0), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), sqrt(abs(0.0)), 1.0, 0.0, 1.0, sin(0.0)))), (_GLF_IDENTITY((injectionSwitch.y) - 0.0, ((injectionSwitch.y) - _GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(-19.91)))) - 0.0)) * 1.0))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) - 0.0), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) - 0.0), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) - 0.0), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) - 0.0), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) - 0.0), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))), (injectionSwitch.y) - 0.0))))))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), ! (! ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), (injectionSwitch.y) - 0.0))))), false || (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), ! (! ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), (injectionSwitch.y) - 0.0))))))), true, false), false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true)))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch))) - vec2(0.0, 0.0)).y, (injectionSwitch.y) - 0.0)), ! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) / 1.0), max(injectionSwitch.y, injectionSwitch.y)), (injectionSwitch.y) - 0.0))), true && (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), (injectionSwitch.y) - 0.0))), true && (! ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) / 1.0), (injectionSwitch.y) - 0.0))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! ((_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), ! (! ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(0.0, 0.0) + (injectionSwitch), (false ? _GLF_FUZZED((vec2(-9.1, -8.8) * 19.52)) : _GLF_IDENTITY(vec2(0.0, 0.0) + (injectionSwitch), clamp(vec2(0.0, 0.0) + (injectionSwitch), vec2(0.0, 0.0) + (injectionSwitch), vec2(0.0, 0.0) + (injectionSwitch)))))).y), 0.0 + (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(0.0, 0.0) + (injectionSwitch), min(vec2(0.0, 0.0) + (injectionSwitch), vec2(0.0, 0.0) + (injectionSwitch)))).y), min((_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y), (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y))))) - 0.0)))))))))))))))), true && (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), bool(_GLF_IDENTITY(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), (bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))) && true)))), true && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), ! _GLF_IDENTITY((! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y), _GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, (1.0) + 0.0))) * ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(0.0 + _GLF_IDENTITY((injectionSwitch.y), max((injectionSwitch.y), (injectionSwitch.y))), (false ? _GLF_FUZZED(-9758.0834) : 0.0 + _GLF_IDENTITY((injectionSwitch.y), max((injectionSwitch.y), (injectionSwitch.y)))))))), (injectionSwitch.y) / 1.0)))) - 0.0)), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(956.422)))))) - 0.0))) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), ((injectionSwitch.y)) / 1.0) - 0.0))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) - 0.0, ((injectionSwitch.y) - 0.0) + 0.0)))), (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))) && _GLF_IDENTITY(true, true && (true)))), (_GLF_IDENTITY(! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) - 0.0, ((injectionSwitch.y) - 0.0) + 0.0)))), (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))) && _GLF_IDENTITY(true, true && (true)))), (_GLF_IDENTITY(! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) - 0.0, ((injectionSwitch.y) - 0.0) + 0.0)))), (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))) && _GLF_IDENTITY(true, true && (true)))), bool(bvec4(! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) - 0.0, ((injectionSwitch.y) - 0.0) + 0.0)))), (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))) && _GLF_IDENTITY(true, true && (true)))), false, false, false)))) || false)) || false))))))), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y), _GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, (1.0) + 0.0))) * ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 0.0 + _GLF_IDENTITY((injectionSwitch.y), max((injectionSwitch.y), (injectionSwitch.y)))))), (injectionSwitch.y) / 1.0)))) - 0.0)), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-97.03, 3.2)) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), injectionSwitch)).y, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.y), ((injectionSwitch.y)) / 1.0), max(_GLF_IDENTITY((injectionSwitch.y), ((injectionSwitch.y)) / 1.0), _GLF_IDENTITY((injectionSwitch.y), ((injectionSwitch.y)) / 1.0))) - 0.0))), ! (! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) - 0.0, ((injectionSwitch.y) - 0.0) + 0.0)))), (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))) && _GLF_IDENTITY(true, true && (true)))))))))), bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y), _GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, (1.0) + 0.0))) * ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 0.0 + _GLF_IDENTITY((injectionSwitch.y), max((injectionSwitch.y), (injectionSwitch.y)))))), (injectionSwitch.y) / 1.0)))) - 0.0)), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), ((injectionSwitch.y)) / 1.0) - 0.0))), ! (! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) - 0.0, ((injectionSwitch.y) - 0.0) + 0.0)))), (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))) && _GLF_IDENTITY(true, true && (true))))))))), ! (! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y), _GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, (1.0) + 0.0))) * ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 0.0 + _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), max((injectionSwitch.y), (injectionSwitch.y)))))), (injectionSwitch.y) / 1.0)))) - 0.0)), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), min(max(injectionSwitch.x, injectionSwitch.x), max(injectionSwitch.x, injectionSwitch.x)))) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0)), (vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0))) - vec2(0.0, 0.0))).y), ((injectionSwitch.y)) / 1.0) - 0.0))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) - 0.0, ((injectionSwitch.y) - 0.0) + 0.0)))), (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))) && _GLF_IDENTITY(true, true && (true))))), bool(bvec4((! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) - 0.0, ((injectionSwitch.y) - 0.0) + 0.0)))), (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))) && _GLF_IDENTITY(true, true && (true))))), true, false, true))))))))))), bool(bvec3((! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y), _GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, (1.0) + 0.0))) * ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 0.0 + _GLF_IDENTITY((injectionSwitch.y), max((injectionSwitch.y), (injectionSwitch.y)))))), (injectionSwitch.y) / 1.0)))) - 0.0, (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).y), _GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, (1.0) + 0.0))) * ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, 0.0 + _GLF_IDENTITY((injectionSwitch.y), max((injectionSwitch.y), _GLF_IDENTITY((injectionSwitch.y), max((injectionSwitch.y), _GLF_IDENTITY((injectionSwitch.y), max(_GLF_IDENTITY((injectionSwitch.y), clamp((injectionSwitch.y), (injectionSwitch.y), (injectionSwitch.y))), (injectionSwitch.y)))))))))), (injectionSwitch.y) / 1.0)))) - 0.0) - 0.0))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), ((injectionSwitch.y)) / 1.0) - 0.0))), ! (! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) - 0.0, ((injectionSwitch.y) - 0.0) + 0.0)))), (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))) && true)), false || (! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))) && true))))))) && _GLF_IDENTITY(true, true && (true)))))))))), false, true))), true))))))))))))))
    {
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false)))) ? _GLF_FUZZED(_GLF_IDENTITY(vec2(-216.444, 28.43), clamp(vec2(-216.444, 28.43), vec2(-216.444, 28.43), vec2(-216.444, 28.43)))) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, 0 | (1))])))), (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-216.444, 28.43)) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))) + tan(vec2(0.0, 0.0))).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(false))
        {
         do
          {
           return;
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
        }
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
          {
          }
         else
          {
           return;
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))));
      }
     do
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false || (injectionSwitch.x > injectionSwitch.y), true && (false || (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-4.2))) > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-4.2))) > injectionSwitch.y)), false || (injectionSwitch.x > injectionSwitch.y)))))))))
          {
          }
         else
          {
           for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
            {
             return;
            }
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      continue;
     continue;
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_struct_replacement_15.workgroup_base + GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.x * _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y, (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y) | (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y)), _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_struct_replacement_15.workgroup_base + _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size) / uvec2(1u, 1u)).x * _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y, _GLF_IDENTITY((GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y) | (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y), (_GLF_IDENTITY((GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y) | (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y), ((GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y) | (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y)) * 1u)) + 0u)), (true ? _GLF_struct_replacement_15.workgroup_base + _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.x, uint(uint(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.x))) * _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y, (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y) | _GLF_IDENTITY((GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y), ((GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y)) + 0u)) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), (_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), 0u ^ (_GLF_FUZZED(subgroup_local_id)))) | (_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), _GLF_IDENTITY((_GLF_FUZZED(subgroup_local_id)), ((_GLF_FUZZED(subgroup_local_id))) | 0u) ^ 0u))))), _GLF_struct_replacement_15.workgroup_base + GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.x * _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, ~ (~ (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size))).y, (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y, (_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_size) : GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y, ~ (~ (false ? _GLF_FUZZED(subgroup_size) : GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y)))))) | _GLF_IDENTITY((GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y), (_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, max(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size)).y), ~ (~ ((GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y))))) - 0u))), (min(_GLF_IDENTITY(_GLF_struct_replacement_15.workgroup_base + _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, _GLF_IDENTITY((GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size) / uvec2(1u, 1u), clamp((GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size) / uvec2(1u, 1u), _GLF_IDENTITY((GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size) / uvec2(1u, 1u), ~ (~ ((GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size) / uvec2(1u, 1u)))), (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size) / uvec2(1u, 1u)))).x * _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y, _GLF_IDENTITY((GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y) | (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y), (_GLF_IDENTITY((GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y) | (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y), ((GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y) | (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y)) * 1u)) + 0u)), (true ? _GLF_struct_replacement_15.workgroup_base + _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.x, uint(uint(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.x))) * _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y, (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y) | _GLF_IDENTITY((GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y), ((GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y)) + 0u)) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), (_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), _GLF_IDENTITY(0u ^ (_GLF_FUZZED(subgroup_local_id)), (0u ^ (_GLF_FUZZED(subgroup_local_id))) ^ (0u << _GLF_IDENTITY(uint(1u), uint(1u)))))) | (_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), _GLF_IDENTITY((_GLF_FUZZED(subgroup_local_id)), ((_GLF_FUZZED(subgroup_local_id))) | 0u) ^ 0u))))), _GLF_struct_replacement_15.workgroup_base + GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.x * _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, ~ (~ (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size))).y, (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y, (_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_size) : GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y, ~ (~ (false ? _GLF_FUZZED(subgroup_size) : GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y)))))) | _GLF_IDENTITY((GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y), (_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, max(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size) << uvec2(0u, 0u)))).y), ~ (~ ((GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y))))) - 0u)))) - 0u)) + ((_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))) % GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y);
 for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, (_GLF_IDENTITY(0, 1 * (0))) - 0)); _injected_loop_counter --)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 for(int _injected_loop_counter = (_GLF_IDENTITY(_GLF_IDENTITY(0, max(0, 0)), _GLF_IDENTITY(0, _GLF_IDENTITY((true ? 0 : _GLF_FUZZED(-75168)), clamp((true ? 0 : _GLF_FUZZED(-75168)), (true ? 0 : _GLF_FUZZED(-75168)), (true ? 0 : _GLF_FUZZED(-75168))))) + (0)) | 0); _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))), bool(bool(_GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y)))))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))), bool(bool(_GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y)))))), true, false), true)))), (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))), bool(bool(_GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y)))))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))), bool(bool(_GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y)))))), true, false), true))))) || false)), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))), bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y)))))))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (true ? int(_GLF_ONE(1.0, injectionSwitch.y)) : _GLF_FUZZED(-47564)))), bool(bool(_GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y)))))), true, false), _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (true)))))))), _GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y)), (_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))) || _GLF_IDENTITY(false, bool(bvec4(false, false, true, true))))), bool(bool(_GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y)))))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))), bool(bool(_GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y)))))), true, false), true))))), true && ((bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y)), (_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))) || _GLF_IDENTITY(false, bool(bvec4(false, false, true, true))))), bool(bool(_GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y)))))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))), bool(bool(_GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y)))))), true, false), true))))))) || false))))), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))), bool(bool(_GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y)))))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))), bool(bool(_GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y)))))), _GLF_IDENTITY(true, (true) && true), false), true)))), (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))), bool(bool(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, max(_injected_loop_counter, _injected_loop_counter)) != int(_GLF_ONE(1.0, injectionSwitch.y)))))), true, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))), bool(bool(_GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(_GLF_IDENTITY(1.0, float(mat3x2(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, max(1.0, 1.0)))), 1.0, 1.0, 1.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, sqrt(1.0), 0.0, 1.0))))), injectionSwitch.y)))))), true, false), true)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))), bool(bool(_GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(_GLF_IDENTITY(1.0, float(mat3x2(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, max(1.0, 1.0)))), 1.0, 1.0, 1.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, sqrt(1.0), 0.0, 1.0))))), injectionSwitch.y)))))), true, false), true)), false)))))) || false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), false, true, _GLF_IDENTITY(false, bool(bvec2(false, true))))))))
    return;
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   for(int _injected_loop_counter = _GLF_IDENTITY(int(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), (injectionSwitch.y) + 0.0))), (_GLF_IDENTITY(int(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), (injectionSwitch.y) + 0.0))), _GLF_IDENTITY((int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))), (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), bool(bvec4(_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), true, true))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), bool(bvec2(bool(_GLF_IDENTITY(bool(true), bool(bvec4(_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), true, true))), false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(5.3) : injectionSwitch.y)))), true)))), true)))) ? (int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))) : _GLF_FUZZED(81895))) | (int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))), ((injectionSwitch.y)) - 0.0) + 0.0)))))) - 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))
      return;
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), true))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * exp(length(vec4(0.0, 0.0, 0.0, 0.0)))), (true ? _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(-88.55))) > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-11.70)))))))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), (true ? _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), vec2(1.0, 1.0) * (clamp(injectionSwitch, injectionSwitch, injectionSwitch))) : _GLF_FUZZED(vec2(-794.463, 44.31))))).x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          continue;
         return;
        }
      }
    }
  }
 else
  {
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   for(int _injected_loop_counter = _GLF_IDENTITY((_GLF_IDENTITY((1 << _GLF_IDENTITY(int(0), int(0))), clamp((1 << _GLF_IDENTITY(int(0), int(0))), (1 << _GLF_IDENTITY(int(0), int(0))), _GLF_IDENTITY((1 << _GLF_IDENTITY(int(0), int(0))), ((1 << _GLF_IDENTITY(int(0), int(0)))) ^ 0))) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(int(0), (int(0)) >> 0), 0, 1, 1), (ivec4(_GLF_IDENTITY(int(0), (int(0)) >> _GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), 0 | (~ (0)))))))), 0, 1, 1)) | (ivec4(_GLF_IDENTITY(int(0), (int(0)) >> 0), 0, 1, 1))))))), max((_GLF_IDENTITY((1 << _GLF_IDENTITY(int(0), int(0))), clamp((1 << _GLF_IDENTITY(int(0), int(0))), (1 << _GLF_IDENTITY(int(0), int(0))), _GLF_IDENTITY((1 << _GLF_IDENTITY(int(0), int(0))), ((1 << _GLF_IDENTITY(int(0), int(0)))) ^ 0))) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(int(0), (int(0)) >> 0), 0, 1, 1), (ivec4(_GLF_IDENTITY(int(0), (int(0)) >> _GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), 0 | (~ (0)))))))), 0, 1, 1)) | (ivec4(_GLF_IDENTITY(int(0), (int(0)) >> 0), 0, 1, 1))))))), (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(0), int(0))), clamp((1 << _GLF_IDENTITY(int(0), int(0))), (1 << _GLF_IDENTITY(int(0), int(0))), _GLF_IDENTITY((1 << _GLF_IDENTITY(int(0), int(0))), ((1 << _GLF_IDENTITY(int(0), int(0)))) ^ 0))) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(int(0), (int(0)) >> 0), 0, 1, 1), (ivec4(_GLF_IDENTITY(int(0), (int(0)) >> _GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), 0 | (~ (0)))))))), 0, 1, 1)) | (ivec4(_GLF_IDENTITY(int(0), (int(0)) >> 0), 0, 1, 1))))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, max(0, 0)), 0))); _injected_loop_counter --)
    {
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 do
  {
   buf[virtual_gid] = 1;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    break;
  }
 while(_GLF_WRAPPED_LOOP(false));
 for(int _injected_loop_counter = ((_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(_GLF_IDENTITY(-87393, (_GLF_IDENTITY(-87393, clamp(-87393, _GLF_IDENTITY(-87393, (-87393) | (-87393)), _GLF_IDENTITY(-87393, max(-87393, -87393))))) << 0)))) << _GLF_IDENTITY(int(4), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(4, 1 * (4))), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(int(4), (int(4)) | (int(4))), _GLF_IDENTITY(1, (false ? _GLF_FUZZED(72011) : 1)), _GLF_IDENTITY(1, (1) + ((0 & -28247) | int(_GLF_ZERO(0.0, injectionSwitch.x)))), 1)), int(ivec4(int(ivec4(int(4), _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec3(1, 1, 0)), (int(ivec3(1, 1, 0))) | (int(ivec3(1, 1, 0)))))))), 1, 1)), 0, _GLF_IDENTITY(0, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0)))), int(int(~ (_GLF_IDENTITY(~ _GLF_IDENTITY((0), ((0 | 0) | 0) ^ ((0))), (~ (0)) | (~ (0)))))))), 1)))), (_GLF_IDENTITY(int(4), _GLF_IDENTITY(int(ivec4(int(4), 1, 1, 1)), int(ivec4(int(ivec4(_GLF_IDENTITY(int(4), 1 * (int(4))), 1, 1, 1)), 0, 0, 1))))) / 1))) >> _GLF_IDENTITY(int(4), int(4))); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), bool(bvec4(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), true && (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0))), true, false, true)))), (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), bool(bvec4(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > 0, false || (_injected_loop_counter > 0))), true && (_GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, (0) ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))))))), true, false, true)))), ! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), bool(bvec4(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), true && (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0))), true, false, true)))))))) && true))); _GLF_IDENTITY(_injected_loop_counter --, ~ (~ (_injected_loop_counter --))))
  {
   if(_GLF_DEAD(false))
    continue;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     for(int _injected_loop_counter = _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), min(int(_GLF_ONE(1.0, injectionSwitch.y)), int(_GLF_ONE(1.0, injectionSwitch.y)))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       return;
       if(_GLF_DEAD(false))
        return;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    continue;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (true) && true)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), ! _GLF_IDENTITY((! ((false))), true && ((! ((false)))))), false, true))) && _GLF_IDENTITY(true, (true) && true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (true) && true))), _GLF_IDENTITY(false || (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), (_GLF_IDENTITY(true, (true) && true)) || false)), (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), (_GLF_IDENTITY(true, (true) && true)) || false)), (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), ! (! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, false, true, true)))) && true)))), (_GLF_IDENTITY(true, (true) && true)) || false))) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (! (false || (! (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && true)) && true)) || false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY((true), ((true)) && true) && true), (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), bool(bvec4(_GLF_IDENTITY(true, _GLF_IDENTITY((true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((true), ! (! ((true))))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY((true), ! (! ((true)))))), (! (! (_GLF_IDENTITY((true), ! (! ((true))))))) && true))))) && true), true, false, false))))))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), (_GLF_IDENTITY(true, _GLF_IDENTITY((true), ! (! (_GLF_IDENTITY((true), ((true)) && true)))) && true)) || false)) || false)) && true))))))))))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY((false), _GLF_IDENTITY(((false)), (_GLF_IDENTITY(((false)), ! (! (_GLF_IDENTITY(((false)), false || (((false)))))))) || false) || false) && true), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))) || false) || ((false) && true))), false)))))), _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)) && true, true && (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, true && (true)))), ! (! ((_GLF_IDENTITY(false, (false) && true))))) && true))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      continue;
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           continue;
          }
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, true && (false)), true, false, true)), bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))) && true))), true, false, true)), false))))))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                continue;
               break;
              }
             return;
            }
          }
        }
      }
     else
      {
       for(int _injected_loop_counter = (_GLF_IDENTITY(0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), int(ivec2(_GLF_IDENTITY(int(3), int(3)), 1))), (0 >> _GLF_IDENTITY(int(3), int(3))) | (0 >> _GLF_IDENTITY(int(3), int(3))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 ^ 1)); _injected_loop_counter ++)
        {
         do
          {
           return;
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       if(_GLF_DEAD(false))
        continue;
      }
     if(_GLF_DEAD(false))
      continue;
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       return;
      }
     else
      {
      }
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   do
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(subgroup_local_id + 1 < GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y)
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           break;
          }
         for(int _injected_loop_counter = _GLF_IDENTITY(1, _GLF_IDENTITY(0 | (1), _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), 0 + (int(_GLF_ZERO(0.0, injectionSwitch.x)))) | (0 | (1)))); _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bvec2(_GLF_WRAPPED_IF_FALSE(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
              {
              }
             else
              {
               return;
              }
            }
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))), injectionSwitch.x)) < injectionSwitch.y))))
            {
             if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
              return;
            }
           else
            {
            }
           if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
            {
             if(_GLF_DEAD(false))
              break;
             continue;
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))))
            break;
           if(_GLF_DEAD(false))
            return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
         int i = 0;
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, (1) << (0 << _GLF_IDENTITY(int(4), int(4))))); _injected_loop_counter ++)
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))
              {
               if(_GLF_DEAD(false))
                break;
               return;
              }
            }
           else
            {
             atomicStore(buf[next_virtual_gid], uint(2), _GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), _GLF_IDENTITY((~ (_GLF_IDENTITY(4, 0 ^ (4)))), max((~ (_GLF_IDENTITY(4, 0 ^ (4)))), (~ (_GLF_IDENTITY(4, 0 ^ (4)))))) << 0))), 64, 0);
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
              return;
            }
          }
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), bool(bvec4(! (! ((injectionSwitch.x > injectionSwitch.y))), true, false, true)))))))
          return;
         if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec3(injectionSwitch.x < injectionSwitch.y, true, false))))))), false || _GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)), ! (! (((injectionSwitch.x < injectionSwitch.y))))))), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false))
              {
              }
             else
              {
               do
                {
                 if(_GLF_DEAD(false))
                  continue;
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    break;
                   return;
                  }
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    return;
                  }
                 else
                  {
                   if(_GLF_DEAD(false))
                    break;
                  }
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(false))
                      continue;
                     return;
                    }
                   break;
                  }
                 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY((true), bool(bvec3((true), false, false))), ((true)) || _GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(! (bool(false)), bool(bool(! (bool(false)))))))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(! (bool(false)), bool(bool(! (bool(false)))))))), false, false, true)), ! (! (bool(bvec4(! (_GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(! (bool(false)), bool(bool(! (bool(false)))))))), false, false, true)))))))), true && (_GLF_IDENTITY(bool(false), true && (bool(false))))))), (injectionSwitch.x > injectionSwitch.y))) && true)))))
                  {
                   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false)))))))
                    continue;
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec4(injectionSwitch, 0.0, 1.0), clamp(_GLF_IDENTITY(vec4(injectionSwitch, 0.0, 1.0), _GLF_IDENTITY(mat4(1.0) * (vec4(injectionSwitch, 0.0, 1.0)), _GLF_IDENTITY(mat4(1.0) * (mat4(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0))) * (vec4(injectionSwitch, 0.0, 1.0))), vec4(mat3x2(mat4(1.0) * (mat4(1.0) * (vec4(injectionSwitch, 0.0, 1.0))), 1.0, 1.0))))), vec4(injectionSwitch, 0.0, 1.0), vec4(injectionSwitch, 0.0, 1.0)))), (_GLF_IDENTITY(true, (true) && true) ? vec2(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), 0.0, 1.0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(vec4(injectionSwitch, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(distance(-336.438, -1.5)))))), 1.0), vec4(0.0, 0.0, 0.0, 0.0) + (vec4(injectionSwitch, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(distance(-336.438, -1.5)))))), 1.0))), mat4(1.0) * _GLF_IDENTITY((vec4(injectionSwitch, 0.0, 1.0)), vec4(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY((vec4(injectionSwitch, 0.0, 1.0)), vec4(vec4((vec4(injectionSwitch, 0.0, 1.0))))), 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, tan(_GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)))), abs(0.0), 1.0, cos(0.0)), transpose(transpose(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY((vec4(injectionSwitch, 0.0, 1.0)), vec4(vec4((vec4(injectionSwitch, 0.0, 1.0))))), 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, tan(_GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)))), abs(0.0), 1.0, cos(0.0)), mat4(1.0) * (mat3x4(_GLF_IDENTITY((vec4(injectionSwitch, 0.0, 1.0)), vec4(vec4((vec4(injectionSwitch, 0.0, 1.0))))), 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, tan(_GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)))), abs(0.0), 1.0, cos(0.0)))))))))), vec4(injectionSwitch, 0.0, 1.0), vec4(injectionSwitch, 0.0, 1.0)))) : _GLF_FUZZED(injectionSwitch)))).y))))
                    continue;
                   if(_GLF_DEAD(false))
                    break;
                   continue;
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    break;
                  }
                 do
                  {
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, 0u | (next_virtual_gid))], uint(2), 4, 64, 0);
                    }
                   else
                    {
                    }
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))))));
               if(_GLF_DEAD(false))
                continue;
               if(_GLF_DEAD(false))
                continue;
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              continue;
             if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
              continue;
            }
          }
         else
          {
           if(_GLF_DEAD(false))
            return;
           for(int _injected_loop_counter = _GLF_IDENTITY(0, (0) / 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 ^ 0)); _GLF_IDENTITY(_injected_loop_counter ++, 1 * (_injected_loop_counter ++)))
            {
             if(_GLF_DEAD(false))
              continue;
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), float(mat4(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, tan(0.0), 1.0, 1.0, log(1.0), 1.0, 1.0, 1.0, 0.0, 1.0))))) > injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                break;
               return;
              }
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              {
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                {
                 return;
                }
              }
             break;
            }
           if(_GLF_DEAD(false))
            return;
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           break;
          }
        }
       if(_GLF_DEAD(false))
        continue;
      }
     else
      {
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, ! (! (false))))), ! (! (! (! _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(! _GLF_IDENTITY((! (false)), ((! (false))) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! _GLF_IDENTITY((! (false)), ((! (false))) && true))))), ((_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), true && ((false)))) && true))) && true)), (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), true && _GLF_IDENTITY(((false)), false || (((false)))))) && true))) && true))) && true))) && true))))))));
  }
 else
  {
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
