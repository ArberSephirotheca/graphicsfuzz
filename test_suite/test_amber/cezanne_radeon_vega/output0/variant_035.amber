#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, true))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))) && true, (_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))) && true, bool(bvec4((_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))) && true, true, false, true)))) || _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, true))))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))) || (false), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))) || (false), bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, false))) || _GLF_IDENTITY((false), bool(bool((false)))), true, true))), false, _GLF_IDENTITY(false, ! (! (false)))))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(uint(uvec3(gl_WorkGroupSize.x, 0u, (0u | 0u))), (uint(uvec3(gl_WorkGroupSize.x, 0u, (0u | 0u)))) | (uint(uvec3(gl_WorkGroupSize.x, 0u, (0u | 0u)))))), (_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(uint(uvec3(gl_WorkGroupSize.x, 0u, (_GLF_IDENTITY(0u | 0u, (0u | 0u) / 1u)))), (uint(uvec3(gl_WorkGroupSize.x, 0u, (0u | 0u)))) | (uint(uvec3(gl_WorkGroupSize.x, 0u, (0u | 0u))))))) | 0u), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(uint(uvec3(gl_WorkGroupSize.x, 0u, (_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, (0u) | (0u)))) | 0u))), (uint(uvec3(gl_WorkGroupSize.x, 0u, (_GLF_IDENTITY(0u | 0u, clamp(0u | 0u, 0u | 0u, 0u | 0u)))))) | (uint(uvec3(gl_WorkGroupSize.x, 0u, (0u | 0u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(uint(uvec3(gl_WorkGroupSize.x, 0u, (0u | _GLF_IDENTITY(0u, (0u) ^ 0u)))), (uint(uvec3(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - 0u), _GLF_IDENTITY(0u, ~ (~ (0u))), _GLF_IDENTITY((0u | 0u), ((0u | 0u)) << 0u)))) | (uint(uvec3(gl_WorkGroupSize.x, 0u, (0u | 0u)))))), (_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(uint(uvec3(gl_WorkGroupSize.x, 0u, _GLF_IDENTITY((0u | 0u), ((0u | 0u)) / 1u))), (uint(uvec3(gl_WorkGroupSize.x, 0u, (0u | 0u)))) | _GLF_IDENTITY((uint(uvec3(gl_WorkGroupSize.x, 0u, (0u | 0u)))), ((uint(uvec3(gl_WorkGroupSize.x, 0u, (0u | 0u))))) ^ (0u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), 1u * (uint(2u))))))))) - 0u)) | (_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(uint(uvec3(gl_WorkGroupSize.x, 0u, (_GLF_IDENTITY(0u, (0u) * (1u & 1u)) | 0u))), (uint(uvec3(gl_WorkGroupSize.x, 0u, (0u | 0u)))) | (uint(uvec3(gl_WorkGroupSize.x, 0u, (0u | 0u)))))))), 0u, 0u, 0u), min(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(uint(uvec3(gl_WorkGroupSize.x, 0u, (0u | 0u))), _GLF_IDENTITY((uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) ^ (gl_WorkGroupSize)))))).x, 0u, (0u | 0u)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uvec3(gl_WorkGroupSize.x, 0u, (0u | 0u)), ~ _GLF_IDENTITY((~ (uvec3(gl_WorkGroupSize.x, 0u, (0u | 0u)))), ((~ (uvec3(gl_WorkGroupSize.x, 0u, (0u | 0u))))) | ((~ (uvec3(gl_WorkGroupSize.x, 0u, (0u | 0u)))))))), ~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uvec3(gl_WorkGroupSize.x, 0u, (0u | 0u)), ~ (~ (_GLF_IDENTITY(uvec3(gl_WorkGroupSize.x, 0u, (0u | 0u)), min(uvec3(gl_WorkGroupSize.x, 0u, (0u | 0u)), uvec3(gl_WorkGroupSize.x, 0u, (0u | 0u)))))))), uvec3(uvec4(~ (_GLF_IDENTITY(uvec3(gl_WorkGroupSize.x, 0u, (_GLF_IDENTITY(0u, 0u ^ (0u)) | 0u)), ~ (~ (uvec3(gl_WorkGroupSize.x, 0u, (0u | 0u)))))), 1u)))))))))), max(_GLF_IDENTITY((uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) ^ (gl_WorkGroupSize)))))).x, 0u, (0u | 0u)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uvec3(gl_WorkGroupSize.x, 0u, (0u | 0u)), ~ _GLF_IDENTITY((~ (uvec3(gl_WorkGroupSize.x, 0u, (0u | 0u)))), ((~ _GLF_IDENTITY((uvec3(gl_WorkGroupSize.x, 0u, (0u | 0u))), ((uvec3(gl_WorkGroupSize.x, 0u, (0u | 0u)))) + uvec3(0u, 0u, 0u)))) | ((~ (uvec3(gl_WorkGroupSize.x, 0u, (0u | 0u)))))))), ~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uvec3(gl_WorkGroupSize.x, 0u, (0u | 0u)), ~ (~ (_GLF_IDENTITY(uvec3(gl_WorkGroupSize.x, 0u, (0u | 0u)), min(uvec3(gl_WorkGroupSize.x, 0u, (0u | 0u)), uvec3(gl_WorkGroupSize.x, 0u, (0u | 0u)))))))), uvec3(uvec4(~ (_GLF_IDENTITY(uvec3(gl_WorkGroupSize.x, 0u, (_GLF_IDENTITY(0u, 0u ^ (0u)) | 0u)), ~ (~ (uvec3(gl_WorkGroupSize.x, 0u, (0u | 0u)))))), 1u)))))))))), ((uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) ^ (gl_WorkGroupSize)))))).x, 0u, (0u | 0u)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uvec3(gl_WorkGroupSize.x, 0u, (0u | 0u)), ~ _GLF_IDENTITY((~ (uvec3(gl_WorkGroupSize.x, 0u, (0u | 0u)))), ((_GLF_IDENTITY(~ (uvec3(gl_WorkGroupSize.x, 0u, (0u | 0u))), (_GLF_IDENTITY(~ (uvec3(gl_WorkGroupSize.x, 0u, (0u | 0u))), uvec3(uvec4(~ (uvec3(gl_WorkGroupSize.x, 0u, (0u | 0u))), 0u)))) | (~ (uvec3(gl_WorkGroupSize.x, 0u, (0u | 0u))))))) | ((~ (uvec3(gl_WorkGroupSize.x, 0u, (0u | 0u)))))))), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uvec3(gl_WorkGroupSize.x, 0u, (0u | 0u)), ~ (~ (_GLF_IDENTITY(uvec3(gl_WorkGroupSize.x, 0u, (0u | 0u)), min(uvec3(gl_WorkGroupSize.x, 0u, (0u | 0u)), uvec3(gl_WorkGroupSize.x, 0u, (0u | 0u)))))))), uvec3(uvec4(~ (_GLF_IDENTITY(uvec3(gl_WorkGroupSize.x, 0u, (_GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))) | 0u)), ~ (~ (uvec3(gl_WorkGroupSize.x, 0u, (0u | 0u)))))), 1u))))), min((~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uvec3(gl_WorkGroupSize.x, 0u, (0u | 0u)), ~ (~ (_GLF_IDENTITY(uvec3(gl_WorkGroupSize.x, 0u, (0u | 0u)), min(uvec3(gl_WorkGroupSize.x, 0u, (0u | 0u)), uvec3(gl_WorkGroupSize.x, 0u, (0u | 0u)))))))), uvec3(uvec4(~ (_GLF_IDENTITY(uvec3(gl_WorkGroupSize.x, 0u, (_GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))) | 0u)), ~ (~ (uvec3(gl_WorkGroupSize.x, 0u, (0u | 0u)))))), 1u))))), (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uvec3(gl_WorkGroupSize.x, 0u, (0u | 0u)), ~ (~ (_GLF_IDENTITY(uvec3(gl_WorkGroupSize.x, 0u, (0u | 0u)), min(uvec3(gl_WorkGroupSize.x, 0u, (0u | 0u)), uvec3(gl_WorkGroupSize.x, 0u, (0u | 0u)))))))), uvec3(uvec4(~ (_GLF_IDENTITY(uvec3(gl_WorkGroupSize.x, 0u, (_GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))) | 0u)), ~ (~ (uvec3(gl_WorkGroupSize.x, 0u, (0u | 0u)))))), 1u))))))))))))) + 0u), (uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) ^ (gl_WorkGroupSize)))))).x, 0u, (0u | 0u)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uvec3(gl_WorkGroupSize.x, 0u, (0u | 0u)), ~ _GLF_IDENTITY((~ (uvec3(gl_WorkGroupSize.x, 0u, (0u | 0u)))), ((~ (uvec3(gl_WorkGroupSize.x, 0u, (0u | 0u))))) | ((~ (uvec3(gl_WorkGroupSize.x, 0u, (0u | 0u)))))))), ~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(gl_WorkGroupSize.x, 0u, (0u | 0u)), ~ (~ (_GLF_IDENTITY(uvec3(gl_WorkGroupSize.x, 0u, (0u | 0u)), min(uvec3(gl_WorkGroupSize.x, 0u, (0u | 0u)), uvec3(gl_WorkGroupSize.x, 0u, (0u | 0u))))))), (_GLF_IDENTITY(uvec3(gl_WorkGroupSize.x, 0u, (0u | 0u)), ~ (~ (_GLF_IDENTITY(uvec3(gl_WorkGroupSize.x, 0u, (0u | 0u)), min(uvec3(gl_WorkGroupSize.x, 0u, (0u | 0u)), uvec3(gl_WorkGroupSize.x, 0u, (0u | 0u)))))))) >> uvec3(0u, 0u, 0u))), uvec3(uvec4(~ (_GLF_IDENTITY(uvec3(gl_WorkGroupSize.x, 0u, (_GLF_IDENTITY(0u, 0u ^ (0u)) | 0u)), ~ (~ (uvec3(gl_WorkGroupSize.x, 0u, (0u | 0u)))))), 1u)))))))))))) | (uint(uvec3(gl_WorkGroupSize.x, 0u, (0u | 0u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))).x, 0u, (0u | 0u))), (uint(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(1u, 1u, 1u) * (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u))))).x, 0u, (0u | 0u)))) | (uint(uvec3(gl_WorkGroupSize.x, 0u, (_GLF_IDENTITY(0u | 0u, (0u | 0u) / 1u))))))), (_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(gl_WorkGroupSize.x, 0u, (0u | 0u))), ~ (~ (uint(uvec3(gl_WorkGroupSize.x, 0u, (0u | 0u)))))), (uint(uvec3(gl_WorkGroupSize.x, 0u, (0u | 0u)))) | (uint(uvec3(gl_WorkGroupSize.x, 0u, (_GLF_IDENTITY(0u, max(0u, 0u)) | 0u))))), (_GLF_IDENTITY(uint(uvec3(gl_WorkGroupSize.x, 0u, (0u | 0u))), (uint(uvec3(gl_WorkGroupSize.x, 0u, (0u | 0u)))) | (uint(uvec3(gl_WorkGroupSize.x, 0u, (0u | 0u)))))) - 0u))) - 0u)) | (_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(uint(uvec3(gl_WorkGroupSize.x, 0u, (0u | 0u))), (uint(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) << uvec3(0u, 0u, 0u)).x, 0u, (0u | 0u)))) | (uint(uvec3(gl_WorkGroupSize.x, 0u, (0u | 0u)))))))), 0u, 0u, 0u), uvec4(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(uint(uvec3(gl_WorkGroupSize.x, 0u, (0u | 0u))), (uint(uvec3(gl_WorkGroupSize.x, 0u, (0u | 0u)))) | (uint(uvec3(gl_WorkGroupSize.x, 0u, (0u | 0u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, min(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)), _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) << uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))).x, _GLF_IDENTITY(uint(uvec3(gl_WorkGroupSize.x, 0u, (0u | 0u))), (uint(uvec3(gl_WorkGroupSize.x, 0u, (0u | 0u)))) | (uint(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])).x, 0u, (0u | 0u)))))), (_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(gl_WorkGroupSize.x, 0u, (0u | 0u))), max(uint(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize)).x, 0u, (0u | 0u))), uint(uvec3(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) << 0u), 0u, (0u | 0u))))), (uint(uvec3(gl_WorkGroupSize.x, 0u, (0u | 0u)))) | (uint(uvec3(gl_WorkGroupSize.x, 0u, (0u | 0u))))))) - 0u)) | (_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(uint(uvec3(gl_WorkGroupSize.x, 0u, (0u | 0u))), (uint(uvec3(_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (false ? _GLF_FUZZED(185547u) : gl_WorkGroupSize.x))))), 0u, (0u | 0u)))) | (uint(uvec3(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) << 0u), 0u, (0u | 0u)))))))), 0u, 0u, 0u)))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u, 1u, 1u) * (gl_WorkGroupID), ~ (~ (uvec3(1u, 1u, 1u) * (gl_WorkGroupID)))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u, 1u, 1u) * (gl_WorkGroupID), ~ (~ (uvec3(1u, 1u, 1u) * (gl_WorkGroupID)))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u, 1u, 1u) * (gl_WorkGroupID), ~ (~ (uvec3(1u, 1u, 1u) * (gl_WorkGroupID)))), uvec3(uvec4(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, (1u) | 0u), 1u, 1u) * (gl_WorkGroupID), ~ (~ (uvec3(1u, 1u, 1u) * (gl_WorkGroupID)))), _GLF_IDENTITY(0u, max(0u, 0u)))))) ^ uvec3(0u, 0u, 0u))) ^ uvec3(0u, 0u, 0u)), max(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u, 1u, 1u) * (gl_WorkGroupID), ~ (~ (uvec3(1u, 1u, 1u) * (gl_WorkGroupID)))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u, 1u, 1u) * (gl_WorkGroupID), ~ (~ (uvec3(1u, 1u, 1u) * (gl_WorkGroupID)))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u, 1u, 1u) * (gl_WorkGroupID), ~ (~ (uvec3(1u, 1u, 1u) * _GLF_IDENTITY((gl_WorkGroupID), uvec3(uvec4((gl_WorkGroupID), 0u)))))), uvec3(uvec4(_GLF_IDENTITY(uvec3(1u, 1u, 1u) * (gl_WorkGroupID), ~ (~ (uvec3(1u, 1u, 1u) * (gl_WorkGroupID)))), 0u)))) ^ uvec3(0u, 0u, 0u))) ^ uvec3(0u, 0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u, 1u, 1u) * (gl_WorkGroupID), ~ (~ (uvec3(1u, 1u, 1u) * (gl_WorkGroupID)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u, 1u, 1u) * (gl_WorkGroupID), ~ (~ (uvec3(1u, 1u, 1u) * (gl_WorkGroupID)))), (_GLF_IDENTITY(uvec3(1u, 1u, 1u) * (gl_WorkGroupID), ~ (~ (uvec3(1u, 1u, 1u) * (gl_WorkGroupID))))) << uvec3(0u, 0u, 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u, 1u, _GLF_IDENTITY(1u, (1u) >> (0u >> _GLF_IDENTITY(uint(2u), uint(2u))))) * (gl_WorkGroupID), ~ (_GLF_IDENTITY(~ (uvec3(1u, 1u, 1u) * (gl_WorkGroupID)), (~ (uvec3(1u, 1u, 1u) * (gl_WorkGroupID))) ^ uvec3(0u, 0u, 0u)))), uvec3(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uvec3(1u, 1u, 1u) * (gl_WorkGroupID), ~ (~ (uvec3(1u, 1u, 1u) * (gl_WorkGroupID)))), 0u), (uvec4(_GLF_IDENTITY(uvec3(1u, 1u, 1u) * (gl_WorkGroupID), ~ (~ (uvec3(1u, 1u, 1u) * (gl_WorkGroupID)))), 0u)) - ((uvec4(1u, 1u, 1u, 1u) ^ uvec4(1u, 1u, 1u, 1u)) << _GLF_IDENTITY(uvec4(6u), _GLF_IDENTITY(uvec4(6u), (false ? _GLF_FUZZED(uvec4(36313u, 56033u, 51479u, 50659u)) : uvec4(6u))))))))) ^ uvec3(0u, 0u, 0u))) ^ uvec3(0u, 0u, 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u, 1u, 1u) * (gl_WorkGroupID), ~ (~ (uvec3(1u, 1u, 1u) * (gl_WorkGroupID)))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u, 1u, 1u) * (gl_WorkGroupID), ~ (~ (uvec3(1u, 1u, 1u) * (gl_WorkGroupID)))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(floatBitsToUint(34.38)) : 1u)), 1u, 1u) * (gl_WorkGroupID), ~ (~ (uvec3(1u, 1u, 1u) * (gl_WorkGroupID)))), uvec3(uvec4(_GLF_IDENTITY(uvec3(1u, 1u, 1u) * (gl_WorkGroupID), ~ (~ (uvec3(1u, 1u, 1u) * (gl_WorkGroupID)))), 0u)))) ^ uvec3(0u, 0u, 0u))) ^ uvec3(0u, 0u, 0u))) + uvec3(0u, 0u, 0u))))).x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, exp(0.0) * (injectionSwitch.x)) > injectionSwitch.y)))))), false || (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, exp(0.0) * (injectionSwitch.x)) > injectionSwitch.y)))))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)) * workgroup_id, max(_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) - 0u), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, uint(_GLF_IDENTITY(uvec4(workgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY((_GLF_IDENTITY((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), (_GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (5u) << (1u ^ 1u))), uint(5u))) | (_GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), max(_GLF_IDENTITY(uint(5u), uint(5u)), _GLF_IDENTITY(uint(5u), uint(5u))))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), clamp(uint(_GLF_IDENTITY(8u, min(8u, _GLF_IDENTITY(8u, (true ? 8u : _GLF_FUZZED((subgroup_size << workgroup_id))))))), uint(8u), _GLF_IDENTITY(uint(8u), (true ? uint(8u) : _GLF_FUZZED(48947u))))), uint(8u)), clamp((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), (_GLF_IDENTITY(uint(5u), uint(5u))) | (_GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), max(_GLF_IDENTITY(uint(5u), uint(5u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), clamp(uint(5u), uint(5u), _GLF_IDENTITY(uint(5u), 0u | (uint(5u))))), uint(5u))))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), uint(8u)), max(_GLF_IDENTITY(_GLF_IDENTITY(uint(8u), uint(8u)), max(_GLF_IDENTITY(uint(8u), uint(8u)), _GLF_IDENTITY(uint(8u), uint(8u)))), _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), uint(8u)), (_GLF_IDENTITY(uint(8u), uint(8u))) >> 0u))), _GLF_IDENTITY((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), (_GLF_IDENTITY(uint(5u), uint(5u))) | (_GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), max(_GLF_IDENTITY(uint(5u), uint(5u)), _GLF_IDENTITY(uint(5u), uint(5u))))))) >> _GLF_IDENTITY(uint(8u), uint(8u)), ~ (~ (_GLF_IDENTITY((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), (_GLF_IDENTITY(uint(5u), uint(5u))) | (_GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), max(_GLF_IDENTITY(uint(5u), uint(5u)), _GLF_IDENTITY(uint(5u), uint(5u))))))), ((_GLF_IDENTITY(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), (_GLF_IDENTITY(uint(5u), uint(5u))) | (_GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), max(_GLF_IDENTITY(uint(5u), uint(5u)), _GLF_IDENTITY(uint(5u), uint(5u)))))), 0u | (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), (_GLF_IDENTITY(uint(5u), uint(5u))) | (_GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), max(_GLF_IDENTITY(uint(5u), uint(5u)), _GLF_IDENTITY(uint(5u), uint(5u)))))))))) | (_GLF_IDENTITY((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), (_GLF_IDENTITY(uint(5u), uint(5u))) | (_GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), max(_GLF_IDENTITY(uint(5u), uint(5u)), _GLF_IDENTITY(uint(5u), uint(5u))))))), uint(uvec3((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), (_GLF_IDENTITY(uint(5u), uint(5u))) | (_GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), max(_GLF_IDENTITY(uint(5u), uint(5u)), _GLF_IDENTITY(uint(5u), uint(5u))))))), 1u, 1u))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), uint(8u)), (_GLF_IDENTITY(uint(8u), uint(8u))) + 0u)))), (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), (_GLF_IDENTITY(uint(5u), uint(5u))) | (_GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), max(_GLF_IDENTITY(uint(5u), uint(5u)), _GLF_IDENTITY(uint(5u), uint(5u))))))) >> _GLF_IDENTITY(uint(8u), uint(8u))))), (false ? _GLF_FUZZED(workgroup_size) : (_GLF_IDENTITY((0u << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (uint(5u)) ^ 0u), uint(5u)), (_GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (5u) << (_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)) ^ 1u))), uint(5u))) | (_GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, uint(uvec2(5u, uint(_GLF_ONE(1.0, injectionSwitch.y))))))), max(_GLF_IDENTITY(uint(5u), uint(5u)), _GLF_IDENTITY(uint(5u), uint(5u))))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), clamp(_GLF_IDENTITY(uint(8u), clamp(uint(8u), uint(8u), _GLF_IDENTITY(uint(8u), uint(uint(uint(8u)))))), uint(8u), _GLF_IDENTITY(uint(8u), (true ? uint(8u) : _GLF_FUZZED(48947u))))), uint(8u)), clamp((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), (_GLF_IDENTITY(uint(5u), uint(5u))) | (_GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), max(_GLF_IDENTITY(uint(5u), uint(5u)), _GLF_IDENTITY(uint(5u), uint(5u))))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), uint(8u)), max(_GLF_IDENTITY(_GLF_IDENTITY(uint(8u), uint(8u)), max(_GLF_IDENTITY(uint(8u), uint(8u)), _GLF_IDENTITY(uint(8u), uint(8u)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(8u), uint(8u)), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(uint(8u), uint(8u)))), (_GLF_IDENTITY(uint(8u), uint(8u))) >> 0u))), _GLF_IDENTITY((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), (_GLF_IDENTITY(uint(5u), uint(5u))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (5u) | 0u)), (uint(_GLF_IDENTITY(5u, (5u) | 0u))) | 0u), uint(5u)), max(_GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(uint(5u), uint(5u))))))), _GLF_IDENTITY(uint(5u), uint(5u))))))) >> _GLF_IDENTITY(uint(8u), uint(8u)), ~ (~ (_GLF_IDENTITY((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), (_GLF_IDENTITY(uint(5u), uint(5u))) | (_GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), max(_GLF_IDENTITY(uint(5u), uint(5u)), _GLF_IDENTITY(uint(5u), uint(5u))))))), 0u | ((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), (_GLF_IDENTITY(uint(5u), uint(5u))) | (_GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), max(_GLF_IDENTITY(uint(5u), uint(5u)), _GLF_IDENTITY(uint(5u), uint(5u))))))))) >> _GLF_IDENTITY(uint(8u), uint(8u))))), (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), (_GLF_IDENTITY(uint(5u), uint(5u))) | (_GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), max(_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), min(uint(5u), _GLF_IDENTITY(uint(5u), (uint(5u)) / 1u)))), _GLF_IDENTITY(uint(5u), uint(5u))))))) >> _GLF_IDENTITY(uint(8u), uint(8u))))))), _GLF_IDENTITY(uint(_GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, 0.0)), injectionSwitch.x)), (uint(_GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, 0.0)), injectionSwitch.x))) - 0u)), ~ (_GLF_IDENTITY(~ (uvec4(workgroup_size, uint(_GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2(0.0, 1.0, 0.0, 0.0))), injectionSwitch.x)), ((0u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(8u), uint(8u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (~ (uvec4(workgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)), ((_GLF_IDENTITY(_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), clamp(uint(5u), uint(5u), uint(5u)))), (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (0u ^ 1u) * (5u))), uint(5u))) / 1u), ~ (~ (0u << _GLF_IDENTITY(uint(5u), uint(5u)))))) >> _GLF_IDENTITY(uint(8u), uint(8u))), uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(abs(-8.9)) : _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-6887.3602) : injectionSwitch.x))))))))) >> uvec4(0u, 0u, 0u, 0u)))))) * workgroup_id, min(_GLF_IDENTITY(workgroup_size, (workgroup_size) >> 0u) * workgroup_id, workgroup_size * workgroup_id)))), (_GLF_IDENTITY(workgroup_size * workgroup_id, max(_GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, workgroup_id)), (workgroup_size * workgroup_id) - 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, (workgroup_size) << 0u)) * _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (1u) >> 0u), _GLF_IDENTITY(1u, max(1u, 1u))))) * workgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, (workgroup_size) << 0u)) * _GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, max(1u, 1u))))) * workgroup_id, ~ (~ (_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, (workgroup_size) << 0u)) * _GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, max(1u, 1u))))) * workgroup_id)))) << 0u), min(workgroup_size * _GLF_IDENTITY(workgroup_id, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? workgroup_id : _GLF_FUZZED(workgroup_id))), workgroup_size * workgroup_id))))) | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, max(_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) - 0u), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, min(workgroup_size * workgroup_id, workgroup_size * workgroup_id)), clamp(_GLF_IDENTITY(workgroup_size * workgroup_id, min(workgroup_size * workgroup_id, workgroup_size * workgroup_id)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED((mat4x3(-9.7, 4.4, 4.5, -78.94, -1405.0297, 893.911, -1011.6011, -1551.4636, 75.63, -451.051, -7140.2292, -9769.4289) , num_workgroup)) : _GLF_IDENTITY(workgroup_size * workgroup_id, min(workgroup_size * workgroup_id, _GLF_IDENTITY(workgroup_size, ~ (~ (workgroup_size))) * workgroup_id)))), min(_GLF_IDENTITY(workgroup_size, (workgroup_size) << 0u) * workgroup_id, workgroup_size * workgroup_id)), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, min(workgroup_size * workgroup_id, workgroup_size * workgroup_id)), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_IDENTITY(workgroup_size * workgroup_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (workgroup_size * workgroup_id))) * 1u), min(workgroup_size * workgroup_id, workgroup_size * workgroup_id))))), (0u << _GLF_IDENTITY(uint(2u), uint(2u))), 0u))), _GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) >> 0u), min(workgroup_size * workgroup_id, workgroup_size * workgroup_id)))))), ~ (~ (_GLF_IDENTITY(workgroup_size * workgroup_id, _GLF_IDENTITY(max(_GLF_IDENTITY(workgroup_size * workgroup_id, _GLF_IDENTITY((workgroup_size * workgroup_id), max((_GLF_IDENTITY(workgroup_size * workgroup_id, max(_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) - 0u), workgroup_size * workgroup_id))), _GLF_IDENTITY((workgroup_size * workgroup_id), ~ (~ ((workgroup_size * workgroup_id)))))) - 0u), _GLF_IDENTITY(workgroup_size * workgroup_id, min(workgroup_size * workgroup_id, workgroup_size * _GLF_IDENTITY(workgroup_id, max(workgroup_id, _GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id)))))))), (max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (0u << _GLF_IDENTITY(uint(0u), uint(0u))) + (workgroup_size)) * workgroup_id, (workgroup_size * workgroup_id) - 0u), _GLF_IDENTITY(workgroup_size * workgroup_id, min(workgroup_size * workgroup_id, workgroup_size * workgroup_id)))) << _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))))))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * _GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((subgroup_id * subgroup_size), min((subgroup_id * subgroup_size), (subgroup_id * subgroup_size))) | 0u))) + subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) / vec2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(7191.6956)), float(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4(1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, 1.0, 0.0, 0.0)), mix(float(_GLF_FUZZED(720.960)), float(float(mat4(1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, 1.0, 0.0, 0.0))), bool(true))))), bool(true))), 1.0), vec2(vec2(_GLF_IDENTITY((injectionSwitch), max(_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch))), (injectionSwitch))) / vec2(1.0, 1.0))))).y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)))), false, true))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(max(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((subgroup_id * subgroup_size) * 1u, ((subgroup_id * subgroup_size) * 1u) | ((subgroup_id * subgroup_size) * 1u))), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | _GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))), (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_size), max(_GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size))) : (subgroup_id * _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))))))), (_GLF_IDENTITY(max(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) * 1u), _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id))) | (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)), 1u), clamp(uvec2(_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)), 1u), uvec2(_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)), 1u), uvec2(_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)), 1u)))))) | (_GLF_IDENTITY(subgroup_id, 1u * (subgroup_id))))), ((false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)), 1u), clamp(uvec2(_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)), 1u), uvec2(_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)), 1u), uvec2(_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)), 1u)))))) | (_GLF_IDENTITY(subgroup_id, 1u * (subgroup_id)))))) / (0u | 1u))))) * subgroup_size) | (subgroup_id * _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))))), min(max(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) * 1u), _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u), (subgroup_size) | (_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_id))))), (subgroup_id * subgroup_size) | (subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(min(subgroup_size, subgroup_size), (min(subgroup_size, subgroup_size)) - 0u))))), max(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), (subgroup_id * subgroup_size) * 1u), _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) | ((subgroup_id * subgroup_size))), max(_GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) - 0u), (subgroup_id * subgroup_size))) | (subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec3(subgroup_size, 0u, 1u))), min(subgroup_size, subgroup_size)))))))) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))) + ((_GLF_IDENTITY(subgroup_local_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (subgroup_local_id)) + 1) % subgroup_size);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, (true) && true) && _GLF_IDENTITY((false), _GLF_IDENTITY(true, (true) || false) && ((false))))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, true && (false)), false)))) || false)))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, false), bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, false)))))))), true && (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), false, false, true))), bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, false), bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, false)))))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), false, false, true))), bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, ! (! (false)))), bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, false)))))))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))))))
    barrier();
   return;
  }
 buf[virtual_gid] = 1;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), 0.0, 0.0, 1.0, abs(1.0), 0.0, 0.0), mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat2x4(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), 0.0, 0.0, 1.0, abs(1.0), 0.0, 0.0)))), mix(vec2((vec2(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0) + (injectionSwitch)), 0.0, 1.0, 0.0, cos(0.0), tan(0.0), 1.0)), min(vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(6462.5393)), bool(false)))) / _GLF_ONE(1.0, injectionSwitch.y)), 1.0, 0.0, cos(0.0), tan(0.0), 1.0)), vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), 0.0, 1.0, 0.0, cos(0.0), _GLF_IDENTITY(tan(0.0), mix(float(tan(0.0)), float(_GLF_FUZZED(-9.6)), bool(false))), 1.0))))), mat2(1.0) * (injectionSwitch)), 0.0, 0.0, 1.0, abs(1.0), 0.0, 0.0), mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat2x4(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_IDENTITY(1.0, (1.0) - 0.0)) * (injectionSwitch)), 0.0, 0.0, 1.0, abs(1.0), 0.0, 0.0)))))[0], _GLF_FUZZED(-3311.7737)), vec2(_GLF_FUZZED(6.2), (vec2(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), 0.0, 0.0, 1.0, abs(1.0), 0.0, 0.0), mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat2x4(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), 0.0, 0.0, 1.0, abs(1.0), 0.0, 0.0)))))[1]), bvec2(false, true)))).x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(true && (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true && (_GLF_IDENTITY(! (_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))) && true))))), false || (! (_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), true), true)))))))))), true && (true && (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(true && (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)), (injectionSwitch) - vec2(0.0, 0.0)).y)), ! (! _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5.6), (injectionSwitch)[1]), vec2((injectionSwitch)[_GLF_IDENTITY(0, (0) | 0)], _GLF_FUZZED(7.2)), bvec2(true, false))).x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5.6), (injectionSwitch)[1]), vec2((injectionSwitch)[_GLF_IDENTITY(0, (0) | 0)], _GLF_FUZZED(7.2)), bvec2(true, false))).x, 0.0 + (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5.6), (injectionSwitch)[1]), vec2((injectionSwitch)[_GLF_IDENTITY(0, (0) | 0)], _GLF_FUZZED(7.2)), bvec2(true, false))).x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5.6), (injectionSwitch)[1]), vec2((injectionSwitch)[_GLF_IDENTITY(0, (0) | 0)], _GLF_FUZZED(7.2)), bvec2(true, false))).x, min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5.6), (injectionSwitch)[1]), vec2((injectionSwitch)[_GLF_IDENTITY(0, (0) | 0)], _GLF_FUZZED(7.2)), bvec2(true, false))).x, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5.6), (injectionSwitch)[1]), vec2((injectionSwitch)[_GLF_IDENTITY(0, (0) | 0)], _GLF_FUZZED(7.2)), bvec2(true, false))).x)))) > injectionSwitch.y))), bool(bool(_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5.6), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(7.2)), bvec2(true, false))).x > injectionSwitch.y))), true && ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5.6), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(7.2)), bvec2(true, false))).x > injectionSwitch.y)))))))))))), true && _GLF_IDENTITY((true && (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(8.4, 9.6)))), clamp(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(8.4, 9.6)))), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(8.4, 9.6)))), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(8.4, 9.6)))))).x > injectionSwitch.y))))), ((true && (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(8.4, 9.6)))), clamp(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(8.4, 9.6)))), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(8.4, 9.6)))), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(8.4, 9.6)))))).x > injectionSwitch.y)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(! (_GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_IDENTITY(true && (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bool(bool(bool((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), true && (true && (! (_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))), (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(bool(bvec2((! (_GLF_IDENTITY(true && (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (true && (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true)), true && (_GLF_IDENTITY(bool(bvec2((! (_GLF_IDENTITY(true && (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (true && (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true)), true && (bool(bvec2((! (_GLF_IDENTITY(true && (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (true && (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true))))))), _GLF_IDENTITY(false, bool(bvec2(false, true))) || (_GLF_IDENTITY(! (! (_GLF_IDENTITY(true && (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_IDENTITY(true && (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (true && (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec2(! (true && (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), ! (! (! (! (_GLF_IDENTITY(true && (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (true && (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))), (! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY(true && (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (true && (! (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), (injectionSwitch.x > injectionSwitch.y)))))))), (! (! (_GLF_IDENTITY(true && (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y)))), true && (true && (! (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), (injectionSwitch.x > injectionSwitch.y))))))))) || false), _GLF_IDENTITY(false, bool(bvec2(false, true))) || (_GLF_IDENTITY(! (! (_GLF_IDENTITY(true && (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (true && (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ! (! (! (! (_GLF_IDENTITY(true && (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (true && (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ((_GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) && true), true && (! _GLF_IDENTITY((_GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ((_GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y))))))))) && true)))))))))))))))))) && true)), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(true && (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (true && (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(_GLF_IDENTITY(-2.2, max(-2.2, _GLF_IDENTITY(-2.2, max(_GLF_IDENTITY(-2.2, float(mat3(-2.2, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))), -2.2))))), (injectionSwitch)[1]), vec2(0.0, 0.0) + (_GLF_IDENTITY(vec2(_GLF_FUZZED(_GLF_IDENTITY(-2.2, max(-2.2, _GLF_IDENTITY(-2.2, max(_GLF_IDENTITY(-2.2, float(mat3(-2.2, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0))), -2.2))))), (injectionSwitch)[1]), clamp(vec2(_GLF_FUZZED(_GLF_IDENTITY(-2.2, max(-2.2, _GLF_IDENTITY(-2.2, max(_GLF_IDENTITY(-2.2, float(mat3(-2.2, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(7477.3849)), bool(false)))))), -2.2))))), (injectionSwitch)[1]), _GLF_IDENTITY(vec2(_GLF_FUZZED(_GLF_IDENTITY(-2.2, max(-2.2, _GLF_IDENTITY(-2.2, max(_GLF_IDENTITY(-2.2, float(mat3(-2.2, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))), -2.2))))), (injectionSwitch)[1]), mix(vec2(_GLF_FUZZED(-6.3), (vec2(_GLF_FUZZED(_GLF_IDENTITY(-2.2, max(-2.2, _GLF_IDENTITY(-2.2, max(_GLF_IDENTITY(-2.2, float(mat3(_GLF_IDENTITY(-2.2, min(-2.2, _GLF_IDENTITY(-2.2, max(-2.2, _GLF_IDENTITY(-2.2, mix(float(_GLF_FUZZED(1867.9371)), float(-2.2), bool(true))))))), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4(_GLF_IDENTITY(0.0, float(mat3x2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0))), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 1.0, 0.0, exp(0.0), 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), sqrt(1.0), log(1.0), 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0)), 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0)), 1.0), vec3(0.0, 0.0, 0.0))), 1.0)), (float(mat4(_GLF_IDENTITY(0.0, float(mat3x2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0))), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 1.0, 0.0, exp(0.0), 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), sqrt(1.0), log(1.0), 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0)), 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0)), 1.0), vec3(0.0, 0.0, 0.0))), 1.0))) / 1.0))))), -2.2))))), (injectionSwitch)[1]))[1]), vec2((vec2(_GLF_FUZZED(_GLF_IDENTITY(-2.2, max(-2.2, _GLF_IDENTITY(-2.2, max(_GLF_IDENTITY(-2.2, float(mat3(-2.2, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0, 0.0, 0.0))), -2.2))))), (injectionSwitch)[1]))[0], _GLF_FUZZED(-7.1)), bvec2(true, false))), vec2(_GLF_FUZZED(_GLF_IDENTITY(-2.2, max(-2.2, _GLF_IDENTITY(-2.2, max(_GLF_IDENTITY(_GLF_IDENTITY(-2.2, float(mat3(-2.2, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))), max(_GLF_IDENTITY(_GLF_IDENTITY(-2.2, float(mat3(-2.2, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))), min(_GLF_IDENTITY(-2.2, float(mat3(-2.2, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(-2.2, float(mat3(-2.2, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), _GLF_IDENTITY(-2.2, float(mat3(-2.2, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), -2.2))))), (injectionSwitch)[1]))))), vec2(_GLF_IDENTITY((injectionSwitch)[0], (true ? (injectionSwitch)[0] : _GLF_FUZZED(-19.54))), _GLF_FUZZED(7.5)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))).x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(_GLF_IDENTITY(-2.2, max(-2.2, _GLF_IDENTITY(-2.2, max(_GLF_IDENTITY(-2.2, float(mat3(-2.2, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))), -2.2))))), (injectionSwitch)[1]), vec2(0.0, 0.0) + (_GLF_IDENTITY(vec2(_GLF_FUZZED(_GLF_IDENTITY(-2.2, max(-2.2, _GLF_IDENTITY(-2.2, max(_GLF_IDENTITY(-2.2, float(mat3(-2.2, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))), -2.2))))), (injectionSwitch)[1]), clamp(vec2(_GLF_FUZZED(_GLF_IDENTITY(-2.2, max(-2.2, _GLF_IDENTITY(-2.2, max(_GLF_IDENTITY(-2.2, float(mat3(-2.2, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))), -2.2))))), (injectionSwitch)[1]), _GLF_IDENTITY(vec2(_GLF_FUZZED(_GLF_IDENTITY(-2.2, max(-2.2, _GLF_IDENTITY(-2.2, max(_GLF_IDENTITY(-2.2, float(mat3(-2.2, _GLF_IDENTITY(0.0, float(vec2(0.0, 1.0))), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))), -2.2))))), _GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(float(_GLF_IDENTITY(mat2(_GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], (injectionSwitch)[1], (injectionSwitch)[1])), length(0.0), 1.0, 0.0), transpose(transpose(mat2(_GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], (injectionSwitch)[1], (injectionSwitch)[1])), length(0.0), 1.0, 0.0))))), (false ? _GLF_FUZZED(-3.3) : float(_GLF_IDENTITY(mat2(_GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], (injectionSwitch)[1], (injectionSwitch)[1])), length(0.0), 1.0, 0.0), transpose(transpose(mat2(_GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], (injectionSwitch)[1], (injectionSwitch)[1])), length(0.0), 1.0, 0.0))))))))), mix(vec2(_GLF_FUZZED(-6.3), (vec2(_GLF_FUZZED(_GLF_IDENTITY(-2.2, max(-2.2, _GLF_IDENTITY(-2.2, max(_GLF_IDENTITY(-2.2, float(mat3(-2.2, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))), -2.2))))), (injectionSwitch)[1]))[1]), vec2((vec2(_GLF_FUZZED(_GLF_IDENTITY(-2.2, max(_GLF_IDENTITY(-2.2, (-2.2) / 1.0), _GLF_IDENTITY(-2.2, max(_GLF_IDENTITY(-2.2, float(mat3(-2.2, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))), -2.2))))), (injectionSwitch)[1]))[0], _GLF_FUZZED(-7.1)), bvec2(true, false))), vec2(_GLF_FUZZED(_GLF_IDENTITY(-2.2, max(-2.2, _GLF_IDENTITY(-2.2, _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(-2.2, float(mat3(-2.2, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))), max(_GLF_IDENTITY(_GLF_IDENTITY(-2.2, float(mat3(-2.2, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))), min(_GLF_IDENTITY(-2.2, float(mat3(-2.2, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(-2.2, float(mat3(-2.2, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), _GLF_IDENTITY(-2.2, float(mat3(-2.2, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), -2.2), (true ? _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(-2.2, float(mat3(-2.2, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))), max(_GLF_IDENTITY(_GLF_IDENTITY(-2.2, float(mat3(-2.2, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))), min(_GLF_IDENTITY(-2.2, float(mat3(-2.2, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(-2.2, float(mat3(-2.2, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), _GLF_IDENTITY(-2.2, float(mat3(-2.2, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), -2.2), min(max(_GLF_IDENTITY(_GLF_IDENTITY(-2.2, float(mat3(-2.2, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))), max(_GLF_IDENTITY(_GLF_IDENTITY(-2.2, float(mat3(-2.2, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))), min(_GLF_IDENTITY(-2.2, float(mat3(-2.2, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(-2.2, float(mat3(-2.2, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), _GLF_IDENTITY(-2.2, float(mat3(-2.2, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), -2.2), max(_GLF_IDENTITY(_GLF_IDENTITY(-2.2, float(mat3(-2.2, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))), max(_GLF_IDENTITY(_GLF_IDENTITY(-2.2, float(mat3(-2.2, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))), min(_GLF_IDENTITY(-2.2, float(mat3(-2.2, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(-2.2, float(mat3(-2.2, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), _GLF_IDENTITY(-2.2, float(mat3(-2.2, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), -2.2))) : _GLF_FUZZED(vec3(873.133, 5.6, -1618.7422)[1]))))))), (injectionSwitch)[1]))))), vec2(_GLF_IDENTITY((injectionSwitch)[0], (true ? (injectionSwitch)[0] : _GLF_FUZZED(-19.54))), _GLF_FUZZED(7.5)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))).x, max(_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(_GLF_IDENTITY(-2.2, max(-2.2, _GLF_IDENTITY(-2.2, max(_GLF_IDENTITY(-2.2, float(mat3(-2.2, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))), -2.2))))), (injectionSwitch)[1]), vec2(0.0, 0.0) + (_GLF_IDENTITY(vec2(_GLF_FUZZED(_GLF_IDENTITY(-2.2, max(-2.2, _GLF_IDENTITY(-2.2, max(_GLF_IDENTITY(_GLF_IDENTITY(-2.2, 0.0 + (-2.2)), float(mat3(-2.2, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))), -2.2))))), (injectionSwitch)[1]), clamp(vec2(_GLF_FUZZED(_GLF_IDENTITY(-2.2, max(-2.2, _GLF_IDENTITY(-2.2, max(_GLF_IDENTITY(-2.2, float(mat3(-2.2, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))), -2.2))))), (injectionSwitch)[1]), _GLF_IDENTITY(vec2(_GLF_FUZZED(_GLF_IDENTITY(-2.2, max(-2.2, _GLF_IDENTITY(-2.2, max(_GLF_IDENTITY(-2.2, float(mat3(-2.2, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))), -2.2))))), (injectionSwitch)[1]), mix(vec2(_GLF_FUZZED(-6.3), (vec2(_GLF_FUZZED(_GLF_IDENTITY(-2.2, max(-2.2, _GLF_IDENTITY(-2.2, max(_GLF_IDENTITY(-2.2, float(mat3(-2.2, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))), -2.2))))), (injectionSwitch)[1]))[1]), vec2((vec2(_GLF_FUZZED(_GLF_IDENTITY(-2.2, max(-2.2, _GLF_IDENTITY(-2.2, max(_GLF_IDENTITY(-2.2, float(mat3(-2.2, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))), -2.2))))), (injectionSwitch)[1]))[0], _GLF_FUZZED(-7.1)), bvec2(true, false))), vec2(_GLF_FUZZED(_GLF_IDENTITY(-2.2, max(-2.2, _GLF_IDENTITY(-2.2, max(_GLF_IDENTITY(_GLF_IDENTITY(-2.2, float(mat3(-2.2, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))), max(_GLF_IDENTITY(_GLF_IDENTITY(-2.2, float(mat3(-2.2, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))), min(_GLF_IDENTITY(-2.2, float(mat3(-2.2, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(-2.2, float(mat3(-2.2, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), _GLF_IDENTITY(-2.2, float(mat3(-2.2, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), -2.2))))), (injectionSwitch)[1]))))), vec2(_GLF_IDENTITY((injectionSwitch)[0], (true ? (injectionSwitch)[0] : _GLF_FUZZED(-19.54))), _GLF_FUZZED(7.5)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))).x, _GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(_GLF_IDENTITY(-2.2, max(-2.2, _GLF_IDENTITY(-2.2, max(_GLF_IDENTITY(-2.2, float(mat3(-2.2, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))), -2.2))))), (injectionSwitch)[1]), vec2(0.0, 0.0) + (_GLF_IDENTITY(vec2(_GLF_FUZZED(_GLF_IDENTITY(-2.2, max(-2.2, _GLF_IDENTITY(-2.2, max(_GLF_IDENTITY(-2.2, float(mat3(-2.2, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))), -2.2))))), (injectionSwitch)[1]), clamp(vec2(_GLF_FUZZED(_GLF_IDENTITY(-2.2, max(-2.2, _GLF_IDENTITY(-2.2, max(_GLF_IDENTITY(-2.2, float(mat3(_GLF_IDENTITY(-2.2, min(-2.2, -2.2)), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))), -2.2))))), (injectionSwitch)[1]), _GLF_IDENTITY(vec2(_GLF_FUZZED(_GLF_IDENTITY(-2.2, max(-2.2, _GLF_IDENTITY(-2.2, max(_GLF_IDENTITY(-2.2, float(mat3(-2.2, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))), -2.2))))), (injectionSwitch)[1]), mix(vec2(_GLF_FUZZED(-6.3), (vec2(_GLF_FUZZED(_GLF_IDENTITY(-2.2, max(-2.2, _GLF_IDENTITY(-2.2, max(_GLF_IDENTITY(-2.2, float(mat3(-2.2, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))), -2.2))))), _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(609.248)), bool(false)))))[1]), vec2((vec2(_GLF_FUZZED(_GLF_IDENTITY(-2.2, max(-2.2, _GLF_IDENTITY(-2.2, max(_GLF_IDENTITY(-2.2, float(mat3(-2.2, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))), -2.2))))), (injectionSwitch)[_GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, (1) | (1))))]))[0], _GLF_FUZZED(-7.1)), bvec2(true, false))), vec2(_GLF_FUZZED(_GLF_IDENTITY(-2.2, max(-2.2, _GLF_IDENTITY(-2.2, max(_GLF_IDENTITY(_GLF_IDENTITY(-2.2, float(mat3(-2.2, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))), max(_GLF_IDENTITY(_GLF_IDENTITY(-2.2, float(mat3(-2.2, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))), min(_GLF_IDENTITY(-2.2, float(mat3(-2.2, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(-2.2, float(mat3(-2.2, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), _GLF_IDENTITY(-2.2, float(mat3(-2.2, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), -2.2))))), (injectionSwitch)[1]))))), vec2(_GLF_IDENTITY((injectionSwitch)[0], (true ? (injectionSwitch)[0] : _GLF_FUZZED(-19.54))), _GLF_FUZZED(7.5)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))).x)), _GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(_GLF_IDENTITY(-2.2, max(-2.2, _GLF_IDENTITY(-2.2, max(_GLF_IDENTITY(-2.2, float(mat3(-2.2, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, abs(0.0) + (_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(6.4))))), 0.0, 0.0, 0.0))), -2.2))))), (injectionSwitch)[1]), _GLF_IDENTITY(vec2(0.0, 0.0) + (_GLF_IDENTITY(vec2(_GLF_FUZZED(_GLF_IDENTITY(-2.2, max(-2.2, _GLF_IDENTITY(-2.2, max(_GLF_IDENTITY(-2.2, float(mat3(-2.2, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))), -2.2))))), (injectionSwitch)[1]), clamp(vec2(_GLF_FUZZED(_GLF_IDENTITY(-2.2, max(-2.2, _GLF_IDENTITY(-2.2, max(_GLF_IDENTITY(-2.2, float(mat3(-2.2, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))), -2.2))))), (injectionSwitch)[1]), _GLF_IDENTITY(vec2(_GLF_FUZZED(_GLF_IDENTITY(-2.2, max(-2.2, _GLF_IDENTITY(-2.2, max(_GLF_IDENTITY(-2.2, float(mat3(-2.2, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))), -2.2))))), (injectionSwitch)[1]), mix(vec2(_GLF_FUZZED(-6.3), (vec2(_GLF_FUZZED(_GLF_IDENTITY(-2.2, max(-2.2, _GLF_IDENTITY(-2.2, max(_GLF_IDENTITY(-2.2, float(mat3(-2.2, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))), -2.2))))), (injectionSwitch)[1]))[1]), vec2((vec2(_GLF_FUZZED(_GLF_IDENTITY(-2.2, max(-2.2, _GLF_IDENTITY(-2.2, max(_GLF_IDENTITY(-2.2, float(mat3(-2.2, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))), -2.2))))), (injectionSwitch)[1]))[0], _GLF_FUZZED(-7.1)), bvec2(true, false))), vec2(_GLF_FUZZED(_GLF_IDENTITY(-2.2, max(-2.2, _GLF_IDENTITY(-2.2, max(_GLF_IDENTITY(_GLF_IDENTITY(-2.2, float(mat3(-2.2, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))), max(_GLF_IDENTITY(_GLF_IDENTITY(-2.2, float(mat3(-2.2, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))), min(_GLF_IDENTITY(-2.2, float(mat3(-2.2, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(-2.2, float(mat3(-2.2, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), _GLF_IDENTITY(-2.2, float(mat3(-2.2, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), -2.2))))), (injectionSwitch)[1])))), (vec2(0.0, 0.0) + (_GLF_IDENTITY(vec2(_GLF_FUZZED(_GLF_IDENTITY(-2.2, max(-2.2, _GLF_IDENTITY(_GLF_IDENTITY(-2.2, max(_GLF_IDENTITY(-2.2, float(mat3(-2.2, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))), -2.2)), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(-2.2, max(_GLF_IDENTITY(-2.2, float(mat3(-2.2, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))), -2.2)), (_GLF_IDENTITY(-2.2, max(_GLF_IDENTITY(-2.2, float(mat3(-2.2, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))), -2.2))) - 0.0)))))), (injectionSwitch)[1]), clamp(vec2(_GLF_FUZZED(_GLF_IDENTITY(-2.2, max(-2.2, _GLF_IDENTITY(-2.2, max(_GLF_IDENTITY(_GLF_IDENTITY(-2.2, float(mat3(-2.2, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))), min(_GLF_IDENTITY(-2.2, float(mat3(-2.2, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(-2.2, float(mat3(-2.2, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), -2.2))))), (injectionSwitch)[1]), _GLF_IDENTITY(vec2(_GLF_FUZZED(_GLF_IDENTITY(-2.2, max(-2.2, _GLF_IDENTITY(-2.2, max(_GLF_IDENTITY(-2.2, float(mat3(-2.2, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, max(0.0, 0.0)))), 0.0, 0.0, 0.0))), -2.2))))), (injectionSwitch)[1]), mix(vec2(_GLF_FUZZED(-6.3), (vec2(_GLF_FUZZED(_GLF_IDENTITY(-2.2, max(-2.2, _GLF_IDENTITY(-2.2, max(_GLF_IDENTITY(-2.2, float(mat3(-2.2, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))), -2.2))))), (injectionSwitch)[1]))[1]), vec2((vec2(_GLF_FUZZED(_GLF_IDENTITY(-2.2, max(-2.2, _GLF_IDENTITY(-2.2, max(_GLF_IDENTITY(-2.2, float(mat3(-2.2, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))), -2.2))))), (injectionSwitch)[1]))[0], _GLF_FUZZED(-7.1)), bvec2(true, false))), vec2(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-2.2, max(-2.2, _GLF_IDENTITY(-2.2, max(_GLF_IDENTITY(_GLF_IDENTITY(-2.2, float(mat3(-2.2, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))), max(_GLF_IDENTITY(_GLF_IDENTITY(-2.2, float(mat3(-2.2, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))), min(_GLF_IDENTITY(-2.2, float(mat3(-2.2, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(-2.2, float(mat3(-2.2, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), _GLF_IDENTITY(-2.2, float(mat3(-2.2, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), -2.2))))), (false ? _GLF_FUZZED(3.0) : _GLF_FUZZED(_GLF_IDENTITY(-2.2, max(-2.2, _GLF_IDENTITY(_GLF_IDENTITY(-2.2, mix(float(_GLF_FUZZED(-517.856)), float(-2.2), bool(true))), max(_GLF_IDENTITY(_GLF_IDENTITY(-2.2, float(mat3(-2.2, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))), max(_GLF_IDENTITY(_GLF_IDENTITY(-2.2, float(mat3(-2.2, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))), min(_GLF_IDENTITY(-2.2, float(mat3(-2.2, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(-2.2, float(mat3(-2.2, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), _GLF_IDENTITY(-2.2, float(mat3(-2.2, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), -2.2))))))), (injectionSwitch)[1]))))) * vec2(1.0, 1.0))), vec2(_GLF_IDENTITY((injectionSwitch)[0], (true ? (injectionSwitch)[0] : _GLF_FUZZED(-19.54))), _GLF_FUZZED(7.5)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))).x, _GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(_GLF_IDENTITY(-2.2, max(-2.2, _GLF_IDENTITY(-2.2, max(_GLF_IDENTITY(-2.2, float(mat3(-2.2, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))), -2.2))))), (injectionSwitch)[1]), vec2(0.0, 0.0) + (_GLF_IDENTITY(vec2(_GLF_FUZZED(_GLF_IDENTITY(-2.2, max(-2.2, _GLF_IDENTITY(-2.2, max(_GLF_IDENTITY(-2.2, float(mat3(-2.2, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))), -2.2))))), (injectionSwitch)[1]), clamp(vec2(_GLF_FUZZED(_GLF_IDENTITY(-2.2, max(-2.2, _GLF_IDENTITY(-2.2, max(_GLF_IDENTITY(-2.2, float(mat3(-2.2, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))), -2.2))))), (injectionSwitch)[1]), _GLF_IDENTITY(vec2(_GLF_FUZZED(_GLF_IDENTITY(-2.2, max(-2.2, _GLF_IDENTITY(-2.2, max(_GLF_IDENTITY(-2.2, float(mat3(-2.2, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))), -2.2))))), (injectionSwitch)[1]), mix(vec2(_GLF_FUZZED(-6.3), (vec2(_GLF_FUZZED(_GLF_IDENTITY(-2.2, max(-2.2, _GLF_IDENTITY(-2.2, max(_GLF_IDENTITY(-2.2, float(mat3(-2.2, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))), -2.2))))), (injectionSwitch)[1]))[1]), vec2((vec2(_GLF_FUZZED(_GLF_IDENTITY(-2.2, max(-2.2, _GLF_IDENTITY(-2.2, max(_GLF_IDENTITY(-2.2, float(mat3(-2.2, 0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))), -2.2))))), (injectionSwitch)[1]))[0], _GLF_FUZZED(-7.1)), bvec2(true, false))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-2.2, max(-2.2, _GLF_IDENTITY(-2.2, max(_GLF_IDENTITY(_GLF_IDENTITY(-2.2, float(mat3(-2.2, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))), max(_GLF_IDENTITY(_GLF_IDENTITY(-2.2, float(mat3(-2.2, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))), min(_GLF_IDENTITY(-2.2, float(mat3(-2.2, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(-2.2, float(mat3(-2.2, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), _GLF_IDENTITY(-2.2, float(mat3(-2.2, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), -2.2))))), (false ? _GLF_FUZZED(6107.8480) : _GLF_FUZZED(_GLF_IDENTITY(-2.2, max(-2.2, _GLF_IDENTITY(-2.2, max(_GLF_IDENTITY(_GLF_IDENTITY(-2.2, float(mat3(-2.2, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))), max(_GLF_IDENTITY(_GLF_IDENTITY(-2.2, float(mat3(-2.2, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 0.0, 0.0, 0.0))), min(_GLF_IDENTITY(-2.2, float(mat3(-2.2, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(-2.2, float(mat3(-2.2, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-1.9) : 0.0)), 0.0, 0.0, 0.0, 0.0))))), _GLF_IDENTITY(-2.2, float(mat3(-2.2, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), -2.2))))))), (injectionSwitch)[1]), max(vec2(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-2.2, max(-2.2, _GLF_IDENTITY(-2.2, max(_GLF_IDENTITY(_GLF_IDENTITY(-2.2, float(mat3(-2.2, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))), max(_GLF_IDENTITY(_GLF_IDENTITY(-2.2, float(mat3(-2.2, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))), min(_GLF_IDENTITY(-2.2, float(mat3(-2.2, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(-2.2, float(mat3(-2.2, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), _GLF_IDENTITY(-2.2, float(mat3(-2.2, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), -2.2))))), (false ? _GLF_FUZZED(6107.8480) : _GLF_FUZZED(_GLF_IDENTITY(-2.2, max(-2.2, _GLF_IDENTITY(-2.2, max(_GLF_IDENTITY(_GLF_IDENTITY(-2.2, float(mat3(-2.2, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))), max(_GLF_IDENTITY(_GLF_IDENTITY(-2.2, float(mat3(-2.2, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 0.0, 0.0, 0.0))), min(_GLF_IDENTITY(-2.2, float(mat3(-2.2, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(-2.2, float(mat3(-2.2, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-1.9) : 0.0)), 0.0, 0.0, 0.0, 0.0))))), _GLF_IDENTITY(-2.2, float(mat3(-2.2, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), -2.2))))))), (injectionSwitch)[1]), vec2(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-2.2, max(-2.2, _GLF_IDENTITY(-2.2, max(_GLF_IDENTITY(_GLF_IDENTITY(-2.2, float(mat3(-2.2, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))), max(_GLF_IDENTITY(_GLF_IDENTITY(-2.2, float(mat3(-2.2, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))), min(_GLF_IDENTITY(-2.2, float(mat3(-2.2, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(-2.2, float(mat3(-2.2, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), _GLF_IDENTITY(-2.2, float(mat3(-2.2, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), -2.2))))), (false ? _GLF_FUZZED(6107.8480) : _GLF_FUZZED(_GLF_IDENTITY(-2.2, max(-2.2, _GLF_IDENTITY(-2.2, max(_GLF_IDENTITY(_GLF_IDENTITY(-2.2, float(mat3(-2.2, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))), max(_GLF_IDENTITY(_GLF_IDENTITY(-2.2, float(mat3(-2.2, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 0.0, 0.0, 0.0))), min(_GLF_IDENTITY(-2.2, float(mat3(-2.2, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(-2.2, float(mat3(-2.2, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-1.9) : 0.0)), 0.0, 0.0, 0.0, 0.0))))), _GLF_IDENTITY(-2.2, float(mat3(-2.2, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), -2.2))))))), (injectionSwitch)[1]))))))), vec2(_GLF_IDENTITY((injectionSwitch)[0], (true ? (injectionSwitch)[0] : _GLF_FUZZED(-19.54))), _GLF_FUZZED(7.5)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))).x)) > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(249.261), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED(-7.6)), bvec2(true, false))).x > injectionSwitch.y)))))))))), ! (! (! (_GLF_IDENTITY(true && (! _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true && (! (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))), true && ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true && (! (_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), true && ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))), true && (true && (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), true)))))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) ? injectionSwitch.y : _GLF_FUZZED(82.62)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(202.256)), float(injectionSwitch.y), bool(true)))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-9.4), _GLF_FUZZED(48.36)), bvec2(false, false))).y, mix(float(_GLF_FUZZED(202.256)), float(injectionSwitch.y), bool(true))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))), bool(_GLF_IDENTITY(bvec3(bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))), false, true), bvec3(bvec4(bvec3(bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))), false, true), false)))))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) && true)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        barrier();
       barrier();
      }
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec3(true, true, true)))), false || _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec3(true, true, true)))), bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec3(true, true, true)))), bool(bvec2(! (_GLF_IDENTITY(true, bool(bvec3(true, true, true)))), true))))))), ! (! ((_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec3(true, true, true)))), bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec3(true, true, true)))), bool(bvec2(! (_GLF_IDENTITY(true, bool(bvec3(true, true, true)))), true))))))))))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(-7.4, -1.5)) : injectionSwitch)), 0.0, cos(0.0), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-6.1))), 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(82.49)), bool(false))), 1.0, 1.0, sin(sin(0.0))), (mat4x3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(vec2(-7.4, -1.5), mix(vec2((vec2(-7.4, -1.5))[0], _GLF_FUZZED(39.41)), vec2(_GLF_FUZZED(3299.4251), (vec2(-7.4, -1.5))[1]), bvec2(false, true)))) : injectionSwitch), min(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(vec2(-7.4, -1.5), mix(vec2((vec2(-7.4, -1.5))[0], _GLF_FUZZED(39.41)), vec2(_GLF_FUZZED(3299.4251), (vec2(-7.4, -1.5))[1]), bvec2(false, true)))) : injectionSwitch), (true ? (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(vec2(-7.4, -1.5), mix(vec2((vec2(-7.4, -1.5))[0], _GLF_FUZZED(39.41)), vec2(_GLF_FUZZED(3299.4251), (vec2(-7.4, -1.5))[1]), bvec2(false, true))), (_GLF_IDENTITY(vec2(-7.4, -1.5), mix(vec2((vec2(-7.4, -1.5))[0], _GLF_FUZZED(39.41)), vec2(_GLF_FUZZED(3299.4251), (vec2(-7.4, -1.5))[1]), bvec2(false, true)))) / cos(vec2(0.0, 0.0)))) : injectionSwitch) : _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(sqrt(0.0), sqrt(0.0), determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)))), dot(vec3(0.0, 0.0, 1.0), vec3(sqrt(0.0), sqrt(0.0), determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0))))), 1.0, 0.0, 1.0, 1.0, abs(0.0), sqrt(sqrt(0.0)), sqrt(1.0), 1.0, 1.0))).y)) ? _GLF_FUZZED(_GLF_IDENTITY(vec2(-7.4, -1.5), mix(vec2((vec2(-7.4, -1.5))[0], _GLF_FUZZED(39.41)), vec2(_GLF_FUZZED(3299.4251), (vec2(-7.4, -1.5))[1]), bvec2(false, true)))) : injectionSwitch), ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(vec2(-7.4, -1.5), mix(vec2((vec2(_GLF_IDENTITY(-7.4, mix(float(_GLF_FUZZED(-8.5)), float(_GLF_IDENTITY(-7.4, log(1.0) + (-7.4))), bool(true))), -1.5))[0], _GLF_FUZZED(39.41)), vec2(_GLF_FUZZED(3299.4251), (vec2(-7.4, -1.5))[1]), bvec2(false, true)))) : injectionSwitch)) * mat2(1.0))))), 0.0, cos(0.0), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-6.1))), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, sin(sin(0.0)))) - mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 0.0, 0.0, 0.0, 0.0)))).x > injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), ! (! (! (_GLF_IDENTITY(false, (false) || false)))))))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
        barrier();
       barrier();
      }
     return;
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, 1u * (subgroup_local_id)))) + 1 < subgroup_size)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true && (false), bool(bvec3(true && (false), false, false))))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) : _GLF_FUZZED(-744.038))) > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   int i = 0;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY((true ? mat2(1.0) * (injectionSwitch) : _GLF_FUZZED(injectionSwitch)), clamp(_GLF_IDENTITY((true ? mat2(1.0) * (injectionSwitch) : _GLF_FUZZED(injectionSwitch)), vec2(1.0, 1.0) * (_GLF_IDENTITY((true ? mat2(1.0) * (injectionSwitch) : _GLF_FUZZED(injectionSwitch)), ((true ? mat2(1.0) * (injectionSwitch) : _GLF_FUZZED(injectionSwitch))) + vec2(0.0, 0.0)))), (true ? mat2(1.0) * (injectionSwitch) : _GLF_FUZZED(injectionSwitch)), (true ? mat2(1.0) * (injectionSwitch) : _GLF_FUZZED(injectionSwitch))))))) - tan(vec2(0.0, 0.0))).x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || false)))))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))), (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   buf[next_virtual_gid] = 2;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, false)))) || false), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(-95.89)), bool(false)), clamp(_GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(-95.89)), bool(false)), max(_GLF_IDENTITY(_GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(-95.89)), bool(false)), (mix(float(injectionSwitch.x), float(_GLF_FUZZED(-95.89)), bool(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))) + 0.0), mix(float(_GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(-95.89)), bool(false)), (mix(float(injectionSwitch.x), float(_GLF_FUZZED(-95.89)), bool(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))) + 0.0)), float(_GLF_FUZZED(-875.130)), bool(false))), mix(float(injectionSwitch.x), float(_GLF_IDENTITY(_GLF_FUZZED(-95.89), (_GLF_FUZZED(-95.89)) + 0.0)), bool(false)))), mix(float(injectionSwitch.x), float(_GLF_FUZZED(-95.89)), bool(false)), mix(float(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-534.519) : _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-0.4)), bool(false)))))), float(_GLF_FUZZED(-95.89)), bool(false))))))), injectionSwitch.x)) > injectionSwitch.y)) || (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
          barrier();
         return;
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true) || (false)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         return;
        }
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (_GLF_IDENTITY(bool(bvec2(false, false)), bool(bvec4(bool(bvec2(false, false)), true, false, false))))))), (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        return;
       return;
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), ! (! (bool(bool(_GLF_DEAD(false)))))))) && true)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)) || false))), false))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
       return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (_GLF_IDENTITY(false, (false) || false)))), _GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec2((false), true))) && true), false, true)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, bool(bool(false))))), (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, bool(bool(false)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec4(injectionSwitch.y, 1.0, 1.0, cos(0.0)), clamp(vec4(injectionSwitch.y, 1.0, 1.0, cos(0.0)), vec4(injectionSwitch.y, 1.0, 1.0, cos(0.0)), vec4(injectionSwitch.y, 1.0, 1.0, cos(0.0))))))))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, true)), (bool(bvec4(false, false, true, true))) || false))))
          barrier();
        }
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   buf[next_virtual_gid] = _GLF_IDENTITY(2, 0 ^ (2));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / vec2(1.0, 1.0))).x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false)))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      return;
     return;
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), bool(bvec4(_GLF_IDENTITY(bool(bvec3(false, false, false)), (bool(bvec3(false, false, false))) && true), false, true, false))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch)).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((! (false))) && true))), _GLF_IDENTITY(false, (false) || false) || (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-79.27), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((1.0))), bvec2(true, false)))[0], injectionSwitch[1])).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
