#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_35 {
 vec2 _f0;
 bvec3 _f1;
 int _f2;
 mat2x3 _f3;
 vec2 _f4;
 ivec3 _f5;
} ;

struct _GLF_struct_34 {
 mat2x4 _f0;
 uvec4 _f1;
 float _f2;
 uvec3 _f3;
 uvec3 _f4;
 mat3 _f5;
 bvec4 _f6;
} ;

struct _GLF_struct_36 {
 uint _f0;
 vec2 _f1;
 uvec3 _f2;
 _GLF_struct_34 _f3;
 _GLF_struct_35 _f4;
} ;

struct _GLF_struct_32 {
 uvec4 _f0;
 uvec4 _f1;
} ;

struct _GLF_struct_31 {
 uvec3 _f0;
 vec2 _f1;
 bvec2 _f2;
} ;

struct _GLF_struct_33 {
 mat4x3 _f0;
 _GLF_struct_31 _f1;
 _GLF_struct_32 _f2;
} ;

struct _GLF_struct_29 {
 bvec2 _f0;
 uvec2 _f1;
 uvec3 _f2;
} ;

struct _GLF_struct_28 {
 ivec2 _f0;
 uvec3 _f1;
 ivec4 _f2;
 mat4x2 _f3;
 bvec4 _f4;
} ;

struct _GLF_struct_30 {
 bvec3 _f0;
 _GLF_struct_28 _f1;
 _GLF_struct_29 _f2;
 uint next_virtual_gid;
} ;

struct _GLF_struct_37 {
 _GLF_struct_30 _f0;
 _GLF_struct_33 _f1;
 _GLF_struct_36 _f2;
} ;

struct _GLF_struct_25 {
 bool _f0;
} ;

struct _GLF_struct_24 {
 ivec4 _f0;
 ivec3 _f1;
 mat3x2 _f2;
 float _f3;
} ;

struct _GLF_struct_23 {
 bvec4 _f0;
 ivec4 _f1;
 uvec3 _f2;
 ivec3 _f3;
 vec3 _f4;
 uvec3 _f5;
 mat4 _f6;
} ;

struct _GLF_struct_22 {
 bool _f0;
} ;

struct _GLF_struct_26 {
 _GLF_struct_22 _f0;
 mat2x3 _f1;
 _GLF_struct_23 _f2;
 _GLF_struct_24 _f3;
 bvec2 _f4;
 mat4x2 _f5;
 _GLF_struct_25 _f6;
} ;

struct _GLF_struct_20 {
 uvec4 _f0;
 mat3x2 _f1;
 mat2x4 _f2;
 vec4 _f3;
} ;

struct _GLF_struct_19 {
 vec2 _f0;
 uint _f1;
 mat4 _f2;
 bvec2 _f3;
} ;

struct _GLF_struct_21 {
 ivec2 _f0;
 _GLF_struct_19 _f1;
 _GLF_struct_20 _f2;
} ;

struct _GLF_struct_17 {
 bvec3 _f0;
 uvec2 _f1;
 bool _f2;
 mat2x3 _f3;
} ;

struct _GLF_struct_18 {
 _GLF_struct_17 _f0;
} ;

struct _GLF_struct_16 {
 mat2x3 _f0;
} ;

struct _GLF_struct_14 {
 mat4x2 _f0;
 mat3 _f1;
 vec4 _f2;
 uvec2 _f3;
 bvec2 _f4;
} ;

struct _GLF_struct_13 {
 ivec2 _f0;
 bvec2 _f1;
 mat3x2 _f2;
 vec4 _f3;
} ;

struct _GLF_struct_12 {
 ivec4 _f0;
 mat3x4 _f1;
 int _f2;
 bool _f3;
 bvec4 _f4;
} ;

struct _GLF_struct_15 {
 ivec4 _f0;
 _GLF_struct_12 _f1;
 _GLF_struct_13 _f2;
 mat2 _f3;
 _GLF_struct_14 _f4;
 mat2x4 _f5;
} ;

struct _GLF_struct_27 {
 _GLF_struct_15 _f0;
 _GLF_struct_16 _f1;
 _GLF_struct_18 _f2;
 int _f3;
 _GLF_struct_21 _f4;
 _GLF_struct_26 _f5;
 uint subgroup_id;
} ;

struct _GLF_struct_9 {
 mat3x2 _f0;
 uint _f1;
 bvec2 _f2;
} ;

struct _GLF_struct_8 {
 int _f0;
 ivec3 _f1;
 bvec3 _f2;
 vec2 _f3;
} ;

struct _GLF_struct_7 {
 ivec2 _f0;
 bvec4 _f1;
 uvec2 _f2;
 uvec3 _f3;
 vec4 _f4;
 ivec3 _f5;
} ;

struct _GLF_struct_10 {
 _GLF_struct_7 _f0;
 bvec4 _f1;
 _GLF_struct_8 _f2;
 _GLF_struct_9 _f3;
 uint _f4;
 uvec4 _f5;
} ;

struct _GLF_struct_5 {
 mat3x4 _f0;
 vec2 _f1;
 mat4 _f2;
 uint _f3;
} ;

struct _GLF_struct_4 {
 float _f0;
 bvec2 _f1;
} ;

struct _GLF_struct_3 {
 mat3 _f0;
 uint _f1;
} ;

struct _GLF_struct_2 {
 bool _f0;
 uvec4 _f1;
 uvec3 _f2;
 mat3 _f3;
 mat4x3 _f4;
 int _f5;
} ;

struct _GLF_struct_1 {
 mat3 _f0;
 mat4x3 _f1;
 mat2x4 _f2;
 vec3 _f3;
 mat2x4 _f4;
 mat3x4 _f5;
 ivec2 _f6;
} ;

struct _GLF_struct_0 {
 mat3 _f0;
 bvec4 _f1;
 uvec3 _f2;
 bvec3 _f3;
 vec4 _f4;
 mat4x2 _f5;
} ;

struct _GLF_struct_6 {
 _GLF_struct_0 _f0;
 _GLF_struct_1 _f1;
 _GLF_struct_2 _f2;
 _GLF_struct_3 _f3;
 _GLF_struct_4 _f4;
 _GLF_struct_5 _f5;
 vec4 _f6;
} ;

struct _GLF_struct_11 {
 bool _f0;
 vec3 _f1;
 uint workgroup_size;
 mat3 _f2;
 _GLF_struct_6 _f3;
 _GLF_struct_10 _f4;
} ;

layout(set = 0, binding = 0) uniform buf0 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 _GLF_struct_27 _GLF_struct_replacement_27 = _GLF_struct_27(_GLF_struct_15(ivec4(1), _GLF_struct_12(ivec4(1), mat3x4(1.0), 1, true, bvec4(true)), _GLF_struct_13(ivec2(1), bvec2(true), mat3x2(1.0), vec4(1.0)), mat2(1.0), _GLF_struct_14(mat4x2(1.0), mat3(1.0), vec4(1.0), uvec2(1u), bvec2(true)), mat2x4(1.0)), _GLF_struct_16(mat2x3(1.0)), _GLF_struct_18(_GLF_struct_17(bvec3(true), uvec2(1u), true, mat2x3(1.0))), 1, _GLF_struct_21(ivec2(1), _GLF_struct_19(vec2(1.0), 1u, mat4(1.0), bvec2(true)), _GLF_struct_20(uvec4(1u), mat3x2(1.0), mat2x4(1.0), vec4(1.0))), _GLF_struct_26(_GLF_struct_22(true), mat2x3(1.0), _GLF_struct_23(bvec4(true), ivec4(1), uvec3(1u), ivec3(1), vec3(1.0), uvec3(1u), mat4(1.0)), _GLF_struct_24(ivec4(1), ivec3(1), mat3x2(1.0), 1.0), bvec2(true), mat4x2(1.0), _GLF_struct_25(true)), gl_SubgroupID);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
  return;
 _GLF_struct_11 _GLF_struct_replacement_11 = _GLF_struct_11(true, vec3(1.0), gl_WorkGroupSize.x, mat3(1.0), _GLF_struct_6(_GLF_struct_0(mat3(1.0), bvec4(true), uvec3(1u), bvec3(true), vec4(1.0), mat4x2(1.0)), _GLF_struct_1(mat3(1.0), mat4x3(1.0), mat2x4(1.0), vec3(1.0), mat2x4(1.0), mat3x4(1.0), ivec2(1)), _GLF_struct_2(true, uvec4(1u), uvec3(1u), mat3(1.0), mat4x3(1.0), 1), _GLF_struct_3(mat3(1.0), 1u), _GLF_struct_4(1.0, bvec2(true)), _GLF_struct_5(mat3x4(1.0), vec2(1.0), mat4(1.0), 1u), vec4(1.0)), _GLF_struct_10(_GLF_struct_7(ivec2(1), bvec4(true), uvec2(1u), uvec3(1u), vec4(1.0), ivec3(1)), bvec4(true), _GLF_struct_8(1, ivec3(1), bvec3(true), vec2(1.0)), _GLF_struct_9(mat3x2(1.0), 1u, bvec2(true)), 1u, uvec4(1u)));
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = _GLF_struct_replacement_11.workgroup_size * workgroup_id;
 uint virtual_gid = workgroup_base + _GLF_struct_replacement_27.subgroup_id * subgroup_size + subgroup_local_id;
 _GLF_struct_37 _GLF_struct_replacement_37 = _GLF_struct_37(_GLF_struct_30(bvec3(true), _GLF_struct_28(ivec2(1), uvec3(1u), ivec4(1), mat4x2(1.0), bvec4(true)), _GLF_struct_29(bvec2(true), uvec2(1u), uvec3(1u)), workgroup_base + _GLF_struct_replacement_27.subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size)), _GLF_struct_33(mat4x3(1.0), _GLF_struct_31(uvec3(1u), vec2(1.0), bvec2(true)), _GLF_struct_32(uvec4(1u), uvec4(1u))), _GLF_struct_36(1u, vec2(1.0), uvec3(1u), _GLF_struct_34(mat2x4(1.0), uvec4(1u), 1.0, uvec3(1u), uvec3(1u), mat3(1.0), bvec4(true)), _GLF_struct_35(vec2(1.0), bvec3(true), 1, mat2x3(1.0), vec2(1.0), ivec3(1))));
 buf[virtual_gid] = 1;
 buf[_GLF_struct_replacement_37._f0.next_virtual_gid] = 2;
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
