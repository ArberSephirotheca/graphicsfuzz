#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) && true) && true))), bool(bool((! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) && true) && true)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])), (false ? _GLF_FUZZED(uvec3(187779u, 32927u, 168036u)) : gl_WorkGroupSize)).x;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), false || (! (! (false)))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, true))))))) && true))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) | uint(_GLF_ZERO(0.0, injectionSwitch.x)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(false, false || (false)))))), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(false, false || (false)))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(_GLF_IDENTITY(_GLF_ONE(_GLF_IDENTITY(1.0, (1.0) + sqrt(_GLF_ZERO(0.0, injectionSwitch.x))), injectionSwitch.y), max(_GLF_IDENTITY(_GLF_ONE(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))))) + sqrt(_GLF_ZERO(0.0, injectionSwitch.x))), injectionSwitch.y), max(_GLF_IDENTITY(_GLF_ONE(_GLF_IDENTITY(1.0, (1.0) + sqrt(_GLF_ZERO(_GLF_IDENTITY(0.0, float(mat4x3(0.0, 1.0, 0.0, 1.0, 1.0, 1.0, round(length(normalize(1.0))), 0.0, sin(0.0), 1.0, abs(0.0), 0.0))), injectionSwitch.x))), _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, 0.0, 0.0, 1.0, 0.0), (true ? mat2x3(injectionSwitch, 0.0, 0.0, 1.0, 0.0) : _GLF_FUZZED(mat2x3(144.184, 2726.7212, -647.657, -5.3, 80.43, -1303.7827)))))).y), mix(float(_GLF_ONE(_GLF_IDENTITY(1.0, (1.0) + sqrt(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))), injectionSwitch.y)), float(_GLF_FUZZED(7984.8991)), bool(false))), _GLF_ONE(_GLF_IDENTITY(1.0, (1.0) + sqrt(_GLF_ZERO(0.0, injectionSwitch.x))), injectionSwitch.y))), _GLF_IDENTITY(_GLF_ONE(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) + sqrt(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(1.0, (1.0) + sqrt(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) + sqrt(_GLF_ZERO(0.0, injectionSwitch.x))), float(vec3(_GLF_IDENTITY(1.0, (1.0) + sqrt(_GLF_ZERO(0.0, injectionSwitch.x))), 1.0, 1.0))))), injectionSwitch.y), mix(float(_GLF_ONE(_GLF_IDENTITY(1.0, (1.0) + sqrt(_GLF_ZERO(0.0, injectionSwitch.x))), injectionSwitch.y)), float(_GLF_FUZZED(-3931.9584)), bool(false)))))), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(_GLF_IDENTITY(_GLF_ONE(_GLF_IDENTITY(1.0, (1.0) + sqrt(_GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, 0.0)), injectionSwitch.x))), injectionSwitch.y), max(_GLF_IDENTITY(_GLF_ONE(_GLF_IDENTITY(1.0, (1.0) + sqrt(_GLF_ZERO(0.0, injectionSwitch.x))), injectionSwitch.y), _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_ONE(_GLF_IDENTITY(1.0, (1.0) + sqrt(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)), mix(float(_GLF_ONE(_GLF_IDENTITY(1.0, (1.0) + sqrt(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))), injectionSwitch.y)), float(_GLF_FUZZED(7984.8991)), bool(false))), _GLF_ONE(_GLF_IDENTITY(1.0, (1.0) + sqrt(_GLF_ZERO(0.0, injectionSwitch.x))), injectionSwitch.y)), (_GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_ONE(_GLF_IDENTITY(1.0, (1.0) + sqrt(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)), mix(float(_GLF_IDENTITY(_GLF_ONE(_GLF_IDENTITY(1.0, (1.0) + sqrt(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))), injectionSwitch.y), float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(_GLF_ONE(_GLF_IDENTITY(1.0, (1.0) + sqrt(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))), injectionSwitch.y), 0.0 + (_GLF_ONE(_GLF_IDENTITY(1.0, (1.0) + sqrt(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))), injectionSwitch.y))), 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, log(1.0)), vec2(1.0, 0.0)), dot(vec2(1.0, log(1.0)), vec2(1.0, 0.0))), determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0), mat2(1.0) * (mat4x2(_GLF_IDENTITY(_GLF_ONE(_GLF_IDENTITY(1.0, (1.0) + sqrt(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))), injectionSwitch.y), 0.0 + (_GLF_ONE(_GLF_IDENTITY(1.0, (1.0) + sqrt(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))), injectionSwitch.y))), 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, log(1.0)), vec2(1.0, 0.0)), dot(vec2(1.0, log(1.0)), vec2(1.0, 0.0))), determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0)))))), float(_GLF_FUZZED(7984.8991)), bool(false))), _GLF_ONE(_GLF_IDENTITY(1.0, (1.0) + sqrt(_GLF_ZERO(0.0, injectionSwitch.x))), injectionSwitch.y)), (true ? max(_GLF_IDENTITY(_GLF_ONE(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) + sqrt(_GLF_ZERO(0.0, injectionSwitch.x))), min(_GLF_IDENTITY(1.0, (1.0) + sqrt(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) + sqrt(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(1.0, (1.0) + sqrt(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(1.0, (1.0) + sqrt(_GLF_ZERO(0.0, injectionSwitch.x))))))), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)), mix(float(_GLF_ONE(_GLF_IDENTITY(1.0, (1.0) + sqrt(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(4.8))), injectionSwitch.y)))), float(_GLF_FUZZED(7984.8991)), bool(false))), _GLF_ONE(_GLF_IDENTITY(1.0, (1.0) + sqrt(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).y)) : _GLF_FUZZED(-3565.1164)))) / _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, abs(1.0))), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, abs(1.0)))))), _GLF_IDENTITY(_GLF_ONE(_GLF_IDENTITY(1.0, (1.0) + sqrt(_GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, 0.0)), injectionSwitch.x))), injectionSwitch.y), mix(float(_GLF_ONE(_GLF_IDENTITY(1.0, (1.0) + sqrt(_GLF_ZERO(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(intBitsToFloat(-39674)) : 0.0)), injectionSwitch.x))), injectionSwitch.y)), _GLF_IDENTITY(float(_GLF_FUZZED(-3931.9584)), (float(_GLF_FUZZED(-3931.9584))) - abs(0.0)), bool(false))))))))))).x < injectionSwitch.y)) && ((! (_GLF_IDENTITY(false, false || (false)))))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), false || ((_GLF_IDENTITY(false, false || (false)))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(_GLF_IDENTITY(1.0, (1.0) + sqrt(_GLF_ZERO(0.0, injectionSwitch.x))), injectionSwitch.y)))), max(max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(_GLF_IDENTITY(1.0, (1.0) + sqrt(_GLF_ZERO(0.0, injectionSwitch.x))), injectionSwitch.y)))), max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(_GLF_IDENTITY(1.0, (1.0) + sqrt(_GLF_ZERO(0.0, injectionSwitch.x))), injectionSwitch.y))))))).x < injectionSwitch.y)) && ((! (_GLF_IDENTITY(false, false || (false)))))), (_GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_IDENTITY(false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, false, false)))) && true) || (false)))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(_GLF_IDENTITY(1.0, (1.0) + sqrt(_GLF_ZERO(0.0, injectionSwitch.x))), injectionSwitch.y))))).x < injectionSwitch.y)) && ((! (_GLF_IDENTITY(false, false || (false)))))), _GLF_IDENTITY((! _GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY(false, false || (false)))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(_GLF_IDENTITY(1.0, (1.0) + sqrt(_GLF_ZERO(0.0, injectionSwitch.x))), injectionSwitch.y))))).x < injectionSwitch.y)) && ((! (_GLF_IDENTITY(false, false || (false)))))), (_GLF_IDENTITY((! (_GLF_IDENTITY(false, false || (false)))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(_GLF_IDENTITY(1.0, (1.0) + sqrt(_GLF_ZERO(0.0, injectionSwitch.x))), injectionSwitch.y))))).x < injectionSwitch.y)) && ((! _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), false || ((_GLF_IDENTITY(false, false || (false))))))))) && true)), (_GLF_IDENTITY((! _GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY(false, false || (false)))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(_GLF_IDENTITY(1.0, (1.0) + sqrt(_GLF_ZERO(0.0, injectionSwitch.x))), injectionSwitch.y))))).x < injectionSwitch.y)) && ((! (_GLF_IDENTITY(false, false || (false)))))), (_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY(false, false || (false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((! (_GLF_IDENTITY(false, false || (false)))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(_GLF_IDENTITY(1.0, (1.0) + sqrt(_GLF_ZERO(0.0, injectionSwitch.x))), injectionSwitch.y))))).x < injectionSwitch.y)) && ((! _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), false || ((_GLF_IDENTITY(false, false || (false))))))))) && true)), ! (! ((! _GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY(false, false || (false)))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(_GLF_IDENTITY(1.0, (1.0) + sqrt(_GLF_ZERO(0.0, injectionSwitch.x))), injectionSwitch.y))))).x < injectionSwitch.y)) && ((! (_GLF_IDENTITY(false, false || (false)))))), (_GLF_IDENTITY((! (_GLF_IDENTITY(false, false || (false)))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(_GLF_IDENTITY(1.0, (1.0) + sqrt(_GLF_ZERO(0.0, injectionSwitch.x))), injectionSwitch.y))))).x < injectionSwitch.y)) && ((! _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), false || ((_GLF_IDENTITY(false, false || (false))))))))) && true)))))) || false) || false)) && true)))), (! (_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, false || (false)))), _GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY((true), ! (! ((true)))) && true), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(_GLF_IDENTITY(1.0, (1.0) + sqrt(_GLF_ZERO(0.0, injectionSwitch.x))), injectionSwitch.y))))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(_GLF_IDENTITY(1.0, (1.0) + sqrt(_GLF_ZERO(0.0, injectionSwitch.x))), injectionSwitch.y))))), (true ? _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(_GLF_IDENTITY(1.0, (1.0) + sqrt(_GLF_ZERO(0.0, injectionSwitch.x))), injectionSwitch.y))))) : _GLF_FUZZED(mat3x2(68.56, -80.53, -74.05, 9.8, -49.26, 78.46)[0]))), _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(_GLF_IDENTITY(1.0, (1.0) + sqrt(_GLF_ZERO(0.0, injectionSwitch.x))), injectionSwitch.y))))))), clamp(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(_GLF_IDENTITY(1.0, (1.0) + sqrt(_GLF_ZERO(0.0, injectionSwitch.x))), injectionSwitch.y))))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(_GLF_IDENTITY(1.0, (1.0) + sqrt(_GLF_ZERO(0.0, injectionSwitch.x))), injectionSwitch.y)))), max(max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(_GLF_IDENTITY(1.0, (1.0) + sqrt(_GLF_ZERO(0.0, injectionSwitch.x))), injectionSwitch.y)))), max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(_GLF_IDENTITY(1.0, (1.0) + sqrt(_GLF_ZERO(0.0, injectionSwitch.x))), injectionSwitch.y))))))), _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(_GLF_IDENTITY(1.0, (1.0) + sqrt(_GLF_ZERO(0.0, injectionSwitch.x))), injectionSwitch.y))))))).x < injectionSwitch.y)) && ((! (_GLF_IDENTITY(false, false || (false)))))))))) && true))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   barrier();
  }
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id) | 0u);
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(false, bool(bvec3(false, true, true))) || (_GLF_IDENTITY(false, false || (false))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), max(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1))) % subgroup_size), (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), (workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size)) ^ 0u)) | (workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size))), _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size)), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), (workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size)) ^ 0u)), 0u | (~ (workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size)))))), (~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (true ? workgroup_base + subgroup_id * subgroup_size : _GLF_FUZZED(subgroup_id))) + ((subgroup_local_id + 1) % subgroup_size)), 0u | (~ (workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) | ((subgroup_local_id + 1) % subgroup_size))))))))) << (0u >> _GLF_IDENTITY(uint(0u), uint(0u)))))), ((_GLF_IDENTITY(~ (workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size)), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(~ (workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size)), 0u | (~ (workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size)))))), (~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (true ? workgroup_base + subgroup_id * subgroup_size : _GLF_FUZZED(subgroup_id))) + ((subgroup_local_id + 1) % subgroup_size)), 0u | (~ (workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) | ((subgroup_local_id + 1) % subgroup_size))))))))) << (0u >> _GLF_IDENTITY(uint(0u), uint(0u))))))) | (_GLF_IDENTITY((_GLF_IDENTITY(~ (workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size)), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(~ (workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size)), 0u | (~ (workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size)))))), (~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (true ? workgroup_base + subgroup_id * subgroup_size : _GLF_FUZZED(subgroup_id))) + ((subgroup_local_id + 1) % subgroup_size)), 0u | (~ (workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) | ((subgroup_local_id + 1) % subgroup_size))))))))) << (0u >> _GLF_IDENTITY(uint(0u), uint(0u)))))), ((_GLF_IDENTITY(~ (workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size)), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(~ (workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size)), 0u | (~ (workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size)))))), (~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (true ? workgroup_base + subgroup_id * subgroup_size : _GLF_FUZZED(subgroup_id))) + ((subgroup_local_id + 1) % subgroup_size)), 0u | (~ (workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) | ((subgroup_local_id + 1) % subgroup_size))))))))) << (0u >> _GLF_IDENTITY(uint(0u), uint(0u))))))) | (_GLF_IDENTITY((_GLF_IDENTITY(~ (workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size)), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(~ (workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size)), 0u | (~ (workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1), clamp((subgroup_local_id + 1), _GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), (subgroup_local_id + 1))), (subgroup_local_id + 1))) % subgroup_size)))))), (~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (true ? workgroup_base + subgroup_id * subgroup_size : _GLF_FUZZED(subgroup_id))) + ((subgroup_local_id + 1) % subgroup_size)), 0u | (~ (workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) | ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))))))))))) << (0u >> _GLF_IDENTITY(uint(0u), uint(0u)))))), min((_GLF_IDENTITY(~ (workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), _GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | ((subgroup_local_id + 1))))) % subgroup_size)), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(~ (workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size)), 0u | (~ (workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size)))))), (~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (true ? workgroup_base + subgroup_id * subgroup_size : _GLF_FUZZED(subgroup_id))) + ((subgroup_local_id + 1) % subgroup_size)), 0u | (~ (workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) | ((subgroup_local_id + 1) % subgroup_size))))))))) << (0u >> _GLF_IDENTITY(uint(0u), uint(0u)))))), (_GLF_IDENTITY(~ (workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size)), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(~ (workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id + 1, (true ? subgroup_local_id + 1 : _GLF_FUZZED(atomicMin(workgroup_base, bitfieldExtract(132381u, 55369, -43622)))))) % subgroup_size)), 0u | (~ (workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size)))))), (~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (true ? workgroup_base + subgroup_id * subgroup_size : _GLF_FUZZED(subgroup_id))) + ((subgroup_local_id + 1) % subgroup_size)), 0u | (~ (workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) | ((subgroup_local_id + 1) % subgroup_size))))))))) << (0u >> _GLF_IDENTITY(uint(0u), uint(0u))))))))))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u)))), (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, uint(uvec4(0u, (0u & 84737u), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u))), 0u)) ^ (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) << (0u << _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), (uint(0u)) - 0u)))), subgroup_id * subgroup_size))))) - 0u), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, 0u ^ (workgroup_base + subgroup_id * subgroup_size))) - 0u), max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), subgroup_id * subgroup_size, subgroup_id * subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, max(workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size)), _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (0u))) >> 0u), _GLF_IDENTITY(0u, uint(uvec2(0u, 1u))))) ^ (workgroup_base + subgroup_id * subgroup_size))) - 0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (0u))) >> 0u), _GLF_IDENTITY(0u, uint(uvec2(0u, 1u))))) ^ (workgroup_base + subgroup_id * subgroup_size))) - 0u)), (false ? _GLF_FUZZED(166606u) : ~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) + (0u << _GLF_IDENTITY(uint(7u), uint(7u))))) | (workgroup_base + subgroup_id * subgroup_size)), (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ _GLF_IDENTITY((0u), ((0u)) >> 0u))) >> 0u), _GLF_IDENTITY(0u, uint(uvec2(0u, 1u))))) ^ (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))))) - 0u)))))), _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, 0u | (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(~ (~ (subgroup_id)), (~ (~ (subgroup_id))) ^ 0u)))) * subgroup_size, (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, 0u ^ (workgroup_base + subgroup_id * subgroup_size))) - 0u))))) + ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1))) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))) ^ 0u), min(subgroup_size, subgroup_size)))), max((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u)))), (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, uint(uvec4(0u, (0u & 84737u), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u))), 0u)) ^ (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, subgroup_id * subgroup_size))))) - 0u), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, 0u ^ (workgroup_base + subgroup_id * subgroup_size))) - 0u), max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), subgroup_id * subgroup_size, subgroup_id * subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, max(workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size)), _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) | (0u)), 0u, _GLF_IDENTITY(0u, (0u) | (0u))))))) >> 0u), _GLF_IDENTITY(0u, uint(uvec2(0u, 1u))))) ^ (workgroup_base + subgroup_id * subgroup_size))) - 0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u ^ (0u)), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(_GLF_IDENTITY(0u, 0u ^ (0u)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u ^ (0u)), 0u ^ (_GLF_IDENTITY(0u, 0u ^ (0u)))))))))) >> 0u), _GLF_IDENTITY(0u, uint(uvec2(0u, 1u))))) ^ (workgroup_base + subgroup_id * subgroup_size))) - 0u)), (false ? _GLF_FUZZED(166606u) : ~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) + (0u << _GLF_IDENTITY(uint(7u), uint(7u))))) | (workgroup_base + subgroup_id * subgroup_size)), (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ _GLF_IDENTITY((0u), ((0u)) >> 0u))) >> 0u), _GLF_IDENTITY(0u, uint(uvec2(0u, 1u))))) ^ (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))))) - 0u)))))), _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, 0u | (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))))) * subgroup_size, (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, 0u ^ (_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)) + subgroup_id * subgroup_size))) - 0u))))) + ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1))) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))) ^ 0u), min(subgroup_size, subgroup_size)))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u)))), (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, uint(uvec4(0u, (0u & 84737u), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u))), 0u)) ^ (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(bitfieldReverse(workgroup_base)) : subgroup_id * subgroup_size)), subgroup_id * subgroup_size))))) - 0u), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, 0u ^ (workgroup_base + subgroup_id * subgroup_size))) - 0u), max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, clamp(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), subgroup_id * subgroup_size, subgroup_id * subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, max(workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size)), _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (0u))) >> 0u), _GLF_IDENTITY(0u, uint(uvec2(0u, 1u))))) ^ (workgroup_base + subgroup_id * subgroup_size))) - 0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (0u))) >> 0u), _GLF_IDENTITY(0u, uint(uvec2(0u, 1u))))) ^ (workgroup_base + subgroup_id * subgroup_size))) - 0u)), (false ? _GLF_FUZZED(166606u) : ~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) + (0u << _GLF_IDENTITY(uint(7u), uint(7u))))) | (workgroup_base + subgroup_id * subgroup_size)), (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ _GLF_IDENTITY((0u), ((0u)) >> 0u))) >> 0u), _GLF_IDENTITY(0u, uint(uvec2(0u, 1u))))) ^ (workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) << 0u)), (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) << 0u))) << 0u))), max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))))) - 0u)))))), _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, 0u | (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))))) * subgroup_size, (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, 0u ^ (workgroup_base + subgroup_id * subgroup_size))) - 0u))))) + ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1))) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))) ^ 0u), min(subgroup_size, subgroup_size)))))) << 0u);
 buf[virtual_gid] = 1;
 if(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) << int(_GLF_ZERO(0.0, injectionSwitch.x))), 1, 1)), (subgroup_local_id + _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, max(1, 1)), 1, 1))) + _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) - 0u)) | (uint(_GLF_ZERO(0.0, injectionSwitch.x))))) < subgroup_size)
  {
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 0);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, false))))))
    barrier();
   subgroupAll(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(false)), false, true, true)))), (_GLF_IDENTITY(false, bool(bool(false)))) || false), _GLF_IDENTITY(bool(bool(false)), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, _GLF_IDENTITY(true, true && (true))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, bool(bvec2(true, _GLF_IDENTITY(true, true && (true))))))), _GLF_IDENTITY(bool(bvec3(bool(bool(_GLF_IDENTITY(true, bool(bvec2(true, _GLF_IDENTITY(true, true && (true))))))), true, false)), (bool(bvec3(bool(bool(_GLF_IDENTITY(true, bool(bvec2(true, _GLF_IDENTITY(true, true && (true))))))), true, false))) || false)))), ! _GLF_IDENTITY((! (! _GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec2(true, _GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), bool(bvec4((! (true)), true, true, false)))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec2(true, _GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), bool(bvec4((! (true)), true, true, false)))))))), ! (! ((_GLF_IDENTITY(true, bool(bvec2(true, _GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), bool(bvec4((! (true)), true, true, false)))))))))))), bool(bvec2(! (_GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec2(true, _GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), bool(bvec4((! (true)), true, true, false)))))))), ! (! ((_GLF_IDENTITY(true, bool(bvec2(true, _GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), bool(bvec4((! (true)), true, true, false)))))))))))), true))))))), ((! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), ! (_GLF_IDENTITY(! (bool(bvec2(true, true))), ! (! (! (bool(bvec2(true, true))))))))))))) || false)))) && _GLF_IDENTITY((_GLF_IDENTITY(bool(bool(false)), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) && true)), false || (bool(_GLF_IDENTITY(false, (false) && true)))))) && _GLF_IDENTITY(true, true && (true)))), (_GLF_IDENTITY((_GLF_IDENTITY(bool(bool(false)), (bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), ! (! (! (_GLF_IDENTITY(false, true && (false))))))))), true), bvec2(bvec2(bvec2((false), true)))))) && true)))) && true)), false || ((_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(_GLF_IDENTITY(bvec3(bool(bool(false)), true, true), bvec3(bvec3(bvec3(bool(bool(false)), true, true))))))))), (bool(bool(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))), bool(bool(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false))))))) || _GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_IDENTITY((true) && true, true && ((true) && true)))), ((_GLF_IDENTITY(true, (true) && true))) && true)))))) && true))))) || _GLF_IDENTITY(false, false || (false))))));
  }
 else
  {
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(2, (2) << 0)), _GLF_IDENTITY(4, (4) << 0), 64, _GLF_IDENTITY(0, _GLF_IDENTITY((0), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY((0), min(_GLF_IDENTITY((0), ((0)) - 0), (0)))), 0 ^ ((_GLF_IDENTITY((0), min(_GLF_IDENTITY((0), ((0)) - 0), (0)))))))) << 0));
   subgroupAll(true);
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-9.8)))) + tan(0.0)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, cos(0.0), sqrt(1.0), 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))))) > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) || false, ! (! ((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-4880.1968), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-84.24)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(777.687)), float(injectionSwitch.y), bool(true)))) || false)))))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) || false, ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, false))) || false))))))))), (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), (mat2(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(30.45)), bool(false))), 1.0)))) / mat2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))) * (injectionSwitch)).y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) || false, ! (! ((injectionSwitch.x > injectionSwitch.y) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, true)), _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec4(false, true, true, true)), ! (! (bool(bvec4(false, true, true, true)))))) && true, ! (! (_GLF_IDENTITY((_GLF_IDENTITY(bool(bvec4(false, true, true, _GLF_IDENTITY(true, false || (true)))), ! _GLF_IDENTITY((! (bool(bvec4(false, true, true, true)))), ! (! (_GLF_IDENTITY((! (bool(bvec4(false, true, true, true)))), true && (_GLF_IDENTITY((! (bool(bvec4(false, true, true, true)))), bool(bvec3((! (bool(bvec4(false, true, true, true)))), true, false)))))))))) && true, false || ((_GLF_IDENTITY(bool(bvec4(false, true, true, true)), ! (_GLF_IDENTITY(! (bool(bvec4(false, true, true, true))), false || (_GLF_IDENTITY(! (bool(bvec4(false, true, true, true))), (! (bool(bvec4(false, true, true, true)))) && true)))))) && true)))))))))))))))), ! (! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - _GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((+ 0.9))), float(injectionSwitch.x), bool(true))), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y) || false, ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y) || false), ! (! (! ((injectionSwitch.x > injectionSwitch.y) || false)))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)))) || false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) || false, ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true) || false)))), ! (! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 0.0, 0.0)))) || false)))))))), false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) || false, ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y) || false), _GLF_IDENTITY(! (! (! ((injectionSwitch.x > injectionSwitch.y) || false))), true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (! (! ((injectionSwitch.x > injectionSwitch.y) || false))), ! (! (! (! (! ((injectionSwitch.x > injectionSwitch.y) || false)))))), ! (! (_GLF_IDENTITY(! (! (! ((injectionSwitch.x > injectionSwitch.y) || false))), ! (! (! (! (! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y) || false), ! (! (((injectionSwitch.x > injectionSwitch.y) || false))))))))))))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(! (! (! ((injectionSwitch.x > injectionSwitch.y) || false))), ! (! (! (! (! ((injectionSwitch.x > injectionSwitch.y) || false)))))), ! (! (_GLF_IDENTITY(! (! (! ((injectionSwitch.x > injectionSwitch.y) || false))), ! (! (! (! (! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y) || false), ! (! (((injectionSwitch.x > injectionSwitch.y) || false))))))))))))))))))))), false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) || false, ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y) || false), _GLF_IDENTITY(! (! (! ((injectionSwitch.x > injectionSwitch.y) || false))), true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (! (! ((injectionSwitch.x > injectionSwitch.y) || false))), ! (! (! (! (! ((injectionSwitch.x > injectionSwitch.y) || false)))))), ! (! (_GLF_IDENTITY(! (! (! ((injectionSwitch.x > injectionSwitch.y) || false))), ! (! (! (! (! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y) || false), ! (! (((injectionSwitch.x > injectionSwitch.y) || false))))))))))))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(! (! (! ((injectionSwitch.x > injectionSwitch.y) || false))), ! (! (! (! (! ((injectionSwitch.x > injectionSwitch.y) || false)))))), ! (! (_GLF_IDENTITY(! (! (! ((injectionSwitch.x > injectionSwitch.y) || false))), ! (! (! (! (! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y) || false), ! (! (((injectionSwitch.x > injectionSwitch.y) || false))))))))))))))))))))))), false, false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec3(bvec4(bvec3(bvec4(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) || false, ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y) || false), ! (! (! ((injectionSwitch.x > injectionSwitch.y) || false)))))))), false, false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true))))), false || (bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) || false, ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y) || false), ! (! (! ((injectionSwitch.x > injectionSwitch.y) || false))))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) || false, ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y) || false), ! (! (! ((injectionSwitch.x > injectionSwitch.y) || false)))))))) || false)), false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) || false, ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y) || false), ! (! (! ((injectionSwitch.x > injectionSwitch.y) || false)))))))), false, false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec3(bvec4(bvec3(bvec4(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) || _GLF_IDENTITY(false, ! (! (false))), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y) || false), ! (! (! ((injectionSwitch.x > injectionSwitch.y) || false)))))))), false, false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true)))))))))))))))) && true))))))
    barrier();
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
