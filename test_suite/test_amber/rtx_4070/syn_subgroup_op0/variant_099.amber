#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   do
    {
     return;
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).y))));
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, true), false)), bvec3(bvec3(bvec3(bvec4(bvec3(false, true, true), false)))))))), (injectionSwitch.x > injectionSwitch.y))))
        return;
       for(int _injected_loop_counter = _GLF_IDENTITY(0, (0) - 0); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) | (1))) >> 0)), (_GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, _GLF_IDENTITY((1), (_GLF_IDENTITY((1), (false ? _GLF_FUZZED(-75492) : (1)))) | ((1))) >> 0))) && true); _GLF_IDENTITY(_injected_loop_counter ++, ~ (~ (_GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) >> 0)))))
        {
         return;
        }
      }
    }
   do
    {
     return;
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))));
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
        {
         for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
          {
           return;
          }
        }
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   else
    {
    }
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false)))
    return;
   if(_GLF_DEAD(false))
    {
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-1.8, 1.6)) : _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), true)))))), bool(bvec3(_GLF_DEAD(false), false, false))))))
    return;
  }
 else
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))) || false), (false) && true)), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), false || (! (_GLF_IDENTITY(false, false || (false))))))))))))))), ((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), false || (! (_GLF_IDENTITY(false, false || (false)))))))))))))))) && true) && true)), _GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))), (! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))) && true), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) || false)), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2((_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))[0], _GLF_FUZZED(0.4)), vec2(_GLF_FUZZED(-5.4), (injectionSwitch)[1]), bvec2(false, _GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))))).x < injectionSwitch.y)))), true && (bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) || false))
    {
     for(int _injected_loop_counter = (1 & _GLF_IDENTITY(1, ~ (~ (1)))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != (_GLF_IDENTITY(0, 0 ^ _GLF_IDENTITY((0), 0 | (_GLF_IDENTITY((0), (true ? (0) : _GLF_FUZZED(_injected_loop_counter)))))) ^ 0), bool(bvec2(_GLF_IDENTITY(_injected_loop_counter != (_GLF_IDENTITY(0, 0 ^ _GLF_IDENTITY((0), 0 | (_GLF_IDENTITY((0), (true ? (0) : _GLF_FUZZED(_injected_loop_counter)))))) ^ 0), (_injected_loop_counter != (_GLF_IDENTITY(0, 0 ^ _GLF_IDENTITY((0), 0 | (_GLF_IDENTITY((0), (true ? (0) : _GLF_FUZZED(_injected_loop_counter)))))) ^ 0)) && true), true)))); _injected_loop_counter --)
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
          break;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
           break;
          }
         return;
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))))
          return;
         if(_GLF_DEAD(false))
          return;
        }
      }
    }
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         do
          {
           return;
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       if(_GLF_DEAD(false))
        return;
      }
     return;
    }
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
  }
 else
  {
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 for(int _injected_loop_counter = int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-6.1))))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY(false, bool(bvec2(false, false)))))))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                  {
                   return;
                  }
                 else
                  {
                   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
                    break;
                  }
                }
              }
             else
              {
               return;
              }
            }
           else
            {
            }
           if(_GLF_DEAD(false))
            return;
          }
         else
          {
          }
         if(_GLF_DEAD(false))
          continue;
        }
       do
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           do
            {
             return;
             if(_GLF_DEAD(false))
              return;
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), false || (_GLF_IDENTITY(true, true && (true))))))
            {
             return;
            }
           else
            {
            }
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_DEAD(false))
              return;
            }
           if(_GLF_DEAD(false))
            continue;
           do
            {
             if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
              continue;
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               return;
              }
             if(_GLF_DEAD(false))
              continue;
             if(_GLF_DEAD(false))
              continue;
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
        }
       else
        {
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   else
    {
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    continue;
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, false))))), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)) || false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)) || false))), ((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)) || false)))) || false)), (! (_GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)) || false))), ((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)) || false)))) || false))) || false))) && _GLF_IDENTITY(true, (true) && true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, false))))), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-9.9)), float(0.0), bool(true))), 0.0, 0.0)), 0.0)).y), ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-4.3))))).y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-4.3))))).y, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-4.3))))).y) / 1.0), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-4.3))))).y)))) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true)))) && _GLF_IDENTITY(true, (true) && true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false))))), false || (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-1534.7161) : injectionSwitch.x)))) > injectionSwitch.y, false, true, false))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))))))))), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y), _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * abs(1.0)) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)), ! (! (((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * abs(1.0)) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))) || false))) && _GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) && true)), bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) && true)), (! (_GLF_IDENTITY(true, (true) && true))) || false), true, true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false))))), (bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, false))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) - vec2(0.0, 0.0), mix(vec2(_GLF_FUZZED(-292.692), _GLF_FUZZED(8.0)), vec2(((injectionSwitch) - vec2(0.0, 0.0))[0], _GLF_IDENTITY(((injectionSwitch) - vec2(0.0, 0.0))[1], min(((injectionSwitch) - vec2(0.0, 0.0))[1], ((injectionSwitch) - vec2(0.0, 0.0))[1]))), bvec2(true, true)))).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)) || false))) && _GLF_IDENTITY(true, (true) && true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)), false || (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) - vec2(0.0, 0.0), mix(vec2(_GLF_FUZZED(-292.692), _GLF_FUZZED(8.0)), vec2(((injectionSwitch) - vec2(0.0, 0.0))[0], _GLF_IDENTITY(((injectionSwitch) - vec2(0.0, 0.0))[1], min(((injectionSwitch) - vec2(0.0, 0.0))[1], ((injectionSwitch) - vec2(0.0, 0.0))[1]))), bvec2(true, true)))).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)) || false))) && _GLF_IDENTITY(true, (true) && true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)), (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) - vec2(0.0, 0.0), mix(vec2(_GLF_FUZZED(-292.692), _GLF_FUZZED(8.0)), vec2(((injectionSwitch) - vec2(0.0, 0.0))[0], _GLF_IDENTITY(((injectionSwitch) - vec2(0.0, 0.0))[1], min(((injectionSwitch) - vec2(0.0, 0.0))[1], ((injectionSwitch) - vec2(0.0, 0.0))[1]))), bvec2(true, true)))).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)) || false))) && _GLF_IDENTITY(true, (true) && true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)), false || (bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) - vec2(0.0, 0.0), mix(vec2(_GLF_FUZZED(-292.692), _GLF_FUZZED(8.0)), vec2(((injectionSwitch) - vec2(0.0, 0.0))[0], _GLF_IDENTITY(((injectionSwitch) - vec2(0.0, 0.0))[1], min(((injectionSwitch) - vec2(0.0, 0.0))[1], ((injectionSwitch) - vec2(0.0, 0.0))[1]))), bvec2(true, true)))).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)) || false))) && _GLF_IDENTITY(true, (true) && true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false))))) && true))))))) || false))))))
    {
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch), max(min(injectionSwitch, injectionSwitch), _GLF_IDENTITY(_GLF_IDENTITY(min(injectionSwitch, injectionSwitch), (min(injectionSwitch, injectionSwitch)) * mat2(1.0)), vec2(vec4(_GLF_IDENTITY(_GLF_IDENTITY(min(injectionSwitch, injectionSwitch), (min(injectionSwitch, injectionSwitch)) * mat2(1.0)), max(_GLF_IDENTITY(min(injectionSwitch, injectionSwitch), (min(injectionSwitch, injectionSwitch)) * mat2(1.0)), _GLF_IDENTITY(_GLF_IDENTITY(min(injectionSwitch, injectionSwitch), (min(injectionSwitch, injectionSwitch)) * mat2(1.0)), (_GLF_IDENTITY(min(injectionSwitch, injectionSwitch), (min(injectionSwitch, injectionSwitch)) * mat2(1.0))) * vec2(1.0, 1.0)))), 0.0, 0.0)))))).x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(injectionSwitch))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), vec2(1.0, 1.0) * (min(injectionSwitch, injectionSwitch)))), max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))))) * exp(vec2(0.0, 0.0))).x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
      {
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))), (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, (false ? _GLF_FUZZED(237.558) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x)) > injectionSwitch.y)))) || false))))
        {
         if(_GLF_DEAD(false))
          continue;
        }
       else
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           do
            {
             return;
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
          }
         else
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
          }
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), true))))), true)))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), true))))), true))))), (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), true))))), true)))))) && true))))
          return;
        }
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         return;
        }
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
  }
 else
  {
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false, ! (! (false))) || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(961.148, 1.8)))).x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
  }
 else
  {
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (true ? workgroup_size : _GLF_FUZZED(workgroup_id))) * workgroup_id, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((true ? _GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(subgroup_size) : workgroup_size)), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(subgroup_size) : workgroup_size)), ~ (_GLF_IDENTITY(~ (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(subgroup_size) : workgroup_size))), min(~ (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(subgroup_size) : workgroup_size))), ~ (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(subgroup_size) : workgroup_size))))))), 0u, 1u)), min(uint(uvec3(_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size)))) : workgroup_size)), ~ (~ (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(subgroup_size) : workgroup_size))))), 0u, 1u)), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(subgroup_size) : workgroup_size)), max(_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(subgroup_size) : workgroup_size)), uint(uvec4(false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(subgroup_size) : workgroup_size)), 0u, 1u, 1u))), false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(subgroup_size) : workgroup_size)))), ~ (~ (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(subgroup_size) : workgroup_size))))), 0u, 1u)), max(uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(subgroup_size) : workgroup_size)), max(_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(subgroup_size) : workgroup_size)), uint(uvec4(false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(subgroup_size) : workgroup_size)), 0u, 1u, 1u))), false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(subgroup_size) : workgroup_size)))), ~ (~ (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(subgroup_size) : workgroup_size))))), 0u, 1u)), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(subgroup_size) : workgroup_size)), max(_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(subgroup_size) : workgroup_size)), uint(uvec4(false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(subgroup_size) : workgroup_size)), 0u, 1u, 1u))), false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(subgroup_size) : workgroup_size)))), ~ (~ (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(subgroup_size) : workgroup_size))))), 0u, 1u))))))))) : _GLF_FUZZED(workgroup_id)), 0u ^ (_GLF_IDENTITY((true ? _GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(subgroup_size) : workgroup_size)), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(subgroup_size) : workgroup_size)), ~ (_GLF_IDENTITY(~ (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(subgroup_size) : workgroup_size))), min(~ (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(subgroup_size) : workgroup_size))), ~ (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(subgroup_size) : workgroup_size))))))), 0u, 1u)), min(uint(uvec3(_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size)))) : workgroup_size)), ~ (~ (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(subgroup_size) : workgroup_size))))), 0u, 1u)), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(subgroup_size) : workgroup_size)), max(_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(subgroup_size) : workgroup_size)), uint(uvec4(false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(subgroup_size) : workgroup_size)), 0u, 1u, 1u))), false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(subgroup_size) : workgroup_size)))), ~ (~ (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(subgroup_size) : workgroup_size))))), 0u, 1u)), max(uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(subgroup_size) : workgroup_size)), max(_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(subgroup_size) : workgroup_size)), uint(uvec4(false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(subgroup_size) : workgroup_size)), 0u, 1u, 1u))), false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(subgroup_size) : workgroup_size)))), ~ (~ (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(subgroup_size) : workgroup_size))))), 0u, 1u)), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(subgroup_size) : workgroup_size)), max(_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(subgroup_size) : workgroup_size)), uint(uvec4(false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(subgroup_size) : workgroup_size)), 0u, 1u, 1u))), false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(subgroup_size) : workgroup_size)))), ~ (~ (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(subgroup_size) : workgroup_size))))), 0u, 1u))))))))) : _GLF_FUZZED(workgroup_id)), ((true ? _GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(subgroup_size) : workgroup_size)), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(subgroup_size) : workgroup_size)), ~ (_GLF_IDENTITY(~ (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(subgroup_size) : workgroup_size))), min(~ (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(subgroup_size) : workgroup_size))), ~ (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(subgroup_size) : workgroup_size))))))), 0u, 1u)), min(uint(uvec3(_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size)))) : workgroup_size)), ~ (~ (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(subgroup_size) : workgroup_size))))), 0u, 1u)), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(subgroup_size) : workgroup_size)), max(_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(subgroup_size) : workgroup_size)), uint(uvec4(false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(subgroup_size) : workgroup_size)), 0u, 1u, 1u))), false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(subgroup_size) : workgroup_size)))), ~ (~ (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(subgroup_size) : workgroup_size))))), 0u, 1u)), max(uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(subgroup_size) : workgroup_size)), max(_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(subgroup_size) : workgroup_size)), uint(uvec4(false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(subgroup_size) : workgroup_size)), 0u, 1u, 1u))), false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(subgroup_size) : workgroup_size)))), ~ (~ (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(subgroup_size) : workgroup_size))))), 0u, 1u)), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(subgroup_size) : workgroup_size)), max(_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(subgroup_size) : workgroup_size)), uint(uvec4(false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(subgroup_size) : workgroup_size)), 0u, 1u, 1u))), false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(subgroup_size) : workgroup_size)))), ~ (~ (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(subgroup_size) : workgroup_size))))), 0u, 1u))))))))) : _GLF_FUZZED(workgroup_id))) / 1u)))) * _GLF_IDENTITY(workgroup_id, 0u ^ (workgroup_id)), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, max(workgroup_size, workgroup_size)), (true ? workgroup_size : _GLF_FUZZED(workgroup_id))) * workgroup_id) / 1u)), uint(_GLF_ONE(1.0, injectionSwitch.y)) * ((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (true ? _GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))) | (subgroup_size))) : workgroup_size)))) : _GLF_FUZZED(workgroup_id))) * workgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, max(workgroup_size, workgroup_size)), (true ? workgroup_size : _GLF_FUZZED(workgroup_id))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, max(workgroup_size, workgroup_size)), (true ? workgroup_size : _GLF_FUZZED(workgroup_id)))), (true ? ~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, max(workgroup_size, workgroup_size)), (true ? workgroup_size : _GLF_FUZZED(_GLF_IDENTITY(workgroup_id, 0u ^ (workgroup_id)))))) : _GLF_FUZZED(atomicAdd(workgroup_size, subgroup_local_id)))))) * workgroup_id), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, max(workgroup_size, workgroup_size)), (true ? workgroup_size : _GLF_FUZZED(workgroup_id))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, max(workgroup_size, workgroup_size)), (true ? workgroup_size : _GLF_FUZZED(workgroup_id)))), (true ? ~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, max(workgroup_size, workgroup_size)), (true ? workgroup_size : _GLF_FUZZED(_GLF_IDENTITY(workgroup_id, 0u ^ (workgroup_id)))))) : _GLF_FUZZED(atomicAdd(workgroup_size, subgroup_local_id)))))) * workgroup_id)) / 1u) / 1u))))));
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    return;
  }
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((subgroup_id * subgroup_size), ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), uint(uvec2(uint(1u), 1u))))) * ((subgroup_id * subgroup_size))) + _GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, 0u + (0u)), 1u, 0u), (uvec3(_GLF_IDENTITY(0u, 0u + (0u)), 1u, _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, 0u + (0u)), min(0u, 0u)))))) * uvec3(1u, 1u, 1u))))), min(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((subgroup_id * subgroup_size), ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(uvec2(uint(1u), 1u)), uint(uvec2(uint(uvec2(uint(1u), 1u)), 0u)))))) * ((subgroup_id * subgroup_size))) + _GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, 0u + (0u)), 1u, 0u), (uvec3(_GLF_IDENTITY(0u, 0u + (0u)), 1u, _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, 0u + (0u)), min(0u, 0u)))))) * uvec3(1u, 1u, 1u))))), _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((subgroup_id * subgroup_size), ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), uint(uvec2(uint(1u), 1u))))) * ((subgroup_id * subgroup_size))) + _GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, 0u + (0u)), 1u, 0u), (uvec3(_GLF_IDENTITY(0u, 0u + (0u)), 1u, _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, 0u + (0u)), min(_GLF_IDENTITY(0u, (0u) ^ 0u), 0u)))))) * uvec3(1u, 1u, 1u))))))) + _GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, (1) / _GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 + (1))) + 0))) % subgroup_size), max(((subgroup_local_id + _GLF_IDENTITY(1, (1) / _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, int(ivec2(1, 0))), 1)))) % subgroup_size), ((_GLF_IDENTITY(subgroup_local_id, uint(uvec4(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), 1u, 0u, 1u))) + _GLF_IDENTITY(1, (1) / 1)) % subgroup_size)));
 do
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), mix(float(_GLF_FUZZED(9.2)), float(_GLF_IDENTITY((injectionSwitch.x), _GLF_IDENTITY(clamp((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4(injectionSwitch, 1.0, 0.0, 1.0, cos(0.0), 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) / 1.0)), float(_GLF_FUZZED((+ 781.796))), bool(false))))), 1.0, 1.0, exp(0.0), round(length(normalize(1.0))), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, 1.0 * (0.0))) + 0.0), 0.0)), dot(_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), min(vec3(1.0, 0.0, 0.0), _GLF_IDENTITY(vec3(1.0, 0.0, 0.0), mix(vec3(_GLF_FUZZED(-151.148), _GLF_FUZZED(6.5), _GLF_FUZZED(-9375.9275)), vec3((vec3(1.0, 0.0, 0.0))[0], (vec3(1.0, 0.0, 0.0))[1], _GLF_IDENTITY((vec3(1.0, 0.0, 0.0)), mat3(1.0) * ((vec3(1.0, 0.0, 0.0))))[2]), bvec3(true, true, true))))), vec3(1.0, 0.0, 0.0)))), (_GLF_IDENTITY(mat4(injectionSwitch, 1.0, 0.0, 1.0, cos(_GLF_IDENTITY(0.0, min(0.0, 0.0))), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, exp(0.0), round(length(normalize(1.0))), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(_GLF_IDENTITY(1.0, 1.0 * (1.0)), 0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, determinant(_GLF_IDENTITY(mat2(exp(0.0), 0.0, 0.0, 1.0), mat2(_GLF_IDENTITY(mat4(_GLF_IDENTITY(mat2(exp(0.0), 0.0, 0.0, 1.0), (mat2(exp(0.0), 0.0, 0.0, 1.0)) - mat2(0.0, 0.0, 0.0, 0.0))), (true ? mat4(_GLF_IDENTITY(mat2(exp(0.0), 0.0, 0.0, 1.0), (mat2(exp(0.0), 0.0, 0.0, 1.0)) - mat2(0.0, 0.0, 0.0, 0.0))) : _GLF_FUZZED(mat4(-9938.8427, 162.743, 3358.9076, 573.325, 62.20, 5.6, 4.0, 1746.2528, -612.813, -2.1, 6.2, 7653.8577, 0.1, -6860.8255, -741.781, 69.80))))))), exp(0.0), abs(determinant(mat2(0.0, 0.0, 1.0, 0.0))), 1.0), transpose(_GLF_IDENTITY(transpose(mat3x4(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, determinant(mat2(exp(0.0), 0.0, 0.0, 1.0)), exp(0.0), abs(determinant(mat2(0.0, 0.0, 1.0, 0.0))), 1.0)), transpose(transpose(transpose(mat3x4(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_IDENTITY(1.0, float(float(1.0))), 1.0, 1.0, 1.0, determinant(mat2(exp(0.0), 0.0, 0.0, 1.0)), exp(0.0), _GLF_IDENTITY(abs(determinant(mat2(0.0, 0.0, 1.0, 0.0))), mix(float(abs(determinant(mat2(0.0, 0.0, 1.0, 0.0)))), float(_GLF_FUZZED(-272.062)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0))))))))))))), transpose(transpose(mat4(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))))))), 1.0, 0.0, 1.0, cos(0.0), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), exp(0.0), _GLF_IDENTITY(round(_GLF_IDENTITY(length(normalize(1.0)), (false ? _GLF_FUZZED(-1580.6700) : length(normalize(1.0))))), max(round(_GLF_IDENTITY(length(normalize(1.0)), (false ? _GLF_FUZZED(-1580.6700) : length(normalize(1.0))))), _GLF_IDENTITY(round(_GLF_IDENTITY(length(normalize(1.0)), (false ? _GLF_FUZZED(-1580.6700) : length(normalize(1.0))))), 1.0 * (round(_GLF_IDENTITY(length(normalize(1.0)), (false ? _GLF_FUZZED(-1580.6700) : length(normalize(1.0))))))))), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)))))))) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0, 0.0, 0.0, 0.0, 0.0)))).x), _GLF_IDENTITY((injectionSwitch.x), ((injectionSwitch.x)) / 1.0), (injectionSwitch.x)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(clamp((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4(injectionSwitch, 1.0, 0.0, 1.0, cos(0.0), 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) / 1.0)), float(_GLF_FUZZED((+ 781.796))), bool(false))))), 1.0, 1.0, exp(0.0), round(length(normalize(1.0))), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, 1.0 * (0.0))) + 0.0), 0.0)), dot(_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), min(vec3(1.0, 0.0, 0.0), _GLF_IDENTITY(vec3(1.0, 0.0, 0.0), mix(vec3(_GLF_FUZZED(-151.148), _GLF_FUZZED(6.5), _GLF_FUZZED(-9375.9275)), vec3((vec3(1.0, 0.0, 0.0))[0], (vec3(1.0, 0.0, 0.0))[1], _GLF_IDENTITY((vec3(1.0, 0.0, 0.0)), mat3(1.0) * ((vec3(1.0, 0.0, 0.0))))[2]), bvec3(true, true, true))))), vec3(1.0, 0.0, 0.0)))), (_GLF_IDENTITY(mat4(injectionSwitch, 1.0, 0.0, 1.0, cos(_GLF_IDENTITY(0.0, min(0.0, 0.0))), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, exp(0.0), round(length(normalize(1.0))), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(_GLF_IDENTITY(1.0, 1.0 * (1.0)), 0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, determinant(_GLF_IDENTITY(mat2(exp(0.0), 0.0, 0.0, 1.0), mat2(_GLF_IDENTITY(mat4(_GLF_IDENTITY(mat2(exp(0.0), 0.0, 0.0, 1.0), (mat2(exp(0.0), 0.0, 0.0, 1.0)) - mat2(0.0, 0.0, 0.0, 0.0))), (true ? mat4(_GLF_IDENTITY(mat2(exp(0.0), 0.0, 0.0, 1.0), (mat2(exp(0.0), 0.0, 0.0, 1.0)) - mat2(0.0, 0.0, 0.0, 0.0))) : _GLF_FUZZED(mat4(-9938.8427, 162.743, 3358.9076, 573.325, 62.20, 5.6, 4.0, 1746.2528, -612.813, -2.1, 6.2, 7653.8577, 0.1, -6860.8255, -741.781, 69.80))))))), exp(0.0), abs(determinant(mat2(0.0, 0.0, 1.0, 0.0))), 1.0), transpose(_GLF_IDENTITY(transpose(mat3x4(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, determinant(mat2(exp(0.0), 0.0, 0.0, 1.0)), exp(0.0), abs(determinant(mat2(0.0, 0.0, 1.0, 0.0))), 1.0)), transpose(transpose(transpose(mat3x4(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_IDENTITY(1.0, float(float(1.0))), 1.0, 1.0, 1.0, determinant(mat2(exp(0.0), 0.0, 0.0, 1.0)), exp(0.0), _GLF_IDENTITY(abs(determinant(mat2(0.0, 0.0, 1.0, 0.0))), mix(float(abs(determinant(mat2(0.0, 0.0, 1.0, 0.0)))), float(_GLF_FUZZED(-272.062)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0))))))))))))), transpose(transpose(mat4(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))))))), 1.0, 0.0, 1.0, cos(0.0), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), exp(0.0), _GLF_IDENTITY(round(_GLF_IDENTITY(length(normalize(1.0)), (false ? _GLF_FUZZED(-1580.6700) : length(normalize(1.0))))), max(round(_GLF_IDENTITY(length(normalize(1.0)), (false ? _GLF_FUZZED(-1580.6700) : length(normalize(1.0))))), _GLF_IDENTITY(round(_GLF_IDENTITY(length(normalize(1.0)), (false ? _GLF_FUZZED(-1580.6700) : length(normalize(1.0))))), 1.0 * (round(_GLF_IDENTITY(length(normalize(1.0)), (false ? _GLF_FUZZED(-1580.6700) : length(normalize(1.0))))))))), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)))))))) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0, 0.0, 0.0, 0.0, 0.0)))).x), _GLF_IDENTITY((injectionSwitch.x), ((injectionSwitch.x)) / 1.0), (injectionSwitch.x)), max(_GLF_IDENTITY(clamp((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4(injectionSwitch, 1.0, 0.0, 1.0, cos(0.0), 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) / 1.0)), float(_GLF_FUZZED((+ 781.796))), bool(false))))), 1.0, 1.0, exp(0.0), round(length(normalize(1.0))), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, 1.0 * (0.0))) + 0.0), 0.0)), dot(_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), min(vec3(1.0, 0.0, 0.0), _GLF_IDENTITY(vec3(1.0, 0.0, 0.0), mix(vec3(_GLF_FUZZED(-151.148), _GLF_FUZZED(6.5), _GLF_FUZZED(-9375.9275)), vec3((vec3(1.0, 0.0, 0.0))[0], (vec3(1.0, 0.0, 0.0))[1], _GLF_IDENTITY((vec3(1.0, 0.0, 0.0)), mat3(1.0) * ((vec3(1.0, 0.0, 0.0))))[2]), bvec3(true, true, true))))), vec3(1.0, 0.0, 0.0)))), (_GLF_IDENTITY(mat4(injectionSwitch, 1.0, 0.0, 1.0, cos(_GLF_IDENTITY(0.0, min(0.0, 0.0))), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, exp(0.0), round(length(normalize(1.0))), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(_GLF_IDENTITY(1.0, 1.0 * (1.0)), 0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, determinant(_GLF_IDENTITY(mat2(exp(0.0), 0.0, 0.0, 1.0), mat2(_GLF_IDENTITY(mat4(_GLF_IDENTITY(mat2(exp(0.0), 0.0, 0.0, 1.0), (mat2(exp(0.0), 0.0, 0.0, 1.0)) - mat2(0.0, 0.0, 0.0, 0.0))), (true ? mat4(_GLF_IDENTITY(mat2(exp(0.0), 0.0, 0.0, 1.0), (mat2(exp(0.0), 0.0, 0.0, 1.0)) - mat2(0.0, 0.0, 0.0, 0.0))) : _GLF_FUZZED(mat4(-9938.8427, 162.743, 3358.9076, 573.325, 62.20, 5.6, 4.0, 1746.2528, -612.813, -2.1, 6.2, 7653.8577, 0.1, -6860.8255, -741.781, 69.80))))))), exp(0.0), abs(determinant(mat2(0.0, 0.0, 1.0, 0.0))), 1.0), transpose(_GLF_IDENTITY(transpose(mat3x4(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, determinant(mat2(exp(0.0), 0.0, 0.0, 1.0)), exp(0.0), abs(determinant(mat2(0.0, 0.0, 1.0, 0.0))), 1.0)), transpose(transpose(transpose(mat3x4(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_IDENTITY(1.0, float(float(1.0))), 1.0, 1.0, 1.0, determinant(mat2(exp(0.0), 0.0, 0.0, 1.0)), exp(0.0), _GLF_IDENTITY(abs(determinant(mat2(0.0, 0.0, 1.0, 0.0))), mix(float(abs(determinant(mat2(0.0, 0.0, 1.0, 0.0)))), float(_GLF_FUZZED(-272.062)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0))))))))))))), transpose(transpose(mat4(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))))))), 1.0, 0.0, 1.0, cos(0.0), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), exp(0.0), _GLF_IDENTITY(round(_GLF_IDENTITY(length(normalize(1.0)), (false ? _GLF_FUZZED(-1580.6700) : length(normalize(1.0))))), max(round(_GLF_IDENTITY(length(normalize(1.0)), (false ? _GLF_FUZZED(-1580.6700) : length(normalize(1.0))))), _GLF_IDENTITY(round(_GLF_IDENTITY(length(normalize(1.0)), (false ? _GLF_FUZZED(-1580.6700) : length(normalize(1.0))))), 1.0 * (round(_GLF_IDENTITY(length(normalize(1.0)), (false ? _GLF_FUZZED(-1580.6700) : length(normalize(1.0))))))))), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)))))))) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0, 0.0, 0.0, 0.0, 0.0)))).x), _GLF_IDENTITY((injectionSwitch.x), ((injectionSwitch.x)) / 1.0), (injectionSwitch.x)), (false ? _GLF_FUZZED(1.4) : clamp((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4(injectionSwitch, 1.0, 0.0, 1.0, cos(0.0), 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) / 1.0)), float(_GLF_FUZZED((+ 781.796))), bool(false))))), 1.0, 1.0, exp(0.0), round(length(normalize(1.0))), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, 1.0 * (0.0))) + 0.0), 0.0)), dot(_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), min(vec3(1.0, 0.0, 0.0), _GLF_IDENTITY(vec3(1.0, 0.0, 0.0), mix(vec3(_GLF_FUZZED(-151.148), _GLF_FUZZED(6.5), _GLF_FUZZED(-9375.9275)), vec3((vec3(1.0, 0.0, 0.0))[0], (vec3(1.0, 0.0, 0.0))[1], _GLF_IDENTITY((vec3(1.0, 0.0, 0.0)), mat3(1.0) * ((vec3(1.0, 0.0, 0.0))))[2]), bvec3(true, true, true))))), vec3(1.0, 0.0, 0.0)))), (_GLF_IDENTITY(mat4(injectionSwitch, 1.0, 0.0, 1.0, cos(_GLF_IDENTITY(0.0, min(0.0, 0.0))), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, exp(0.0), round(length(normalize(1.0))), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(_GLF_IDENTITY(1.0, 1.0 * (1.0)), 0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, determinant(_GLF_IDENTITY(mat2(exp(0.0), 0.0, 0.0, 1.0), mat2(_GLF_IDENTITY(mat4(_GLF_IDENTITY(mat2(exp(0.0), 0.0, 0.0, 1.0), (mat2(exp(0.0), 0.0, 0.0, 1.0)) - mat2(0.0, 0.0, 0.0, 0.0))), (true ? mat4(_GLF_IDENTITY(mat2(exp(0.0), 0.0, 0.0, 1.0), (mat2(exp(0.0), 0.0, 0.0, 1.0)) - mat2(0.0, 0.0, 0.0, 0.0))) : _GLF_FUZZED(mat4(-9938.8427, 162.743, 3358.9076, 573.325, 62.20, 5.6, 4.0, 1746.2528, -612.813, -2.1, 6.2, 7653.8577, 0.1, -6860.8255, -741.781, 69.80))))))), exp(0.0), abs(determinant(mat2(0.0, 0.0, 1.0, 0.0))), 1.0), transpose(_GLF_IDENTITY(transpose(mat3x4(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, determinant(mat2(exp(0.0), 0.0, 0.0, 1.0)), exp(0.0), abs(determinant(mat2(0.0, 0.0, 1.0, 0.0))), 1.0)), transpose(transpose(transpose(mat3x4(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_IDENTITY(1.0, float(float(1.0))), 1.0, 1.0, 1.0, determinant(mat2(exp(0.0), 0.0, 0.0, 1.0)), exp(0.0), _GLF_IDENTITY(abs(determinant(mat2(0.0, 0.0, 1.0, 0.0))), mix(float(abs(determinant(mat2(0.0, 0.0, 1.0, 0.0)))), float(_GLF_FUZZED(-272.062)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0))))))))))))), transpose(transpose(mat4(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))))))), 1.0, 0.0, 1.0, cos(0.0), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), exp(0.0), _GLF_IDENTITY(round(_GLF_IDENTITY(length(normalize(1.0)), (false ? _GLF_FUZZED(-1580.6700) : length(normalize(1.0))))), max(round(_GLF_IDENTITY(length(normalize(1.0)), (false ? _GLF_FUZZED(-1580.6700) : length(normalize(1.0))))), _GLF_IDENTITY(round(_GLF_IDENTITY(length(normalize(1.0)), (false ? _GLF_FUZZED(-1580.6700) : length(normalize(1.0))))), 1.0 * (round(_GLF_IDENTITY(length(normalize(1.0)), (false ? _GLF_FUZZED(-1580.6700) : length(normalize(1.0))))))))), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)))))))) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0, 0.0, 0.0, 0.0, 0.0)))).x), _GLF_IDENTITY((injectionSwitch.x), ((injectionSwitch.x)) / 1.0), (injectionSwitch.x)))), clamp((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4(injectionSwitch, 1.0, 0.0, 1.0, cos(0.0), 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) / 1.0)), float(_GLF_FUZZED((+ 781.796))), bool(false))))), 1.0, 1.0, exp(0.0), round(length(normalize(1.0))), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, 1.0 * (0.0))) + 0.0), 0.0)), dot(_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), min(vec3(1.0, 0.0, 0.0), _GLF_IDENTITY(vec3(1.0, 0.0, 0.0), mix(vec3(_GLF_FUZZED(-151.148), _GLF_FUZZED(6.5), _GLF_FUZZED(-9375.9275)), vec3((vec3(1.0, 0.0, 0.0))[0], (vec3(1.0, 0.0, 0.0))[1], _GLF_IDENTITY((vec3(1.0, 0.0, 0.0)), mat3(1.0) * ((vec3(1.0, 0.0, 0.0))))[2]), bvec3(true, true, true))))), vec3(1.0, 0.0, 0.0)))), (_GLF_IDENTITY(mat4(injectionSwitch, 1.0, 0.0, 1.0, cos(_GLF_IDENTITY(0.0, min(0.0, 0.0))), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, exp(0.0), round(length(normalize(1.0))), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(_GLF_IDENTITY(1.0, 1.0 * (1.0)), 0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, determinant(_GLF_IDENTITY(mat2(exp(0.0), 0.0, 0.0, 1.0), mat2(_GLF_IDENTITY(mat4(_GLF_IDENTITY(mat2(exp(0.0), 0.0, 0.0, 1.0), (mat2(exp(0.0), 0.0, 0.0, 1.0)) - mat2(0.0, 0.0, 0.0, 0.0))), (true ? mat4(_GLF_IDENTITY(mat2(exp(0.0), 0.0, 0.0, 1.0), (mat2(exp(0.0), 0.0, 0.0, 1.0)) - mat2(0.0, 0.0, 0.0, 0.0))) : _GLF_FUZZED(mat4(-9938.8427, 162.743, 3358.9076, 573.325, 62.20, 5.6, 4.0, 1746.2528, -612.813, -2.1, 6.2, 7653.8577, 0.1, -6860.8255, -741.781, 69.80))))))), exp(0.0), abs(determinant(mat2(0.0, 0.0, 1.0, 0.0))), 1.0), transpose(_GLF_IDENTITY(transpose(mat3x4(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, determinant(mat2(exp(0.0), 0.0, 0.0, 1.0)), exp(0.0), abs(determinant(mat2(0.0, 0.0, 1.0, 0.0))), 1.0)), transpose(transpose(transpose(mat3x4(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_IDENTITY(1.0, float(float(1.0))), 1.0, 1.0, 1.0, determinant(mat2(exp(0.0), 0.0, 0.0, 1.0)), exp(0.0), _GLF_IDENTITY(abs(determinant(mat2(0.0, 0.0, 1.0, 0.0))), mix(float(abs(determinant(mat2(0.0, 0.0, 1.0, 0.0)))), float(_GLF_FUZZED(-272.062)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0))))))))))))), transpose(transpose(mat4(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))))))), 1.0, 0.0, 1.0, cos(0.0), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), exp(0.0), _GLF_IDENTITY(round(_GLF_IDENTITY(length(normalize(1.0)), (false ? _GLF_FUZZED(-1580.6700) : length(normalize(1.0))))), max(round(_GLF_IDENTITY(length(normalize(1.0)), (false ? _GLF_FUZZED(-1580.6700) : length(normalize(1.0))))), _GLF_IDENTITY(round(_GLF_IDENTITY(length(normalize(1.0)), (false ? _GLF_FUZZED(-1580.6700) : length(normalize(1.0))))), 1.0 * (round(_GLF_IDENTITY(length(normalize(1.0)), (false ? _GLF_FUZZED(-1580.6700) : length(normalize(1.0))))))))), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)))))))) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0, 0.0, 0.0, 0.0, 0.0)))).x), _GLF_IDENTITY((injectionSwitch.x), ((injectionSwitch.x)) / 1.0), (injectionSwitch.x)))) : _GLF_FUZZED(449.218))))), bool(true))) / 1.0) > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - tan(vec2(0.0, 0.0))).y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3x4(0.0, 0.0, 1.0, 1.0, 0.0, exp(0.0), 0.0, 1.0, 1.0, 1.0, abs(1.0), cos(0.0)), _GLF_IDENTITY(mat3x4(mat3x4(mat3x4(0.0, 0.0, 1.0, 1.0, 0.0, exp(0.0), 0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(0.1)), bool(false))), 1.0, 1.0, abs(1.0), cos(0.0)))), mat4(1.0) * (mat3x4(mat3x4(mat3x4(_GLF_IDENTITY(0.0, (0.0) + log(1.0)), 0.0, 1.0, 1.0, 0.0, exp(0.0), 0.0, 1.0, 1.0, 1.0, abs(1.0), cos(0.0))))))))) + (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y) - _GLF_IDENTITY(0.0, (0.0) - 0.0))))))))))
    {
    }
   else
    {
     do
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          {
           if(_GLF_DEAD(false))
            break;
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, true && (false)), false, true, _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), bool(bvec2(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), false)))))))))))
            return;
           return;
          }
        }
       else
        {
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
        continue;
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (! (! (false))) && true), (! (! (false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        {
         do
          {
           for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 & -99035)); _injected_loop_counter --)
            {
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                break;
               if(_GLF_DEAD(false))
                break;
               break;
              }
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                continue;
               return;
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
                {
                 if(_GLF_DEAD(false))
                  break;
                }
               else
                {
                 if(_GLF_DEAD(false))
                  break;
                 return;
                }
              }
             if(_GLF_DEAD(false))
              continue;
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
        }
       else
        {
         return;
         if(_GLF_DEAD(false))
          break;
        }
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(float(96372u)), _GLF_FUZZED(272.042)), bvec2(false, false))), injectionSwitch)), sqrt(vec2(0.0, 0.0)) + (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, (0) | (0))], (injectionSwitch)[1]), vec2(_GLF_FUZZED(float(96372u)), _GLF_FUZZED(272.042)), bvec2(false, false))), injectionSwitch)))).y, (false ? _GLF_FUZZED(-2234.8754) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(float(96372u)), _GLF_FUZZED(272.042)), bvec2(false, false))), injectionSwitch)), sqrt(vec2(0.0, 0.0)) + (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, (0) | (0))], (injectionSwitch)[1]), vec2(_GLF_FUZZED(float(96372u)), _GLF_FUZZED(272.042)), bvec2(false, false))), injectionSwitch)))).y))))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
           return;
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
      }
     if(_GLF_DEAD(false))
      break;
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false))))), ! (! (! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! _GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true)))))))), ! (! (_GLF_DEAD(false)))))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         for(int _injected_loop_counter = _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(35359))) ^ 0), (true ? (1 ^ 0) : _GLF_FUZZED(613))), min((1 ^ 0), _GLF_IDENTITY((1 ^ 0), clamp((1 ^ 0), (1 ^ 0), (_GLF_IDENTITY(1 ^ 0, (1 ^ 0) >> int(_GLF_ZERO(0.0, injectionSwitch.x)))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 & _GLF_IDENTITY(-72564, (_GLF_IDENTITY(-72564, 0 ^ (-72564))) >> int(_GLF_ZERO(0.0, injectionSwitch.x))))); _injected_loop_counter --)
          {
           if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
            {
             if(_GLF_DEAD(false))
              break;
             return;
            }
          }
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), ! (! (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))), (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false)))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, abs(0.0)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))) && true), (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])))).y)))), bool(_GLF_IDENTITY(bvec2(bool(bvec3(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(bvec2((false), false))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, abs(0.0)))), (false ? _GLF_FUZZED(7650.7327) : injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(((injectionSwitch)) * mat2(1.0), mix(vec2(_GLF_FUZZED(-907.141), _GLF_FUZZED(-2.6)), vec2((((injectionSwitch)) * mat2(1.0))[0], (((injectionSwitch)) * mat2(1.0))[1]), bvec2(true, true)))) * mat2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(refract(7364.7005, -169.532, -1.4)) : 1.0))), ((injectionSwitch) * mat2(1.0)) + vec2(0.0, 0.0))), injectionSwitch)).x)) > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec4(-62.63, -8.1, -77.64, -9.5)[1]) : 0.0)), 0.0))) + (injectionSwitch))) / vec2(1.0, 1.0)).y)))), false), bvec2(bvec3(bvec2(bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(bvec2(! (! (false)), false)), bool(bvec4(bool(bvec2(! (! (false)), false)), true, true, true))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(7650.7327) : injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) + vec2(0.0, 0.0))), injectionSwitch)).x)) > injectionSwitch.y)), _GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch))) / vec2(1.0, 1.0)).y)))), false), false)))))) || _GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ! (! (_GLF_IDENTITY((false) && true, false || ((false) && true))))))))))
            {
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), (_GLF_IDENTITY(false || (false), (false || (false)) || false)) && true))))
              break;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              break;
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
              {
               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
                  break;
                 return;
                 if(_GLF_DEAD(false))
                  return;
                }
               else
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  continue;
                }
              }
            }
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 | (0 << _GLF_IDENTITY(int(2), int(2))))); _injected_loop_counter --)
            {
             if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)))))
              {
               do
                {
                 do
                  {
                   return;
                  }
                 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))));
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
             else
              {
              }
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
          }
         do
          {
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), ~ (~ (int(2)))))), min(((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), ~ (~ (int(2)))))), ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), ~ (~ (int(2))))))))); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(false))
              break;
             if(_GLF_DEAD(false))
              return;
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                {
                 do
                  {
                   return;
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
              }
             else
              {
              }
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
          continue;
        }
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), false, true))), false))); _injected_loop_counter ++)
          {
           return;
          }
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y))))
          break;
        }
       else
        {
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
       do
        {
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(false))
          continue;
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     buf[virtual_gid] = 1;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
        continue;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
       return;
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           do
            {
             return;
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1]))), vec2(_GLF_FUZZED(-7.2), _GLF_FUZZED(2.2)), _GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec2(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))).x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))), true && (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, _GLF_IDENTITY(true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))), (! (true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).x > injectionSwitch.y))))) || false))))))) || _GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(vec3(-0.0, 7707.5999, _GLF_IDENTITY(1.1, (1.1) + tan(0.0))).x), _GLF_FUZZED(-19.14)), _GLF_IDENTITY(vec2((injectionSwitch)[0], (_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(1291.7431, -108.780)) : _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / vec2(1.0, 1.0))))))[1]), max(vec2((injectionSwitch)[0], (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(float((64204u - 94510u))), _GLF_FUZZED(vec4(-0.5, -758.976, -2105.5758, -61.09).s)), bvec2(false, false))))[1]), _GLF_IDENTITY(vec2((injectionSwitch)[0], (injectionSwitch)[1]), clamp(_GLF_IDENTITY(vec2((injectionSwitch)[0], (injectionSwitch)[1]), (vec2((injectionSwitch)[0], (injectionSwitch)[1])) - vec2(0.0, 0.0)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), _GLF_IDENTITY(vec2((injectionSwitch)[0], (injectionSwitch)[1]), clamp(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2((injectionSwitch)[0], (injectionSwitch)[1]))))))), bvec2(true, true))))).x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y))))), (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], max(_GLF_IDENTITY((injectionSwitch), mat2(1.0) * ((injectionSwitch)))[1], (injectionSwitch)[1]))), vec2(_GLF_FUZZED(-7.2), _GLF_FUZZED(2.2)), _GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((vec2(-2.9, 988.104) * -6956.2784)) : injectionSwitch)) : _GLF_FUZZED(injectionSwitch))).y)), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY((vec2(-2.9, 988.104) * -6956.2784), clamp((vec2(-2.9, 988.104) * -6956.2784), (vec2(-2.9, 988.104) * -6956.2784), (vec2(-2.9, 988.104) * -6956.2784)))) : injectionSwitch)) : _GLF_FUZZED(injectionSwitch))).y))))), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((vec2(-2.9, 988.104) * -6956.2784)) : injectionSwitch)) : _GLF_FUZZED(injectionSwitch))).y)), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY((vec2(-2.9, 988.104) * -6956.2784), clamp((vec2(-2.9, 988.104) * -6956.2784), (vec2(-2.9, 988.104) * -6956.2784), (vec2(-2.9, 988.104) * -6956.2784)))) : injectionSwitch)) : _GLF_FUZZED(injectionSwitch))).y))))), true)), bvec2(bvec2(bvec2(bvec3(bvec2(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((vec2(-2.9, 988.104) * -6956.2784)) : injectionSwitch)) : _GLF_FUZZED(injectionSwitch))).y)), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY((vec2(-2.9, 988.104) * -6956.2784), clamp((vec2(-2.9, 988.104) * -6956.2784), (vec2(-2.9, 988.104) * -6956.2784), (vec2(-2.9, 988.104) * -6956.2784)))) : injectionSwitch)) : _GLF_FUZZED(injectionSwitch))).y))))), true)))))))).x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(2061.1069), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((-2.4 + 121.694))), bvec2(true, false))), max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))) || _GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), true && (_GLF_IDENTITY(false, true && (false)))), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(vec3(-0.0, 7707.5999, 1.1).x), float(mat3x2(_GLF_FUZZED(vec3(-0.0, 7707.5999, 1.1).x), 1.0, log(sqrt(1.0)), 1.0, 1.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-19.14), float(mat4x3(_GLF_FUZZED(-19.14), abs(1.0), log(1.0), 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0))), clamp(_GLF_IDENTITY(_GLF_FUZZED(-19.14), float(mat4x3(_GLF_FUZZED(-19.14), abs(1.0), log(1.0), 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0))), _GLF_IDENTITY(_GLF_FUZZED(-19.14), float(mat4x3(_GLF_FUZZED(-19.14), abs(1.0), log(1.0), 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0))), _GLF_IDENTITY(_GLF_FUZZED(-19.14), float(mat4x3(_GLF_FUZZED(-19.14), abs(1.0), log(1.0), 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0)))))), _GLF_IDENTITY(vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, (1) << 0)]), max(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(4.4), ((injectionSwitch))[1]), vec2(((injectionSwitch))[0], _GLF_FUZZED(248.029)), bvec2(true, false)))[0], 1.0 * (_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(4.4), ((injectionSwitch))[1]), vec2(((injectionSwitch))[0], _GLF_FUZZED(248.029)), bvec2(true, false)))[0])), (injectionSwitch)[1]))), bvec2(true, true))))).x > injectionSwitch.y)))))) && true)))
        {
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), (true ? min(injectionSwitch, injectionSwitch) : _GLF_FUZZED(injectionSwitch))))) - _GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) * mat2(1.0))).x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y))))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
                break;
              }
             else
              {
               return;
              }
            }
          }
         if(_GLF_DEAD(false))
          break;
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, 0 + (0)), _GLF_IDENTITY(0, int(int(0)))))); _injected_loop_counter --)
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               return;
              }
             else
              {
              }
            }
          }
         if(_GLF_DEAD(false))
          break;
        }
       else
        {
         return;
        }
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _GLF_IDENTITY(_injected_loop_counter ++, (false ? _GLF_FUZZED(83460) : _injected_loop_counter ++)))
        {
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
            }
           else
            {
            }
           return;
           if(_GLF_DEAD(false))
            break;
          }
        }
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 do
  {
   do
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), true && (_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true))))))))
      continue;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), (max(injectionSwitch, injectionSwitch)) / vec2(1.0, 1.0))).x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), (max(injectionSwitch, injectionSwitch)) / vec2(1.0, 1.0))), vec2(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), (max(injectionSwitch, injectionSwitch)) / vec2(1.0, 1.0))), 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, tan(0.0), cos(0.0)), mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), (max(injectionSwitch, injectionSwitch)) / vec2(1.0, 1.0))), 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, tan(0.0), cos(0.0)))))).x) / _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), _GLF_IDENTITY(vec2(1.0, 0.0), (vec2(1.0, 0.0)) * vec2(1.0, 1.0))))) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-16.63)), float(injectionSwitch.y), bool(true)), mix(float(_GLF_FUZZED(-9.0)), float(_GLF_IDENTITY(_GLF_IDENTITY(mix(float(_GLF_FUZZED(-16.63)), float(injectionSwitch.y), bool(true)), min(mix(float(_GLF_FUZZED(-16.63)), float(injectionSwitch.y), bool(true)), mix(float(_GLF_FUZZED(-16.63)), float(injectionSwitch.y), bool(true)))), clamp(mix(float(_GLF_FUZZED(-16.63)), float(injectionSwitch.y), bool(_GLF_IDENTITY(true, true && (true)))), mix(float(_GLF_FUZZED(-16.63)), float(injectionSwitch.y), bool(true)), _GLF_IDENTITY(mix(float(_GLF_FUZZED(-16.63)), float(injectionSwitch.y), bool(true)), mix(float(mix(float(_GLF_FUZZED(-16.63)), float(injectionSwitch.y), bool(true))), float(_GLF_FUZZED(21.98)), bool(false)))))), bool(true))))), float(_GLF_FUZZED((669.520 - 7.2))), bool(false)), max(mix(float(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-16.63)), float(injectionSwitch.y), bool(true)), mix(float(_GLF_FUZZED(-9.0)), float(_GLF_IDENTITY(_GLF_IDENTITY(mix(float(_GLF_FUZZED(-16.63)), float(injectionSwitch.y), bool(true)), min(mix(float(_GLF_FUZZED(-16.63)), float(injectionSwitch.y), bool(true)), mix(float(_GLF_FUZZED(-16.63)), float(injectionSwitch.y), bool(true)))), clamp(mix(float(_GLF_FUZZED(-16.63)), float(injectionSwitch.y), bool(_GLF_IDENTITY(true, true && (true)))), mix(float(_GLF_FUZZED(-16.63)), float(injectionSwitch.y), bool(true)), _GLF_IDENTITY(mix(float(_GLF_FUZZED(-16.63)), float(injectionSwitch.y), bool(true)), mix(float(mix(float(_GLF_FUZZED(-16.63)), float(injectionSwitch.y), bool(true))), float(_GLF_FUZZED(21.98)), bool(false)))))), bool(true))))), float(_GLF_FUZZED((669.520 - 7.2))), bool(false)), mix(float(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-16.63)), float(injectionSwitch.y), bool(true)), mix(float(_GLF_FUZZED(-9.0)), float(_GLF_IDENTITY(_GLF_IDENTITY(mix(float(_GLF_FUZZED(-16.63)), float(injectionSwitch.y), bool(true)), min(mix(float(_GLF_FUZZED(-16.63)), float(injectionSwitch.y), bool(true)), mix(float(_GLF_FUZZED(-16.63)), float(injectionSwitch.y), bool(true)))), clamp(mix(float(_GLF_FUZZED(-16.63)), float(injectionSwitch.y), bool(_GLF_IDENTITY(true, true && (true)))), mix(float(_GLF_FUZZED(-16.63)), float(injectionSwitch.y), bool(true)), _GLF_IDENTITY(mix(float(_GLF_FUZZED(-16.63)), float(injectionSwitch.y), bool(true)), mix(float(mix(float(_GLF_FUZZED(-16.63)), float(injectionSwitch.y), bool(true))), float(_GLF_FUZZED(21.98)), bool(false)))))), bool(true))))), float(_GLF_FUZZED((669.520 - 7.2))), bool(false))))))), true && (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), (max(injectionSwitch, injectionSwitch)) / vec2(1.0, 1.0))).x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), (max(injectionSwitch, injectionSwitch)) / vec2(1.0, 1.0))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), (max(injectionSwitch, injectionSwitch)) / vec2(1.0, 1.0))), 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, tan(0.0), cos(0.0)), mat3(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), exp(0.0), 0.0, 1.0), min(vec4(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), exp(0.0), 0.0, 1.0), _GLF_IDENTITY(vec4(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), exp(0.0), 0.0, 1.0), max(vec4(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), exp(0.0), 0.0, 1.0), vec4(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), exp(0.0), 0.0, 1.0))))))), 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), (max(injectionSwitch, injectionSwitch)) / vec2(1.0, 1.0))), 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, tan(0.0), cos(0.0))))), (vec2(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), (max(injectionSwitch, injectionSwitch)) / vec2(1.0, 1.0))), 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, tan(0.0), cos(0.0)), mat3(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), exp(0.0), 0.0, 1.0), min(vec4(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), exp(0.0), 0.0, 1.0), _GLF_IDENTITY(vec4(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), exp(0.0), 0.0, 1.0), max(vec4(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), exp(0.0), 0.0, 1.0), vec4(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), exp(0.0), 0.0, 1.0))))))), 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), (max(injectionSwitch, injectionSwitch)) / vec2(1.0, 1.0))), 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, tan(0.0), cos(0.0)))))) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))).x) / _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), _GLF_IDENTITY(vec2(1.0, 0.0), (vec2(1.0, 0.0)) * vec2(1.0, 1.0))))) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-16.63)), float(injectionSwitch.y), bool(true)), mix(float(_GLF_FUZZED(-9.0)), float(_GLF_IDENTITY(_GLF_IDENTITY(mix(float(_GLF_FUZZED(-16.63)), float(injectionSwitch.y), bool(true)), min(mix(float(_GLF_FUZZED(-16.63)), float(injectionSwitch.y), bool(true)), mix(float(_GLF_FUZZED(-16.63)), float(injectionSwitch.y), bool(true)))), clamp(mix(float(_GLF_FUZZED(-16.63)), float(injectionSwitch.y), bool(_GLF_IDENTITY(true, true && (true)))), mix(float(_GLF_FUZZED(-16.63)), float(injectionSwitch.y), bool(true)), _GLF_IDENTITY(_GLF_IDENTITY(mix(float(_GLF_FUZZED(-16.63)), float(injectionSwitch.y), bool(true)), mix(float(_GLF_FUZZED(-20.86)), float(mix(float(_GLF_FUZZED(-16.63)), float(injectionSwitch.y), bool(true))), bool(true))), mix(float(mix(float(_GLF_FUZZED(-16.63)), float(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(5.7, -4.7)) : injectionSwitch)).y), bool(true))), float(_GLF_FUZZED(21.98)), bool(false)))))), bool(true))))), float(_GLF_FUZZED((669.520 - 7.2))), bool(false)), max(mix(float(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-16.63)), float(injectionSwitch.y), bool(true)), mix(float(_GLF_FUZZED(-9.0)), float(_GLF_IDENTITY(_GLF_IDENTITY(mix(_GLF_IDENTITY(float(_GLF_FUZZED(-16.63)), (_GLF_IDENTITY(float(_GLF_FUZZED(-16.63)), clamp(float(_GLF_FUZZED(-16.63)), float(_GLF_FUZZED(-16.63)), float(_GLF_FUZZED(-16.63))))) + 0.0), float(injectionSwitch.y), bool(true)), min(mix(float(_GLF_FUZZED(-16.63)), float(injectionSwitch.y), bool(true)), mix(float(_GLF_FUZZED(-16.63)), float(injectionSwitch.y), bool(true)))), clamp(mix(float(_GLF_FUZZED(-16.63)), float(injectionSwitch.y), bool(_GLF_IDENTITY(true, true && (true)))), mix(float(_GLF_FUZZED(-16.63)), float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), bool(true)), _GLF_IDENTITY(mix(float(_GLF_FUZZED(-16.63)), float(injectionSwitch.y), bool(true)), mix(float(mix(float(_GLF_FUZZED(-16.63)), float(injectionSwitch.y), bool(true))), float(_GLF_FUZZED(21.98)), bool(false)))))), bool(true))))), float(_GLF_FUZZED((669.520 - 7.2))), bool(false)), mix(float(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-16.63)), float(injectionSwitch.y), bool(true)), mix(float(_GLF_FUZZED(-9.0)), float(_GLF_IDENTITY(_GLF_IDENTITY(mix(float(_GLF_FUZZED(-16.63)), float(injectionSwitch.y), _GLF_IDENTITY(bool(true), ! (_GLF_IDENTITY(! (bool(true)), _GLF_IDENTITY(bool(bvec4(! (bool(true)), true, false, false)), bool(bool(bool(bvec4(! (bool(true)), true, false, false))))))))), min(mix(float(_GLF_FUZZED(-16.63)), float(injectionSwitch.y), bool(true)), mix(float(_GLF_FUZZED(-16.63)), float(injectionSwitch.y), bool(true)))), clamp(mix(float(_GLF_FUZZED(-16.63)), float(injectionSwitch.y), bool(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, true))), true && (true)))), mix(float(_GLF_FUZZED(-16.63)), float(injectionSwitch.y), bool(true)), _GLF_IDENTITY(mix(float(_GLF_FUZZED(-16.63)), float(injectionSwitch.y), bool(true)), mix(_GLF_IDENTITY(float(mix(float(_GLF_FUZZED(-16.63)), float(injectionSwitch.y), bool(true))), float(mat4x2(float(mix(float(_GLF_FUZZED(-16.63)), float(injectionSwitch.y), bool(true))), sqrt(0.0), 1.0, 1.0, 1.0, cos(sqrt(0.0)), 1.0, 1.0))), float(_GLF_FUZZED(21.98)), bool(false)))))), bool(true))))), float(_GLF_FUZZED((669.520 - 7.2))), bool(false)))))))))))
      {
       do
        {
         if(_GLF_DEAD(false))
          return;
        }
       while(_GLF_WRAPPED_LOOP(false));
       return;
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 while(_GLF_WRAPPED_LOOP(false));
 do
  {
   do
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (1 ^ 1)); _GLF_IDENTITY(_injected_loop_counter --, (_GLF_IDENTITY(_injected_loop_counter --, _GLF_IDENTITY((true ? _GLF_IDENTITY(_injected_loop_counter --, 0 + (_injected_loop_counter --)) : _GLF_FUZZED(_injected_loop_counter)), (_GLF_IDENTITY((true ? _GLF_IDENTITY(_injected_loop_counter --, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-25169) : 0)) + (_injected_loop_counter --)) : _GLF_FUZZED(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_injected_loop_counter)))), _GLF_IDENTITY(((true ? _GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) / _GLF_IDENTITY(1, clamp(1, 1, 1))), _GLF_IDENTITY(0, (_GLF_IDENTITY(0, ~ (~ (0)))) - 0) + (_injected_loop_counter --)) : _GLF_FUZZED(_injected_loop_counter))), 0 | ((_GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) / _GLF_IDENTITY(1, clamp(1, 1, 1))), 0 + (_injected_loop_counter --)) : _GLF_FUZZED(_injected_loop_counter)), ~ (~ (_GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) / _GLF_IDENTITY(1, clamp(1, 1, 1))), 0 + (_injected_loop_counter --)) : _GLF_FUZZED(_injected_loop_counter)), ((true ? _GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) / _GLF_IDENTITY(1, clamp(1, 1, 1))), 0 + (_injected_loop_counter --)) : _GLF_FUZZED(_injected_loop_counter))) - 0))))))) / 1)) + 0))) ^ 0))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_ZERO(0.0, injectionSwitch.x)), float(_GLF_FUZZED(float(false))), bool(false))), 1.0, 0.0)))))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x)) > injectionSwitch.y))))) || false))))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), _GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch))))), (injectionSwitch))) + vec2(0.0, 0.0)).y))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_DEAD(false))), false || ((! (_GLF_DEAD(false)))))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))
        return;
       return;
      }
     return;
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
    }
  }
 if(subgroup_local_id + 1 < subgroup_size)
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter ++, (true ? _injected_loop_counter ++ : _GLF_FUZZED(findLSB(_injected_loop_counter)))), 1 * (_GLF_IDENTITY(_injected_loop_counter ++, (true ? _injected_loop_counter ++ : _GLF_FUZZED(findLSB(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(0 | 0, (0 | 0) ^ 0)) ^ (_GLF_IDENTITY(_injected_loop_counter, max(_injected_loop_counter, _injected_loop_counter)))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        break;
       continue;
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))) && true), (injectionSwitch.x > injectionSwitch.y))))
        break;
      }
     do
      {
       _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(buf[next_virtual_gid] = _GLF_IDENTITY(2, (2) << _GLF_IDENTITY(0, (0) / 1)), (_GLF_IDENTITY(_GLF_IDENTITY(buf[next_virtual_gid] = _GLF_IDENTITY(2, (2) << _GLF_IDENTITY(0, (0) / 1)), (buf[next_virtual_gid] = _GLF_IDENTITY(2, (2) << _GLF_IDENTITY(0, (0) / 1))) * 1u), (_GLF_IDENTITY(buf[next_virtual_gid] = _GLF_IDENTITY(2, (2) << _GLF_IDENTITY(0, (0) / 1)), 1u * (buf[next_virtual_gid] = _GLF_IDENTITY(2, (2) << _GLF_IDENTITY(0, (0) / 1))))) >> 0u)) / 1u), ~ (~ (_GLF_IDENTITY(buf[next_virtual_gid] = _GLF_IDENTITY(2, int(ivec3(2, 0, 0))), (_GLF_IDENTITY(_GLF_IDENTITY(buf[next_virtual_gid] = _GLF_IDENTITY(2, (2) | (2)), (false ? _GLF_FUZZED(74796u) : buf[next_virtual_gid] = 2)), _GLF_IDENTITY(_GLF_IDENTITY((buf[next_virtual_gid] = 2), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((buf[next_virtual_gid] = 2), ((buf[next_virtual_gid] = 2)) * (1u & 1u))), 0u | (~ (_GLF_IDENTITY(_GLF_IDENTITY((buf[next_virtual_gid] = 2), 0u | (_GLF_IDENTITY((buf[next_virtual_gid] = 2), 0u ^ ((buf[next_virtual_gid] = 2))))), ((_GLF_IDENTITY(buf[next_virtual_gid] = 2, (buf[next_virtual_gid] = 2) << uint(_GLF_ZERO(0.0, injectionSwitch.x))))) * _GLF_IDENTITY((1u & 1u), min((1u & 1u), _GLF_IDENTITY((_GLF_IDENTITY(1u & 1u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1u & 1u : _GLF_FUZZED(next_virtual_gid)))), ((1u & 1u)) / uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(402.102)), float(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0), mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0)))))), bool(true)))))))))))))), 0u ^ (_GLF_IDENTITY((buf[next_virtual_gid] = 2), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((buf[next_virtual_gid] = 2), ((buf[next_virtual_gid] = 2)) * (1u & 1u))), 0u | (~ (_GLF_IDENTITY(_GLF_IDENTITY((buf[next_virtual_gid] = 2), 0u | (_GLF_IDENTITY((buf[next_virtual_gid] = 2), 0u ^ ((buf[next_virtual_gid] = 2))))), ((_GLF_IDENTITY(buf[next_virtual_gid] = 2, (buf[next_virtual_gid] = 2) << uint(_GLF_ZERO(0.0, injectionSwitch.x))))) * _GLF_IDENTITY((1u & 1u), min((1u & 1u), _GLF_IDENTITY((_GLF_IDENTITY(1u & 1u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1u & 1u : _GLF_FUZZED(next_virtual_gid)))), ((1u & 1u)) / uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(402.102)), float(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0), mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0)))))), bool(true)))))))))))))))) << 0u)) >> 0u)))), (buf[next_virtual_gid] = 2) << (_GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uvec3(_GLF_IDENTITY(0u, uint(uvec4(0u, 1u, 1u, 0u))), 0u, 1u))) | 0u, (_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(0u, uint(uvec4(0u, 1u, 1u, _GLF_IDENTITY(0u, min(0u, 0u))))), 0u, 1u)), (uint(uvec3(_GLF_IDENTITY(0u, uint(uvec4(0u, 1u, 1u, _GLF_IDENTITY(0u, min(0u, 0u))))), 0u, 1u))) >> 0u)) | 0u) >> 0u)));
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(false))
      break;
    }
   subgroupAll(false);
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, (false) && true)) || false), true, true, false)))))
    return;
   for(int _injected_loop_counter = _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)) / abs(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)))))), clamp(int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY((_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-9.8, -83.71)))).y)), _GLF_ONE(1.0, injectionSwitch.y) * ((_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-9.8, -83.71)))).y)))) / abs(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-844.579) : 1.0)), 0.0), _GLF_IDENTITY(vec4(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), 0.0, 1.0, 0.0), (_GLF_IDENTITY(vec4(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), 0.0, 1.0, 0.0), (vec4(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), 0.0, 1.0, 0.0)) - vec4(0.0, 0.0, 0.0, 0.0))) + vec4(0.0, 0.0, 0.0, 0.0))))))), _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) / abs(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-6628.9858))), 0.0)), 1.0, 0.0), vec4(0.0, 0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(7877.3527) : 1.0)), 0.0)))))), min(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) / _GLF_IDENTITY(abs(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)))), mix(float(abs(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0)), 1.0, 0.0))))), float(_GLF_FUZZED(0.4)), bool(false))))), _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(-50966) : int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) / abs(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec2(0.0, 0.0), mix(vec2((vec2(0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(float(0.0), (float(0.0)) * 1.0)))))[0], (vec2(0.0, 0.0))[1]), vec2(_GLF_IDENTITY(_GLF_FUZZED(-45.01), max(_GLF_FUZZED(-45.01), _GLF_IDENTITY(_GLF_FUZZED(-45.01), (_GLF_FUZZED(-45.01)) - 0.0))), _GLF_FUZZED(-481.753)), bvec2(false, false))))), 0.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0))) / 1.0), 1.0, 1.0)) : _GLF_FUZZED(-0.2))), 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0)))))))), (_GLF_IDENTITY((false ? _GLF_FUZZED(-50966) : int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) / abs(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec2(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-487.028)), bool(false)))), mix(vec2((vec2(0.0, 0.0))[0], (vec2(0.0, 0.0))[1]), vec2(_GLF_IDENTITY(_GLF_FUZZED(-45.01), float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(_GLF_FUZZED(-45.01), max(_GLF_FUZZED(-45.01), _GLF_FUZZED(-45.01))), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0), mat4x2(mat4x3(mat4x2(_GLF_IDENTITY(_GLF_FUZZED(-45.01), max(_GLF_FUZZED(-45.01), _GLF_FUZZED(-45.01))), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0)))))), _GLF_FUZZED(-481.753)), _GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))))), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))))))), bvec2(bvec4(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))))))), false, false))))))))), 0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0))) / 1.0), 1.0, 1.0)) : _GLF_FUZZED(-0.2))), (_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0))) / 1.0), 1.0, 1.0)) : _GLF_FUZZED(-0.2)))) / 1.0), 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))))))), ((false ? _GLF_FUZZED(-50966) : int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(5.3)), vec2(_GLF_FUZZED(34.61), (injectionSwitch)[1]), bvec2(false, true))).y)) / abs(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(_GLF_IDENTITY(vec2(0.0, 0.0), _GLF_IDENTITY(vec2(mat4x2(vec2(0.0, 0.0), 0.0, 0.0, 1.0, 0.0, abs(1.0), 0.0)), min(vec2(mat4x2(vec2(0.0, 0.0), 0.0, 0.0, 1.0, 0.0, abs(1.0), 0.0)), _GLF_IDENTITY(vec2(mat4x2(vec2(0.0, 0.0), 0.0, 0.0, 1.0, 0.0, abs(1.0), 0.0)), max(vec2(mat4x2(vec2(0.0, 0.0), 0.0, 0.0, 1.0, 0.0, abs(1.0), 0.0)), vec2(mat4x2(vec2(0.0, 0.0), 0.0, 0.0, 1.0, 0.0, abs(1.0), 0.0))))))), mix(vec2((vec2(0.0, 0.0))[0], _GLF_IDENTITY((vec2(0.0, 0.0))[1], ((vec2(0.0, 0.0))[1]) - 0.0)), vec2(_GLF_FUZZED(-45.01), _GLF_FUZZED(-481.753)), bvec2(false, false))))), 0.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0))) / 1.0), 1.0, 1.0)) : _GLF_FUZZED(-0.2))), 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)))))))) | 0)) ^ 0)), int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) / abs(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))))), (_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) / abs(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)))))) / exp(0.0))))), int(_GLF_IDENTITY(_GLF_ONE(_GLF_IDENTITY(1.0, float(mat3x4(1.0, 1.0, abs(_GLF_IDENTITY(determinant(mat4(0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) / 1.0)) / 1.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), max(determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0))))), 0.0, 0.0, sin(0.0), 0.0, 1.0, 1.0, 1.0, 1.0, 0.0))), injectionSwitch.y), (_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(vec3(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(1.0, 1.0) * (mat2(1.0) * (injectionSwitch))), 1.0)))).y)) / abs(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), _GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 0.0), (vec4(0.0, 0.0, 1.0, 0.0)) - vec4(0.0, 0.0, 0.0, 0.0))), mix(float(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), float(_GLF_FUZZED(_GLF_IDENTITY((vec3(-7.2, -7.0, 777.937) - vec3(6.1, 1115.7149, -615.646)), (_GLF_IDENTITY((vec3(-7.2, -7.0, 777.937) - vec3(6.1, 1115.7149, -615.646)), _GLF_IDENTITY(mat3(1.0) * ((vec3(-7.2, -7.0, 777.937) - vec3(6.1, 1115.7149, -615.646))), (mat3(1.0) * ((vec3(-7.2, -7.0, 777.937) - vec3(6.1, 1115.7149, -615.646)))) + vec3(0.0, 0.0, 0.0)))) - abs(vec3(0.0, 0.0, 0.0))).z)), bool(false))), dot(_GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 0.0), _GLF_IDENTITY(vec4(_GLF_IDENTITY(mat2(_GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 0.0), max(_GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 0.0), min(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), vec4(0.0, 0.0, 1.0, 0.0)))), transpose(transpose(mat2(vec4(0.0, 0.0, 1.0, 0.0)))))), (vec4(_GLF_IDENTITY(mat2(vec4(0.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0)), _GLF_IDENTITY(transpose(transpose(_GLF_IDENTITY(mat2(vec4(0.0, 0.0, 1.0, 0.0)), mat2(mat2x3(mat2(vec4(0.0, 0.0, 1.0, 0.0))))))), (transpose(transpose(mat2(vec4(0.0, 0.0, 1.0, 0.0))))) - mat2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))) - vec4(0.0, 0.0, 0.0, 0.0))), vec4(0.0, 0.0, 1.0, 0.0)))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        continue;
       break;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))))))
          return;
         return;
        }
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_DEAD(false))
          continue;
        }
       else
        {
         return;
        }
       if(_GLF_DEAD(false))
        continue;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-2783.4040)), float(injectionSwitch.y), bool(true)))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true, false))))))
      break;
    }
   do
    {
     if(_GLF_DEAD(false))
      return;
    }
   while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec4((false), true, true, true)), (bool(bvec4((false), true, true, true))) || false)), false || (! (false)))))), false || (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4((false), true, true, true)), (bool(bvec4((false), true, true, true))) || false), bool(bool(_GLF_IDENTITY(bool(bvec4((false), true, true, true)), (bool(bvec4((false), true, true, true))) || false))))), false || (_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, false, false)))))))))))));
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)))).x > injectionSwitch.y))))
    return;
  }
 else
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          return;
         return;
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 << _GLF_IDENTITY(int(1), int(1)))); _injected_loop_counter --)
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)) && true)))
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
              }
             else
              {
               return;
              }
            }
          }
        }
      }
    }
   _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(buf[next_virtual_gid] = 2, (buf[next_virtual_gid] = _GLF_IDENTITY(2, 0 ^ (2))) << 0u), (_GLF_IDENTITY(buf[next_virtual_gid] = 2, (buf[next_virtual_gid] = _GLF_IDENTITY(2, 0 ^ (2))) << 0u)) * (0u ^ 1u)), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(buf[next_virtual_gid] = 2, (buf[next_virtual_gid] = 2) >> 0u)), (true ? (_GLF_IDENTITY(buf[next_virtual_gid] = 2, (buf[next_virtual_gid] = _GLF_IDENTITY(2, (2) / 1)) >> 0u)) : _GLF_FUZZED(198278u)))));
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) && true))))))
      return;
     do
      {
       do
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, int(ivec4(0, 0, int(_GLF_ONE(1.0, injectionSwitch.y)), 1)))); _injected_loop_counter --)
          {
           subgroupAll(true);
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(false))
      {
       do
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            break;
           continue;
          }
         return;
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
   else
    {
    }
  }
 if(_GLF_DEAD(false))
  return;
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
