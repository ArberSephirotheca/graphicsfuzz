#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 430

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_2 {
 mat2x3 _GLF_SWITCH_0_7v;
 mat2x3 _f0;
} ;

struct _GLF_struct_0 {
 vec4 _f0;
 mat4x2 _f1;
 mat3x4 _f2;
 uint virtual_gid;
} ;

struct _GLF_struct_1 {
 uvec4 _f0;
 _GLF_struct_0 _f1;
 float _f2;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   switch(_GLF_SWITCH(0))
    {
     case 1:
     (false ? bvec2(bvec4(true, true, true, false)) : bvec2(true, false));
     case 0:
     case 39:
     case 85:
     case 73:
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     case 84:
     case 80:
     case 95:
     barrier();
     break;
     case 4:
     {
      for(vec4 _GLF_SWITCH_5_0v[63], _GLF_SWITCH_5_1v[40], _GLF_SWITCH_5_2v; false; mat3x4((7.5 - mat2x4(-5939.7651, -37.54, 1506.6800, -669.037, 660.195, -196.778, -369.859, -693.832))))
       {
        bvec2 _GLF_SWITCH_5_3v[28], _GLF_SWITCH_5_4v[18];
        mat3x2(mat2(771.578, 7.8, 2.7, 1.2));
        {
         uvec2 _GLF_SWITCH_5_5v[95], _GLF_SWITCH_5_6v[10];
         bvec2(true, false);
         uvec3(196676u, 15765u, 59678u);
         ivec4 _GLF_SWITCH_5_7v, _GLF_SWITCH_5_8v;
         ((-74934 , 173702u) * uvec3(23608u, 190033u, 189348u));
         mat4(mat2x4(-2.5, 9.8, -10.52, -0.7, -9786.7630, -8.0, -970.901, 803.712));
         -0.7;
         sin(vec3(0.5, 74.86, -748.708));
         vec3 _GLF_SWITCH_5_9v[20];
        }
        {
         (vec4(-1.3, -1.8, -9.0, 27.01) , mat4x2(-2.7, 4.5, -7837.7213, -35.79, -5.3, -2400.2849, 624.992, -0.3));
         ivec3(57, -94017, -10647);
         uvec3(3510u, 137367u, 129233u);
         ivec4(-80444, -3642, -48388, -71953);
        }
       }
      bvec3(false, true, true);
      equal(uvec3(133664u, 137849u, 61294u), uvec3(40460u, 75554u, 175082u));
      bvec3(false, false, true);
      for(uvec2 _GLF_SWITCH_5_10v; (uvec3(177281u, 175890u, 144841u) == uvec3(126550u, 98202u, 55447u)); _GLF_SWITCH_5_10v)
       {
        bvec2(true, false);
        do
         {
          mat3x4 _GLF_SWITCH_5_11v, _GLF_SWITCH_5_12v[75], _GLF_SWITCH_5_13v;
          bvec3 _GLF_SWITCH_5_14v, _GLF_SWITCH_5_15v, _GLF_SWITCH_5_16v;
          ;
          ivec4(-5179, -91631, -442, 46480);
          (ivec4(-79304, 53354, -69662, -56553) - ivec4(-23929, -12938, 24362, 90986));
          uvec2(17116u, 4999u);
          mat4x3(237.602);
          ivec4 _GLF_SWITCH_5_17v, _GLF_SWITCH_5_18v;
         }
        while(true);
        while(true)
         {
          float _GLF_SWITCH_5_19v, _GLF_SWITCH_5_20v;
          mat3 _GLF_SWITCH_5_21v[14], _GLF_SWITCH_5_22v, _GLF_SWITCH_5_23v;
          bvec2(true, false);
          mat4x3 _GLF_SWITCH_5_24v;
          _GLF_SWITCH_5_20v;
          (false ? mat3(mat4x2(68.04, -2.9, -45.63, -54.61, -5378.6603, -75.81, 9.8, 4861.1743)) : (_GLF_SWITCH_5_19v + _GLF_SWITCH_5_23v));
          _GLF_SWITCH_5_23v;
          (_GLF_SWITCH_5_10v / 84581u);
          ivec4 _GLF_SWITCH_5_25v[20], _GLF_SWITCH_5_26v, _GLF_SWITCH_5_27v[2];
         }
        {
         ivec2 _GLF_SWITCH_5_28v, _GLF_SWITCH_5_29v;
         ;
         mat2x3 _GLF_SWITCH_5_30v[95], _GLF_SWITCH_5_31v[83];
         uvec2(99313u, 169737u)[0];
         bvec4(false, false, false, true);
         mat4(-0.5, -3.3, -2483.5231, 4421.6137, 8.9, 6418.1928, -3011.5240, 386.410, -398.039, -4965.3287, -0.2, 3767.3814, 338.395, -9.7, -1.5, 8.5);
         uvec4 _GLF_SWITCH_5_32v[20], _GLF_SWITCH_5_33v[92], _GLF_SWITCH_5_34v[53];
        }
        int _GLF_SWITCH_5_35v, _GLF_SWITCH_5_36v, _GLF_SWITCH_5_37v[96];
        do
         {
          mat4x3(-654.137);
          uvec3(107732u, 73809u, 66622u);
         }
        while(bvec4(false, true, true, false).p);
        mat2(-7.5, 4.8, -9242.0968, 9966.2187);
        ((mat3x2(4.2, -1.1, -7343.7892, -7.8, -8.1, 304.846) + mat3x2(-7.3, 43.33, -73.01, 8701.7786, 294.650, -3.4)));
       }
     }
     default:
     1;
    }
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   switch(_GLF_SWITCH(0))
    {
     case 40:
     if((7.9 != -725.655))
      {
       for(mat4 _GLF_SWITCH_5_0v; (29923 < -84430); clamp(injectionSwitch, -0.1, 5.6))
        {
         for(         vec2(-126.119, 85.28);
 true; bvec2(true, true))
          {
          }
         uvec2(148728u, 156924u);
         if((bvec4(false, true, false, true) == bvec4(false, false, true, false)))
          {
          }
         mat3x4 _GLF_SWITCH_5_1v[29];
         33667;
         for(         (mat2(151.066, -8810.4607, -95.69, 4.8) + 6130.2229);
 (-18005 >= 15698); mat3(-929.086, -1633.9566, -7.2, 6496.4651, -7.2, 93.74, -4.3, -4.2, 7.9))
          {
           bvec4(false, true, true, false);
           (mat4(mat3(-6.6, -8427.4947, 5832.8953, -1.4, 3.6, -3.9, 6.2, -1.4, -20.01)) + mat4(-4887.3361, 304.246, -254.935, 42.60, -955.589, -65.48, 51.79, -1195.1787, 4.0, -6580.9771, 76.30, -897.643, 5.2, -8.0, -165.875, 2581.0305));
           uint _GLF_SWITCH_5_2v[17], _GLF_SWITCH_5_3v, _GLF_SWITCH_5_4v;
           lessThan(ivec2(73249, -2061), ivec2(90039, -78145));
           vec4(-733.862, -92.99, 3.0, -4060.8158);
          }
         ;
        }
       bitCount((uvec2(189323u, 125494u) & 151813u));
       bool _GLF_SWITCH_5_5v, _GLF_SWITCH_5_6v[7];
      }
     else
      {
       all(bvec2(true, false));
      }
     case 0:
     case 73:
     case 99:
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     case 55:
     barrier();
     case 50:
     if(_GLF_DEAD(false))
      return;
     case 90:
     if(_GLF_DEAD(false))
      barrier();
     case 35:
     case 15:
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     break;
     case 28:
     false;
     default:
     1;
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   switch(_GLF_SWITCH((int(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(int(7), int(7)))))
    {
     case 48:
     uvec3 _GLF_SWITCH_5_0v[2], _GLF_SWITCH_5_1v, _GLF_SWITCH_5_2v[57];
     case 44:
     for(     2.1;
 true; (true ? vec4(5.6, 5665.1999, -446.143, 6630.2809) : vec4(-9.7, -9.6, -1227.6380, 8468.9469)))
      {
       mat2(1462.8576, 3.6, -0.5, 5.9);
       (mat2x4(-70.73, 1.4, 3.3, 9.6, -72.64, -1593.4504, -89.88, 20.34) == (mat2x4(36.86, 3.6, 9.1, -7.4, 62.10, -9.5, -23.47, -27.00) - 2841.2772));
       while((true == (subgroup_size < 95669u)))
        {
         uvec3(104066u, 163499u, 139163u);
         vec3(-101.518, 8473.0953, -7.1);
         for(         (87.54 - mat3x4(distance(vec4(29.37, -69.38, 83.60, -872.086), vec4(70.90, -2511.5787, -9149.2795, -6.5))));
 isnan((true ? -67.13 : -4.7)); vec3(76.18, -313.297, -5.0))
          {
           mat4x2 _GLF_SWITCH_5_3v[73], _GLF_SWITCH_5_4v[54];
           mat2(65.69, -343.988, -2802.0069, -6466.0807);
           vec4 _GLF_SWITCH_5_5v, _GLF_SWITCH_5_6v[38];
           mat4(-46.41, 8.1, -4.4, -9.2, -2591.3821, 9210.1576, 3.1, 7.4, 12.65, -487.932, -0.4, -7.1, -387.344, -8.9, -9.3, -9.5);
          }
         {
          mat3 _GLF_SWITCH_5_7v[50], _GLF_SWITCH_5_8v;
          ivec2(-48486, -93927);
          (65074 % ivec4(41907, -67755, 83371, 25900));
          (uvec2(22487u, 187892u));
          uvec4(_GLF_SWITCH_5_1v.tsp, subgroup_size);
          mat2x4 _GLF_SWITCH_5_9v, _GLF_SWITCH_5_10v;
         }
         uvec4 _GLF_SWITCH_5_11v, _GLF_SWITCH_5_12v[50];
         (mat2x3(-31.64, 932.978, -7159.2164, 9.2, 2.9, 115.149) - -48.76);
         mat4x3 _GLF_SWITCH_5_13v[54], _GLF_SWITCH_5_14v, _GLF_SWITCH_5_15v;
         ;
        }
       ;
       atanh(vec3(-6892.1138, -9.5, -0.9));
       any(bvec2(true, false));
      }
     case 0:
     case 33:
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        return;
      }
     case 3:
     case 30:
     return;
     break;
     case 77:
     {
      vec4(-5.6, -6020.8234, 4.5, 9929.2818).t;
      {
       mat2x4(-8.0, 9.9, -506.173, 2345.4286, 9321.2944, -5.4, 760.279, 76.81);
       {
        mat4x3 _GLF_SWITCH_5_16v[54];
        ;
       }
       for(mat4 _GLF_SWITCH_5_17v, _GLF_SWITCH_5_18v, _GLF_SWITCH_5_19v; true; (true ? lessThanEqual(vec3(-64.69, 12.03, -338.454), vec3(79.13, 74.22, 2.5)) : bvec3(true, true, true)))
        {
         mat4x2 _GLF_SWITCH_5_20v, _GLF_SWITCH_5_21v;
         (_GLF_SWITCH_5_17v * mat3x4(mat4x3(-211.741, -7.4, -37.64, 50.76, -839.492, 15.76, 59.16, 5634.0606, 6394.1579, -2344.8851, -44.14, 677.783)));
         ivec2(-16763, 32310);
        }
       if(true)
        {
         bvec4(true, false, true, true);
        }
      }
      ;
      {
       mat2x4 _GLF_SWITCH_5_22v;
       {
        mat4 _GLF_SWITCH_5_23v;
        uvec4 _GLF_SWITCH_5_24v;
        mat2(-1.6, -89.99, 57.71, -1.6);
        uvec2(81222u, 147224u);
        vec3(2.6, 681.799, -0.3);
        mat4x3 _GLF_SWITCH_5_25v;
        vec4 _GLF_SWITCH_5_26v, _GLF_SWITCH_5_27v, _GLF_SWITCH_5_28v;
        bvec4(true, false, false, true);
       }
       {
        mat3x4(-7279.2835);
        uvec4(144521u, 174970u, 54309u, 12608u);
        mat4x3 _GLF_SWITCH_5_29v[7], _GLF_SWITCH_5_30v, _GLF_SWITCH_5_31v;
        uvec3(14079u, 21706u, 91760u);
        (mat4(-251.581, -7303.2364, -2952.8470, 6.7, -9.9, 1.2, 7.9, -23.62, -446.686, -6.2, -642.451, -6.9, -7.4, -4738.9182, 1171.6391, 7.0));
       }
      }
      (-1.0 - vec4(5.2, -678.928, -70.90, 8.7));
      while((bvec3(true, true, false) != bvec3(false, false, false)))
       {
        bvec4(false, false, false, true);
        ivec3 _GLF_SWITCH_5_32v[42];
        mat3 _GLF_SWITCH_5_33v, _GLF_SWITCH_5_34v[78], _GLF_SWITCH_5_35v;
        min(uvec2(199482u, 26523u), uvec2(174021u, 101609u));
        mat2x4 _GLF_SWITCH_5_36v, _GLF_SWITCH_5_37v, _GLF_SWITCH_5_38v[37];
        while(false)
         {
          mat3x2 _GLF_SWITCH_5_39v, _GLF_SWITCH_5_40v[92], _GLF_SWITCH_5_41v[87];
          966.000;
          (mat3(mat2(-26.20, 46.73, 2509.5665, -8469.4364)) + mat3(mat3x4(9.1, -49.89, 53.56, 9097.1690, 4398.4715, -3.3, 887.245, 5544.0441, -1.1, -4064.6430, -3.0, -762.669)));
          false;
          ivec3(55437, -49573, 20146);
          not(bvec3(true, false, true));
          ;
         }
       }
     }
     default:
     1;
    }
  }
 if(_GLF_DEAD(false))
  {
   switch(_GLF_SWITCH((0 << _GLF_IDENTITY(int(7), int(7)))))
    {
     case 99:
     lessThan(uvec3(39209u, 117756u, 37829u), (uvec3(11119u, 142756u, 136358u) - subgroup_id));
     case 0:
     case 10:
     case 45:
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     case 54:
     if(_GLF_DEAD(false))
      return;
     return;
     break;
     default:
     1;
    }
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), false)))), (bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), false))))) && true))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_1 _GLF_struct_replacement_1 = _GLF_struct_1(uvec4(1u), _GLF_struct_0(vec4(1.0), mat4x2(1.0), mat3x4(1.0), workgroup_base + subgroup_id * subgroup_size + subgroup_local_id), 1.0);
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 buf[_GLF_struct_replacement_1._f1.virtual_gid] = 1;
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_DEAD(false))
    return;
   int i = 0;
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 0);
  }
 else
  {
   switch(_GLF_SWITCH((0 | 0)))
    {
     case 77:
     bvec4(true, false, true, false);
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        return;
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     case 0:
     if(_GLF_DEAD(false))
      return;
     case 29:
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     case 30:
     case 99:
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
              return;
             barrier();
            }
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         return;
        }
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           switch(_GLF_SWITCH(0))
            {
             case 0:
             case 5:
             case 86:
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             case 81:
             return;
             break;
             case 30:
             for(             mat3x2(3278.4837, 349.520, 3.3, -89.60, -43.77, -3075.7196);
 (min(uvec4(150901u, 116702u, 198565u, 183420u), uvec4(151159u, 65002u, 179003u, 72281u)) != uvec4(42307u, 43145u, 48200u, 96484u)); inversesqrt(fract(4.6)))
              {
              }
             default:
             1;
            }
          }
         if(_GLF_DEAD(false))
          return;
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           return;
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     case 64:
     case 36:
     case 71:
     if(_GLF_DEAD(false))
      barrier();
     atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 0);
     if(_GLF_DEAD(false))
      {
       switch(_GLF_SWITCH(0))
        {
         case 0:
         case 90:
         case 60:
         if(_GLF_DEAD(false))
          {
           switch(_GLF_SWITCH(0))
            {
             case 37:
             greaterThanEqual(ivec4(-19180, -62370, 43585, -341), (ivec4(-31882, 37306, -84292, 98121) % -3318));
             case 66:
             greaterThan(ivec3(53912, 64005, -97385), ivec3(31387, 164, -84623));
             case 0:
             if(_GLF_DEAD(false))
              barrier();
             case 2:
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             return;
             break;
             default:
             1;
            }
          }
         case 19:
         if(_GLF_DEAD(false))
          barrier();
         case 66:
         if(_GLF_DEAD(false))
          barrier();
         case 43:
         if(_GLF_DEAD(false))
          return;
         case 59:
         barrier();
         break;
         case 88:
         bvec4(false, (uvec2(68127u, 120916u) != uvec2(27371u, 176330u)), false, true);
         default:
         1;
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       barrier();
      }
     break;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     case 62:
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     for(mat3x2 _GLF_SWITCH_0_0v, _GLF_SWITCH_0_1v; false; (mat3x4(-533.376, -2865.5068, 76.42, -8.8, 951.779, 7741.2453, 4.4, -3.7, 605.514, -651.469, -6449.6061, 50.27)))
      {
       if(_GLF_DEAD(false))
        barrier();
       switch(_GLF_SWITCH(0))
        {
         case 59:
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           break;
          }
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(false))
          barrier();
         ;
         case 68:
         length(vec4(8.1, 3699.3075, -27.64, 5.8));
         case 0:
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               return;
              }
             barrier();
            }
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           return;
          }
         vec4 _GLF_SWITCH_0_2v;
         for(         (int(num_workgroup) | 85496);
 (bvec3(false, false, false) == bvec3(false, true, false)); bitfieldExtract((38767 % ivec4(46785, -11929, -34407, 83242)), 98072, 48929))
          {
           if(_GLF_DEAD(false))
            continue;
           uvec4 _GLF_SWITCH_0_3v[82], _GLF_SWITCH_0_4v, _GLF_SWITCH_0_5v[53];
           if(_GLF_DEAD(false))
            return;
           ;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              break;
             if(_GLF_DEAD(false))
              barrier();
             continue;
             if(_GLF_DEAD(false))
              barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              {
               switch(_GLF_SWITCH(0))
                {
                 case 64:
                 true;
                 case 80:
                 mat2x3(-453.814, 6.1, -7.4, -70.47, 30.89, 5697.2146);
                 case 0:
                 if(_GLF_DEAD(false))
                  barrier();
                 return;
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(false))
                  continue;
                 break;
                 default:
                 1;
                }
              }
             if(_GLF_DEAD(false))
              {
               switch(_GLF_SWITCH(0))
                {
                 case 71:
                 ;
                 case 82:
                 mat3x2 _GLF_SWITCH_3_0v, _GLF_SWITCH_3_1v[59];
                 case 0:
                 if(_GLF_DEAD(false))
                  continue;
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(false))
                  break;
                 if(_GLF_DEAD(false))
                  barrier();
                 case 8:
                 case 65:
                 return;
                 break;
                 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
                  barrier();
                 case 92:
                 mat3x4 _GLF_SWITCH_3_2v;
                 case 97:
                 uvec2 _GLF_SWITCH_3_3v, _GLF_SWITCH_3_4v[49];
                 default:
                 if(_GLF_DEAD(false))
                  break;
                 1;
                }
              }
             barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              continue;
             barrier();
            }
          }
         case 6:
         if(_GLF_DEAD(false))
          barrier();
         case 75:
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            continue;
           continue;
          }
         while((bvec2(true, false) == bvec2(true, true)))
          {
           for(           ivec2(-33791, 32107);
 (mat2x4(mat3(-568.036, -1.3, -3167.1341, -5.3, 83.25, -6.5, 3.1, 5803.0903, 8.3)) == mat2x4(-173.485, 89.65, 455.309, 84.73, 630.839, -5.0, 20.10, -91.08)); ivec4(-52398, -18239, 88735, -54983))
            {
             switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
              {
               case 0:
               case 61:
               case 98:
               if(_GLF_DEAD(false))
                return;
               case 35:
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               case 25:
               case 51:
               case 36:
               switch(_GLF_SWITCH((1 ^ 1)))
                {
                 case 43:
                 (_GLF_SWITCH_0_2v == vec4(1.8, -7.7, 5884.7370, -5.9));
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   continue;
                  }
                 case 38:
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    return;
                   barrier();
                  }
                 if(_GLF_DEAD(false))
                  barrier();
                 mat3x2 _GLF_SWITCH_2_0v[23], _GLF_SWITCH_2_1v[10], _GLF_SWITCH_2_2v;
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(false))
                  {
                   switch(_GLF_SWITCH(0))
                    {
                     case 0:
                     case 50:
                     case 54:
                     case 85:
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     case 72:
                     case 27:
                     case 9:
                     case 24:
                     if(_GLF_DEAD(false))
                      barrier();
                     case 1:
                     barrier();
                     break;
                     case 94:
                     ;
                     default:
                     1;
                    }
                  }
                 case 0:
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   barrier();
                  }
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 case 42:
                 if(_GLF_DEAD(false))
                  break;
                 mat3x2 _GLF_SWITCH_0_6v;
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   continue;
                  }
                 if(_GLF_DEAD(false))
                  barrier();
                 subgroup_id;
                 if(_GLF_DEAD(false))
                  barrier();
                 6.0;
                 if(_GLF_DEAD(false))
                  return;
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     return;
                    }
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(false))
                      break;
                     if(_GLF_DEAD(false))
                      barrier();
                     if(_GLF_DEAD(false))
                      barrier();
                     barrier();
                    }
                   barrier();
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   if(_GLF_DEAD(false))
                    break;
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     barrier();
                    }
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   return;
                  }
                 if(_GLF_DEAD(false))
                  barrier();
                 _GLF_struct_2 _GLF_struct_replacement_2;
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    break;
                   barrier();
                  }
                 uvec2 _GLF_SWITCH_0_8v;
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    break;
                   barrier();
                  }
                 case 44:
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  return;
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  return;
                 float _GLF_SWITCH_0_9v[96];
                 uvec4(13952u, 89125u, 102955u, 140582u);
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 case 54:
                 (mat2x4(611.976, 3.1, -66.41, 3.8, 1.2, 6.8, 5.8, -1.9) + 9372.4063);
                 bvec3(all(bvec3(true, true, false)));
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   barrier();
                  }
                 if(_GLF_DEAD(false))
                  return;
                 if(_GLF_DEAD(false))
                  barrier();
                 break;
                 default:
                 1;
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                }
               break;
               case 41:
               bool _GLF_SWITCH_5_0v[69], _GLF_SWITCH_5_1v[72];
               default:
               1;
              }
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           mat4 _GLF_SWITCH_0_10v, _GLF_SWITCH_0_11v;
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            break;
           if(_GLF_DEAD(false))
            {
             switch(_GLF_SWITCH(0))
              {
               case 25:
               (uvec3(87949u, 3936u, 153477u) % num_workgroup);
               case 0:
               case 89:
               case 67:
               case 42:
               case 3:
               switch(_GLF_SWITCH(0))
                {
                 case 0:
                 case 88:
                 case 53:
                 case 4:
                 if(_GLF_DEAD(false))
                  continue;
                 case 66:
                 case 68:
                 barrier();
                 break;
                 case 40:
                 bvec4 _GLF_SWITCH_4_0v;
                 case 24:
                 (+ mat2(4927.8936, -90.45, -7.1, 399.024));
                 default:
                 1;
                }
               break;
               case 20:
               uvec3 _GLF_SWITCH_5_0v, _GLF_SWITCH_5_1v, _GLF_SWITCH_5_2v;
               default:
               1;
              }
            }
           uvec4 _GLF_SWITCH_0_12v, _GLF_SWITCH_0_13v[21];
           mat4x2 _GLF_SWITCH_0_14v[75], _GLF_SWITCH_0_15v, _GLF_SWITCH_0_16v;
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               break;
              }
             barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            continue;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           ivec3 _GLF_SWITCH_0_17v, _GLF_SWITCH_0_18v, _GLF_SWITCH_0_19v;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
           {
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             {
              switch(_GLF_SWITCH(0))
               {
                case 0:
                case 56:
                case 37:
                if(_GLF_DEAD(false))
                 {
                  if(_GLF_DEAD(false))
                   barrier();
                  if(_GLF_DEAD(false))
                   {
                    if(_GLF_DEAD(false))
                     barrier();
                    return;
                   }
                  barrier();
                  if(_GLF_DEAD(false))
                   barrier();
                 }
                case 23:
                case 92:
                switch(_GLF_SWITCH(0))
                 {
                  case 0:
                  case 49:
                  if(_GLF_DEAD(false))
                   barrier();
                  if(_GLF_DEAD(false))
                   {
                    switch(_GLF_SWITCH(0))
                     {
                      case 0:
                      case 56:
                      case 38:
                      if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                       continue;
                      case 5:
                      if(_GLF_DEAD(false))
                       {
                        if(_GLF_DEAD(false))
                         barrier();
                        continue;
                       }
                      barrier();
                      break;
                      case 91:
                      _GLF_SWITCH_0_16v;
                      case 25:
                      ((_GLF_SWITCH_0_1v) --);
                      default:
                      1;
                     }
                   }
                  if(_GLF_DEAD(false))
                   barrier();
                  case 72:
                  if(_GLF_DEAD(false))
                   {
                    if(_GLF_DEAD(false))
                     {
                      if(_GLF_DEAD(false))
                       break;
                      barrier();
                     }
                    return;
                   }
                  case 9:
                  barrier();
                  if(_GLF_DEAD(false))
                   barrier();
                  break;
                  default:
                  if(_GLF_DEAD(false))
                   barrier();
                  1;
                  if(_GLF_DEAD(false))
                   break;
                 }
                break;
                case 38:
                mat4x2 _GLF_SWITCH_4_0v, _GLF_SWITCH_4_1v, _GLF_SWITCH_4_2v[18];
                case 54:
                ;
                default:
                1;
               }
             }
            if(_GLF_DEAD(false))
             barrier();
            (- mat2x3(_GLF_SWITCH_0_11v));
            (false ? vec3(31.76, 348.767, 4.2) : vec3(-356.707, 4.5, -77.45));
           }
           if(_GLF_DEAD(false))
            barrier();
           for(bvec4 _GLF_SWITCH_0_20v[9], _GLF_SWITCH_0_21v; true; (+ mat3(-8.3, -41.77, -9.2, 5797.8725, -626.770, -2155.9439, -46.09, -8.8, -598.807)))
            {
             mat2x3(0.8, 8.3, 2.9, -16.16, -46.87, -7.2);
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             (faceforward(6985.6601, float(64151), -69.97) / mat2x3(-3.4, 66.19, -979.778, -79.06, 271.100, -2.9));
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             mat3 _GLF_SWITCH_0_22v, _GLF_SWITCH_0_23v, _GLF_SWITCH_0_24v;
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(false))
                  break;
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                }
               break;
              }
             _GLF_SWITCH_0_19v;
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              continue;
             _GLF_SWITCH_0_21v;
             mat3(-7471.9725, 3.6, -39.47, -3599.3064, 9.4, -820.083, 7701.0477, 307.670, 7.1);
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               break;
              }
             ;
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
                continue;
               if(_GLF_DEAD(false))
                break;
               if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
                barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  continue;
                 barrier();
                }
               return;
               if(_GLF_DEAD(false))
                return;
              }
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   continue;
                  }
                 continue;
                }
               barrier();
               if(_GLF_DEAD(false))
                break;
               if(_GLF_DEAD(false))
                return;
               if(_GLF_DEAD(false))
                barrier();
              }
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              break;
             ;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               return;
              }
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if(_GLF_DEAD(false))
                return;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                   if(_GLF_DEAD(false))
                    break;
                   barrier();
                  }
                 continue;
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 continue;
                }
               return;
               if(_GLF_DEAD(false))
                break;
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                }
              }
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                }
               barrier();
              }
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               break;
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                return;
               return;
               if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 continue;
                }
               if(_GLF_DEAD(false))
                barrier();
              }
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
              barrier();
            }
           bvec2(true, true);
           if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(false))
              return;
             return;
            }
           while((vec4(601.626, 266.071, -9.8, -2085.3849) == _GLF_SWITCH_0_2v))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                break;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               return;
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             switch(_GLF_SWITCH(0))
              {
               case 35:
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  break;
                 barrier();
                }
               if(_GLF_DEAD(false))
                barrier();
               ;
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 return;
                }
               if(_GLF_DEAD(false))
                barrier();
               case 61:
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  break;
                 return;
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 return;
                }
               bool _GLF_SWITCH_1_0v, _GLF_SWITCH_1_1v, _GLF_SWITCH_1_2v[22];
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                return;
               case 0:
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   return;
                  }
                 barrier();
                }
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   barrier();
                  }
                 if(_GLF_DEAD(false))
                  break;
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 continue;
                 if(_GLF_DEAD(false))
                  return;
                }
               if(_GLF_DEAD(false))
                break;
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  continue;
                 barrier();
                }
               case 26:
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                }
               case 98:
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  continue;
                 continue;
                }
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      continue;
                     return;
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    continue;
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     barrier();
                    }
                   if(_GLF_DEAD(false))
                    return;
                   barrier();
                  }
                 break;
                }
               if(_GLF_DEAD(false))
                barrier();
               case 81:
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  return;
                 if(_GLF_DEAD(false))
                  barrier();
                 continue;
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                }
               case 12:
               if(_GLF_DEAD(false))
                continue;
               if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                }
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                }
               ;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               case 55:
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_DEAD(false))
                    return;
                   if(_GLF_DEAD(false))
                    barrier();
                   barrier();
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    continue;
                  }
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   return;
                   if(_GLF_DEAD(false))
                    continue;
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 continue;
                 if(_GLF_DEAD(false))
                  barrier();
                }
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 return;
                }
               case 56:
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                break;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  break;
                 barrier();
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    continue;
                   return;
                  }
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               break;
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               default:
               1;
               if(_GLF_DEAD(false))
                continue;
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                 if(_GLF_DEAD(false))
                  break;
                }
              }
             if(_GLF_DEAD(false))
              break;
            }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
          }
         case 40:
         while((true ^^ true))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         while(false)
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             break;
            }
           mat2x3 _GLF_SWITCH_0_25v[75];
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               barrier();
              }
             if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
              barrier();
             if(_GLF_DEAD(false))
              continue;
             if(_GLF_DEAD(false))
              barrier();
             barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              break;
             break;
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(false))
              barrier();
            }
           vec4 _GLF_SWITCH_0_26v;
           if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
              continue;
             barrier();
            }
           float _GLF_SWITCH_0_27v, _GLF_SWITCH_0_28v, _GLF_SWITCH_0_29v[81];
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              break;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            break;
          }
         case 98:
         case 96:
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
           if(_GLF_DEAD(false))
            break;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
           break;
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          continue;
         case 33:
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)))))
          continue;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         mat3x4 _GLF_SWITCH_0_30v, _GLF_SWITCH_0_31v[22];
         break;
         case 43:
         if(_GLF_DEAD(false))
          barrier();
         bvec4 _GLF_SWITCH_2_0v[53];
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         default:
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         1;
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
         barrier();
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     default:
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       switch(_GLF_SWITCH(0))
        {
         case 0:
         case 23:
         case 6:
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         break;
         default:
         1;
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     1;
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     switch(_GLF_SWITCH(0))
      {
       case 32:
       if(_GLF_DEAD(false))
        barrier();
       {
        matrixCompMult(mat4(-2405.7171, -0.0, 78.72, 1.4, 7007.3997, -2.0, -42.19, 5.4, 4.9, -4.2, -6443.9914, 7638.0911, 5.5, 56.34, 185.956, 7.8), (mat3x4(-448.781, 3.5, -8445.6117, -3.0, 2.1, -7.2, 29.26, 7316.1771, 8.6, 4551.4037, 4.9, 8737.4980) * mat4x3(-3.6, -582.626, -5.2, 0.1, -454.316, 215.954, 504.633, 320.758, -3.5, 32.87, 4303.1713, -4.6)));
        for(mat4x3 _GLF_SWITCH_3_0v[87], _GLF_SWITCH_3_1v[75], _GLF_SWITCH_3_2v; ((uvec2(122257u, 35364u) % uvec2(164731u, 89096u)) == (uvec2(174498u, 165422u))); (- mat3(2773.2779, 2.8, 1.0, 6.9, -1116.7564, -9339.9059, -9330.9905, 358.138, -2.9)))
         {
          switch(_GLF_SWITCH(0))
           {
            case 0:
            case 28:
            {
             (- mat4x3(-5965.0255, -7660.8130, 3393.9598, -0.1, -512.424, 40.29, -6237.8739, 0.5, 0.7, 4.8, -6493.6557, 11.49));
             (uvec2(2742u, 105508u) * uvec2(86702u, 95091u));
             mat3x2(4164.8615, 5575.1960, 2.7, 165.430, -45.89, -578.437);
             mat4x2(mat2(8.7, 81.05, -5.3, -13.01));
             mat4x2(mat3x2(2.7, 24.28, 8.5, -279.897, -8213.5623, -43.93));
             float _GLF_SWITCH_3_3v, _GLF_SWITCH_3_4v, _GLF_SWITCH_3_5v[81];
            }
            mat4 _GLF_SWITCH_3_6v[93], _GLF_SWITCH_3_7v;
            while(all(bvec4(true, false, false, false)))
             {
              vec4(941.382, -7.1, -6.8, 1.1);
              if(_GLF_DEAD(false))
               break;
              bvec4 _GLF_SWITCH_3_8v[89];
              mat2x3(-3489.7154, 2.2, 4.2, 6.9, -3753.6033, -2.6);
              (- mat3x4(-81.12, -637.220, -3.4, 56.04, -3544.7372, -64.11, -559.865, 83.28, -9.9, -36.19, 1.9, 147.562));
             }
            mat2 _GLF_SWITCH_3_9v, _GLF_SWITCH_3_10v[44];
            mat4x2 _GLF_SWITCH_3_11v[5], _GLF_SWITCH_3_12v, _GLF_SWITCH_3_13v;
            case 30:
            true;
            case 35:
            case 3:
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             barrier();
            case 69:
            bitfieldReverse(ivec4(45650, 43929, -96448, -93387));
            case 10:
            case 40:
            while(true)
             {
              ((mat3x2(-3.0, 52.43, -8379.8104, 3.1, 6574.4680, 520.240) - -7.4) + mat3x2(23.80, -3.5, -0.4, -0.5, -8.6, -4.0));
              if(_GLF_DEAD(false))
               break;
              ;
              ((_GLF_SWITCH_3_2v - _GLF_SWITCH_3_2v) + _GLF_SWITCH_3_2v);
              if(_GLF_DEAD(false))
               barrier();
              (mat3x4(-7.1, 9342.8604, 6.1, -9.0, 8.9, 2024.0551, 2.9, -63.97, -1.8, 2984.8477, -54.15, -4.7) * mat2x3(25.04, -0.5, -1.9, -94.65, 683.708, -6097.4943));
              ivec3 _GLF_SWITCH_3_14v[47];
              _GLF_SWITCH_3_2v;
              uvec3(56033u, 124109u, 175458u);
              (5.2 - mat3x4(-118.502, -1527.0656, -133.134, -4.6, 6787.4422, -5.3, 531.969, 9617.8317, -51.70, 4203.2038, 4.7, -94.50));
              vec2 _GLF_SWITCH_3_15v[69];
              if(_GLF_DEAD(false))
               barrier();
             }
            break;
            case 11:
            bvec2 _GLF_SWITCH_4_0v, _GLF_SWITCH_4_1v;
            default:
            1;
           }
         }
        for(mat3x2 _GLF_SWITCH_3_16v, _GLF_SWITCH_3_17v; true; true)
         {
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           barrier();
          (mat3(_GLF_SWITCH_3_16v) + mat3(-41.88, -34.12, -91.24, 187.853, -1465.6990, 1142.4357, -1.0, 110.463, -8.7));
          {
           vec2(480.725, -7484.5962);
           bvec4 _GLF_SWITCH_3_18v, _GLF_SWITCH_3_19v, _GLF_SWITCH_3_20v;
           ivec4 _GLF_SWITCH_3_21v;
           mat4 _GLF_SWITCH_3_22v, _GLF_SWITCH_3_23v;
           uvec2 _GLF_SWITCH_3_24v[6];
           mat2x3 _GLF_SWITCH_3_25v, _GLF_SWITCH_3_26v[93];
           sign(-26796);
           int _GLF_SWITCH_3_27v, _GLF_SWITCH_3_28v;
          }
          if(_GLF_DEAD(false))
           barrier();
          while(bvec4(true, bvec3(true, true, true))[3])
           {
            bvec2(true, true);
            ivec4 _GLF_SWITCH_3_29v[95];
           }
          while((greaterThan(uvec2(141563u, 40782u), uvec2(145700u, 148360u)) == lessThanEqual(bitfieldInsert(uvec2(197125u, 60168u), uvec2(156461u, 147043u), -73919, -69515), uvec2(135878u, 150025u))))
           {
            ivec2 _GLF_SWITCH_3_30v[77];
            ;
            bvec3(false, false, true);
           }
          uvec4 _GLF_SWITCH_3_31v[73], _GLF_SWITCH_3_32v;
         }
        if(_GLF_DEAD(false))
         barrier();
        int _GLF_SWITCH_3_33v[2], _GLF_SWITCH_3_34v;
        while(true)
         {
          {
           ;
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           ;
           float _GLF_SWITCH_3_35v[44];
          }
          mat4(2.6, -3.6, 2.9, 42.98, -6316.1170, -451.587, 13.11, 3.3, 3.2, 4.4, -66.94, -8517.5557, 96.17, 5468.2703, 6.9, -2187.8776);
          uint _GLF_SWITCH_3_36v;
          uvec4(86030u, 117596u, 199898u, 53188u);
          if((false ? true : true))
           {
            bvec2 _GLF_SWITCH_3_37v;
            if(_GLF_DEAD(false))
             continue;
            ivec3(34396, -60066, 59755);
            mat4(-64.80, 2009.0893, 628.923, 761.470, -4124.6258, -2.0, -9.0, 8874.1591, -24.68, 64.60, 4466.2417, -982.272, -8.4, 94.86, -0.1, 28.05);
            (mat3x2(mat3(-18.55, -3.4, -13.60, -433.683, 61.59, 7.9, -582.889, -4.7, -9266.5214)) * mat4x3(53.42, 1.0, -46.06, 126.877, 7437.2986, 495.080, 58.85, 6.6, 2159.0434, -369.510, -0.2, -35.96));
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             barrier();
            mat2x3 _GLF_SWITCH_3_38v, _GLF_SWITCH_3_39v, _GLF_SWITCH_3_40v;
            if(_GLF_DEAD(false))
             barrier();
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             {
              if(_GLF_DEAD(false))
               barrier();
              break;
             }
            vec4 _GLF_SWITCH_3_41v;
            ivec2 _GLF_SWITCH_3_42v;
            vec4 _GLF_SWITCH_3_43v;
           }
          else
           {
            (mat3(2345.2755, -4247.1564, -367.727, -3564.3419, -4379.3986, -37.19, -118.862, 38.84, 891.759) * mat2x3(413.902, -49.17, 298.151, 9022.2886, -154.330, 6073.6225));
           }
          if(_GLF_DEAD(false))
           {
            if(_GLF_DEAD(false))
             barrier();
            continue;
           }
          ;
          if(_GLF_DEAD(false))
           return;
          bvec4 _GLF_SWITCH_3_44v[98], _GLF_SWITCH_3_45v[37], _GLF_SWITCH_3_46v;
         }
        for(mat4 _GLF_SWITCH_3_47v, _GLF_SWITCH_3_48v, _GLF_SWITCH_3_49v; (bvec4(false, true, true, false) != bvec4(true, true, false, false)); uvec2(117559u, 15158u))
         {
          subgroup_size;
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           barrier();
          if(true)
           {
            switch(_GLF_SWITCH(0))
             {
              case 63:
              -6.3;
              case 13:
              injectionSwitch;
              case 0:
              case 61:
              case 19:
              case 1:
              mat4 _GLF_SWITCH_3_50v, _GLF_SWITCH_3_51v[15], _GLF_SWITCH_3_52v[5];
              case 67:
              case 78:
              case 34:
              case 4:
              case 49:
              bvec4(true, true, true, false);
              break;
              case 17:
              ivec3(-60134, 87828, -52518).p;
              case 82:
              uint _GLF_SWITCH_5_0v, _GLF_SWITCH_5_1v[65];
              default:
              1;
             }
           }
          for(          (uvec3(143029u, 181973u, 90375u) % num_workgroup);
 false; ivec2(10123, -88978))
           {
            ivec4(ivec2(-5197, 69251), ivec2(21671, 72543));
           }
          mat2x3(mat3(6.8, 7.2, 9.2, 238.004, -50.75, -780.025, -537.423, -1.5, -309.764));
          mat2(13.70, 8.5, -324.729, -730.097);
          mat3x2(4211.4331, 7367.3588, 6.1, 3811.6236, 4.4, -221.109);
          if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
           barrier();
          for(bvec4 _GLF_SWITCH_3_53v[95], _GLF_SWITCH_3_54v[9]; false; mat3x4(-0.5, -41.56, 4242.4833, 875.431, 52.80, 5.8, -63.00, 1.9, 1.0, 93.18, 4777.4656, 8113.8725))
           {
            if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
             break;
            vec3 _GLF_SWITCH_3_55v;
            if(_GLF_DEAD(false))
             barrier();
            ;
            true;
            if(_GLF_DEAD(false))
             return;
            vec3 _GLF_SWITCH_3_56v, _GLF_SWITCH_3_57v, _GLF_SWITCH_3_58v[66];
            int _GLF_SWITCH_3_59v;
            equal(ivec2(-84663, -92565), ivec2(82556, -99759));
            mat2x3(-86.33, 0.6, 1.0, -23.01, -5347.5502, 9639.2258);
            vec4 _GLF_SWITCH_3_60v[79], _GLF_SWITCH_3_61v;
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             barrier();
           }
         }
        for(uvec3 _GLF_SWITCH_3_62v, _GLF_SWITCH_3_63v[67], _GLF_SWITCH_3_64v; false; bvec4(false, true, true, true))
         {
          switch(_GLF_SWITCH(0))
           {
            case 0:
            case 7:
            case 24:
            case 1:
            case 54:
            case 53:
            case 63:
            case 4:
            case 49:
            case 26:
            switch(_GLF_SWITCH(0))
             {
              case 66:
              ivec3(-2091, -3288, 32490);
              case 82:
              ;
              case 0:
              case 39:
              case 28:
              vec4(-5365.4282);
              case 79:
              case 95:
              ivec3(-56652, 36562, 32250);
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               barrier();
              mat3(-94.93, 4.2, -770.389, -27.24, -629.682, 9276.6392, 819.676, 5.2, 8285.3162);
              case 36:
              mat3x2 _GLF_SWITCH_3_65v;
              case 47:
              workgroup_id;
              case 57:
              case 50:
              mat4(-1.7, 4213.7386, -4240.8969, -1.5, -72.54, -77.71, 7226.7966, 253.024, -7.2, 2.4, -5.2, 8.0, -53.61, -368.592, 380.069, -9594.8617);
              break;
              case 31:
              bvec3 _GLF_SWITCH_4_0v[5], _GLF_SWITCH_4_1v[23], _GLF_SWITCH_4_2v;
              default:
              1;
             }
            break;
            case 84:
            mat3 _GLF_SWITCH_5_0v, _GLF_SWITCH_5_1v, _GLF_SWITCH_5_2v[11];
            case 21:
            mat4x3 _GLF_SWITCH_5_3v, _GLF_SWITCH_5_4v;
            default:
            1;
           }
         }
       }
       case 0:
       if(_GLF_DEAD(false))
        barrier();
       case 55:
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       case 68:
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
       break;
       if(_GLF_DEAD(false))
        barrier();
       case 54:
       for(       vec4(0.9, -7923.1912, -9756.3057, -427.648);
 (uvec2(176209u, 16434u) == (uvec2(165797u, 177921u) ^ workgroup_base)); mat2x3(mat4x3(6075.1952, 4352.3196, 6.8, 647.309, -4692.4548, 25.50, -2.9, 1.9, -5118.3019, 3563.3361, 8.7, 3097.2230)))
        {
         if(false)
          {
           {
            ;
            lessThanEqual(uvec4(90318u, 37805u, 44162u, 100912u), uvec4(29252u, 145607u, 12063u, 182378u));
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             barrier();
            mat3(5.9, -0.9, -1633.3691, 4.1, 34.52, 71.00, -103.812, 0.3, 29.13);
            greaterThan(injectionSwitch, vec2(6853.5378, 756.503));
            if(_GLF_DEAD(false))
             continue;
            bvec4(true, false, true, true);
            if(_GLF_DEAD(false))
             barrier();
           }
           false;
           for(mat2x3 _GLF_SWITCH_3_66v, _GLF_SWITCH_3_67v, _GLF_SWITCH_3_68v[92]; true; bvec3(false, true, false))
            {
             -37.41;
             (-150.527 - (7.1 / mat3x4(-3.2, 6.2, -1.4, -915.932, 347.939, 5148.2288, 1.9, -964.972, 8.6, -4.1, 8174.7091, -4.7)));
             vec3 _GLF_SWITCH_3_69v[90], _GLF_SWITCH_3_70v;
             mat2x3 _GLF_SWITCH_3_71v, _GLF_SWITCH_3_72v[60], _GLF_SWITCH_3_73v;
             ;
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             ivec4 _GLF_SWITCH_3_74v, _GLF_SWITCH_3_75v;
             subgroup_id;
             clamp(uvec4(161433u, 24877u, 166539u, 192875u), uvec4(82670u, 42232u, 164094u, 69539u), uvec4(178839u, 67962u, 184818u, 132896u));
            }
           {
            mat3x2(mat2(-7.6, -70.31, -1127.4887, 9.3));
            if(_GLF_DEAD(false))
             continue;
           }
          }
         else
          {
          }
         while((true != (vec4(741.494, 538.770, 1.6, 9.6) == vec4(-1.3, -9581.5501, -58.92, -2.4))))
          {
           while(true)
            {
             bvec3 _GLF_SWITCH_3_76v[21], _GLF_SWITCH_3_77v;
             int _GLF_SWITCH_3_78v, _GLF_SWITCH_3_79v, _GLF_SWITCH_3_80v;
             (mat2x4(1.3, -56.85, 8255.6736, -5445.7624, 9886.8261, -0.6, -7.3, -8676.9320) / mat2x4(-9.5, -8.3, 2567.9339, -0.8, 9417.1943, 66.86, 1922.4202, -0.8));
             ivec2(-19545, 22432);
             mat3x4 _GLF_SWITCH_3_81v, _GLF_SWITCH_3_82v, _GLF_SWITCH_3_83v;
             (mat3(6.7, -5.5, -4.2, 90.09, -1.3, -97.71, -9.2, -7405.8382, 5031.4857) == mat3(-5.9, -0.7, 1050.9240, -5.1, 79.69, 4.4, -0.7, -961.276, -3.1));
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           mat2x3 _GLF_SWITCH_3_84v, _GLF_SWITCH_3_85v, _GLF_SWITCH_3_86v;
           if((60158 != 10935))
            {
             switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
              {
               case 0:
               mat3x2(396.337, -19.40, -505.204, 7633.5114, 560.390, 84.32);
               case 85:
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               vec2 _GLF_SWITCH_3_87v, _GLF_SWITCH_3_88v, _GLF_SWITCH_3_89v;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                continue;
               mat3x2(1.1, -3.9, 755.535, -2770.0705, -1.7, 7.8);
               case 75:
               case 58:
               case 22:
               case 72:
               bvec2(bvec3(false, true, true));
               case 95:
               (workgroup_base != subgroup_size);
               mat2x4(-0.7, 7.2, -556.174, -4.3, -3136.8837, 2417.0546, 3.0, 83.64);
               case 88:
               case 16:
               case 47:
               bvec2 _GLF_SWITCH_3_90v[58];
               break;
               default:
               1;
              }
            }
           else
            {
             uint _GLF_SWITCH_3_91v;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              break;
             mat4x3 _GLF_SWITCH_3_92v, _GLF_SWITCH_3_93v;
             ivec4 _GLF_SWITCH_3_94v, _GLF_SWITCH_3_95v[92];
             mat2 _GLF_SWITCH_3_96v;
            }
           for(uvec4 _GLF_SWITCH_3_97v[45], _GLF_SWITCH_3_98v, _GLF_SWITCH_3_99v[53]; (uvec2(197706u, 196556u) != (uvec2(184681u, 242u))); ((ivec3(95857, 732, 13545) + ivec3(77351, -4057, 69498)) - 63299))
            {
             switch(_GLF_SWITCH((0 << _GLF_IDENTITY(int(3), int(3)))))
              {
               case 85:
               (-311.557 + (mat3x2(-59.87, -923.941, -0.5, 9.5, 1.0, -1.6) - mat3x2(-4.7, 87.96, 18.19, -633.540, 9.1, 2472.1305)));
               case 0:
               case 2:
               mat4x2(_GLF_SWITCH_3_85v);
               ;
               mat3(-956.097, 0.0, 8019.7524, -199.333, 56.65, -1.1, -3917.1398, 2131.6249, 9005.0030);
               case 6:
               case 95:
               float _GLF_SWITCH_3_100v, _GLF_SWITCH_3_101v[32];
               break;
               case 45:
               uvec2 _GLF_SWITCH_5_0v, _GLF_SWITCH_5_1v;
               default:
               1;
              }
            }
           {
            bvec3(false, ((uvec3(134347u, 76350u, 111660u) / num_workgroup) != uvec3(68712u, 101157u, 6534u)), (workgroup_id > num_workgroup));
            mat2(-1.3, 1836.4798, -400.639, 346.539);
            mat3x2(-8.6, 8.8, -6.7, 9511.6177, 3.6, -2638.9505);
            if(_GLF_DEAD(false))
             barrier();
            uvec4 _GLF_SWITCH_3_102v, _GLF_SWITCH_3_103v;
            (uvec2(2254u, 20745u) >> num_workgroup);
            if(_GLF_DEAD(false))
             barrier();
            mat3x4(17.44, 8.9, -6702.2813, -4.7, 6.3, -28.14, -3375.0824, 1929.2541, -1439.2392, -28.48, -2761.7465, -1.1);
            bvec4 _GLF_SWITCH_3_104v[64], _GLF_SWITCH_3_105v[82], _GLF_SWITCH_3_106v;
           }
          }
         while(true)
          {
           lessThanEqual((uvec4(uvec3(63146u, 68799u, 68555u), 67807u) - subgroup_id), uvec4(67776u, 38103u, 131439u, 97910u));
           if(_GLF_DEAD(false))
            barrier();
           round(-9586.6519);
           ;
          }
         mat3x2(0.7, 3.5, -97.84, 9771.3053, -2930.6908, 2.2);
         ;
        }
       case 42:
       mat2 _GLF_SWITCH_3_107v, _GLF_SWITCH_3_108v;
       default:
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       1;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
