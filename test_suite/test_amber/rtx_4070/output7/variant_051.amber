#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 0) uniform buf0 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(1 * _GLF_IDENTITY((1), clamp(_GLF_IDENTITY((1), ((1)) ^ 0), (1), (1))), int(ivec4(1 * _GLF_IDENTITY((1), clamp(_GLF_IDENTITY((1), ((1)) ^ 0), (1), (1))), 0, 1, 0)))), (_GLF_IDENTITY(1, _GLF_IDENTITY(1 * _GLF_IDENTITY((1), clamp(_GLF_IDENTITY((1), ((1)) ^ 0), (1), (1))), int(ivec4(1 * _GLF_IDENTITY((1), clamp(_GLF_IDENTITY((1), ((1)) ^ 0), (1), (1))), 0, 1, 0))))) | (_GLF_IDENTITY(1, _GLF_IDENTITY(1 * _GLF_IDENTITY((1), clamp(_GLF_IDENTITY((1), ((1)) ^ 0), (1), (1))), int(ivec4(1 * _GLF_IDENTITY((1), clamp(_GLF_IDENTITY((1), ((1)) ^ 0), (1), (1))), 0, 1, 0)))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), min(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), 0.0 + (_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, cos(0.0), 0.0))))), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(32.68, -580.190)))).x))), (_GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-246.859))), injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))) / round(length(normalize(vec3(1.0, 1.0, 1.0)))))))), (int(_GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-535.531)), float(0.0), bool(true))), injectionSwitch.x), _GLF_IDENTITY(max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), mix(float(max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), float(_GLF_FUZZED(_GLF_IDENTITY(5.1, _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(5.1, max(5.1, 5.1)), 0.0, 1.0, 1.0, 1.0, 0.0)), (float(mat2x3(_GLF_IDENTITY(5.1, max(5.1, 5.1)), 0.0, 1.0, 1.0, 1.0, 0.0))) * 1.0)))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) - 0)); _GLF_IDENTITY(_injected_loop_counter --, 0 + (_injected_loop_counter --)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-1.2), _GLF_FUZZED(18.55)), bvec2(false, false))))).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) || false), false, true, _GLF_IDENTITY(true, (true) || false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize)))) | uvec3(0u, 0u, 0u), max((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) + (gl_WorkGroupSize)), uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize)))))) | uvec3(0u, 0u, 0u), (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize)))) | uvec3(0u, 0u, 0u))), uvec3(uvec3(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize)))) | uvec3(_GLF_IDENTITY(0u, (0u) + 0u), 0u, 0u), max(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize)))), ((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize))))) >> uvec3(0u, 0u, 0u)) | uvec3(0u, 0u, 0u), (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize)))) | uvec3(0u, 0u, 0u)))))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize)))) | uvec3(0u, 0u, 0u), max((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize)))) | uvec3(0u, 0u, 0u), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize)))) | uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize)))) | uvec3(0u, 0u, 0u), min((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize)))) | uvec3(0u, 0u, 0u), (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize)))) | uvec3(0u, 0u, 0u))))))), uvec3(uvec3(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize)))) | uvec3(_GLF_IDENTITY(0u, (0u) + 0u), 0u, 0u), max((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize)))) | uvec3(0u, 0u, 0u), (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize)))) | uvec3(0u, 0u, 0u))))))) >> uvec3(0u, 0u, 0u))).x;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, (workgroup_size) / 1u) * workgroup_id;
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, min(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, workgroup_base + subgroup_id * subgroup_size + subgroup_local_id)), (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id) << 0u);
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) | _GLF_IDENTITY((1), min(_GLF_IDENTITY((1), ((1)) ^ 0), _GLF_IDENTITY((1), min((1), (1)))))), min(_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u) + _GLF_IDENTITY(1, clamp(1, 1, 1)), _GLF_IDENTITY(subgroup_local_id + 1, min(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / 1u), subgroup_local_id + 1)))), subgroup_local_id + 1))) % _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))), (~ (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))) << 0u))), (false ? _GLF_FUZZED(workgroup_size) : (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (1)), _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1)), subgroup_local_id + 1)), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec2(subgroup_local_id + 1, uint(_GLF_ONE(1.0, injectionSwitch.y))))), (subgroup_local_id + 1) | (_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec2(subgroup_local_id + 1, uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1)), subgroup_local_id + 1))) % subgroup_size)));
 _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid] = 1, (buf[virtual_gid] = 1) + 0u), _GLF_IDENTITY(1u, (1u) ^ 0u) * (buf[virtual_gid] = 1)), 0u ^ (_GLF_IDENTITY(buf[virtual_gid] = 1, ~ (~ _GLF_IDENTITY((buf[virtual_gid] = 1), 0u | ((buf[virtual_gid] = _GLF_IDENTITY(1, clamp(1, 1, 1)))))))));
 if(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(bool(bvec3(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), subgroup_size)), _GLF_IDENTITY(true, (true) && true), false)), ! _GLF_IDENTITY((! (bool(bvec3(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, (true) && true), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(true, (true) && true), false), false))))), false)))), ((! (bool(bvec3(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, (true) && true), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(true, (true) && true), false), false))))), false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), 1 * (~ (1))))), (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(0u), uint(0u)), max(0u << _GLF_IDENTITY(uint(0u), uint(0u)), 0u << _GLF_IDENTITY(uint(0u), uint(0u))))) ^ (subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1))))) < subgroup_size, _GLF_IDENTITY(bool(bvec3(subgroup_local_id + _GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, min(1, 1)), 1)))) < subgroup_size, true, false)), ! (! (_GLF_IDENTITY(bool(bvec3(subgroup_local_id + _GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, min(1, 1)), 1)))) < subgroup_size, true, false)), (bool(bvec3(subgroup_local_id + _GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, min(1, 1)), 1)))) < subgroup_size, true, false))) && true))))))), false))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y))), false)), true && (bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y))), false))))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))) > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y))))))))))))) && true))), bool(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(2), _GLF_IDENTITY(4, (false ? _GLF_IDENTITY(_GLF_FUZZED(-36429), (_GLF_FUZZED(-36429)) >> 0) : 4)), 64, 0);
   subgroupAll(false);
  }
 else
  {
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(_GLF_IDENTITY(2, _GLF_IDENTITY(min(2, 2), _GLF_IDENTITY((min(2, 2)) << (0 >> _GLF_IDENTITY(int(8), int(8))), ((min(2, 2)) << (0 >> _GLF_IDENTITY(int(8), int(8)))) | (_GLF_IDENTITY((min(2, 2)) << (0 >> _GLF_IDENTITY(int(8), int(8))), ((min(2, 2)) << (0 >> _GLF_IDENTITY(int(8), int(8)))) | (_GLF_IDENTITY((min(2, 2)) << (0 >> _GLF_IDENTITY(int(8), int(8))), (true ? (min(2, 2)) << (0 >> _GLF_IDENTITY(int(8), int(8))) : _GLF_FUZZED(-76412))))))))), (_GLF_IDENTITY(2, _GLF_IDENTITY(min(2, 2), _GLF_IDENTITY(_GLF_IDENTITY((min(2, 2)) << (0 >> _GLF_IDENTITY(int(8), int(8))), max((min(2, 2)) << (0 >> _GLF_IDENTITY(int(8), int(8))), (min(2, 2)) << (0 >> _GLF_IDENTITY(int(8), int(8))))), (_GLF_IDENTITY((min(2, 2)) << (0 >> _GLF_IDENTITY(int(8), int(8))), max((min(2, 2)) << (0 >> _GLF_IDENTITY(int(8), int(8))), (min(2, 2)) << (0 >> _GLF_IDENTITY(int(8), int(8)))))) + 0)))) | int(_GLF_ZERO(0.0, injectionSwitch.x)))), 4, 64, 0);
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_IF_FALSE(false), false), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, true && (false))), ! (! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, true && (false))))))))), false))), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(_GLF_WRAPPED_IF_FALSE(false), false)))), bvec2(bvec4(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_IF_FALSE(false), false), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_IF_FALSE(false), false), bvec2(bvec4(bvec2(_GLF_WRAPPED_IF_FALSE(false), false), false, false))))))))), false, true)))))))), _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false))))), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bool(_GLF_WRAPPED_IF_FALSE(false)))), _GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), true, true)))), bool(bool(! (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), true, true))))))))), true && (false))))), false), _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y) && true, ! (! ((injectionSwitch.x < injectionSwitch.y) && true))))), ! (! (! (injectionSwitch.x < injectionSwitch.y))))))), ! (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x < injectionSwitch.y)) || false))))), false)))), bool(bvec2(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bool(false))), false), bvec2(bvec4(bvec2(false, false), true, true)))), ! (! _GLF_IDENTITY((bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, true))))), bool(bvec4((bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, true))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), max((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))).y)), false))))))) || false)), false), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_WRAPPED_IF_FALSE(false), false)), bvec2(bvec2(bvec2(bvec2(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bool(false)))), false))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bool(false))), false), bvec2(bvec4(bvec2(false, false), true, true)))), ! (! _GLF_IDENTITY((bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, true))), bvec2(bvec2(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, true)))))))), bool(bvec4((bool(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(false, false || (false))), bvec2(bvec4(bvec2(false, false), true, true))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < injectionSwitch.y)), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), max((injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED(mat2(415.614, 333.215, 5491.3918, -11.48)) : _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) - mat2(0.0, 0.0, 0.0, 0.0)))), (injectionSwitch) * mat2(1.0)))).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), max((injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED(mat2(415.614, 333.215, 5491.3918, -11.48)) : _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) - mat2(0.0, 0.0, 0.0, 0.0)))), (injectionSwitch) * mat2(1.0)))).y)) || false)), false))))))) || false)), false), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_WRAPPED_IF_FALSE(false), false)), bvec2(bvec2(bvec2(bvec2(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bool(false)))), false)))))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_WRAPPED_IF_FALSE(false), false)), bvec2(bvec2(bvec2(bvec2(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bool(false)))), false)))))))))))))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bvec2(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false)))), false))), ! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), true && (_GLF_WRAPPED_IF_FALSE(false))), bool(bvec2(_GLF_WRAPPED_IF_FALSE(false), false)))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bvec2(_GLF_WRAPPED_IF_FALSE(false), false)))), _GLF_IDENTITY(bool(bvec3(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bvec2(_GLF_WRAPPED_IF_FALSE(false), false)))), true, false)), ! (! (bool(bvec3(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bvec2(_GLF_WRAPPED_IF_FALSE(false), false)))), true, false)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bvec2(_GLF_WRAPPED_IF_FALSE(false), false)))), (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bvec2(_GLF_WRAPPED_IF_FALSE(false), false))))) && true), bool(bvec2(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bvec2(_GLF_WRAPPED_IF_FALSE(false), false)))), false)))))), true, false, false)), (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bvec2(_GLF_WRAPPED_IF_FALSE(false), false)))), _GLF_IDENTITY(bool(bvec3(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bvec2(_GLF_WRAPPED_IF_FALSE(false), false)))), true, false)), ! (! (bool(bvec3(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bvec2(_GLF_WRAPPED_IF_FALSE(false), false)))), true, false)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bvec2(_GLF_WRAPPED_IF_FALSE(false), false)))), (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bvec2(_GLF_WRAPPED_IF_FALSE(false), false))))) && true), bool(bvec2(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bvec2(_GLF_WRAPPED_IF_FALSE(false), false)))), false)))))), true, false, false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)) || false, ! _GLF_IDENTITY((_GLF_IDENTITY(! ((_GLF_WRAPPED_IF_FALSE(false)) || false), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(! ((_GLF_WRAPPED_IF_FALSE(false)) || false), false, true), bvec3(bvec4(bvec3(! ((_GLF_WRAPPED_IF_FALSE(false)) || false), false, true), false))), bvec3(bvec4(bvec3(! ((_GLF_WRAPPED_IF_FALSE(false)) || false), _GLF_IDENTITY(false, (false) && true), true), true)))))), bool(bvec3((_GLF_IDENTITY(! ((_GLF_WRAPPED_IF_FALSE(false)) || false), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(! ((_GLF_WRAPPED_IF_FALSE(false)) || false), false, true), bvec3(bvec4(bvec3(! ((_GLF_WRAPPED_IF_FALSE(false)) || false), false, true), false))), bvec3(bvec4(bvec3(! ((_GLF_WRAPPED_IF_FALSE(false)) || false), _GLF_IDENTITY(false, (false) && true), true), true)))))), true, false)))))), _GLF_IDENTITY(! _GLF_IDENTITY((! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y)) || (false))), (_GLF_WRAPPED_IF_FALSE(false)) || false)), false || ((_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y)) || (false))), (_GLF_WRAPPED_IF_FALSE(false)) || false)))))), ! (! (_GLF_IDENTITY((! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y)) || (false))), (_GLF_WRAPPED_IF_FALSE(false)) || false)), false || ((_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y)) || (false))), (_GLF_WRAPPED_IF_FALSE(false)) || false)))))), ((! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y)) || (false))), (_GLF_WRAPPED_IF_FALSE(false)) || false)), false || ((_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y)) || (false))), (_GLF_WRAPPED_IF_FALSE(false)) || false))))))) || false)))), _GLF_IDENTITY(! (! (! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false)))))), false || (! (! (! (! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false))), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false))), ((! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false)))) || false))))))))))))), false))), bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false)), bool(bool((_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false))))), _GLF_IDENTITY(! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false)))), ! (! (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false))), (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, true)))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false, ! (! (_GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), false))) || false))))))) || false)))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false)), _GLF_IDENTITY(! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false)))), ! (! (! _GLF_IDENTITY((! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y)), false))) || false)))), ! (! ((! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y)), false))) || false))))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false)), _GLF_IDENTITY(! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false)))), ! _GLF_IDENTITY((! (! _GLF_IDENTITY((! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false)))), ! (_GLF_IDENTITY(! ((! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false))))), ! (! (! ((! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false)))))))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((! (! _GLF_IDENTITY((! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false)))), ! (_GLF_IDENTITY(! ((! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false))))), ! (! (! ((! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false)))))))))))), false || ((! (! _GLF_IDENTITY((! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false)))), ! (_GLF_IDENTITY(! ((! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false))))), ! (! (! ((! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false))))))))))))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY((! (! _GLF_IDENTITY((! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false)))), ! (_GLF_IDENTITY(! ((! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false))))), ! (! (! ((! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false)))))))))))), false || ((! (! _GLF_IDENTITY((! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false)))), ! (_GLF_IDENTITY(! ((! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false))))), ! (! (! ((! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false)))))))))))))))), ! (! (! (bool(_GLF_IDENTITY((! (! _GLF_IDENTITY((! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false)))), ! (_GLF_IDENTITY(! ((! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false))))), ! (! (! ((! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false)))))))))))), false || ((! (! _GLF_IDENTITY((! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false)))), ! (_GLF_IDENTITY(! ((! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false))))), ! (! (! ((! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false)))))))))))))))))))))), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((! (! _GLF_IDENTITY((! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false)))), ! (_GLF_IDENTITY(! ((! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false))))), ! (! (! ((! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false)))))))))))), false || ((! (! _GLF_IDENTITY((! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false)))), ! (_GLF_IDENTITY(! ((! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false))))), ! (! (! ((! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false))))))))))))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY((! (! _GLF_IDENTITY((! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false)))), ! (_GLF_IDENTITY(! ((! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false))))), ! (! (! ((! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false)))))))))))), false || ((! (! _GLF_IDENTITY((! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false)))), ! (_GLF_IDENTITY(! ((! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false))))), ! (! (! ((! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false)))))))))))))))), ! (! (! (bool(_GLF_IDENTITY((! (! _GLF_IDENTITY((! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false)))), ! (_GLF_IDENTITY(! ((! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false))))), ! (! (! ((! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false)))))))))))), false || ((! (! _GLF_IDENTITY((! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false)))), ! (_GLF_IDENTITY(! ((! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false))))), ! (! (! ((! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false))))))))))))))))))))))) || false)))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false)), _GLF_IDENTITY(! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_WRAPPED_IF_FALSE(false)))), (_GLF_WRAPPED_IF_FALSE(false)) || false)))), ! (! _GLF_IDENTITY((! (! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false)), false || (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false)))))))), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false)), false || (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false)))))))), bool(bvec4((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false)), false || (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false)))))))), true, true, true)))))))), false || (_GLF_IDENTITY((! (! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false)), false || (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false)))))))), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false)), false || (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false)))))))), bool(bvec4((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false)), false || (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false)))))))), true, true, true)))))))), false || ((! (! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false)), false || (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false)))))))), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false)), false || (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false)))))))), bool(bvec4((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false)), false || (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false)))))))), true, true, true)))))))))))))))))))), true, _GLF_IDENTITY(true, (true) && true), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)))), false || (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false)), _GLF_IDENTITY(! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false)))), ! (! (! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false)))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false)), _GLF_IDENTITY(! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false)))), ! (! (! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false)))))))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false)), _GLF_IDENTITY(! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false)))), ! (! (! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false))))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false)))), _GLF_IDENTITY(! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true), (_GLF_WRAPPED_IF_FALSE(false)) || false)))), ! (! (! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false)))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))))), true && (bool(bool(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))))))), _GLF_IDENTITY(! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false)))), ! (_GLF_IDENTITY(! (! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false))))), false || (! (! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false)))))))))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_WRAPPED_IF_FALSE(false)))), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || false)), _GLF_IDENTITY(! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false)))), ! (! (! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false, true, false)), bool(bool(bool(bvec3(_GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false, true, false)))))))))))))))))))) || false), _GLF_IDENTITY(true, (true) && true), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false)), bool(bool((_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false))))), _GLF_IDENTITY(! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false)))), ! (! (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false))), (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, true)))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false, ! (! (_GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), false))) || false))))))) || false)))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false)), _GLF_IDENTITY(! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false)))), ! (! (! _GLF_IDENTITY((! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y)), false))) || false)))), ! (! ((! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y)), false))) || false))))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false)), _GLF_IDENTITY(! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false)))), ! _GLF_IDENTITY((! (! _GLF_IDENTITY((! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false)))), ! (_GLF_IDENTITY(! ((! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false))))), ! (! (! ((! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false)))))))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((! (! _GLF_IDENTITY((! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false)))), ! (_GLF_IDENTITY(! ((! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false))))), ! (! (! ((! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false)))))))))))), false || ((! (! _GLF_IDENTITY((! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false)))), ! (_GLF_IDENTITY(! ((! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false))))), ! (! (! ((! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false))))))))))))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY((! (! _GLF_IDENTITY((! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false)))), ! (_GLF_IDENTITY(! ((! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false))))), ! (! (! ((! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false)))))))))))), false || ((! (! _GLF_IDENTITY((! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false)))), ! (_GLF_IDENTITY(! ((! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false))))), ! (! (! ((! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false)))))))))))))))), ! (! (! (bool(_GLF_IDENTITY((! (! _GLF_IDENTITY((! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false)))), ! (_GLF_IDENTITY(! ((! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false))))), ! (! (! ((! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false)))))))))))), false || ((! (! _GLF_IDENTITY((! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false)))), ! (_GLF_IDENTITY(! ((! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false))))), ! (! (! ((! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false)))))))))))))))))))))), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((! (! _GLF_IDENTITY((! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false)))), ! (_GLF_IDENTITY(! ((! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false))))), ! (! (! ((! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false)))))))))))), false || ((! (! _GLF_IDENTITY((! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false)))), ! (_GLF_IDENTITY(! ((! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false))))), ! (! (! ((! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false))))))))))))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY((! (! _GLF_IDENTITY((! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false)))), ! (_GLF_IDENTITY(! ((! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false))))), ! (! (! ((! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false)))))))))))), false || ((! (! _GLF_IDENTITY((! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false)))), ! (_GLF_IDENTITY(! ((! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false))))), ! (! (! ((! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false)))))))))))))))), ! (! (! (bool(_GLF_IDENTITY((! (! _GLF_IDENTITY((! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false)))), ! (_GLF_IDENTITY(! ((! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false))))), ! (! (! ((! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false)))))))))))), false || ((! (! _GLF_IDENTITY((! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false)))), ! (_GLF_IDENTITY(! ((! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false))))), ! (! (! ((! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false))))))))))))))))))))))) || false)))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false)), _GLF_IDENTITY(! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_WRAPPED_IF_FALSE(false)))), (_GLF_WRAPPED_IF_FALSE(false)) || false)))), ! (! _GLF_IDENTITY((! (! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false)), false || (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false)))))))), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false)), false || (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false)))))))), bool(bvec4((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false)), false || (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false)))))))), true, true, true)))))))), false || (_GLF_IDENTITY((! (! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false)), false || (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false)))))))), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false)), false || (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false)))))))), bool(bvec4((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false)), false || (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false)))))))), true, true, true)))))))), false || ((! (! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false)), false || (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false)))))))), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false)), false || (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false)))))))), bool(bvec4((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false)), false || (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false)))))))), true, true, true)))))))))))))))))))), true, _GLF_IDENTITY(true, (true) && true), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)))), false || (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false)), _GLF_IDENTITY(! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false)))), ! (! (! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false)))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false)), _GLF_IDENTITY(! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false)))), ! (! (! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false)))))))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false)), _GLF_IDENTITY(! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false)))), ! (! (! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false))))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false)))), _GLF_IDENTITY(! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true), (_GLF_WRAPPED_IF_FALSE(false)) || false)))), ! (! (! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false)))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))))), true && (bool(bool(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))))))), _GLF_IDENTITY(! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false)))), ! (_GLF_IDENTITY(! (! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false))))), false || (! (! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false)))))))))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_WRAPPED_IF_FALSE(false)))), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || false)), _GLF_IDENTITY(! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false)))), ! (! (! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false, true, false)), bool(bool(bool(bvec3(_GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false, true, false)))))))))))))))))))) || false), _GLF_IDENTITY(true, (true) && true), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) || false)), false))))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)) || false, ! (_GLF_IDENTITY(! ((_GLF_WRAPPED_IF_FALSE(false)) || false), bool(_GLF_IDENTITY(bvec3(! ((_GLF_WRAPPED_IF_FALSE(false)) || false), false, true), bvec3(bvec4(bvec3(! ((_GLF_WRAPPED_IF_FALSE(false)) || false), false, true), true))))))))), _GLF_IDENTITY(! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))), (_GLF_WRAPPED_IF_FALSE(false)) || false)))), ! (! (! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false)))))))))), false))), bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false)), _GLF_IDENTITY(! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false)))), ! (! (! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false)))))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false)), _GLF_IDENTITY(! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false)))), ! (! (! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false)))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false)), _GLF_IDENTITY(! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false)))), ! (! (! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false)))))))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false)), _GLF_IDENTITY(! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false)))), ! (! (! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false))))))))))))), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false)), _GLF_IDENTITY(! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false)))), ! (! (! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false)))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false)), _GLF_IDENTITY(! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false)))), ! (! (! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false)))))))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false)), _GLF_IDENTITY(! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false)))), ! (! (! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false))))))))))))), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), false))))))), true && ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)) || false, ! (_GLF_IDENTITY(! ((_GLF_WRAPPED_IF_FALSE(false)) || false), bool(_GLF_IDENTITY(bvec3(! ((_GLF_WRAPPED_IF_FALSE(false)) || false), false, true), bvec3(bvec4(bvec3(! ((_GLF_WRAPPED_IF_FALSE(false)) || false), false, true), true))))))))), _GLF_IDENTITY(! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))), (_GLF_WRAPPED_IF_FALSE(false)) || false)))), ! (! (! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false)))))))))), false))), bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false)), _GLF_IDENTITY(! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false)))), ! (! (! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false)))))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false)), _GLF_IDENTITY(! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false)))), ! (! (! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false)))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false)), _GLF_IDENTITY(! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false)))), ! (! (! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false)))))))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false)), _GLF_IDENTITY(! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false)))), ! (! (! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false))))))))))))), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false)), _GLF_IDENTITY(! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false)))), ! (! (! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false)))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false)), _GLF_IDENTITY(! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false)))), ! (! (! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false)))))))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false)), _GLF_IDENTITY(! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false)))), ! (! (! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false))))))))))))), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), false))))))))), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)) || false, ! (_GLF_IDENTITY(! ((_GLF_WRAPPED_IF_FALSE(false)) || false), bool(_GLF_IDENTITY(bvec3(! ((_GLF_WRAPPED_IF_FALSE(false)) || false), false, true), bvec3(bvec4(bvec3(! ((_GLF_WRAPPED_IF_FALSE(false)) || false), false, true), true))))))))), _GLF_IDENTITY(! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))), (_GLF_WRAPPED_IF_FALSE(false)) || false)))), ! (! (! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false)))))))))), false))), bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false)), _GLF_IDENTITY(! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false)))), ! (! (! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false)))))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false)), _GLF_IDENTITY(! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false)))), ! (! (! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false)))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false)), _GLF_IDENTITY(! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false)))), ! (! (! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false)))))))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false)), _GLF_IDENTITY(! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false)))), ! (! (! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false))))))))))))), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false)), _GLF_IDENTITY(! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false)))), ! (! (! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false)))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false)), _GLF_IDENTITY(! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false)))), ! (! (! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false)))))))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false)), _GLF_IDENTITY(! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false)))), ! (! (! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false))))))))))))), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), false))))))), true && ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)) || false, ! (_GLF_IDENTITY(! ((_GLF_WRAPPED_IF_FALSE(false)) || false), bool(_GLF_IDENTITY(bvec3(! ((_GLF_WRAPPED_IF_FALSE(false)) || false), false, true), bvec3(bvec4(bvec3(! ((_GLF_WRAPPED_IF_FALSE(false)) || false), false, true), true))))))))), _GLF_IDENTITY(! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))), (_GLF_WRAPPED_IF_FALSE(false)) || false)))), ! (! (! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false)))))))))), false))), bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false)), _GLF_IDENTITY(! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false)))), ! (! (! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false)))))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false)), _GLF_IDENTITY(! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false)))), ! (! (! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false)))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false)), _GLF_IDENTITY(! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false)))), ! (! (! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false)))))))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false)), _GLF_IDENTITY(! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false)))), ! (! (! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false))))))))))))), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false)), _GLF_IDENTITY(! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false)))), ! (! (! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false)))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false)), _GLF_IDENTITY(! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false)))), ! (! (! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false)))))))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false)), _GLF_IDENTITY(! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false)))), ! (! (! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false))))))))))))), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), false))))))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))) || false)), false || ((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bvec2(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), true, false, false)))), bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), true, false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), false)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), false)), ! (! (bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), false))))), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 0.0))), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), injectionSwitch.y))))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) || false))), false)), ! (! (bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), false))))), _GLF_IDENTITY(false, false || (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), true, false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), false)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), false)), ! (! (bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), false))))), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 0.0))), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), injectionSwitch.y))))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) || false))), false)), ! (! (bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), false))))), _GLF_IDENTITY(false, false || (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))), ! (! (bool(bool(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), true, false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), false)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), false)), ! (! (bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), false))))), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 0.0))), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), injectionSwitch.y))))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) || false))), false)), ! (! (bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), false))))), _GLF_IDENTITY(false, false || (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))))))), false || (bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), true, false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), false)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), false)), ! (! (bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), false))))), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 0.0))), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), injectionSwitch.y))))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) || false))), false)), ! (! (bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), false))))), _GLF_IDENTITY(false, false || (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))), ! (! (bool(bool(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), true, false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), false)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), false)), ! (! (bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), false))))), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 0.0))), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), injectionSwitch.y))))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) || false))), false)), ! (! (bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), false))))), _GLF_IDENTITY(false, false || (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))))))))), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), false)))), bool(bvec4(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bvec2(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, true)), (bool(bvec4(false, false, false, true))) && true))) && true)), false)))), true, _GLF_IDENTITY(false, bool(bvec2(false, false))), false))), (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)) || false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)) || false, ((_GLF_WRAPPED_IF_FALSE(false)) || false) || false)), ! (! (! (_GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)) || false, ((_GLF_WRAPPED_IF_FALSE(false)) || false) || false))))))))), _GLF_IDENTITY(! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false)))), ! (! (! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))), false))) || false)))))))))), false)))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false)))), _GLF_IDENTITY(! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)) || false, true && ((_GLF_WRAPPED_IF_FALSE(false)) || false)))))), ! (! (! _GLF_IDENTITY((! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false)))), false || ((! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false)))))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY((! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false)))), false || ((! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false)))))), true))))), ! (! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false)))), false || ((! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false)))))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY((! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false)))), false || ((! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false)))))), true))))))))))))))), false))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false)), _GLF_IDENTITY(! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false)))), ! (! (! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false)))))))))), false)))), bool(bvec3(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false)), _GLF_IDENTITY(! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false)))), ! (! (! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false)))))))))), false)))), true, false))), ! (! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false)), _GLF_IDENTITY(! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, true && (false)))) || false), (_GLF_WRAPPED_IF_FALSE(false)) || false)))), ! (! (! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false, ! (! (_GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(537.669) : injectionSwitch.y)))), false))) || false))))))))))))), false)))), true && ((_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false)), _GLF_IDENTITY(! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, true && (false)))) || false), (_GLF_WRAPPED_IF_FALSE(false)) || false)))), ! (! (! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false, ! (! (_GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(537.669) : injectionSwitch.y)))), false))) || false))))))))))))), false)))))), bool(bvec3(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false)), _GLF_IDENTITY(! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false)))), ! (! (! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false)))))))))), false)))), true, false)))))))))), bool(bvec3(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false)), _GLF_IDENTITY(_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false)))), ! (! (! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false))))))), ! (! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false)))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false))))), true && (! (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false))), ! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false)))), bool(bvec3(! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false)))), false, true)))))))))), false || ((_GLF_IDENTITY(! (! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false))))), true && (! (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false))), ! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false)))), bool(bvec3(! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false)))), false, true))))))))))))))))))), false)))), false || (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false)), _GLF_IDENTITY(_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false)))), ! (! (! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false))))))), ! (! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false)))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false))))), true && (! (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false))), ! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false)))), bool(bvec3(! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false)))), false, true)))))))))), false || ((_GLF_IDENTITY(! (! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false))))), true && (! (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false))), ! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false)))), bool(bvec3(! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false)))), false, true))))))))))))))))))), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false)), _GLF_IDENTITY(_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || false)))), ! (! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false)))), ! (_GLF_IDENTITY(! (! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false))))), ! (! (! (! _GLF_IDENTITY((! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(true, ! (! (true))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))), _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))) || false)))), true && ((! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(true, ! (! (true))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))), _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))) || false))))))))))))))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false)))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false))))), true && (! (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false, (_GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false) && true)))), ! (_GLF_IDENTITY(! (! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, log(1.0), 1.0, 1.0, 0.0, 0.0))))) > injectionSwitch.y)), false))) || false)), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, log(1.0), 1.0, 1.0, 0.0, 0.0))))) > injectionSwitch.y)), false))) || false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec4(bvec3((_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, log(1.0), 1.0, 1.0, 0.0, 0.0))))) > injectionSwitch.y)), false))) || false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), true))))))), bool(bvec3(! (! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false), false || (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4x3(injectionSwitch.y, abs(0.0), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), (float(mat4x3(injectionSwitch.y, abs(0.0), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0))) - 0.0)))), false))) || false))))), ((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false), false || (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4x3(injectionSwitch.y, abs(0.0), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), (float(mat4x3(injectionSwitch.y, abs(0.0), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0))) - 0.0)))), false))) || false)))))) || false)), false, true)))))))))), false || ((_GLF_IDENTITY(! (! (! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))))), true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))), false))) || false))), true && ((! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))))), true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))), false))) || false))))))), true && (! (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), bool(bvec4(_GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), false, false, _GLF_IDENTITY(false, (false) && true)))) || false))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_WRAPPED_IF_FALSE(false)))), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), ! (! (bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))) || false)))), true && ((! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_WRAPPED_IF_FALSE(false)))), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), ! (! (bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))) || false)))))), bool(bvec3(! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false)))), false, true)))))))))))))), false || ((_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false)))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false))))), true && (! (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false, (_GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false) && true)))), ! (_GLF_IDENTITY(! (! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, log(1.0), 1.0, 1.0, 0.0, 0.0))))) > injectionSwitch.y)), false))) || false)), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, log(1.0), 1.0, 1.0, 0.0, 0.0))))) > injectionSwitch.y)), false))) || false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec4(bvec3((_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, log(1.0), 1.0, 1.0, 0.0, 0.0))))) > injectionSwitch.y)), false))) || false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), true))))))), bool(bvec3(! (! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false), false || (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4x3(injectionSwitch.y, abs(0.0), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), (float(mat4x3(injectionSwitch.y, abs(0.0), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0))) - 0.0)))), false))) || false))))), ((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false), false || (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4x3(injectionSwitch.y, abs(0.0), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), (float(mat4x3(injectionSwitch.y, abs(0.0), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0))) - 0.0)))), false))) || false)))))) || false)), false, true)))))))))), false || ((_GLF_IDENTITY(! (! (! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))))), true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))), false))) || false))), true && ((! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))))), true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))), false))) || false))))))), true && (! (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), bool(bvec4(_GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), false, false, _GLF_IDENTITY(false, (false) && true)))) || false))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_WRAPPED_IF_FALSE(false)))), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), ! (! (bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))) || false)))), true && ((! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_WRAPPED_IF_FALSE(false)))), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), ! (! (bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))) || false)))))), bool(bvec3(! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false)))), false, true)))))))))))))))))))))))), false))))))), ((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false)), _GLF_IDENTITY(_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false)))), ! (! (! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false))))))), ! (! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false)))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false))))), true && (! (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false))), ! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false)))), bool(bvec3(! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false)))), false, true)))))))))), false || ((_GLF_IDENTITY(! (! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false))))), true && (! (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false))), ! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false)))), bool(bvec3(! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false)))), false, true))))))))))))))))))), false)))), false || (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false)), _GLF_IDENTITY(_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false)))), ! (! (! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false))))))), ! (! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false)))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false))))), true && (! (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false))), ! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false)))), bool(bvec3(! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false)))), false, true)))))))))), false || ((_GLF_IDENTITY(! (! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false))))), true && (! (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false))), ! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false)))), bool(bvec3(! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false)))), false, true))))))))))))))))))), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false)), _GLF_IDENTITY(_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || false)))), ! (! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false)))), ! (_GLF_IDENTITY(! (! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false))))), ! (! (! (! _GLF_IDENTITY((! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(true, ! (! (true))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))), _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))) || false)))), true && ((! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(true, ! (! (true))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))), _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))) || false))))))))))))))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false)))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false))))), true && (! (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false, (_GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false) && true)))), ! (_GLF_IDENTITY(! (! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, log(1.0), 1.0, 1.0, 0.0, 0.0))))) > injectionSwitch.y)), false))) || false)), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, log(1.0), 1.0, 1.0, 0.0, 0.0))))) > injectionSwitch.y)), false))) || false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec4(bvec3((_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, log(1.0), 1.0, 1.0, 0.0, 0.0))))) > injectionSwitch.y)), false))) || false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), true))))))), bool(bvec3(! (! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false), false || (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4x3(injectionSwitch.y, abs(0.0), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), (float(mat4x3(injectionSwitch.y, abs(0.0), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0))) - 0.0)))), false))) || false))))), ((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false), false || (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4x3(injectionSwitch.y, abs(0.0), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), (float(mat4x3(injectionSwitch.y, abs(0.0), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0))) - 0.0)))), false))) || false)))))) || false)), false, true)))))))))), false || ((_GLF_IDENTITY(! (! (! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))))), true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))), false))) || false))), true && ((! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))))), true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))), false))) || false))))))), true && (! (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), bool(bvec4(_GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), false, false, _GLF_IDENTITY(false, (false) && true)))) || false))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_WRAPPED_IF_FALSE(false)))), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), ! (! (bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))) || false)))), true && ((! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_WRAPPED_IF_FALSE(false)))), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), ! (! (bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))) || false)))))), bool(bvec3(! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false)))), false, true)))))))))))))), false || ((_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false)))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false))))), true && (! (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false, (_GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false) && true)))), ! (_GLF_IDENTITY(! (! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, log(1.0), 1.0, 1.0, 0.0, 0.0))))) > injectionSwitch.y)), false))) || false)), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, log(1.0), 1.0, 1.0, 0.0, 0.0))))) > injectionSwitch.y)), false))) || false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec4(bvec3((_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, log(1.0), 1.0, 1.0, 0.0, 0.0))))) > injectionSwitch.y)), false))) || false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), true))))))), bool(bvec3(! (! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false), false || (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4x3(injectionSwitch.y, abs(0.0), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), (float(mat4x3(injectionSwitch.y, abs(0.0), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0))) - 0.0)))), false))) || false))))), ((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false), false || (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4x3(injectionSwitch.y, abs(0.0), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), (float(mat4x3(injectionSwitch.y, abs(0.0), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0))) - 0.0)))), false))) || false)))))) || false)), false, true)))))))))), false || ((_GLF_IDENTITY(! (! (! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))))), true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))), false))) || false))), true && ((! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))))), true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))), false))) || false))))))), true && (! (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), bool(bvec4(_GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), false, false, _GLF_IDENTITY(false, (false) && true)))) || false))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_WRAPPED_IF_FALSE(false)))), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), ! (! (bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))) || false)))), true && ((! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_WRAPPED_IF_FALSE(false)))), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), ! (! (bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))) || false)))))), bool(bvec3(! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false)))), false, true)))))))))))))))))))))))), false)))))))) && true), ! _GLF_IDENTITY((! (! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false)), _GLF_IDENTITY(! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false)))), ! (! (! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false)))))))), bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false)), _GLF_IDENTITY(! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false)))), ! (! (! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false)))))))), true, true, false))))), true && (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))), (_GLF_WRAPPED_IF_FALSE(false)) || false)), _GLF_IDENTITY(_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false)))), ! (! (! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false))))))), ! (! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false)))), ! (! (! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), true && (_GLF_WRAPPED_IF_FALSE(false))))))), true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))) : _GLF_FUZZED(normalize(vec2(5106.3056, -4.1))))).y)), false))) || false))))))))))), bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false)), _GLF_IDENTITY(! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false)))), ! (! (! (! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), true && (_GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))), true, true)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))), true, true)), false || (bool(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))), true, true))))), true && (bool(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))), true, true)), false || (bool(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))), true, true)))))))))), (injectionSwitch.x > injectionSwitch.y)), false))))) || false))), ! (! ((! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), true && (_GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))), true, true)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))), true, true)), false || (bool(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))), true, true))))), true && (bool(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))), true, true)), false || (bool(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))), true, true)))))))))), (injectionSwitch.x > injectionSwitch.y)), false))))) || false))))))))))), true, true, false))))))), false))))), ((! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false)), _GLF_IDENTITY(! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false)))), ! (! (! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false)))))))), bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false)), _GLF_IDENTITY(! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false)))), ! (! (! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false)))))))), true, true, false))))), true && (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))), (_GLF_WRAPPED_IF_FALSE(false)) || false)), _GLF_IDENTITY(_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false)))), ! (! (! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false))))))), ! (! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false)))), ! (! (! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), true && (_GLF_WRAPPED_IF_FALSE(false))))))), true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))) : _GLF_FUZZED(normalize(vec2(5106.3056, -4.1))))).y)), false))) || false))))))))))), bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false)), _GLF_IDENTITY(! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false)))), ! (! (! (! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), true && (_GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))), true, true)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))), true, true)), false || (bool(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))), true, true))))), true && (bool(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))), true, true)), false || (bool(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))), true, true)))))))))), (injectionSwitch.x > injectionSwitch.y)), false))))) || false))), ! (! ((! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), true && (_GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))), true, true)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))), true, true)), false || (bool(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))), true, true))))), true && (bool(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))), true, true)), false || (bool(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))), true, true)))))))))), (injectionSwitch.x > injectionSwitch.y)), false))))) || false))))))))))), true, true, false))))))), false)))))) && true))), bool(bool((! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false)), _GLF_IDENTITY(_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false)))), ! (! (! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false))))))), ! (! (! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false)))))))), bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false)), _GLF_IDENTITY(_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false)))), ! (! (! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false)))), ! (! (! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false)))), true && (! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false)))))), _GLF_IDENTITY(! (! (! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false)))))), bool(bvec4(! (! (! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4((_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false)))))), true, false, true)))))))))), true, true, false))))), false))))))))))), true, false)))))) || false))))), false), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) - determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, tan(0.0), 0.0, 1.0, 0.0)), clamp((injectionSwitch.y) - determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, tan(0.0), 0.0, 1.0, 0.0)), _GLF_IDENTITY((injectionSwitch.y) - determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, tan(0.0), 0.0, 1.0, 0.0)), (true ? (injectionSwitch.y) - determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, tan(0.0), 0.0, 1.0, 0.0)) : _GLF_FUZZED(6622.0401))), (injectionSwitch.y) - determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, tan(0.0), 0.0, 1.0, 0.0))))))), false)))), true)))))
    {
    }
   else
    {
     subgroupAll(true);
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec4(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (! (false)))))), true && (bool(bvec2(false, _GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (! (false)))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
