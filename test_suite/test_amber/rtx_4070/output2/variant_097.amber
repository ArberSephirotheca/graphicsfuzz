#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460
struct _GLF_struct_0 {
 vec3 _f0;
 uint workgroup_size;
} ;

layout(set = 0, binding = 0) uniform buf0 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec2 GLF_merged2_0_1_16_1_1_11next_virtual_gidvirtual_gid;
 uvec2 GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base;
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.x = subgroup_size;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 _GLF_struct_0 _GLF_struct_replacement_0 = _GLF_struct_0(vec3(1.0), gl_WorkGroupSize.x);
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = _GLF_struct_replacement_0.workgroup_size * workgroup_id;
 GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y = workgroup_base;
 uint virtual_gid = GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y + subgroup_id * GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.x + subgroup_local_id;
 GLF_merged2_0_1_16_1_1_11next_virtual_gidvirtual_gid.y = virtual_gid;
 uint next_virtual_gid = GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.y + subgroup_id * GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.x + ((subgroup_local_id + 1) % GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.x);
 GLF_merged2_0_1_16_1_1_11next_virtual_gidvirtual_gid.x = next_virtual_gid;
 buf[GLF_merged2_0_1_16_1_1_11next_virtual_gidvirtual_gid.y] = 1;
 if(subgroup_local_id + 1 < GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_base.x)
  {
   int i = 0;
   atomicStore(buf[GLF_merged2_0_1_16_1_1_11next_virtual_gidvirtual_gid.x], uint(2), 4, 64, 4);
  }
 else
  {
   atomicStore(buf[GLF_merged2_0_1_16_1_1_11next_virtual_gidvirtual_gid.x], uint(2), 4, 64, 4);
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
