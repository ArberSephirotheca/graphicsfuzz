#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec2 GLF_merged2_0_1_16_1_1_14next_virtual_gidworkgroup_base;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       barrier();
      }
     else
      {
      }
    }
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false)))))), bool(bvec2(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false)))))), false)))))))
        {
        }
       else
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))
          barrier();
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(2), int(2))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))).x, float(mat3x2(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(3.9) : 1.0)), 1.0) * (injectionSwitch)))).x, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 1.0, 0.0))) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))).x, float(mat3x2(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(3.9) : 1.0)), (false ? _GLF_FUZZED(209.338) : _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(3.9) : 1.0)))), 1.0) * (injectionSwitch)))).x, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(_GLF_IDENTITY(0.0, float(mat4x2(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))), 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 1.0, 0.0))) > injectionSwitch.y)))))))
              barrier();
            }
          }
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
      }
    }
   barrier();
  }
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
      }
     for(int _injected_loop_counter = ((0 | 0) | 0); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != (_GLF_IDENTITY((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) | int(_GLF_ZERO(0.0, injectionSwitch.x))), int(5))), int(_GLF_IDENTITY(ivec4((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(_GLF_IDENTITY(5, 0 | (5)))) | int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))))))), int(5))), 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(clamp(ivec4((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) | int(_GLF_ZERO(0.0, injectionSwitch.x))), int(5))), 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y))), ivec4((_GLF_IDENTITY(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) | int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))))), int(5)), (true ? _GLF_IDENTITY(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) | int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))))), int(5)), (1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) | int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))))), int(5))) + (0 & -9208)) : _GLF_FUZZED(atomicExchange(_injected_loop_counter, -66689))))), 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y))), ivec4((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) | int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_FUZZED(0.3)), float(_GLF_ZERO(0.0, injectionSwitch.x)), bool(true))))), int(5))), 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y)))), (clamp(ivec4((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) | int(_GLF_ZERO(0.0, injectionSwitch.x))), int(5))), 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y))), ivec4((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) | int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))))), int(5))), 0, 0, int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), max(_GLF_FUZZED(injectionSwitch), _GLF_FUZZED(injectionSwitch))))), injectionSwitch)).y))), ivec4((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), (_GLF_IDENTITY(int(5), (0 & -86818) | (int(5)))) | int(_GLF_ZERO(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-6171.3503))), injectionSwitch.x))), int(5))), 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y))))) * ivec4(1, 1, 1, 1))))) >> _GLF_IDENTITY(int(5), int(5))), ! (! (_GLF_IDENTITY(_injected_loop_counter != (_GLF_IDENTITY((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) | int(_GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-3.3)), float(0.0), bool(true))), injectionSwitch.x))), int(5))), int(_GLF_IDENTITY(ivec4((1 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) | int(_GLF_ZERO(0.0, injectionSwitch.x))), int(5)), (_GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) | int(_GLF_ZERO(0.0, injectionSwitch.x))), int(5))) >> _GLF_IDENTITY(0, 0 ^ (0)))), 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(clamp(ivec4(_GLF_IDENTITY((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) | int(_GLF_ZERO(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(3958.6846))), injectionSwitch.x))), int(5))), ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) | int(_GLF_ZERO(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(3958.6846))), injectionSwitch.x))), int(5)))) * 1), 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y))), ivec4((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) | int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) / 1.0))), int(5))), 0, 0, int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))), ivec4(_GLF_IDENTITY((1 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(5), (_GLF_IDENTITY(int(5), _GLF_IDENTITY(int(int(int(5))), (_GLF_IDENTITY(int(int(int(5))), (int(int(int(5)))) << 0)) - 0))) | int(_GLF_ZERO(0.0, injectionSwitch.x))), int(5)), _GLF_IDENTITY(int(int(_GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) | int(_GLF_ZERO(0.0, injectionSwitch.x))), int(5)))), (int(int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) | int(_GLF_ZERO(0.0, injectionSwitch.x))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) | int(_GLF_ZERO(0.0, injectionSwitch.x))), 1 * (_GLF_IDENTITY(int(5), (int(5)) | int(_GLF_ZERO(0.0, injectionSwitch.x)))))))), int(5))))) / 1))), (true ? _GLF_IDENTITY(_GLF_IDENTITY((1 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(_GLF_IDENTITY(5, 0 + (_GLF_IDENTITY(5, min(5, 5)))))) | int(_GLF_ZERO(0.0, injectionSwitch.x))), int(5)), _GLF_IDENTITY(int(int(_GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) | int(_GLF_ZERO(0.0, injectionSwitch.x))), int(5)))), (int(int(_GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) | int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) + 0.0), _GLF_ZERO(0.0, injectionSwitch.x))))), int(5))))) / 1))), 0 | (_GLF_IDENTITY((1 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(_GLF_IDENTITY(5, 0 + (_GLF_IDENTITY(5, min(5, 5)))))) | int(_GLF_ZERO(0.0, injectionSwitch.x))), int(5)), _GLF_IDENTITY(int(int(_GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) | int(_GLF_ZERO(0.0, injectionSwitch.x))), int(5)))), (int(int(_GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) | int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) + 0.0), _GLF_ZERO(0.0, injectionSwitch.x))))), int(5))))) / 1))), 0 + ((1 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(_GLF_IDENTITY(5, 0 + (_GLF_IDENTITY(5, min(5, 5)))))) | int(_GLF_ZERO(0.0, injectionSwitch.x))), int(5)), _GLF_IDENTITY(int(int(_GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) | int(_GLF_ZERO(0.0, injectionSwitch.x))), int(5)))), (int(int(_GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) | int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) + 0.0), _GLF_ZERO(0.0, injectionSwitch.x))))), int(5))))) / 1))))))), max((1 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) | int(_GLF_ZERO(0.0, injectionSwitch.x))), int(5)), _GLF_IDENTITY(int(int(_GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) | int(_GLF_ZERO(0.0, injectionSwitch.x))), int(5)))), (int(int(_GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) | int(_GLF_ZERO(0.0, injectionSwitch.x))), int(5))))) / 1))), (1 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) | int(_GLF_ZERO(0.0, injectionSwitch.x))), int(5)), _GLF_IDENTITY(int(int(_GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) | int(_GLF_ZERO(0.0, injectionSwitch.x))), int(5)))), (int(int(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(5, (0 << _GLF_IDENTITY(int(4), int(4))) | (_GLF_IDENTITY(5, (_GLF_IDENTITY(5, 0 | (5))) >> 0)))), (int(5)) | int(_GLF_ZERO(0.0, injectionSwitch.x))), int(5))))) / 1))))) : _GLF_FUZZED(_injected_loop_counter))), 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y)))), max(_GLF_IDENTITY(clamp(ivec4((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) | int(_GLF_ZERO(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(3958.6846))), injectionSwitch.x))), int(5))), 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y))), ivec4((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) | int(_GLF_ZERO(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(log2(616.675)))), injectionSwitch.x))), int(5))), 0, 0, int(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + log(1.0)), (injectionSwitch.y) / 1.0)))), ivec4(_GLF_IDENTITY((1 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) | int(_GLF_ZERO(0.0, injectionSwitch.x))), int(5)), _GLF_IDENTITY(int(int(_GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) | int(_GLF_ZERO(0.0, injectionSwitch.x))), int(5)))), (int(int(_GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) | int(_GLF_ZERO(0.0, injectionSwitch.x))), int(5))))) / 1))), (true ? _GLF_IDENTITY((1 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) | int(_GLF_ZERO(0.0, injectionSwitch.x))), int(5)), _GLF_IDENTITY(int(int(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(5, int(ivec2(_GLF_IDENTITY(5, (5) | (5)), ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))))))), (int(5)) | int(_GLF_ZERO(0.0, injectionSwitch.x))), int(5)))), (int(int(_GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) | int(_GLF_ZERO(0.0, injectionSwitch.x))), int(5))))) / 1))), max((1 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) | int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) * abs(1.0)))), int(5)), _GLF_IDENTITY(int(int(_GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) | int(_GLF_ZERO(0.0, injectionSwitch.x))), int(5)))), (int(int(_GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) | int(_GLF_ZERO(0.0, injectionSwitch.x))), int(5))))) / 1))), (1 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) | int(_GLF_ZERO(0.0, injectionSwitch.x))), int(5)), _GLF_IDENTITY(int(int(_GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) | int(_GLF_ZERO(0.0, injectionSwitch.x))), int(5)))), (int(int(_GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) | int(_GLF_ZERO(0.0, injectionSwitch.x))), int(5))))) / 1))))) : _GLF_FUZZED(_injected_loop_counter))), 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y)))), (false ? _GLF_FUZZED(ivec4(-51738, 78028, 99314, 84990)) : clamp(ivec4((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) | int(_GLF_ZERO(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(3958.6846))), injectionSwitch.x))), int(5))), 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y))), ivec4((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) | int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0)) / 1.0)))), int(5))), 0, 0, int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))), ivec4(_GLF_IDENTITY((1 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) | int(_GLF_ZERO(0.0, injectionSwitch.x))), int(5)), _GLF_IDENTITY(int(int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(5), int(ivec3(int(5), 0, 1))), (int(5)) | int(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0), (vec2(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0)) * vec2(1.0, 1.0))), (false ? _GLF_FUZZED(-5162.8670) : float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0), (vec2(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0)) * vec2(1.0, 1.0)))))), 0.0)), _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), injectionSwitch, injectionSwitch)).x))), int(5)))), (int(int(_GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) | int(_GLF_ZERO(0.0, injectionSwitch.x))), int(_GLF_IDENTITY(5, (_GLF_IDENTITY(5, (_GLF_IDENTITY(5, (true ? 5 : _GLF_FUZZED(-97724)))) - 0)) | (5))))))) / 1))), (true ? _GLF_IDENTITY(_GLF_IDENTITY((1 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) | int(_GLF_ZERO(0.0, injectionSwitch.x))), int(5)), _GLF_IDENTITY(int(int(_GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) | int(_GLF_ZERO(0.0, injectionSwitch.x))), int(5)))), (int(int(_GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) | int(_GLF_ZERO(0.0, injectionSwitch.x))), int(5))))) / 1))), max((1 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) | int(_GLF_ZERO(0.0, injectionSwitch.x))), int(5)), _GLF_IDENTITY(int(int(_GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) | int(_GLF_ZERO(0.0, injectionSwitch.x))), int(5)))), (int(int(_GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) | int(_GLF_ZERO(0.0, injectionSwitch.x))), int(5))))) / 1))), (1 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) | int(_GLF_ZERO(0.0, injectionSwitch.x))), int(5)), _GLF_IDENTITY(int(int(_GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) | int(_GLF_ZERO(0.0, injectionSwitch.x))), int(5)))), (int(int(_GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) | int(_GLF_ZERO(0.0, injectionSwitch.x))), int(5))))) / 1))))), (_GLF_IDENTITY((1 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) | int(_GLF_ZERO(0.0, injectionSwitch.x))), int(5)), _GLF_IDENTITY(int(int(_GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) | int(_GLF_ZERO(0.0, injectionSwitch.x))), int(5)))), (int(int(_GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) | int(_GLF_ZERO(0.0, injectionSwitch.x))), int(5))))) / 1))), max((1 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) | int(_GLF_ZERO(0.0, injectionSwitch.x))), int(5)), _GLF_IDENTITY(int(int(_GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) | int(_GLF_ZERO(0.0, injectionSwitch.x))), int(5)))), (int(int(_GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) | int(_GLF_ZERO(0.0, injectionSwitch.x))), int(5))))) / 1))), (1 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) | int(_GLF_ZERO(0.0, injectionSwitch.x))), int(5)), _GLF_IDENTITY(int(int(_GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) | int(_GLF_ZERO(0.0, injectionSwitch.x))), int(5)))), (int(int(_GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) | int(_GLF_ZERO(0.0, injectionSwitch.x))), int(5))))) / 1)))))) | 0) : _GLF_FUZZED(_injected_loop_counter))), 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y)))))), clamp(ivec4((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) | int(_GLF_ZERO(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), ! (! (bool(bool(true)))))) ? 0.0 : _GLF_FUZZED(3958.6846))), injectionSwitch.x))), int(5))), 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y))), ivec4((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) | int(_GLF_ZERO(0.0, injectionSwitch.x))), int(5))), 0, 0, int(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(4.2)), bool(false))), 1.0, _GLF_IDENTITY(dot(vec4(0.0, abs(1.0), length(vec3(0.0, 0.0, 0.0)), 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, abs(1.0), length(vec3(0.0, 0.0, 0.0)), 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))).y, (injectionSwitch.y) / 1.0)))), ivec4(_GLF_IDENTITY((1 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(5), (_GLF_IDENTITY(int(5), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(int(5), (int(5)) << 0), 1, (1 ^ 0))), (_GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(int(5), (int(5)) << 0), 1, (1 ^ 0))), clamp(int(ivec3(_GLF_IDENTITY(int(5), (int(5)) << 0), 1, (1 ^ 0))), int(ivec3(_GLF_IDENTITY(int(5), (int(5)) << 0), 1, (1 ^ 0))), int(ivec3(_GLF_IDENTITY(int(5), (int(5)) << 0), 1, (1 ^ 0)))))) ^ 0))) | int(_GLF_ZERO(0.0, injectionSwitch.x))), int(5)), _GLF_IDENTITY(int(int(_GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) | int(_GLF_ZERO(0.0, injectionSwitch.x))), int(5)))), (int(int(_GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) | int(_GLF_ZERO(0.0, injectionSwitch.x))), int(5))))) / 1))), (true ? _GLF_IDENTITY((1 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) | int(_GLF_ZERO(0.0, injectionSwitch.x))), int(5)), _GLF_IDENTITY(int(int(_GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) | int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))), int(5)))), (int(int(_GLF_IDENTITY(_GLF_IDENTITY(int(5), _GLF_IDENTITY((int(5)), clamp((int(5)), (int(5)), _GLF_IDENTITY((int(5)), min((int(5)), (int(5)))))) | int(_GLF_ZERO(0.0, injectionSwitch.x))), int(5))))) / 1))), max((1 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) | int(_GLF_ZERO(0.0, injectionSwitch.x))), int(5)), _GLF_IDENTITY(int(int(_GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) | int(_GLF_ZERO(0.0, injectionSwitch.x))), int(5)))), (int(int(_GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) | int(_GLF_ZERO(0.0, injectionSwitch.x))), int(5))))) / 1))), (1 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) | int(_GLF_ZERO(0.0, injectionSwitch.x))), int(5)), _GLF_IDENTITY(int(int(_GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) | int(_GLF_ZERO(0.0, injectionSwitch.x))), int(5)))), (int(int(_GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) | int(_GLF_ZERO(0.0, injectionSwitch.x))), int(5))))) / 1))))) : _GLF_FUZZED(_injected_loop_counter))), 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y))))))))) >> _GLF_IDENTITY(int(5), int(5))), bool(bvec2(_injected_loop_counter != (_GLF_IDENTITY((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) | int(_GLF_ZERO(0.0, injectionSwitch.x))), int(5))), int(_GLF_IDENTITY(ivec4((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) | int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(_GLF_IDENTITY(mat4x2(_GLF_ZERO(0.0, injectionSwitch.x), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0), mat2(1.0) * (mat4x2(_GLF_ZERO(0.0, injectionSwitch.x), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0))))), float(_GLF_IDENTITY(vec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0))), vec4(0.0, 0.0, 1.0, 1.0)), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0))), vec4(0.0, 0.0, 1.0, 1.0)), mix(float(_GLF_FUZZED(-568.852)), float(dot(vec4(1.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0))), vec4(0.0, 0.0, 1.0, 1.0))), bool(true)))), 0.0, sqrt(0.0)), clamp(vec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0))), vec4(0.0, 0.0, 1.0, 1.0)), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0))), vec4(0.0, 0.0, 1.0, 1.0)), mix(float(_GLF_FUZZED(-568.852)), float(dot(vec4(1.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0))), vec4(0.0, 0.0, 1.0, 1.0))), bool(true)))), 0.0, sqrt(0.0)), vec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0))), vec4(0.0, 0.0, 1.0, 1.0)), (dot(vec4(1.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0))), vec4(0.0, 0.0, 1.0, 1.0))) * 1.0), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0))), vec4(0.0, 0.0, 1.0, 1.0)), float(float(_GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0))), vec4(0.0, 0.0, 1.0, 1.0)), (_GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0))), vec4(0.0, 0.0, 1.0, 1.0)), (dot(vec4(1.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0))), vec4(0.0, 0.0, 1.0, 1.0))) - 0.0)) - 0.0)))), mix(float(_GLF_FUZZED(-568.852)), float(dot(vec4(1.0, 1.0, 0.0, length(vec3(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0))), vec4(0.0, 0.0, 1.0, 1.0))), bool(true)))), 0.0, sqrt(0.0)), vec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0))), vec4(0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), _GLF_IDENTITY(dot(vec4(1.0, 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(78.89) : _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(cos(-6.9)) : 0.0)))), length(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))))), vec4(0.0, 0.0, 1.0, 1.0)), mix(float(_GLF_FUZZED(-568.852)), float(dot(vec4(1.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0))), vec4(0.0, 0.0, 1.0, 1.0))), bool(true)))), 0.0, sqrt(0.0)))))))), _GLF_IDENTITY(int(5), 0 | (int(5))))), 0, _GLF_IDENTITY(_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, _GLF_IDENTITY(0 + (0), max(0 + (0), 0 + (0))))) / 1), 0, _GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, (0) >> 0))))), int(ivec3(_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, 0 + (0))) / 1), 0, _GLF_IDENTITY(0, min(0, _GLF_IDENTITY(_GLF_IDENTITY(0, 0 | (0)), (0) >> 0))))), 1, 1))), int(_GLF_ONE(1.0, injectionSwitch.y))), clamp(ivec4((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) | int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(int(5), 0 ^ (int(5))))), 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y))), ivec4((1 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) | _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (true ? int(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(-63812)))), int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) | int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_IDENTITY(_GLF_FUZZED(-57.13), min(_GLF_IDENTITY(_GLF_FUZZED(-57.13), min(_GLF_FUZZED(-57.13), _GLF_FUZZED(-57.13))), _GLF_IDENTITY(_GLF_FUZZED(-57.13), min(_GLF_FUZZED(-57.13), _GLF_FUZZED(-57.13)))))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (_GLF_IDENTITY(int(5), (int(5)) | int(_GLF_ZERO(0.0, injectionSwitch.x)))) * 1), 0, 1, int(_GLF_ZERO(0.0, injectionSwitch.x))), (true ? ivec4(_GLF_IDENTITY(_GLF_IDENTITY(int(5), _GLF_IDENTITY((int(5)), ((int(5))) | ((int(5)))) | _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (~ (int(_GLF_ZERO(0.0, injectionSwitch.x)))))), (_GLF_IDENTITY(int(5), (int(5)) | int(_GLF_ZERO(0.0, injectionSwitch.x)))) * 1), 0, 1, int(_GLF_ZERO(0.0, injectionSwitch.x))) : _GLF_IDENTITY(_GLF_FUZZED(ivec4(-91385, -76117, -82164, -24532)), (_GLF_FUZZED(ivec4(-91385, -76117, -82164, -24532))) >> ivec4(0, 0, 0, 0)))))), int(5))), _GLF_IDENTITY(0, (0) / 1), 0, int(_GLF_ONE(1.0, injectionSwitch.y))), ivec4((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) | int(_GLF_ZERO(0.0, injectionSwitch.x))), int(5))), 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y))))))) >> _GLF_IDENTITY(int(5), int(5))), false))))))); _injected_loop_counter ++)
      {
       barrier();
      }
    }
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)) || false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)) || false))), _GLF_IDENTITY(bool(bvec2(bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) / 1.0)), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) / 1.0)), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) / 1.0)), float(vec2((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) / 1.0)), 1.0)))) - 0.0)) * 1.0) / 1.0) > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)) || false))), false)), bool(_GLF_IDENTITY(bool(bool(bvec2(bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y))))), (bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y)))))) && true))) && true), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)) || false))), false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool(bool(bvec2(bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y))))), (bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y)))))) && true))) && true), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)) || false))), false)))), (bool(bool(bool(bvec2(bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y))))), (bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y)))))) && true))) && true), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)) || false))), false))))) && true)), true && (bool(_GLF_IDENTITY(bool(bool(bool(bvec2(bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y))))), (bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y)))))) && true))) && true), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)) || false))), false)))), (bool(bool(bool(bvec2(bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y))))), (bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y)))))) && true))) && true), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)) || false))), false))))) && true))))))))))
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _GLF_IDENTITY(_injected_loop_counter ++, 1 * (_injected_loop_counter ++)))
    {
     do
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, (false ? _GLF_FUZZED(_GLF_IDENTITY(uvec3(109608u, 91271u, 66844u), uvec3(0u, 0u, 0u) | (uvec3(109608u, 91271u, 66844u)))) : _GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups))) * uvec3(1u, 1u, 1u)))).x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   do
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (_GLF_IDENTITY(false, false || (false))), true && (_GLF_IDENTITY(false || (_GLF_IDENTITY(false, false || (false))), true && (false || (_GLF_IDENTITY(false, false || (false))))))))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true))), true, true, true))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true))), true, true, true))), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true))), true, true, true)))))))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, log(1.0), 1.0, 1.0, 0.0))).x > injectionSwitch.y)))))))
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
            }
           else
            {
             barrier();
            }
          }
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           barrier();
          }
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           barrier();
          }
         else
          {
          }
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 ^ 1) << _GLF_IDENTITY(int(5), int(5)))); _injected_loop_counter --)
            {
             barrier();
            }
          }
         barrier();
        }
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         barrier();
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           do
            {
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (_GLF_IDENTITY(false, ! (! (false)))) && true), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true)))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (false))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)))))), (_GLF_IDENTITY(false, ! (! (false)))) && true), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))) / vec2(1.0, 1.0)).x < injectionSwitch.y))), false)))))));
  }
 else
  {
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   GLF_merged2_0_1_16_1_1_14next_virtual_gidworkgroup_base.y = workgroup_base;
  }
 else
  {
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) && true)))), true, true))), _GLF_IDENTITY((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), true)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), true))))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), true)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), true))))))))))))))), ! (! ((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), true)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), true))))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), true)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), true)))))))))))))))))) && true)))
  {
   for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 uint virtual_gid = GLF_merged2_0_1_16_1_1_14next_virtual_gidworkgroup_base.y + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) / 1u), subgroup_id * subgroup_size)), subgroup_id * subgroup_size)))))) + subgroup_local_id;
 uint next_virtual_gid = _GLF_IDENTITY(GLF_merged2_0_1_16_1_1_14next_virtual_gidworkgroup_base.y + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(workgroup_size) : subgroup_id)), (subgroup_id) | _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))), ((_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)))) | 0u)) * subgroup_size + _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u))) + 1) % subgroup_size), clamp(((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) + 1) % subgroup_size), ((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) + 1) % subgroup_size), ((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) + 1) % subgroup_size))), (_GLF_IDENTITY(GLF_merged2_0_1_16_1_1_14next_virtual_gidworkgroup_base.y + subgroup_id * subgroup_size, (GLF_merged2_0_1_16_1_1_14next_virtual_gidworkgroup_base.y + subgroup_id * subgroup_size) >> 0u) + ((subgroup_local_id + 1) % subgroup_size)) / (1u & 1u));
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, ! (! (false)))))))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
              {
               if(_GLF_DEAD(false))
                barrier();
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                   do
                    {
                     barrier();
                    }
                   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                  }
                }
              }
             else
              {
               _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_16_1_1_14next_virtual_gidworkgroup_base.x = next_virtual_gid, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (GLF_merged2_0_1_16_1_1_14next_virtual_gidworkgroup_base.x = next_virtual_gid), (~ (GLF_merged2_0_1_16_1_1_14next_virtual_gidworkgroup_base.x = _GLF_IDENTITY(next_virtual_gid, ~ (~ (next_virtual_gid))))) >> 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (GLF_merged2_0_1_16_1_1_14next_virtual_gidworkgroup_base.x = next_virtual_gid), (~ (GLF_merged2_0_1_16_1_1_14next_virtual_gidworkgroup_base.x = next_virtual_gid)) >> 0u)), 1u * (~ (_GLF_IDENTITY(~ (GLF_merged2_0_1_16_1_1_14next_virtual_gidworkgroup_base.x = next_virtual_gid), (~ (GLF_merged2_0_1_16_1_1_14next_virtual_gidworkgroup_base.x = next_virtual_gid)) >> 0u)))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (GLF_merged2_0_1_16_1_1_14next_virtual_gidworkgroup_base.x = next_virtual_gid), (~ (GLF_merged2_0_1_16_1_1_14next_virtual_gidworkgroup_base.x = next_virtual_gid)) >> 0u)), 1u * (~ (_GLF_IDENTITY(~ (GLF_merged2_0_1_16_1_1_14next_virtual_gidworkgroup_base.x = next_virtual_gid), (~ (GLF_merged2_0_1_16_1_1_14next_virtual_gidworkgroup_base.x = next_virtual_gid)) >> 0u))))) ^ 0u)) | 0u)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_16_1_1_14next_virtual_gidworkgroup_base.x = next_virtual_gid, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (GLF_merged2_0_1_16_1_1_14next_virtual_gidworkgroup_base.x = next_virtual_gid), (~ (GLF_merged2_0_1_16_1_1_14next_virtual_gidworkgroup_base.x = next_virtual_gid)) >> 0u)), 1u * ((_GLF_IDENTITY(_GLF_IDENTITY(~ (GLF_merged2_0_1_16_1_1_14next_virtual_gidworkgroup_base.x = next_virtual_gid), (~ (GLF_merged2_0_1_16_1_1_14next_virtual_gidworkgroup_base.x = next_virtual_gid)) >> 0u), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(~ (GLF_merged2_0_1_16_1_1_14next_virtual_gidworkgroup_base.x = next_virtual_gid), (~ (GLF_merged2_0_1_16_1_1_14next_virtual_gidworkgroup_base.x = next_virtual_gid)) >> 0u), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(~ (GLF_merged2_0_1_16_1_1_14next_virtual_gidworkgroup_base.x = next_virtual_gid), (~ (GLF_merged2_0_1_16_1_1_14next_virtual_gidworkgroup_base.x = next_virtual_gid)) >> 0u))))))))), (false ? _GLF_FUZZED(_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) - 0u)) : _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_16_1_1_14next_virtual_gidworkgroup_base.x = next_virtual_gid, (GLF_merged2_0_1_16_1_1_14next_virtual_gidworkgroup_base.x = next_virtual_gid) * 1u), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((GLF_merged2_0_1_16_1_1_14next_virtual_gidworkgroup_base.x = next_virtual_gid), 1u * (_GLF_IDENTITY(_GLF_IDENTITY((GLF_merged2_0_1_16_1_1_14next_virtual_gidworkgroup_base.x = next_virtual_gid), (true ? (GLF_merged2_0_1_16_1_1_14next_virtual_gidworkgroup_base.x = next_virtual_gid) : _GLF_FUZZED(subgroup_local_id))), (_GLF_IDENTITY((GLF_merged2_0_1_16_1_1_14next_virtual_gidworkgroup_base.x = next_virtual_gid), (true ? (GLF_merged2_0_1_16_1_1_14next_virtual_gidworkgroup_base.x = next_virtual_gid) : _GLF_FUZZED(subgroup_local_id)))) << 0u))), (~ (GLF_merged2_0_1_16_1_1_14next_virtual_gidworkgroup_base.x = next_virtual_gid)) >> 0u)))))) | uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u ^ ((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_16_1_1_14next_virtual_gidworkgroup_base.x = next_virtual_gid, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (GLF_merged2_0_1_16_1_1_14next_virtual_gidworkgroup_base.x = next_virtual_gid), (~ (GLF_merged2_0_1_16_1_1_14next_virtual_gidworkgroup_base.x = next_virtual_gid)) >> 0u)), 1u * ((_GLF_IDENTITY(_GLF_IDENTITY(~ (GLF_merged2_0_1_16_1_1_14next_virtual_gidworkgroup_base.x = next_virtual_gid), (~ (GLF_merged2_0_1_16_1_1_14next_virtual_gidworkgroup_base.x = next_virtual_gid)) >> 0u), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(~ (GLF_merged2_0_1_16_1_1_14next_virtual_gidworkgroup_base.x = next_virtual_gid), (~ (GLF_merged2_0_1_16_1_1_14next_virtual_gidworkgroup_base.x = next_virtual_gid)) >> 0u), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(~ (GLF_merged2_0_1_16_1_1_14next_virtual_gidworkgroup_base.x = next_virtual_gid), (~ (GLF_merged2_0_1_16_1_1_14next_virtual_gidworkgroup_base.x = next_virtual_gid)) >> 0u))))))))), (false ? _GLF_FUZZED(_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) - 0u)) : _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_16_1_1_14next_virtual_gidworkgroup_base.x = next_virtual_gid, (GLF_merged2_0_1_16_1_1_14next_virtual_gidworkgroup_base.x = next_virtual_gid) * 1u), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((GLF_merged2_0_1_16_1_1_14next_virtual_gidworkgroup_base.x = next_virtual_gid), 1u * (_GLF_IDENTITY(_GLF_IDENTITY((GLF_merged2_0_1_16_1_1_14next_virtual_gidworkgroup_base.x = next_virtual_gid), (true ? (GLF_merged2_0_1_16_1_1_14next_virtual_gidworkgroup_base.x = next_virtual_gid) : _GLF_FUZZED(subgroup_local_id))), (_GLF_IDENTITY((GLF_merged2_0_1_16_1_1_14next_virtual_gidworkgroup_base.x = next_virtual_gid), (true ? (GLF_merged2_0_1_16_1_1_14next_virtual_gidworkgroup_base.x = next_virtual_gid) : _GLF_FUZZED(subgroup_local_id)))) << 0u))), (~ (GLF_merged2_0_1_16_1_1_14next_virtual_gidworkgroup_base.x = next_virtual_gid)) >> 0u)))))) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))));
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (int(_GLF_ONE(1.0, injectionSwitch.y)) ^ 0)); _injected_loop_counter ++)
                {
                 if(_GLF_DEAD(false))
                  barrier();
                }
              }
            }
           else
            {
            }
           if(_GLF_DEAD(false))
            barrier();
          }
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
        }
      }
    }
   else
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, false)), (bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, false))) && true))), false), bvec2(bvec4(bvec2(_GLF_DEAD(false), false), false, false))), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))), false), false, false))), true), false))))))))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
        {
         if(_GLF_DEAD(false))
          barrier();
         do
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             do
              {
               barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
           else
            {
            }
          }
         while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)) || false)))));
        }
      }
    }
   else
    {
    }
   barrier();
  }
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))))))))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) || false)));
 do
  {
   do
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 & -99316)); _injected_loop_counter --)
          {
           barrier();
          }
        }
      }
     else
      {
      }
     for(int _injected_loop_counter = _GLF_IDENTITY(0, _GLF_IDENTITY((0) | (0), (false ? _GLF_FUZZED((_GLF_IDENTITY(_GLF_IDENTITY(-26205 / -81100, ~ (~ (-26205 / -81100))), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(-26205, (-88965 & 0) ^ (-26205)) / -81100, ~ (~ (-26205 / -81100))), (_GLF_IDENTITY(_GLF_IDENTITY(-26205 / -81100, ~ (~ (_GLF_IDENTITY(-26205, (-26205) / 1) / -81100))), (_GLF_IDENTITY(-26205 / -81100, ~ (~ _GLF_IDENTITY((-26205 / -81100), ((-26205 / -81100)) * 1)))) << 0)) | (_GLF_IDENTITY(-26205 / -81100, ~ (~ (-26205 / -81100))))))), max(~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(-26205 / -81100, ~ (~ (-26205 / -81100))), (_GLF_IDENTITY(_GLF_IDENTITY(-26205 / -81100, ~ (~ (-26205 / -81100))), (_GLF_IDENTITY(-26205 / -81100, ~ (~ (-26205 / -81100)))) << 0)) | (_GLF_IDENTITY(-26205 / -81100, ~ (~ (-26205 / -81100))))))), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(-26205 / -81100, ~ (~ (_GLF_IDENTITY(-26205 / -81100, (0 >> _GLF_IDENTITY(int(8), int(8))) ^ (-26205 / -81100))))), (_GLF_IDENTITY(_GLF_IDENTITY(-26205 / -81100, ~ (~ (-26205 / -81100))), (_GLF_IDENTITY(-26205 / -81100, ~ (~ (-26205 / -81100)))) << 0)) | (_GLF_IDENTITY(-26205 / -81100, ~ (~ (-26205 / -81100))))))), (~ _GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(-26205 / -81100, _GLF_IDENTITY(~ (~ (-26205 / -81100)), (~ (~ (-26205 / -81100))) >> (0 >> _GLF_IDENTITY(int(3), int(3))))), (_GLF_IDENTITY(_GLF_IDENTITY(-26205 / -81100, ~ (~ (-26205 / -81100))), (_GLF_IDENTITY(-26205 / -81100, _GLF_IDENTITY(~ (~ (-26205 / -81100)), (~ (~ (_GLF_IDENTITY(-26205 / -81100, max(_GLF_IDENTITY(-26205 / -81100, 0 | (_GLF_IDENTITY(-26205 / -81100, (-26205 / -81100) ^ 0))), -26205 / -81100))))) / 1))) << 0)) | (_GLF_IDENTITY(-26205 / -81100, ~ (~ (-26205 / _GLF_IDENTITY(-81100, (-81100) ^ 0)))))))), min((~ (_GLF_IDENTITY(_GLF_IDENTITY(-26205 / -81100, _GLF_IDENTITY(~ (~ (-26205 / -81100)), (~ (~ (-26205 / -81100))) >> (0 >> _GLF_IDENTITY(int(3), int(3))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-26205 / -81100, ~ (~ (-26205 / -81100))), (_GLF_IDENTITY(-26205 / -81100, _GLF_IDENTITY(~ (~ (-26205 / -81100)), (~ (~ (_GLF_IDENTITY(-26205 / -81100, max(-26205 / -81100, -26205 / -81100))))) / 1))) << 0)), ((_GLF_IDENTITY(_GLF_IDENTITY(-26205 / -81100, ~ (~ (-26205 / -81100))), (_GLF_IDENTITY(-26205 / -81100, _GLF_IDENTITY(~ (~ (-26205 / -81100)), (~ (~ (_GLF_IDENTITY(-26205 / -81100, max(-26205 / -81100, -26205 / -81100))))) / 1))) << 0))) ^ 0) | (_GLF_IDENTITY(_GLF_IDENTITY(-26205 / -81100, ~ (~ (-26205 / _GLF_IDENTITY(-81100, (-81100) ^ 0)))), (_GLF_IDENTITY(-26205 / -81100, ~ (~ (-26205 / _GLF_IDENTITY(-81100, (-81100) ^ 0))))) / (0 ^ 1)))))), _GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(-26205 / -81100, _GLF_IDENTITY(~ (~ (-26205 / -81100)), (~ (~ (-26205 / -81100))) >> (0 >> _GLF_IDENTITY(int(3), int(3))))), (_GLF_IDENTITY(_GLF_IDENTITY(-26205 / -81100, ~ (~ (-26205 / -81100))), (_GLF_IDENTITY(-26205 / -81100, _GLF_IDENTITY(~ (~ (-26205 / -81100)), (~ (~ (_GLF_IDENTITY(-26205 / -81100, max(-26205 / -81100, -26205 / -81100))))) / 1))) << 0)) | (_GLF_IDENTITY(-26205 / -81100, ~ (~ (-26205 / _GLF_IDENTITY(-81100, (-81100) ^ 0)))))))), 1 * ((~ (_GLF_IDENTITY(_GLF_IDENTITY(-26205 / -81100, _GLF_IDENTITY(~ (~ (-26205 / -81100)), (~ (~ (-26205 / -81100))) >> (0 >> _GLF_IDENTITY(int(3), int(3))))), (_GLF_IDENTITY(_GLF_IDENTITY(-26205 / -81100, ~ (~ (-26205 / -81100))), (_GLF_IDENTITY(-26205 / -81100, _GLF_IDENTITY(~ (~ (-26205 / -81100)), (~ (~ (_GLF_IDENTITY(-26205 / -81100, max(-26205 / -81100, -26205 / -81100))))) / 1))) << 0)) | (_GLF_IDENTITY(-26205 / -81100, ~ (~ (-26205 / _GLF_IDENTITY(-81100, (-81100) ^ 0))))))))))))) | 0)))))) : _GLF_IDENTITY((0) | (0), clamp(_GLF_IDENTITY((0) | (0), (true ? _GLF_IDENTITY((0), min((0), _GLF_IDENTITY((0), int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY((0), _GLF_IDENTITY(((0)), ~ (~ (_GLF_IDENTITY(((0)), (((0))) | (((0))))))) >> 0), (0 << _GLF_IDENTITY(int(5), int(5))), 1, 0), max(ivec4(_GLF_IDENTITY(_GLF_IDENTITY((0), clamp((0), (0), (0))), (_GLF_IDENTITY((0), ((0)) | ((0)))) >> 0), (0 << _GLF_IDENTITY(int(5), int(5))), 1, 0), ivec4(_GLF_IDENTITY(_GLF_IDENTITY((0), ((0)) >> 0), (_GLF_IDENTITY((0), _GLF_IDENTITY(((0)) >> 0, (((0)) >> 0) << 0))) | 0), (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(5, int(_GLF_IDENTITY(ivec3(5, 0, 0), ivec3(0, 0, 0) | (_GLF_IDENTITY(ivec3(5, 0, 0), ivec3(ivec3(ivec3(5, 0, 0))))))))), int(5))), 1, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(4527) : _GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec3(0, 0, 1)), (int(ivec3(0, 0, 1))) | (int(ivec3(0, 0, 1)))))))))))))) | (0) : _GLF_FUZZED(-86840))), _GLF_IDENTITY(_GLF_IDENTITY((0) | (0), ((0) | (0)) - 0), 0 | (_GLF_IDENTITY(_GLF_IDENTITY((0) | (0), (_GLF_IDENTITY((0) | (0), ((0) | (0)) - 0)) - 0), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((0) | (0), (0 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (int(5)) | (int(5))))) ^ ((0) | (0))), ((0) | (0)) - 0)))))), (0) | (0)))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((0 & 9150) << _GLF_IDENTITY(int(7), int(7)))); _injected_loop_counter --)
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), false || ((false))) && _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true)))))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), false || ((false))) && true)), bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), false || ((false))) && true)))))))))
          barrier();
        }
       do
        {
         for(int _injected_loop_counter = int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-9.6)), float(injectionSwitch.x), bool(true))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), min(int(5), int(5))), int(5)))); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               barrier();
              }
             else
              {
              }
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
   while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) || false));
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, _GLF_IDENTITY(! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(false, true && (false)) || (! (true)))), _GLF_IDENTITY(! (! (! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(false, true && (false)) || (! (true)))))), bool(bvec3(! (! (! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(false, true && (false)) || (! (true)))))), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, true && (false)))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, true && (false)))))), (! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, true && (false))))))) && true)))))), true))))), true, true), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(true, _GLF_IDENTITY(! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(false, true && (false)) || (! (true)))), _GLF_IDENTITY(! (! (! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(false, true && (false)) || (! (true)))))), bool(bvec3(! (! (! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(false, true && (false)) || (! (true)))))), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, true && (false)))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, true && (false)))))), (! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, true && (false))))))) && true)))))), true))))), true, true)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(true, _GLF_IDENTITY(! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(false, true && (false)) || (! (true)))), _GLF_IDENTITY(! (! (! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(false, true && (false)) || (! (true)))))), bool(bvec3(! (! (! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(false, true && (false)) || (! (true)))))), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, true && (false)))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, true && (false)))))), (! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, true && (false))))))) && true)))))), true))))), true, true)), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(true, _GLF_IDENTITY(! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(false, true && (false)) || (! (true)))), _GLF_IDENTITY(! (! (! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(false, true && (false)) || (! (true)))))), bool(bvec3(! (! (! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(false, true && (false)) || (! (true)))))), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, true && (false)))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, true && (false)))))), (! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, true && (false))))))) && true)))))), true))))), true, true)), false))), true)))), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(true, _GLF_IDENTITY(! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(false, true && (false)) || (! (true)))), _GLF_IDENTITY(! (! (! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(false, true && (false)) || (! (true)))))), bool(bvec3(! (! (! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(false, true && (false)) || (! (true)))))), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, true && (false)))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, true && (false)))))), (! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, true && (false))))))) && true)))))), true))))), true, true)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(true, _GLF_IDENTITY(! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(false, true && (false)) || (! (true)))), _GLF_IDENTITY(! (! (! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(false, true && (false)) || (! (true)))))), bool(bvec3(! (! (! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(false, true && (false)) || (! (true)))))), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, true && (false)))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, true && (false)))))), (! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, true && (false))))))) && true)))))), true))))), true, true)), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(true, _GLF_IDENTITY(! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(false, true && (false)) || (! (true)))), _GLF_IDENTITY(! (! (! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(false, true && (false)) || (! (true)))))), bool(bvec3(! (! (! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(false, true && (false)) || (! (true)))))), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, true && (false)))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, true && (false)))))), (! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, true && (false))))))) && true)))))), true))))), true, true)), false))), true)))))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(true, _GLF_IDENTITY(! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(false, true && (false)) || (! (true)))), _GLF_IDENTITY(! (! (! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(false, true && (false)) || (! (true)))))), bool(bvec3(! (! (! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(false, true && (false)) || (! (true)))))), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, true && (false)))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, true && (false)))))), (! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, true && (false))))))) && true)))))), true))))), true, true)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(true, _GLF_IDENTITY(! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(false, true && (false)) || (! (true)))), _GLF_IDENTITY(! (! (! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(false, true && (false)) || (! (true)))))), bool(bvec3(! (! (! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(false, true && (false)) || (! (true)))))), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, true && (false)))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, true && (false)))))), (! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, true && (false))))))) && true)))))), true))))), true, true)), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(true, _GLF_IDENTITY(! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(false, true && (false)) || (! (true)))), _GLF_IDENTITY(! (! (! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(false, true && (false)) || (! (true)))))), bool(bvec3(! (! (! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(false, true && (false)) || (! (true)))))), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, true && (false)))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, true && (false)))))), (! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, true && (false))))))) && true)))))), true))))), true, true)), false))), true)))))), true))))))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) && true)), false || (! (_GLF_IDENTITY(true, (true) && true)))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && true)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && true)))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && true)))), false), true, true)))), bool(bool(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && true)))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && true)))), false), true, true)))))))), (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, bool(bvec2(true, false))))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(true, (true) && true))), bool(bvec3(! (! (_GLF_IDENTITY(true, (true) && true))), false, true)))))))) || false), false, true, false))), _GLF_IDENTITY(false, _GLF_IDENTITY((false), true && ((false))) || false), false))), (_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! (true)) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! (true)) || false), bool(bvec4(_GLF_IDENTITY(! (true), (! (true)) || _GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, true && (false)), true)))), true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))), true)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((true), ! (! ((true)))), ! (! (! (true)))), (! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true))))))) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), _GLF_IDENTITY((! (true)) || false, true && ((! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, false, true, true)))) && true))) || false))), bool(bvec4(_GLF_IDENTITY(! (true), _GLF_IDENTITY((_GLF_IDENTITY(! (true), bool(bvec2(! (true), false)))) || false, ! (! ((_GLF_IDENTITY(! (true), bool(bvec2(! _GLF_IDENTITY((true), false || ((true))), false)))) || false)))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(true, ! (! (true)))))))))) && true))), false, false)))) && true)))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     buf[virtual_gid] = 1;
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED((9.3 + (- -1743.9932))), clamp(_GLF_FUZZED((9.3 + (- -1743.9932))), _GLF_FUZZED((9.3 + (- -1743.9932))), _GLF_FUZZED((9.3 + (- -1743.9932)))))), float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), bool(true))) > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED((9.3 + (- -1743.9932))), clamp(_GLF_FUZZED((9.3 + (- -1743.9932))), _GLF_FUZZED((9.3 + (- -1743.9932))), _GLF_FUZZED((9.3 + (- -1743.9932)))))), float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), bool(true))) > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), false))))), true && (_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((9.3 + (- -1743.9932)))), float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), bool(true))) > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))))
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               barrier();
              }
            }
           barrier();
          }
        }
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
        }
       else
        {
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 buf[GLF_merged2_0_1_16_1_1_14next_virtual_gidworkgroup_base.x] = 2;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   for(int _injected_loop_counter = (0 ^ ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (int(_GLF_ONE(1.0, injectionSwitch.y)) ^ ((1 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), ~ (~ (int(1)))))) >> _GLF_IDENTITY(int(1), int(1))))); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))); _injected_loop_counter ++)
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y)), false))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), true && (((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))) || false))))))))
          barrier();
        }
       else
        {
        }
       for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) / vec2(1.0, 1.0)).y))))
          {
          }
         else
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[0]), float(_GLF_FUZZED(_GLF_IDENTITY(-6.2, max(-6.2, _GLF_IDENTITY(-6.2, _GLF_IDENTITY(float(mat4x2(-6.2, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), max(_GLF_IDENTITY(float(mat4x2(-6.2, 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((_GLF_IDENTITY(0.0, float(vec4(0.0, 0.0, tan(0.0), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x))))), clamp((_GLF_IDENTITY(0.0, float(vec4(0.0, 0.0, tan(0.0), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x))))), (_GLF_IDENTITY(0.0, float(vec4(0.0, 0.0, tan(0.0), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x))))), (_GLF_IDENTITY(0.0, float(vec4(0.0, 0.0, tan(0.0), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x))))))) * 1.0))), mix(float(float(mat4x2(-6.2, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(vec4(0.0, 0.0, tan(0.0), _GLF_ZERO(0.0, injectionSwitch.x))))) * 1.0)))), float(_GLF_FUZZED(6703.8717)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), float(mat4x2(-6.2, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))))))))), bool(false))), injectionSwitch[0])), injectionSwitch[1])).y))))
      barrier();
    }
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec3(! (! (false)), true, false))))));
   barrier();
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
