#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], clamp(_GLF_IDENTITY(injectionSwitch[1], (false ? _GLF_FUZZED(4.4) : injectionSwitch[1])), injectionSwitch[1], injectionSwitch[1])))).x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], clamp(_GLF_IDENTITY(injectionSwitch[1], (false ? _GLF_FUZZED(4.4) : injectionSwitch[1])), injectionSwitch[1], injectionSwitch[1])))).x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))), false, false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uvec4 GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), bool(bvec3((_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY(false, (false) || false), false))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > injectionSwitch.y))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.y = subgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, false)), ! (! (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, false)), ! (! (bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, false))))))))), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, false)), ! (! (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, false)), ! (! (bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, false), true, true)))), ! (! (bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, false), true, true)))))))), false))))))))), (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, false))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, float(mat2x3(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), 0.0), (vec3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), 0.0)) * mat3(1.0)))), 1.0, 0.0, abs(0.0), 0.0, 1.0, 1.0, 0.0, 0.0, cos(0.0), 0.0)), mix(vec2(_GLF_IDENTITY((vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), 0.0), (vec3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), 0.0)) * mat3(1.0)))), 1.0, 0.0, abs(0.0), 0.0, 1.0, 1.0, 0.0, 0.0, cos(0.0), 0.0)))[0], max((vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), 0.0), (vec3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), 0.0)) * mat3(1.0)))), 1.0, 0.0, abs(0.0), 0.0, 1.0, 1.0, 0.0, 0.0, cos(0.0), 0.0)))[0], (vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), 0.0), (vec3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), 0.0)) * mat3(1.0)))), 1.0, 0.0, abs(0.0), 0.0, 1.0, 1.0, 0.0, 0.0, cos(0.0), 0.0)))[0])), (vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), 0.0), (vec3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), 0.0)) * mat3(1.0)))), 1.0, 0.0, abs(0.0), 0.0, 1.0, 1.0, 0.0, 0.0, cos(0.0), 0.0)))[1]), vec2(_GLF_FUZZED(452.734), _GLF_FUZZED(-6.3)), bvec2(false, false))))[0], injectionSwitch[1])).x, sqrt(sqrt(1.0)), 0.0, 1.0, 1.0, round(length(normalize(vec2(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0))))))) > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, true, true, true))), (true) || false), false))), (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, false))), (injectionSwitch.x > injectionSwitch.y))))))), bool(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, false))), (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, false)), (bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, false))) && true)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) || false))))))), false, false), bvec3(bvec3(bvec3(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))), true, _GLF_IDENTITY(false, bool(bvec2(false, true)))))), (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, _GLF_IDENTITY(false, ! (! (false)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), true, true))))), bool(bool(false))), true, false))), false || (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false)))))), true, false))))))), (injectionSwitch.x > injectionSwitch.y))))))), false, false)))))))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), false || (bool(false)))), ! (! (bool(_GLF_IDENTITY(bool(false), false || (bool(false)))))))))))))), true, false))), (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-77.90) : _GLF_IDENTITY(injectionSwitch.x, 0.0 + _GLF_IDENTITY((injectionSwitch.x), clamp((injectionSwitch.x), (injectionSwitch.x), _GLF_IDENTITY((injectionSwitch.x), _GLF_IDENTITY(((injectionSwitch.x)), (_GLF_IDENTITY(((injectionSwitch.x)), clamp(((injectionSwitch.x)), ((injectionSwitch.x)), _GLF_IDENTITY(((injectionSwitch.x)), mix(float(((injectionSwitch.x))), float(_GLF_FUZZED(33.58)), bool(false)))))) + sin(0.0)) / 1.0))))))) / 1.0) > injectionSwitch.y))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y))))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, false))), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY(true, (true) || false), false))), (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, false))), (injectionSwitch.x > injectionSwitch.y))))))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, false))), (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, false))), (injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec3(! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, false))), (injectionSwitch.x > injectionSwitch.y)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(_GLF_IDENTITY(bvec3(bvec3(! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, false))), (injectionSwitch.x > injectionSwitch.y)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec3(bvec4(bvec3(bvec3(! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, false))), (injectionSwitch.x > injectionSwitch.y)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false)))))))))), false, false), bvec3(bvec3(bvec3(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, false))), (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, false))), false || (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, false))))))), (injectionSwitch.x > injectionSwitch.y))))))), false, false)))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, false))), (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, false))), (injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec3(! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, false))), (injectionSwitch.x > injectionSwitch.y)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(_GLF_IDENTITY(bvec3(bvec3(! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, false))), (injectionSwitch.x > injectionSwitch.y)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec3(bvec4(bvec3(bvec3(! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, false))), (injectionSwitch.x > injectionSwitch.y)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false)))))))))), false, false), bvec3(bvec3(bvec3(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, false))), (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, false))), false || (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, false))))))), (injectionSwitch.x > injectionSwitch.y))))))), false, false)))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, false))), (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, false))), (injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec3(! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, false))), (injectionSwitch.x > injectionSwitch.y)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(_GLF_IDENTITY(bvec3(bvec3(! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, false))), (injectionSwitch.x > injectionSwitch.y)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec3(bvec4(bvec3(bvec3(! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, false))), (injectionSwitch.x > injectionSwitch.y)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false)))))))))), false, false), bvec3(bvec3(bvec3(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, false))), (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, false))), false || (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, false))))))), (injectionSwitch.x > injectionSwitch.y))))))), false, false)))))), false)))))))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), bool(bool(false))), true, false))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-77.90) : _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x))))) / 1.0) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-77.90) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), (false ? _GLF_FUZZED(54.60) : _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x))))))) / 1.0) > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-77.90) : _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x))))) / 1.0) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-77.90) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), (false ? _GLF_FUZZED(54.60) : _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x))))))) / 1.0) > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) ? _GLF_FUZZED(-77.90) : _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x))))) / 1.0) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-77.90) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), (false ? _GLF_FUZZED(54.60) : _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x))))))) / 1.0) > injectionSwitch.y)))))) || false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-77.90) : _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x))))) / 1.0) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-77.90) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), _GLF_IDENTITY((false ? _GLF_FUZZED(54.60) : _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x))), ((false ? _GLF_FUZZED(54.60) : _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)))) - 0.0))))) / 1.0) > injectionSwitch.y)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, false))), (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bool(false))), true, false)))) && true), (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) * 1.0) > injectionSwitch.y)))) && true)), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, false))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, float(mat2x3(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), 0.0), (vec3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), 0.0)) * mat3(1.0)))), 1.0, 0.0, abs(0.0), 0.0, 1.0, 1.0, 0.0, 0.0, cos(0.0), 0.0)), mix(vec2(_GLF_IDENTITY((vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), 0.0), (vec3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), 0.0)) * mat3(1.0)))), 1.0, 0.0, abs(0.0), 0.0, 1.0, 1.0, 0.0, 0.0, cos(0.0), 0.0)))[0], max((vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), 0.0), (vec3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), 0.0)) * mat3(1.0)))), 1.0, 0.0, abs(0.0), 0.0, 1.0, 1.0, 0.0, 0.0, cos(0.0), 0.0)))[0], (vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), 0.0), (vec3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), 0.0)) * mat3(1.0)))), 1.0, 0.0, abs(0.0), 0.0, 1.0, 1.0, 0.0, 0.0, cos(0.0), 0.0)))[0])), (vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), 0.0), (vec3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), 0.0)) * mat3(1.0)))), 1.0, 0.0, abs(0.0), 0.0, 1.0, 1.0, 0.0, 0.0, cos(0.0), 0.0)))[1]), vec2(_GLF_FUZZED(452.734), _GLF_FUZZED(-6.3)), bvec2(false, false))))[0], injectionSwitch[1])).x, sqrt(sqrt(1.0)), 0.0, 1.0, 1.0, round(length(normalize(vec2(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0))))))) > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, true, true, true))), (true) || false), false))), (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, false))), (injectionSwitch.x > injectionSwitch.y))))))), bool(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, false))), (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, false)), (bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, false))) && true)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) || false))))))), false, false), bvec3(bvec3(bvec3(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))), true, _GLF_IDENTITY(false, bool(bvec2(false, true)))))), (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, _GLF_IDENTITY(false, ! (! (false)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), true, true))))), bool(bool(false))), true, false))), false || (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false)))))), true, false))))))), (injectionSwitch.x > injectionSwitch.y))))))), false, false)))))))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), false || (bool(false)))), ! (! (bool(_GLF_IDENTITY(bool(false), false || (bool(false)))))))))))))), true, false))), (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-77.90) : _GLF_IDENTITY(injectionSwitch.x, 0.0 + _GLF_IDENTITY((injectionSwitch.x), clamp((injectionSwitch.x), (injectionSwitch.x), _GLF_IDENTITY((injectionSwitch.x), _GLF_IDENTITY(((injectionSwitch.x)), (_GLF_IDENTITY(((injectionSwitch.x)), clamp(((injectionSwitch.x)), ((injectionSwitch.x)), _GLF_IDENTITY(((injectionSwitch.x)), mix(float(((injectionSwitch.x))), float(_GLF_FUZZED(33.58)), bool(false)))))) + sin(0.0)) / 1.0))))))) / 1.0) > injectionSwitch.y))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y))))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, false))), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY(true, (true) || false), false))), (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, false))), (injectionSwitch.x > injectionSwitch.y))))))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, false))), (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, false))), (injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec3(! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, false))), (injectionSwitch.x > injectionSwitch.y)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(_GLF_IDENTITY(bvec3(bvec3(! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, false))), (injectionSwitch.x > injectionSwitch.y)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec3(bvec4(bvec3(bvec3(! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, false))), (injectionSwitch.x > injectionSwitch.y)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false)))))))))), false, false), bvec3(bvec3(bvec3(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, false))), (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, false))), false || (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, false))))))), (injectionSwitch.x > injectionSwitch.y))))))), false, false)))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, false))), (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, false))), (injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec3(! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, false))), (injectionSwitch.x > injectionSwitch.y)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(_GLF_IDENTITY(bvec3(bvec3(! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, false))), (injectionSwitch.x > injectionSwitch.y)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec3(bvec4(bvec3(bvec3(! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, false))), (injectionSwitch.x > injectionSwitch.y)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false)))))))))), false, false), bvec3(bvec3(bvec3(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, false))), (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, false))), false || (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, false))))))), (injectionSwitch.x > injectionSwitch.y))))))), false, false)))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, false))), (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, false))), (injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec3(! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, false))), (injectionSwitch.x > injectionSwitch.y)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(_GLF_IDENTITY(bvec3(bvec3(! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, false))), (injectionSwitch.x > injectionSwitch.y)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec3(bvec4(bvec3(bvec3(! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, false))), (injectionSwitch.x > injectionSwitch.y)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false)))))))))), false, false), bvec3(bvec3(bvec3(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, false))), (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, false))), false || (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, false))))))), (injectionSwitch.x > injectionSwitch.y))))))), false, false)))))), false)))))))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), bool(bool(false))), true, false))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-77.90) : _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x))))) / 1.0) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-77.90) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), (false ? _GLF_FUZZED(54.60) : _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x))))))) / 1.0) > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-77.90) : _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x))))) / 1.0) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-77.90) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), (false ? _GLF_FUZZED(54.60) : _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x))))))) / 1.0) > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) ? _GLF_FUZZED(-77.90) : _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x))))) / 1.0) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-77.90) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), (false ? _GLF_FUZZED(54.60) : _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x))))))) / 1.0) > injectionSwitch.y)))))) || false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-77.90) : _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x))))) / 1.0) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-77.90) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), _GLF_IDENTITY((false ? _GLF_FUZZED(54.60) : _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x))), ((false ? _GLF_FUZZED(54.60) : _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)))) - 0.0))))) / 1.0) > injectionSwitch.y)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, false))), (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bool(false))), true, false)))) && true), (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) * 1.0) > injectionSwitch.y)))) && true)), false, true), bvec3(bvec4(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, false))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, float(mat2x3(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), 0.0), (vec3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), 0.0)) * mat3(1.0)))), 1.0, 0.0, abs(0.0), 0.0, 1.0, 1.0, 0.0, 0.0, cos(0.0), 0.0)), mix(vec2(_GLF_IDENTITY((vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), 0.0), (vec3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), 0.0)) * mat3(1.0)))), 1.0, 0.0, abs(0.0), 0.0, 1.0, 1.0, 0.0, 0.0, cos(0.0), 0.0)))[0], max((vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), 0.0), (vec3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), 0.0)) * mat3(1.0)))), 1.0, 0.0, abs(0.0), 0.0, 1.0, 1.0, 0.0, 0.0, cos(0.0), 0.0)))[0], (vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), 0.0), (vec3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), 0.0)) * mat3(1.0)))), 1.0, 0.0, abs(0.0), 0.0, 1.0, 1.0, 0.0, 0.0, cos(0.0), 0.0)))[0])), (vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), 0.0), (vec3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), 0.0)) * mat3(1.0)))), 1.0, 0.0, abs(0.0), 0.0, 1.0, 1.0, 0.0, 0.0, cos(0.0), 0.0)))[1]), vec2(_GLF_FUZZED(452.734), _GLF_FUZZED(-6.3)), bvec2(false, false))))[0], injectionSwitch[1])).x, sqrt(sqrt(1.0)), 0.0, 1.0, 1.0, round(length(normalize(vec2(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0))))))) > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, true, true, true))), (true) || false), false))), (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, false))), (injectionSwitch.x > injectionSwitch.y))))))), bool(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, false))), (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, false)), (bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, false))) && true)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) || false))))))), false, false), bvec3(bvec3(bvec3(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))), true, _GLF_IDENTITY(false, bool(bvec2(false, true)))))), (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, _GLF_IDENTITY(false, ! (! (false)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), true, true))))), bool(bool(false))), true, false))), false || (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false)))))), true, false))))))), (injectionSwitch.x > injectionSwitch.y))))))), false, false)))))))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), false || (bool(false)))), ! (! (bool(_GLF_IDENTITY(bool(false), false || (bool(false)))))))))))))), true, false))), (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-77.90) : _GLF_IDENTITY(injectionSwitch.x, 0.0 + _GLF_IDENTITY((injectionSwitch.x), clamp((injectionSwitch.x), (injectionSwitch.x), _GLF_IDENTITY((injectionSwitch.x), _GLF_IDENTITY(((injectionSwitch.x)), (_GLF_IDENTITY(((injectionSwitch.x)), clamp(((injectionSwitch.x)), ((injectionSwitch.x)), _GLF_IDENTITY(((injectionSwitch.x)), mix(float(((injectionSwitch.x))), float(_GLF_FUZZED(33.58)), bool(false)))))) + sin(0.0)) / 1.0))))))) / 1.0) > injectionSwitch.y))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y))))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, false))), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY(true, (true) || false), false))), (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, false))), (injectionSwitch.x > injectionSwitch.y))))))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, false))), (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, false))), (injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec3(! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, false))), (injectionSwitch.x > injectionSwitch.y)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(_GLF_IDENTITY(bvec3(bvec3(! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, false))), (injectionSwitch.x > injectionSwitch.y)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec3(bvec4(bvec3(bvec3(! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, false))), (injectionSwitch.x > injectionSwitch.y)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false)))))))))), false, false), bvec3(bvec3(bvec3(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, false))), (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, false))), false || (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, false))))))), (injectionSwitch.x > injectionSwitch.y))))))), false, false)))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, false))), (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, false))), (injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec3(! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, false))), (injectionSwitch.x > injectionSwitch.y)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(_GLF_IDENTITY(bvec3(bvec3(! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, false))), (injectionSwitch.x > injectionSwitch.y)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec3(bvec4(bvec3(bvec3(! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, false))), (injectionSwitch.x > injectionSwitch.y)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false)))))))))), false, false), bvec3(bvec3(bvec3(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, false))), (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, false))), false || (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, false))))))), (injectionSwitch.x > injectionSwitch.y))))))), false, false)))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, false))), (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, false))), (injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec3(! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, false))), (injectionSwitch.x > injectionSwitch.y)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(_GLF_IDENTITY(bvec3(bvec3(! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, false))), (injectionSwitch.x > injectionSwitch.y)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec3(bvec4(bvec3(bvec3(! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, false))), (injectionSwitch.x > injectionSwitch.y)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false)))))))))), false, false), bvec3(bvec3(bvec3(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, false))), (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, false))), false || (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, false))))))), (injectionSwitch.x > injectionSwitch.y))))))), false, false)))))), false)))))))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), bool(bool(false))), true, false))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-77.90) : _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x))))) / 1.0) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-77.90) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), (false ? _GLF_FUZZED(54.60) : _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x))))))) / 1.0) > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-77.90) : _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x))))) / 1.0) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-77.90) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), (false ? _GLF_FUZZED(54.60) : _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x))))))) / 1.0) > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) ? _GLF_FUZZED(-77.90) : _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x))))) / 1.0) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-77.90) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), (false ? _GLF_FUZZED(54.60) : _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x))))))) / 1.0) > injectionSwitch.y)))))) || false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-77.90) : _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x))))) / 1.0) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-77.90) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), _GLF_IDENTITY((false ? _GLF_FUZZED(54.60) : _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x))), ((false ? _GLF_FUZZED(54.60) : _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)))) - 0.0))))) / 1.0) > injectionSwitch.y)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, false))), (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bool(false))), true, false)))) && true), (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) * 1.0) > injectionSwitch.y)))) && true)), false, true), false))))) || false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false), false, false)), false || (_GLF_IDENTITY(bool(bvec3(injectionSwitch.x < injectionSwitch.y, false, false)), bool(bvec4(bool(bvec3(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, abs(1.0), 1.0, 1.0, 0.0, cos(0.0), 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0)))) * vec2(1.0, 1.0)).x < injectionSwitch.y, false, false)), false, true, true)))))))) && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(98.08))) > injectionSwitch.y))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, ! (! (false)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).x > injectionSwitch.y))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.w = subgroup_size, _GLF_IDENTITY((true ? GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.w = subgroup_size : _GLF_IDENTITY(_GLF_FUZZED(5012u), _GLF_IDENTITY(uint(uvec2(_GLF_FUZZED(5012u), 0u)), _GLF_IDENTITY((uint(uvec2(_GLF_FUZZED(5012u), 0u))), ((uint(uvec2(_GLF_FUZZED(5012u), 0u)))) | ((uint(uvec2(_GLF_FUZZED(5012u), 0u))))) | (_GLF_IDENTITY(uint(uvec2(_GLF_FUZZED(5012u), 0u)), (uint(uvec2(_GLF_FUZZED(5012u), 0u))) ^ 0u))))), (_GLF_IDENTITY((true ? GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.w = subgroup_size : _GLF_IDENTITY(_GLF_FUZZED(5012u), _GLF_IDENTITY(uint(uvec2(_GLF_FUZZED(5012u), 0u)), (uint(uvec2(_GLF_FUZZED(5012u), 0u))) | (_GLF_IDENTITY(uint(uvec2(_GLF_FUZZED(5012u), 0u)), (uint(uvec2(_GLF_FUZZED(5012u), 0u))) ^ 0u))))), ((true ? GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.w = subgroup_size : _GLF_IDENTITY(_GLF_FUZZED(5012u), _GLF_IDENTITY(uint(uvec2(_GLF_FUZZED(5012u), 0u)), (uint(uvec2(_GLF_FUZZED(5012u), 0u))) | (_GLF_IDENTITY(uint(uvec2(_GLF_FUZZED(5012u), 0u)), (uint(uvec2(_GLF_FUZZED(5012u), 0u))) ^ 0u)))))) >> 0u)) ^ 0u));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), bool(bvec2(_GLF_DEAD(false), false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-8.7)), vec2(_GLF_FUZZED(723.478), (injectionSwitch)[1]), bvec2(false, true))).x > injectionSwitch.y))))
  barrier();
 GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.z = _GLF_IDENTITY(subgroup_local_id, 0u + (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id), (clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) ^ 0u))));
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2(injectionSwitch.y, 1.0, 0.0, 1.0)), max(float(mat2(injectionSwitch.y, 1.0, 0.0, 1.0)), float(mat2(injectionSwitch.y, 1.0, 0.0, 1.0)))))))) && true)) && true)), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_IDENTITY(false, ! (! (false)))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), true)))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), false, true)), ! (! (_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), true))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), true))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), true))), false, true)))))), _GLF_IDENTITY(true, ! (! (true))), false, true)), (bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), true), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), true)), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), true)), true, false)))))))), _GLF_IDENTITY(true, ! (! (true))), false, true))) || false)))))) && true), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, false, true, true)))) || false), bool(bvec4(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true, ! (! _GLF_IDENTITY(((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), ! (! (_GLF_IDENTITY(((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), bool(bvec4(((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), false, false, false)))))))), false, false, false))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true, ! (_GLF_IDENTITY(! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), bool(bvec2(_GLF_IDENTITY(! ((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))) && true), false || (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))), true))))), true && (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), bool(bvec2(_GLF_IDENTITY(! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), false || (! ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 1.0, 1.0, 0.0))).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))) && true))), true))), true && (_GLF_IDENTITY(! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false, (_GLF_IDENTITY(((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false, true && (((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))) || false)) && true), false || (! ((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 1.0))).y))) && true))), true))))))))))), true, false, true)), (_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true, ! (_GLF_IDENTITY(! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), bool(bvec2(_GLF_IDENTITY(! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), false || (! ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0))) > injectionSwitch.y))) && true))), true))))), true && (_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))))) && true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x3(injectionSwitch.x, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 1.0, 0.0)), (false ? _GLF_FUZZED(7291.0874) : _GLF_IDENTITY(float(mat2x3(injectionSwitch.x, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 1.0, 0.0)), min(float(mat2x3(injectionSwitch.x, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 1.0, 0.0)), float(mat2x3(injectionSwitch.x, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 1.0, 0.0))))))) > injectionSwitch.y))) && true), bool(bvec2(_GLF_IDENTITY(! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), false || (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))), true))), true && (_GLF_IDENTITY(! ((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))) && true), bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(vec4(-7.3, -37.45, 4.6, _GLF_IDENTITY(130.259, (130.259) - sqrt(sqrt(0.0)))).b)), bool(false))) > injectionSwitch.y))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false) && true), false || (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))), true))))))))))), true, false, true)), false || (bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))) && true, ! (_GLF_IDENTITY(! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), bool(bvec2(_GLF_IDENTITY(! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), false || (! ((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).y))) && true))), true))))), true && (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true, bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true, false))), _GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), bool(bvec2(_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true), false || (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))), true))), true && (_GLF_IDENTITY(! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false) && true), false || (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))), true)))))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), bool(bvec2(_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true), false || (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))), true))), true && (_GLF_IDENTITY(! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false) && true), false || (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))), true))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), bool(bvec2(_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true), false || (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))), true))), true && (_GLF_IDENTITY(! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false) && true), false || (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))), true))))))), (! (! (_GLF_IDENTITY(_GLF_IDENTITY(! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), bool(bvec2(_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true), false || (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))), true))), true && (_GLF_IDENTITY(! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false) && true), false || (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))), true)))))))) || false)), ! (! (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), bool(bvec2(_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true), false || (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))), true))), true && (_GLF_IDENTITY(! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false) && true), false || (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))), true))))))), (! (! (_GLF_IDENTITY(_GLF_IDENTITY(! ((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))) && true), bool(bvec2(_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true), false || (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))), true))), true && (_GLF_IDENTITY(! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y))), _GLF_IDENTITY(((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false, false || (((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))) && true), false || (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))), true)))))))) || false)))))))))))))), true, false, true))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec2(true, true)))))) && _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))), ! (! (false))))), bool(bvec2((_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))))), ! (! (false))))), true)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))), _GLF_IDENTITY(! (! ((_GLF_IDENTITY(false, (false) && true)) || false)), ! (! (! (! ((_GLF_IDENTITY(false, (false) && true)) || false)))))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), false || (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))))) && true))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(false)), false, false, true)))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), 1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(7.2, mix(float(_GLF_FUZZED(-7306.8152)), float(7.2), bool(true))))), vec2(_GLF_FUZZED(62.38), (injectionSwitch)[1]), bvec2(false, true))), injectionSwitch)).y)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), 1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(7.2, mix(float(_GLF_FUZZED(-7306.8152)), float(7.2), bool(true))))), vec2(_GLF_FUZZED(62.38), (injectionSwitch)[1]), bvec2(false, true))), injectionSwitch)).y)), _GLF_IDENTITY(bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), 1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(7.2, mix(float(_GLF_FUZZED(-7306.8152)), float(7.2), bool(true))))), vec2(_GLF_FUZZED(62.38), (injectionSwitch)[1]), bvec2(false, true))), injectionSwitch)).y)), true, true)), ! (! (bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), 1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(7.2, mix(float(_GLF_FUZZED(-7306.8152)), float(7.2), bool(true))))), vec2(_GLF_FUZZED(62.38), (injectionSwitch)[1]), bvec2(false, true))), injectionSwitch)).y)), true, true))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (bool(bvec4(false, true, _GLF_IDENTITY(true, true && (true)), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))) && true))))), bool(bool(! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), 1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(7.2, mix(float(_GLF_FUZZED(-7306.8152)), float(7.2), bool(true))))), vec2(_GLF_FUZZED(62.38), (injectionSwitch)[1]), bvec2(false, true))), injectionSwitch)).y)))), (bool(bvec4(false, true, _GLF_IDENTITY(true, true && (true)), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))) && true))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), ! (! (bool(false)))), bool(bvec3(_GLF_IDENTITY(bool(false), ! (! (bool(false)))), false, true)))), bool(bvec2(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))), false)))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((! (false))) || false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.x = num_workgroup;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! ((_GLF_IDENTITY(false, bool(bool(false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) || false)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! ((_GLF_IDENTITY(false, bool(bool(false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) || false), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bool(false))), _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! ((_GLF_IDENTITY(false, bool(bool(false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) || false)) && true))))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, workgroup_size * workgroup_id));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size, _GLF_IDENTITY((GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size), max((GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size), _GLF_IDENTITY((GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size), clamp((GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size), (GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size), (GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size))))) >> _GLF_IDENTITY(uvec4(0u, _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) | (0u)), 0u)), 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(0u, 0u))) - 0u), 0u ^ (0u)), _GLF_IDENTITY(0u, (0u) ^ 0u)), (max(_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(0u, 0u))) - 0u), 0u ^ (0u)), _GLF_IDENTITY(0u, (0u) ^ 0u))) - 0u))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uvec4(_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) - 0u), 0u)), 0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED((workgroup_id & workgroup_base)))), 0u), max(uvec4(0u, 0u, 0u, 0u), uvec4(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u, 0u)))), _GLF_IDENTITY((~ (_GLF_IDENTITY(uvec4(0u, _GLF_IDENTITY(0u, ~ (~ _GLF_IDENTITY((0u), (_GLF_IDENTITY((0u), clamp((0u), (0u), (0u)))) / 1u))), 0u, 0u), max(uvec4(0u, 0u, 0u, 0u), uvec4(0u, 0u, 0u, 0u))))) << uvec4(0u, 0u, 0u, 0u), ((~ (_GLF_IDENTITY(uvec4(0u, _GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, uint(uvec4(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u, 1u, 1u)))))), 0u, 0u), max(uvec4(0u, 0u, 0u, 0u), uvec4(0u, 0u, 0u, 0u))))) << uvec4(0u, 0u, 0u, 0u)) << uvec4(0u, 0u, 0u, 0u)))))).y * _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size, (GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size) / uvec4(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-4.8), _GLF_FUZZED(2.8)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), vec2(injectionSwitch[0], injectionSwitch[1])).y))).w + GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.z;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-17.25)))))))
    barrier();
  }
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.y * _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.w, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.w, (GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.w) | 0u), (0u & 128065u), 1u), uvec3(uvec3(uvec3(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.w, (GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.w) | 0u), (0u & 128065u), 1u)))))), _GLF_IDENTITY(0u, (0u) - 0u) + (GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.y * _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size, (false ? _GLF_FUZZED(uvec4(43440u, 103297u, 133175u, 161305u)) : GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size)).w, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.w, (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.w, max(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.w, GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.w))) | 0u), (0u & 128065u), 1u), uvec3(uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.w, (GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.w) | _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(0u, 0u))) / 1u)), (0u & 128065u), 1u), (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.w, (GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.w) | _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(0u, 0u))) / 1u)), (0u & 128065u), 1u), clamp(uvec3(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.w, (GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.w) | _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(0u, 0u))) / 1u)), (0u & 128065u), 1u), uvec3(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.w, (GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.w) | _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(0u, 0u))) / 1u)), (0u & 128065u), 1u), uvec3(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.w, (GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.w) | _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(0u, 0u))) / 1u)), (0u & 128065u), 1u)))) | uvec3(0u, 0u, 0u))))))))) + ((GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.z + 1) % _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.w, _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.w, (0u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), (uint(6u)) << 0u))) ^ (GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.w))), ((_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.w, min(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.w, _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.w, (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size, (false ? _GLF_FUZZED((GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size & max(uvec4(150745u, 46735u, 148350u, 38228u), subgroup_id))) : GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size)).w) | (GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.w)))))) >> 0u) << 0u)), 0u + (workgroup_base + _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.y * _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.w, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.w, (GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.w) | 0u), (0u & 128065u), 1u), uvec3(uvec3(uvec3(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.w, (GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.w) | 0u), (0u & 128065u), 1u)))))), _GLF_IDENTITY(0u, (0u) - 0u) + (GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.y * _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size, (false ? _GLF_FUZZED(uvec4(_GLF_IDENTITY(43440u, (_GLF_IDENTITY(43440u, 0u | (43440u))) / 1u), 103297u, 133175u, 161305u)) : GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size)).w, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.w, (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.w, max(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.w, GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.w))) | 0u), (0u & 128065u), 1u), uvec3(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.w, (GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.w) | _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(0u, 0u))) / 1u)), (0u & 128065u), 1u), (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.w, (GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.w) | _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(0u, 0u))) / 1u)), (0u & 128065u), 1u), clamp(uvec3(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.w, (GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.w) | _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(0u, 0u))) / 1u)), (0u & 128065u), 1u), uvec3(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.w, (GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.w) | _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(0u, 0u))) / 1u)), (0u & 128065u), 1u), uvec3(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.w, (GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.w) | _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(0u, 0u))) / 1u)), (0u & 128065u), 1u)))) | uvec3(0u, 0u, 0u)), (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.w, (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size, uvec4(0u, 0u, 0u, 0u) + (GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size)).w) | _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(0u, 0u))) / 1u)), (0u & 128065u), 1u), (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.w, (GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.w) | _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(0u, 0u))) / _GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, (1u) | (1u)), 1u)))))), (0u & 128065u), 1u), clamp(uvec3(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.w, (GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.w) | _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(0u, 0u))) / _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (1u)), _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))))), (0u & 128065u), 1u), uvec3(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.w, (GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.w) | _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(0u, 0u))) / 1u)), (0u & 128065u), 1u), uvec3(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.w, (GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.w) | _GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)), (_GLF_IDENTITY(0u, max(0u, 0u))) - 0u)) / 1u)), (0u & 128065u), 1u)))) | uvec3(0u, 0u, 0u))) - uvec3(0u, 0u, 0u))))))))) + ((GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.z + 1) % _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.w, _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.w, (0u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u)))), (uint(6u)) << 0u))) ^ (GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.w))), ((_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.w, min(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.w, _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.w, (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size, (false ? _GLF_FUZZED((GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size & max(uvec4(150745u, 46735u, 148350u, 38228u), subgroup_id))) : GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size)).w) | (GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.w)))))) >> 0u) << 0u))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false)))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false || (bool(bvec4(false, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))
  barrier();
 _GLF_IDENTITY(buf[virtual_gid] = 1, (true ? _GLF_IDENTITY(buf[virtual_gid] = _GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, max(1, 1)), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) + 0), 1))) | (1)), (true ? buf[virtual_gid] = _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((1), max((1), _GLF_IDENTITY((1), ((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (0 ^ 0) | (1))) << 0))) / 1))) ^ 0), clamp(_GLF_IDENTITY(1, max(1, 1)), 1, 1))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, clamp(1, 1, 1)) : _GLF_FUZZED(38111))), max(1, 1)), 1, 1))), min((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0), clamp(_GLF_IDENTITY(1, max(1, 1)), 1, 1))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0), clamp(_GLF_IDENTITY(1, max(1, 1)), 1, 1))), min(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0), clamp(_GLF_IDENTITY(1, max(1, 1)), 1, 1))), (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))) || false) ? _GLF_FUZZED(_GLF_IDENTITY(60445, (60445) | 0)) : _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0), clamp(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) | 0), 1)))), 1, 1))), ((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0), clamp(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, 0 + (1)), 1)), 1, 1)))) >> 0))), (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0), clamp(_GLF_IDENTITY(1, _GLF_IDENTITY(max(1, 1), (true ? max(1, 1) : _GLF_FUZZED(59585)))), 1, 1)))))))) * 1), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((1), max((1), _GLF_IDENTITY((1), ((1)) / 1))) ^ 0), clamp(_GLF_IDENTITY(1, _GLF_IDENTITY(max(1, 1), (int(_GLF_ZERO(0.0, injectionSwitch.x)) | 0) ^ (max(1, 1)))), 1, 1))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0), clamp(_GLF_IDENTITY(1, max(1, 1)), 1, 1))), min((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0), clamp(_GLF_IDENTITY(1, max(1, 1)), 1, 1))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0), clamp(_GLF_IDENTITY(1, max(1, 1)), 1, _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (~ (1)) / ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))))))))), min(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((1) ^ 0, int(ivec3((1) ^ 0, (0 | 1), 0)))), clamp(_GLF_IDENTITY(1, max(1, 1)), 1, 1))), (false ? _GLF_FUZZED(_GLF_IDENTITY(60445, (60445) | 0)) : _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0), clamp(_GLF_IDENTITY(1, max(1, 1)), 1, 1))), ((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0), clamp(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, 0 + (1)), 1)), 1, 1)))) >> 0))), (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0), clamp(_GLF_IDENTITY(1, max(1, 1)), 1, 1)))))))) * 1), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((1), max((1), _GLF_IDENTITY((1), ((1)) / 1))) ^ 0), clamp(_GLF_IDENTITY(1, max(1, 1)), _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, 1 * (1)), 1, 1)), 1))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0), clamp(_GLF_IDENTITY(1, max(1, 1)), 1, 1))), min((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), (1) ^ 0), clamp(_GLF_IDENTITY(1, max(1, 1)), 1, 1))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0), clamp(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(3443) : 1)), 1)), 1, 1))), min(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0), clamp(_GLF_IDENTITY(1, max(1, 1)), 1, 1))), (false ? _GLF_FUZZED(_GLF_IDENTITY(60445, _GLF_IDENTITY((60445) | 0, 0 ^ ((60445) | 0)))) : _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((1), ((1)) >> 0) ^ 0), clamp(_GLF_IDENTITY(1, max(1, 1)), 1, 1))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0), clamp(_GLF_IDENTITY(1, max(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> 0), 0 + (1)), 1)), 1, 1)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0), clamp(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, 0 + (1)), 1)), 1, 1))))))) >> 0))), (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0), clamp(_GLF_IDENTITY(1, max(1, 1)), 1, 1)))))))) * 1))))) / 1) | (1)), ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))) * (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((1), max((1), _GLF_IDENTITY((1), ((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (0 ^ 0) | (1))) << 0))) / 1))) ^ 0), clamp(_GLF_IDENTITY(1, max(1, 1)), 1, 1))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, clamp(1, 1, 1)) : _GLF_FUZZED(38111))), max(1, 1)), 1, 1))), min((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0), clamp(_GLF_IDENTITY(1, max(1, 1)), 1, 1))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0), clamp(_GLF_IDENTITY(1, max(1, 1)), 1, 1))), min(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0), clamp(_GLF_IDENTITY(1, max(1, 1)), 1, 1))), (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))) || false) ? _GLF_FUZZED(_GLF_IDENTITY(60445, (60445) | 0)) : _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0), clamp(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) | 0), 1)))), 1, 1))), ((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0), clamp(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, 0 + (1)), 1)), 1, 1)))) >> 0))), (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0), clamp(_GLF_IDENTITY(1, _GLF_IDENTITY(max(1, 1), (true ? max(1, 1) : _GLF_FUZZED(59585)))), 1, 1)))))))) * 1), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((1), max((1), _GLF_IDENTITY((1), ((1)) / 1))) ^ 0), clamp(_GLF_IDENTITY(1, _GLF_IDENTITY(max(1, 1), (int(_GLF_ZERO(0.0, injectionSwitch.x)) | 0) ^ (max(1, 1)))), 1, 1))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0), clamp(_GLF_IDENTITY(1, max(1, 1)), 1, 1))), min((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0), clamp(_GLF_IDENTITY(1, max(1, 1)), 1, 1))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0), clamp(_GLF_IDENTITY(1, max(1, 1)), 1, _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (~ (1)) / ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))))))))), min(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((1) ^ 0, int(ivec3((1) ^ 0, (0 | 1), 0)))), clamp(_GLF_IDENTITY(1, max(1, 1)), 1, 1))), (false ? _GLF_FUZZED(_GLF_IDENTITY(60445, (60445) | 0)) : _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0), clamp(_GLF_IDENTITY(1, max(1, 1)), 1, 1))), ((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0), clamp(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, 0 + (1)), 1)), 1, 1)))) >> 0))), (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0), clamp(_GLF_IDENTITY(1, max(1, 1)), 1, 1)))))))) * 1), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((1), max((1), _GLF_IDENTITY((1), ((1)) / 1))) ^ 0), clamp(_GLF_IDENTITY(1, max(1, 1)), _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, 1 * (1)), 1, 1)), 1))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0), clamp(_GLF_IDENTITY(1, max(1, 1)), 1, 1))), min((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), (1) ^ 0), clamp(_GLF_IDENTITY(1, max(1, 1)), 1, 1))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0), clamp(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(3443) : 1)), 1)), 1, 1))), min(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0), clamp(_GLF_IDENTITY(1, max(1, 1)), 1, 1))), (false ? _GLF_FUZZED(_GLF_IDENTITY(60445, _GLF_IDENTITY((60445) | 0, 0 ^ ((60445) | 0)))) : _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((1), ((1)) >> 0) ^ 0), clamp(_GLF_IDENTITY(1, max(1, 1)), 1, 1))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0), clamp(_GLF_IDENTITY(1, max(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> 0), 0 + (1)), 1)), 1, 1)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0), clamp(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, 0 + (1)), 1)), 1, 1))))))) >> 0))), (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0), clamp(_GLF_IDENTITY(1, max(1, 1)), 1, 1)))))))) * 1))))) / 1) | (1)), int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((1), max((1), _GLF_IDENTITY((1), ((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (0 ^ 0) | (1))) << 0))) / 1))) ^ 0), clamp(_GLF_IDENTITY(1, max(1, 1)), 1, 1))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, clamp(1, 1, 1)) : _GLF_FUZZED(38111))), max(1, 1)), 1, 1))), min((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0), clamp(_GLF_IDENTITY(1, max(1, 1)), 1, 1))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0), clamp(_GLF_IDENTITY(1, max(1, 1)), 1, 1))), min(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0), clamp(_GLF_IDENTITY(1, max(1, 1)), 1, 1))), (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))) || false) ? _GLF_FUZZED(_GLF_IDENTITY(60445, (60445) | 0)) : _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0), clamp(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) | 0), 1)))), 1, 1))), ((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0), clamp(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, 0 + (1)), 1)), 1, 1)))) >> 0))), (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0), clamp(_GLF_IDENTITY(1, _GLF_IDENTITY(max(1, 1), (true ? max(1, 1) : _GLF_FUZZED(59585)))), 1, 1)))))))) * 1), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((1), max((1), _GLF_IDENTITY((1), ((1)) / 1))) ^ 0), clamp(_GLF_IDENTITY(1, _GLF_IDENTITY(max(1, 1), (int(_GLF_ZERO(0.0, injectionSwitch.x)) | 0) ^ (max(1, 1)))), 1, 1))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0), clamp(_GLF_IDENTITY(1, max(1, 1)), 1, 1))), min((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0), clamp(_GLF_IDENTITY(1, max(1, 1)), 1, 1))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0), clamp(_GLF_IDENTITY(1, max(1, 1)), 1, _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (~ (1)) / ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))))))))), min(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((1) ^ 0, int(ivec3((1) ^ 0, (0 | 1), 0)))), clamp(_GLF_IDENTITY(1, max(1, 1)), 1, 1))), (false ? _GLF_FUZZED(_GLF_IDENTITY(60445, (60445) | 0)) : _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0), clamp(_GLF_IDENTITY(1, max(1, 1)), 1, 1))), ((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0), clamp(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, 0 + (1)), 1)), 1, 1)))) >> 0))), (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0), clamp(_GLF_IDENTITY(1, max(1, 1)), 1, 1)))))))) * 1), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((1), max((1), _GLF_IDENTITY((1), ((1)) / 1))) ^ 0), clamp(_GLF_IDENTITY(1, max(1, 1)), _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, 1 * (1)), 1, 1)), 1))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0), clamp(_GLF_IDENTITY(1, max(1, 1)), 1, 1))), min((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), (1) ^ 0), clamp(_GLF_IDENTITY(1, max(1, 1)), 1, 1))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0), clamp(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(3443) : 1)), 1)), 1, 1))), min(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0), clamp(_GLF_IDENTITY(1, max(1, 1)), 1, 1))), (false ? _GLF_FUZZED(_GLF_IDENTITY(60445, _GLF_IDENTITY((60445) | 0, 0 ^ ((60445) | 0)))) : _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((1), ((1)) >> 0) ^ 0), clamp(_GLF_IDENTITY(1, max(1, 1)), 1, 1))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0), clamp(_GLF_IDENTITY(1, max(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> 0), 0 + (1)), 1)), 1, 1)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0), clamp(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, 0 + (1)), 1)), 1, 1))))))) >> 0))), (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0), clamp(_GLF_IDENTITY(1, max(1, 1)), 1, 1)))))))) * 1))))) / 1) | (1)), 0 | (_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((1), max((1), _GLF_IDENTITY((1), ((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (0 ^ 0) | (1))) << 0))) / 1))) ^ 0), clamp(_GLF_IDENTITY(1, max(1, 1)), 1, 1))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, clamp(1, 1, 1)) : _GLF_FUZZED(38111))), max(1, 1)), 1, 1))), min((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0), clamp(_GLF_IDENTITY(1, max(1, 1)), 1, 1))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0), clamp(_GLF_IDENTITY(1, max(1, 1)), 1, 1))), min(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0), clamp(_GLF_IDENTITY(1, max(1, 1)), 1, 1))), (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))) || false) ? _GLF_FUZZED(_GLF_IDENTITY(60445, (60445) | 0)) : _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0), clamp(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) | 0), 1)))), 1, 1))), ((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0), clamp(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, 0 + (1)), 1)), 1, 1)))) >> 0))), (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0), clamp(_GLF_IDENTITY(1, _GLF_IDENTITY(max(1, 1), (true ? max(1, 1) : _GLF_FUZZED(59585)))), 1, 1)))))))) * 1), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((1), max((1), _GLF_IDENTITY((1), ((1)) / 1))) ^ 0), clamp(_GLF_IDENTITY(1, _GLF_IDENTITY(max(1, 1), (int(_GLF_ZERO(0.0, injectionSwitch.x)) | 0) ^ (max(1, 1)))), 1, 1))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0), clamp(_GLF_IDENTITY(1, max(1, 1)), 1, 1))), min((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0), clamp(_GLF_IDENTITY(1, max(1, 1)), 1, 1))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0), clamp(_GLF_IDENTITY(1, max(1, 1)), 1, _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (~ (1)) / ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))))))))), min(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((1) ^ 0, int(ivec3((1) ^ 0, (0 | 1), 0)))), clamp(_GLF_IDENTITY(1, max(1, 1)), 1, 1))), (false ? _GLF_FUZZED(_GLF_IDENTITY(60445, (60445) | 0)) : _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0), clamp(_GLF_IDENTITY(1, max(1, 1)), 1, 1))), ((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0), clamp(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, 0 + (1)), 1)), 1, 1)))) >> 0))), (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0), clamp(_GLF_IDENTITY(1, max(1, 1)), 1, 1)))))))) * 1), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((1), max((1), _GLF_IDENTITY((1), ((1)) / 1))) ^ 0), clamp(_GLF_IDENTITY(1, max(1, 1)), _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, 1 * (1)), 1, 1)), 1))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0), clamp(_GLF_IDENTITY(1, max(1, 1)), 1, 1))), min((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), (1) ^ 0), clamp(_GLF_IDENTITY(1, max(1, 1)), 1, 1))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0), clamp(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(3443) : 1)), 1)), 1, 1))), min(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0), clamp(_GLF_IDENTITY(1, max(1, 1)), 1, 1))), (false ? _GLF_FUZZED(_GLF_IDENTITY(60445, _GLF_IDENTITY((60445) | 0, 0 ^ ((60445) | 0)))) : _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((1), ((1)) >> 0) ^ 0), clamp(_GLF_IDENTITY(1, max(1, 1)), 1, 1))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0), clamp(_GLF_IDENTITY(1, max(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> 0), 0 + (1)), 1)), 1, 1)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0), clamp(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, 0 + (1)), 1)), 1, 1))))))) >> 0))), (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0), clamp(_GLF_IDENTITY(1, max(1, 1)), 1, 1)))))))) * 1))))) / 1) | (1)))), 1))))) : _GLF_FUZZED(workgroup_base))) : _GLF_FUZZED(51971u)));
 if(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size, uvec4(0u, 0u, 0u, 0u) ^ (GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size)).z, max(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.z, GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.z)) + 1 < GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13num_workgroupsubgroup_idsubgroup_local_idsubgroup_size.w)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   int i = 0;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), bool(bvec4(bool(bvec2(false, _GLF_IDENTITY(false, (false) && true))), false, false, true))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false || (_GLF_DEAD(false)), ! _GLF_IDENTITY((! (_GLF_IDENTITY(false || (_GLF_DEAD(false)), true && (false || (_GLF_DEAD(false)))))), ! (! ((! (_GLF_IDENTITY(false || (_GLF_DEAD(false)), true && (false || (_GLF_DEAD(false))))))))))))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), mat2(1.0) * (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch))), clamp((injectionSwitch), (injectionSwitch), _GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(((injectionSwitch)), vec2(mat2(((injectionSwitch)), 1.0, 1.0))) * vec2(1.0, 1.0)))))) / vec2(1.0, _GLF_IDENTITY(1.0, float(mat4x2(1.0, 0.0, 0.0, 1.0, 0.0, exp(log(1.0)), 1.0, length(0.0)))))).y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && _GLF_IDENTITY(true, bool(bvec3(true, true, false))))), _GLF_IDENTITY((! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true))), false || ((! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false ? _GLF_FUZZED(vec2(-4.6, -3057.7743)) : injectionSwitch, (false ? _GLF_FUZZED(vec2(-4.6, -3057.7743)) : injectionSwitch) * mat2(1.0)))).x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)) && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), _GLF_IDENTITY(! (! ((false))), true && (! (! ((false)))))))))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, bool(bool(true))), false)), bool(bvec2(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, bool(bool(true))), false)), false || (bool(bvec2(_GLF_IDENTITY(true, bool(bool(true))), false)))), false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-33.45), _GLF_FUZZED(-5887.9683)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), true && (! (false)))))))), (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(5.6, 120.396)) : injectionSwitch)).y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((- -3622.1915))), vec2(_GLF_FUZZED(-1362.1784), (injectionSwitch)[1]), bvec2(false, true))).x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(buf[next_virtual_gid] = 2, ~ (_GLF_IDENTITY(~ (buf[next_virtual_gid] = 2), 0u + (~ (buf[next_virtual_gid] = 2))))), (_GLF_IDENTITY(buf[next_virtual_gid] = 2, (_GLF_IDENTITY(buf[next_virtual_gid] = 2, (buf[next_virtual_gid] = 2) >> 0u)) >> (_GLF_IDENTITY(15750u, (0u >> _GLF_IDENTITY(uint(6u), uint(6u))) | _GLF_IDENTITY((15750u), clamp((15750u), (15750u), (15750u)))) & _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u, 0u))))) + _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_size) : 0u))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(buf[next_virtual_gid] = 2, (_GLF_IDENTITY(buf[next_virtual_gid] = 2, (_GLF_IDENTITY(buf[next_virtual_gid] = 2, (buf[next_virtual_gid] = 2) >> 0u)) >> (15750u & 0u))) + 0u)), 0u ^ (~ (_GLF_IDENTITY(buf[next_virtual_gid] = 2, (_GLF_IDENTITY(buf[next_virtual_gid] = 2, _GLF_IDENTITY((_GLF_IDENTITY(buf[next_virtual_gid] = 2, (buf[next_virtual_gid] = 2) >> 0u)) >> (15750u & 0u), 0u ^ (_GLF_IDENTITY((_GLF_IDENTITY(buf[next_virtual_gid] = 2, (buf[next_virtual_gid] = 2) >> 0u)) >> (15750u & 0u), ((_GLF_IDENTITY(buf[next_virtual_gid] = 2, (buf[next_virtual_gid] = 2) >> 0u)) >> (15750u & 0u)) ^ 0u))))) + 0u))))));
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-6.8) : _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))))), 1.0 * (injectionSwitch.y))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)), bool(bvec3(bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)), true, true)))))
    barrier();
   buf[next_virtual_gid] = 2;
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
