#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_16 {
 bvec3 _f0;
 bvec4 _f1;
 bool _f2;
 mat2x4 _f3;
} ;

struct _GLF_struct_17 {
 mat2x3 _f0;
 float _f1;
 _GLF_struct_16 _f2;
 uvec3 _f3;
} ;

struct _GLF_struct_14 {
 uint _f0;
} ;

struct _GLF_struct_13 {
 ivec3 _f0;
 bvec4 _f1;
} ;

struct _GLF_struct_12 {
 mat3x2 _f0;
 uvec4 _f1;
 uvec2 _f2;
 uvec2 _f3;
 bool _f4;
 vec2 _f5;
 uint workgroup_size;
} ;

struct _GLF_struct_15 {
 _GLF_struct_12 _f0;
 uvec2 _f1;
 _GLF_struct_13 _f2;
 _GLF_struct_14 _f3;
} ;

struct _GLF_struct_10 {
 bvec4 _f0;
 mat4x2 _f1;
} ;

struct _GLF_struct_9 {
 mat3 _f0;
 uvec2 _f1;
 uvec2 _f2;
} ;

struct _GLF_struct_11 {
 _GLF_struct_9 _f0;
 ivec3 _f1;
 _GLF_struct_10 _f2;
} ;

struct _GLF_struct_18 {
 _GLF_struct_11 _f0;
 _GLF_struct_15 _f1;
 _GLF_struct_17 _f2;
} ;

struct _GLF_struct_6 {
 ivec3 _f0;
 vec4 _f1;
 uvec2 _f2;
 mat2x4 _f3;
 mat2 _f4;
 mat3 _f5;
 ivec2 _f6;
} ;

struct _GLF_struct_7 {
 ivec3 _f0;
 uint subgroup_id;
 mat2x3 _f1;
 bvec2 _f2;
 int _f3;
 _GLF_struct_6 _f4;
} ;

struct _GLF_struct_4 {
 mat2 _f0;
 mat4x2 _f1;
 mat4x2 _f2;
 mat2x3 _f3;
 uint _f4;
 mat4x2 _f5;
 mat4x3 _f6;
} ;

struct _GLF_struct_5 {
 vec3 _f0;
 _GLF_struct_4 _f1;
 ivec4 _f2;
} ;

struct _GLF_struct_8 {
 _GLF_struct_5 _f0;
 _GLF_struct_7 _f1;
 uvec3 _f2;
} ;

layout(set = 0, binding = 0) uniform buf0 {
 vec2 injectionSwitch;
};
struct _GLF_struct_2 {
 uvec3 _f0;
} ;

struct _GLF_struct_0 {
 mat3 _f0;
 bvec4 _f1;
 bvec3 _f2;
 uvec3 _f3;
 bvec2 _f4;
} ;

struct _GLF_struct_1 {
 _GLF_struct_0 _f0;
} ;

struct _GLF_struct_3 {
 _GLF_struct_1 _f0;
 _GLF_struct_2 _f1;
 uint gid;
} ;

#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 _GLF_struct_8 _GLF_struct_replacement_8 = _GLF_struct_8(_GLF_struct_5(vec3(1.0), _GLF_struct_4(mat2(1.0), mat4x2(1.0), mat4x2(1.0), mat2x3(1.0), 1u, mat4x2(_GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-8.6) : 1.0))), mat4x3(1.0)), _GLF_IDENTITY(_GLF_IDENTITY(ivec4(1), _GLF_IDENTITY(_GLF_IDENTITY((ivec4(1)), min((ivec4(1)), _GLF_IDENTITY((ivec4(1)), max((ivec4(1)), (ivec4(1)))))), (_GLF_IDENTITY((ivec4(1)), min((_GLF_IDENTITY(ivec4(1), ivec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) | (ivec4(1)))), (ivec4(1))))) | (_GLF_IDENTITY(_GLF_IDENTITY((ivec4(1)), min((ivec4(1)), (ivec4(1)))), (_GLF_IDENTITY((ivec4(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) | (1)))), min((ivec4(1)), (ivec4(1))))) ^ ivec4(0, 0, 0, 0)))) >> ivec4(0, 0, 0, 0)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(ivec4(1), _GLF_IDENTITY(_GLF_IDENTITY((ivec4(1)), min(_GLF_IDENTITY((ivec4(1)), ((ivec4(1))) / ivec4(1, 1, 1, 1)), (ivec4(1)))), (_GLF_IDENTITY((ivec4(1)), min((ivec4(1)), (ivec4(1))))) | (_GLF_IDENTITY(_GLF_IDENTITY((ivec4(1)), min((ivec4(1)), (ivec4(1)))), (_GLF_IDENTITY((ivec4(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) | (1)))), min((ivec4(1)), (ivec4(1))))) ^ ivec4(0, 0, 0, 0)))) >> ivec4(0, 0, 0, 0)), min(_GLF_IDENTITY(ivec4(1), _GLF_IDENTITY(_GLF_IDENTITY((ivec4(1)), min(_GLF_IDENTITY((ivec4(1)), ((ivec4(1))) / ivec4(1, 1, 1, 1)), (ivec4(1)))), (_GLF_IDENTITY((ivec4(1)), min((ivec4(1)), (ivec4(1))))) | (_GLF_IDENTITY(_GLF_IDENTITY((ivec4(1)), min((ivec4(1)), (ivec4(1)))), (_GLF_IDENTITY((ivec4(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) | (1)))), min((ivec4(1)), (ivec4(1))))) ^ ivec4(0, 0, 0, 0)))) >> ivec4(0, 0, 0, 0)), _GLF_IDENTITY(ivec4(1), _GLF_IDENTITY(_GLF_IDENTITY((ivec4(1)), min(_GLF_IDENTITY((ivec4(1)), ((ivec4(1))) / ivec4(1, 1, 1, 1)), (ivec4(1)))), (_GLF_IDENTITY((ivec4(1)), min((ivec4(1)), (ivec4(1))))) | (_GLF_IDENTITY(_GLF_IDENTITY((ivec4(1)), min((ivec4(1)), (ivec4(1)))), (_GLF_IDENTITY((ivec4(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) | (1)))), min((ivec4(1)), (ivec4(1))))) ^ ivec4(0, 0, 0, 0)))) >> ivec4(0, 0, 0, 0))))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(1), _GLF_IDENTITY(_GLF_IDENTITY((ivec4(1)), min((ivec4(1)), (ivec4(1)))), _GLF_IDENTITY((_GLF_IDENTITY((ivec4(1)), min((ivec4(1)), (ivec4(1))))), ((_GLF_IDENTITY((ivec4(1)), min((ivec4(1)), (ivec4(1)))))) | (ivec4(0, 0, 0, 0) | ivec4(0, 0, 0, 0))) | (_GLF_IDENTITY(_GLF_IDENTITY((ivec4(1)), min((ivec4(1)), (ivec4(1)))), (_GLF_IDENTITY((ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) | (1)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) | (1)), max(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) | (1)), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) | (1)))), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) | (1)), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) | (1)))))), _GLF_IDENTITY(min((ivec4(1)), (ivec4(1))), (min((ivec4(1)), (ivec4(1)))) ^ ivec4(0, 0, 0, 0)))) ^ ivec4(0, 0, 0, 0)))) >> ivec4(0, 0, 0, 0)), ivec4(0, 0, 0, 0) | (_GLF_IDENTITY(ivec4(1), _GLF_IDENTITY(_GLF_IDENTITY((ivec4(1)), min((ivec4(1)), (ivec4(1)))), (_GLF_IDENTITY((ivec4(1)), min((ivec4(1)), (ivec4(1))))) | (_GLF_IDENTITY(_GLF_IDENTITY((ivec4(1)), min((ivec4(1)), (_GLF_IDENTITY(ivec4(1), (false ? _GLF_FUZZED(ivec4(-45843, -97387, -77620, -18355)) : ivec4(1)))))), (_GLF_IDENTITY((ivec4(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ _GLF_IDENTITY((~ (1)), 1 * ((~ (1)))))) | (1)))), min((ivec4(1)), (ivec4(1))))) ^ ivec4(0, 0, 0, 0)))) >> ivec4(0, _GLF_IDENTITY(0, min(0, 0)), 0, 0)))), max(_GLF_IDENTITY(ivec4(1), _GLF_IDENTITY(_GLF_IDENTITY((ivec4(1)), _GLF_IDENTITY(min((ivec4(1)), (ivec4(1))), min(min((ivec4(1)), (ivec4(1))), min((ivec4(1)), (ivec4(1)))))), (_GLF_IDENTITY((ivec4(1)), min((ivec4(1)), (ivec4(1))))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((ivec4(1)), min((ivec4(1)), (ivec4(1)))), (_GLF_IDENTITY(_GLF_IDENTITY((ivec4(1)), min((ivec4(1)), (ivec4(1)))), min(_GLF_IDENTITY((ivec4(1)), min((ivec4(1)), (ivec4(1)))), _GLF_IDENTITY(_GLF_IDENTITY((ivec4(1)), min((ivec4(1)), (ivec4(1)))), min(_GLF_IDENTITY((ivec4(1)), min((ivec4(1)), (ivec4(1)))), _GLF_IDENTITY((ivec4(1)), min((ivec4(1)), (ivec4(1))))))))) | ivec4(0, 0, 0, 0)), (_GLF_IDENTITY((ivec4(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) | (1)))), min((ivec4(1)), (ivec4(1))))) ^ ivec4(0, 0, 0, 0)))) >> ivec4(0, 0, 0, 0)), _GLF_IDENTITY(_GLF_IDENTITY(ivec4(1), _GLF_IDENTITY(_GLF_IDENTITY((ivec4(1)), min((ivec4(1)), (ivec4(1)))), (_GLF_IDENTITY((ivec4(1)), min((ivec4(1)), (ivec4(1))))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((ivec4(1)), min((ivec4(1)), (ivec4(1)))), (_GLF_IDENTITY((ivec4(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) | (1)))), min((ivec4(1)), (ivec4(1))))) ^ ivec4(0, 0, 0, 0)), (_GLF_IDENTITY(_GLF_IDENTITY((ivec4(1)), min((ivec4(1)), (ivec4(1)))), (_GLF_IDENTITY((ivec4(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) | (1)))), min((ivec4(1)), (ivec4(1))))) ^ ivec4(0, 0, 0, 0))) ^ ivec4(0, 0, 0, 0)))) >> ivec4(0, 0, 0, 0)), (_GLF_IDENTITY(ivec4(1), _GLF_IDENTITY(_GLF_IDENTITY((ivec4(1)), min((ivec4(1)), (ivec4(1)))), (_GLF_IDENTITY((ivec4(1)), min((ivec4(1)), (ivec4(1))))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((ivec4(1)), min((ivec4(1)), (ivec4(1)))), (_GLF_IDENTITY((ivec4(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) | (1)))), min((ivec4(1)), (ivec4(1))))) ^ ivec4(0, 0, 0, 0)), (_GLF_IDENTITY(_GLF_IDENTITY((ivec4(1)), min((ivec4(1)), (ivec4(1)))), (_GLF_IDENTITY((ivec4(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) | (1)))), min((ivec4(1)), (ivec4(1))))) ^ ivec4(0, 0, 0, 0))) ^ ivec4(0, 0, 0, 0)))) >> ivec4(0, 0, 0, 0))) >> ivec4(0, 0, 0, 0))))), ~ (~ ((_GLF_IDENTITY(ivec4(1), _GLF_IDENTITY(_GLF_IDENTITY((ivec4(1)), min(_GLF_IDENTITY(_GLF_IDENTITY((ivec4(1)), ((_GLF_IDENTITY(ivec4(1), (_GLF_IDENTITY(ivec4(1), (ivec4(1)) >> ivec4(0, 0, 0, 0))) | ivec4(0, 0, 0, 0)))) - ivec4(0, 0, 0, 0)), ((ivec4(1))) / ivec4(1, 1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), ~ (~ (int(int(1)))))), 1)), (ivec4(1)))), (_GLF_IDENTITY((ivec4(1)), min((ivec4(1)), (ivec4(1))))) | (_GLF_IDENTITY(_GLF_IDENTITY((ivec4(1)), min((ivec4(1)), (ivec4(1)))), _GLF_IDENTITY((_GLF_IDENTITY((ivec4(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) | (1)))), min((ivec4(1)), (ivec4(1))))), ivec4(0, 0, 0, 0) | ((_GLF_IDENTITY((ivec4(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) | (1)))), min((ivec4(1)), (ivec4(1))))))) ^ ivec4(0, 0, 0, 0)))) >> ivec4(0, 0, 0, 0))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(1), _GLF_IDENTITY(_GLF_IDENTITY((ivec4(1)), min((ivec4(1)), (ivec4(1)))), (_GLF_IDENTITY((ivec4(1)), min((ivec4(1)), (ivec4(1))))) | (_GLF_IDENTITY(_GLF_IDENTITY((ivec4(1)), min((ivec4(1)), (ivec4(1)))), (_GLF_IDENTITY((ivec4(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) | (1)))), min((ivec4(1)), (ivec4(1))))) ^ ivec4(0, 0, 0, 0)))) >> ivec4(0, 0, 0, 0)), ivec4(0, 0, 0, 0) | (_GLF_IDENTITY(ivec4(1), _GLF_IDENTITY(_GLF_IDENTITY((ivec4(1)), min((ivec4(1)), (ivec4(1)))), (_GLF_IDENTITY((ivec4(1)), _GLF_IDENTITY(min((ivec4(1)), (ivec4(1))), max(_GLF_IDENTITY(min((ivec4(1)), (ivec4(1))), (min((ivec4(1)), (ivec4(1)))) / ivec4(1, 1, 1, 1)), _GLF_IDENTITY(min((ivec4(1)), (ivec4(1))), (min((ivec4(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (~ (1)) | (~ (1))))))), (ivec4(1)))) | ivec4(0, 0, 0, 0)))))) | (_GLF_IDENTITY(_GLF_IDENTITY((ivec4(1)), min((ivec4(1)), (ivec4(1)))), (_GLF_IDENTITY((ivec4(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), min(~ (1), ~ (1)))))) | (1)))), min((ivec4(1)), (ivec4(1))))) ^ ivec4(0, 0, 0, 0)))) >> ivec4(_GLF_IDENTITY(0, 0 ^ (0)), 0, 0, 0)))), max(_GLF_IDENTITY(ivec4(1), _GLF_IDENTITY(_GLF_IDENTITY((ivec4(1)), _GLF_IDENTITY(min((ivec4(1)), (ivec4(1))), min(min((ivec4(_GLF_IDENTITY(1, (1) / ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(3), int(3)), (1 << _GLF_IDENTITY(int(3), int(3))) << 0)) >> _GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), 0 + (_GLF_IDENTITY(int(3), int(3)))))))), (ivec4(1))), min((ivec4(1)), (ivec4(1)))))), (_GLF_IDENTITY((ivec4(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, clamp(1, 1, 1)), 1)))), min((ivec4(1)), (ivec4(1))))) | (_GLF_IDENTITY(_GLF_IDENTITY((ivec4(1)), min((ivec4(1)), _GLF_IDENTITY((ivec4(1)), ((ivec4(1))) | ivec4(0, 0, 0, 0)))), (_GLF_IDENTITY((ivec4(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) | (1)))), min((ivec4(1)), (ivec4(1))))) ^ _GLF_IDENTITY(ivec4(0, _GLF_IDENTITY(0, (0) >> 0), 0, 0), (ivec4(0, 0, _GLF_IDENTITY(0, 0 ^ (0)), 0)) << ivec4(0, 0, 0, 0))))) >> ivec4(0, 0, 0, 0)), _GLF_IDENTITY(ivec4(_GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(int(1), (true ? int(1) : _GLF_FUZZED(-82939)))), (int(_GLF_IDENTITY(int(1), (true ? int(1) : _GLF_FUZZED(-82939))))) | 0))), _GLF_IDENTITY(_GLF_IDENTITY((ivec4(1)), _GLF_IDENTITY(min((ivec4(1)), (ivec4(1))), (min((ivec4(_GLF_IDENTITY(1, min(1, 1)))), (ivec4(1)))) / _GLF_IDENTITY(((ivec4(1, 1, 1, 1) << _GLF_IDENTITY(ivec4(3), _GLF_IDENTITY(ivec4(3), (ivec4(3)) | (ivec4(3))))) >> _GLF_IDENTITY(ivec4(3), ivec4(3))), clamp(((ivec4(1, 1, 1, 1) << _GLF_IDENTITY(ivec4(3), _GLF_IDENTITY(ivec4(3), (ivec4(3)) | (ivec4(3))))) >> _GLF_IDENTITY(ivec4(3), ivec4(3))), _GLF_IDENTITY(((ivec4(1, 1, 1, 1) << _GLF_IDENTITY(ivec4(3), _GLF_IDENTITY(ivec4(3), (ivec4(3)) | (ivec4(3))))) >> _GLF_IDENTITY(ivec4(3), ivec4(3))), (true ? ((ivec4(1, 1, 1, 1) << _GLF_IDENTITY(ivec4(3), _GLF_IDENTITY(ivec4(3), (ivec4(3)) | (ivec4(3))))) >> _GLF_IDENTITY(ivec4(3), ivec4(3))) : _GLF_FUZZED(ivec4(30570, -54799, -21305, -33442)))), ((ivec4(1, 1, 1, 1) << _GLF_IDENTITY(ivec4(3), _GLF_IDENTITY(ivec4(3), (ivec4(3)) | (ivec4(3))))) >> _GLF_IDENTITY(ivec4(3), ivec4(3))))))), (_GLF_IDENTITY((ivec4(1)), min((ivec4(1)), (ivec4(1))))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((ivec4(1)), min((ivec4(1)), (ivec4(1)))), (_GLF_IDENTITY((ivec4(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) | (1)))), min((ivec4(1)), (ivec4(1))))) ^ ivec4(0, 0, 0, 0)), (_GLF_IDENTITY(_GLF_IDENTITY((ivec4(1)), min((ivec4(1)), (ivec4(1)))), (_GLF_IDENTITY((ivec4(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) | (1)))), min((ivec4(1)), (ivec4(1))))) ^ ivec4(0, 0, 0, 0))) ^ ivec4(0, 0, 0, 0)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((ivec4(1)), min((ivec4(1)), (ivec4(1)))), (_GLF_IDENTITY((ivec4(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) | (1)))), min((ivec4(1)), (ivec4(1))))) ^ ivec4(0, 0, 0, 0)), (_GLF_IDENTITY(_GLF_IDENTITY((ivec4(1)), min((ivec4(1)), (ivec4(1)))), (_GLF_IDENTITY((ivec4(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) | (1)))), min((ivec4(1)), (ivec4(1))))) ^ ivec4(0, 0, 0, 0))) ^ ivec4(0, 0, 0, 0)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((ivec4(1)), min((ivec4(1)), (ivec4(1)))), (_GLF_IDENTITY((ivec4(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) | (1)))), min((ivec4(1)), (ivec4(1))))) ^ ivec4(0, 0, 0, 0)), (_GLF_IDENTITY(_GLF_IDENTITY((ivec4(1)), min((ivec4(1)), (ivec4(1)))), (_GLF_IDENTITY((ivec4(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) | (1)))), min((ivec4(1)), (ivec4(1))))) ^ ivec4(0, 0, 0, 0))) ^ ivec4(0, 0, 0, 0))) >> ivec4(0, 0, 0, 0)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((ivec4(1)), ((ivec4(1))) - (ivec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) ^ ivec4(0, 0, 0, 0))), min((ivec4(1)), (ivec4(1)))), (_GLF_IDENTITY((ivec4(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) | (1)))), min((ivec4(1)), (ivec4(1))))) ^ ivec4(0, 0, 0, 0)), (_GLF_IDENTITY(_GLF_IDENTITY((ivec4(1)), min((ivec4(1)), (ivec4(1)))), (_GLF_IDENTITY((ivec4(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) | (1)))), min((ivec4(1)), (ivec4(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec4(1, 0, 0, (1 | 1)), clamp(ivec4(1, 0, 0, (1 | 1)), ivec4(1, 0, 0, (1 | 1)), ivec4(1, 0, 0, (1 | 1))))))))))) ^ ivec4(0, 0, 0, 0))) ^ ivec4(0, 0, 0, 0)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((ivec4(1)), min((ivec4(1)), (ivec4(1)))), (_GLF_IDENTITY((ivec4(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) | (1)))), min((ivec4(1)), (ivec4(1))))) ^ ivec4(0, 0, 0, 0)), (_GLF_IDENTITY(_GLF_IDENTITY((ivec4(1)), min((ivec4(1)), (ivec4(1)))), _GLF_IDENTITY((_GLF_IDENTITY((ivec4(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) | (1)))), min((ivec4(1)), (ivec4(1))))), ((_GLF_IDENTITY((ivec4(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) | (1)))), min((ivec4(1)), (ivec4(1)))))) ^ ivec4(0, 0, 0, 0)) ^ ivec4(0, 0, 0, _GLF_IDENTITY(0, (0) | (0))))) ^ ivec4(0, 0, 0, 0)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((ivec4(1)), min(_GLF_IDENTITY((ivec4(1)), ((ivec4(1))) - ivec4(0, 0, 0, 0)), (ivec4(1)))), (_GLF_IDENTITY((ivec4(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) | (1)))), min((ivec4(1)), (ivec4(1))))) ^ ivec4(0, 0, 0, 0)), (_GLF_IDENTITY(_GLF_IDENTITY((ivec4(1)), min((ivec4(1)), (ivec4(1)))), (_GLF_IDENTITY((ivec4(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) | (1)))), min((ivec4(1)), (ivec4(1))))) ^ ivec4(0, 0, 0, 0))) ^ ivec4(0, 0, 0, 0)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((ivec4(1)), min((ivec4(1)), (ivec4(1)))), _GLF_IDENTITY((_GLF_IDENTITY((ivec4(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) | (1)))), min((ivec4(1)), (ivec4(1))))) ^ ivec4(0, 0, 0, 0), ((_GLF_IDENTITY((ivec4(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) | (1)))), min((ivec4(1)), (ivec4(1))))) ^ ivec4(0, 0, 0, 0)) - ivec4(0, 0, 0, 0))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(ivec4(1), clamp(_GLF_IDENTITY(ivec4(1), (ivec4(1)) >> (ivec4(0, 0, 0, 0) >> _GLF_IDENTITY(ivec4(5), ivec4(5)))), ivec4(1), _GLF_IDENTITY(ivec4(1), ~ (~ (ivec4(1))))))), min((ivec4(1)), (ivec4(1)))), (_GLF_IDENTITY((ivec4(_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), (0 >> _GLF_IDENTITY(int(5), int(5))) | (_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), clamp(_GLF_IDENTITY(1, ~ (~ (1))), _GLF_IDENTITY(1, ~ (~ (1))), _GLF_IDENTITY(1, ~ (~ (1)))))))) | (1)))), min((ivec4(1)), (ivec4(1))))) ^ ivec4(0, 0, 0, 0))) ^ ivec4(0, 0, 0, 0))) ^ ivec4(0, 0, 0, 0))) >> ivec4(0, 0, 0, 0)))))) >> ivec4(0, 0, _GLF_IDENTITY(0, 0 ^ (0)), 0)))))))))), _GLF_struct_7(ivec3(1), gl_SubgroupID, mat2x3(1.0), bvec2(true), 1, _GLF_struct_6(ivec3(1), vec4(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(64.70))), 1.0)), 1.0))), uvec2(1u), mat2x4(1.0), _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(mat2(mat3x2(-8510.1899, 8.0, 596.727, -6.9, 61.48, -4.8))) : mat2(_GLF_IDENTITY(1.0, (1.0) / cos(0.0))))), (_GLF_IDENTITY(mat2(1.0), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))) ? _GLF_FUZZED(mat2(mat3x2(-8510.1899, 8.0, 596.727, -6.9, 61.48, -4.8))) : mat2(1.0), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))) ? _GLF_FUZZED(mat2(mat3x2(-8510.1899, 8.0, 596.727, -6.9, 61.48, -4.8))) : mat2(1.0)) * mat2(1.0))))) + mat2(0.0, 0.0, 0.0, 0.0)), mat3(1.0), ivec2(1))), uvec3(1u));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 _GLF_struct_3 _GLF_struct_replacement_3 = _GLF_struct_3(_GLF_struct_1(_GLF_struct_0(mat3(1.0), bvec4(true), bvec3(_GLF_IDENTITY(true, true && (true))), uvec3(1u), _GLF_IDENTITY(bvec2(true), bvec2(bvec3(bvec2(true), true))))), _GLF_struct_2(uvec3(1u)), gl_GlobalInvocationID.x);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! ((! (false))))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, true))))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch)).y))))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false), bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))))))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
            barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
            barrier();
          }
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0), mat3x2(_GLF_IDENTITY(mat3(_GLF_IDENTITY(mat3x2(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0), mat3x2(mat4(mat3x2(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, _GLF_IDENTITY(1.0, 0.0 + (1.0))))))), (true ? mat3(_GLF_IDENTITY(mat3x2(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0), mat3x2(mat4(mat3x2(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0))))) : _GLF_FUZZED(mat3(-74.28, 2.3, -9357.1838, -2155.2390, 2.3, -9.1, -96.78, 86.19, -2559.4386))))))), (false ? _GLF_FUZZED(vec2(35.37, 8.9)) : vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0), mat3x2(_GLF_IDENTITY(mat3(_GLF_IDENTITY(mat3x2(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0), mat3x2(mat4(mat3x2(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0))))), (true ? mat3(_GLF_IDENTITY(mat3x2(injectionSwitch, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x), 1.0, 0.0, 1.0), mat3x2(mat4(mat3x2(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0))))) : _GLF_FUZZED(mat3(-74.28, 2.3, -9357.1838, -2155.2390, 2.3, -9.1, -96.78, 86.19, -2559.4386)))))))))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), ! (! (! (_GLF_IDENTITY(false, true && (false))))))))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), ! (! (! (_GLF_IDENTITY(false, true && (false))))))))))))), false, false, false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-8.6), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(96.68)), bvec2(true, false))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))))) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(vec3(-62.18, -1161.8429, 2.2).z)))))).x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 _GLF_struct_18 _GLF_struct_replacement_18 = _GLF_struct_18(_GLF_struct_11(_GLF_struct_9(mat3(1.0), uvec2(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, _GLF_IDENTITY((1u), 0u | (_GLF_IDENTITY((1u), ~ (~ ((1u)))))) << _GLF_IDENTITY(0u, _GLF_IDENTITY(1u, (true ? _GLF_IDENTITY(1u, ~ (~ (1u))) : _GLF_FUZZED(num_workgroup))) * (_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (~ (0u)) | (_GLF_IDENTITY(~ (0u), (true ? ~ (0u) : _GLF_FUZZED(64131u)))))))))), _GLF_IDENTITY(1u, min(1u, 1u)), 1u))), uvec2(1u)), ivec3(1), _GLF_struct_10(bvec4(_GLF_IDENTITY(true, (true) && true)), mat4x2(1.0))), _GLF_struct_15(_GLF_struct_12(mat3x2(1.0), uvec4(1u), uvec2(1u), uvec2(1u), _GLF_IDENTITY(true, bool(bvec3(true, false, false))), vec2(1.0), gl_WorkGroupSize.x), uvec2(1u), _GLF_struct_13(ivec3(1), bvec4(true)), _GLF_struct_14(1u)), _GLF_struct_17(mat2x3(1.0), 1.0, _GLF_struct_16(bvec3(true), bvec4(true), true, mat2x4(1.0)), uvec3(1u)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && (! (! (false)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2x3(injectionSwitch.x, 1.0, 0.0, sqrt(0.0), 0.0, 1.0), mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (_GLF_IDENTITY(mat2x3(injectionSwitch.x, 1.0, 0.0, sqrt(0.0), 0.0, 1.0), transpose(transpose(mat2x3(injectionSwitch.x, 1.0, 0.0, sqrt(0.0), 0.0, 1.0)))))))) > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint total_threads = num_workgroup * _GLF_struct_replacement_18._f1._f0.workgroup_size;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(subgroup_local_id + _GLF_IDENTITY(1, max(1, 1)) < subgroup_size)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(bool(bvec3(bool(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), bool(bvec3(bool(bvec3(bool(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true, true))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
    }
   atomicStore(buf[(_GLF_IDENTITY(_GLF_struct_replacement_3.gid, _GLF_IDENTITY(0u | (_GLF_struct_replacement_3.gid), max(0u | (_GLF_struct_replacement_3.gid), 0u | (_GLF_struct_replacement_3.gid)))) + _GLF_IDENTITY(1, max(1, 1))) % total_threads], uint(_GLF_IDENTITY(2, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 2 : _GLF_FUZZED(35198)))), 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), true), false))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   subgroupAll(_GLF_IDENTITY(false, true && (false)));
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) && true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((_GLF_DEAD(false)) && true, true), bvec2(_GLF_IDENTITY(bvec2(bvec2((_GLF_DEAD(false)) && true, true)), bvec2(bvec3(bvec2(bvec2((_GLF_DEAD(false)) && true, true)), true)))))), (bool(bvec2((_GLF_DEAD(false)) && true, true))) && true))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))) && true), true, false))))), false || (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), true, false)))))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 1.0))), 0.0, 1.0, 1.0, abs(1.0))), (true ? vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 1.0))), 0.0, 1.0, 1.0, abs(1.0))) : _GLF_FUZZED(vec2(0.4, 8039.8850))))).y)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (false)))))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[(_GLF_struct_replacement_3.gid + 1) % total_threads], uint(_GLF_IDENTITY(2, min(2, _GLF_IDENTITY(2, min(2, _GLF_IDENTITY(2, (2) | (2))))))), _GLF_IDENTITY(4, (4) | (_GLF_IDENTITY(4, (4) + 0))), 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), bvec3(bvec3(bvec3(_GLF_DEAD(false), false, true)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) - 0.0))) > injectionSwitch.y))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
             barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
          }
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), false || (_GLF_IDENTITY(false, false || (false))))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x3(injectionSwitch.x, 1.0, 1.0, 1.0, 0.0, 0.0)), float(float(float(mat2x3(injectionSwitch.x, 1.0, 1.0, 1.0, 0.0, 0.0)))))), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ! (! ((false) || false))))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, sqrt(0.0), sqrt(0.0), 0.0))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(_GLF_IDENTITY(true, bool(bvec2(true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(-3.6)), clamp((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(-3.6)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(-3.6)), _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(-3.6)), clamp(_GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(-3.6)), ((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(-3.6))) / 1.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(-3.6)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(_GLF_IDENTITY(-3.6, (-3.6) / 1.0))))))), float(mat2(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(-3.6)), clamp((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(-3.6)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(-3.6)), _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(-3.6)), clamp(_GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(-3.6)), ((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(-3.6))) / 1.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(-3.6)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(_GLF_IDENTITY(-3.6, (-3.6) / 1.0))))))), (false ? _GLF_FUZZED(384.919) : _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(-3.6)), clamp((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(-3.6)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(-3.6)), _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(-3.6)), clamp(_GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(-3.6)), ((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(-3.6))) / 1.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(-3.6)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(_GLF_IDENTITY(-3.6, (-3.6) / 1.0))))))))), 1.0, log(1.0), sin(0.0))))) > injectionSwitch.y))))));
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(147.007))), injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))) - vec2(0.0, 0.0)).y))), ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))) || false), ! (! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false), bool(bool(! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), _GLF_IDENTITY(false || (bool(bool(_GLF_DEAD(false)))), (_GLF_IDENTITY(false || _GLF_IDENTITY((bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false)))))))))))), ! (! ((bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))))))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false || (bool(bool(_GLF_DEAD(false)))), false || (false || (bool(bool(_GLF_DEAD(false))))))), (! (_GLF_IDENTITY(false || (bool(bool(_GLF_DEAD(false)))), false || (_GLF_IDENTITY(false, true && (false)) || (bool(bool(_GLF_DEAD(false)))))))) && true)))) && true))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
