#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], float(mat3x2((injectionSwitch)[1], 1.0, 0.0, 1.0, 0.0, 1.0)))), vec2(_GLF_FUZZED((93.36 * 9466.7404)), _GLF_FUZZED(40.09)), bvec2(false, false))).x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y)), ! _GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).x > injectionSwitch.y))))))))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, true && (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), (true ? (injectionSwitch) / vec2(_GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0) : _GLF_FUZZED(reflect(injectionSwitch, injectionSwitch))))), clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch, min(false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch, false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))))) * vec2(_GLF_ONE(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))).y)))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), (_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), (injectionSwitch.x > injectionSwitch.y))) && true))), ! _GLF_IDENTITY((! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! ((! (! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(6.6), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) / 1.0), _GLF_FUZZED(5934.6464)), bvec2(true, false))))).x > injectionSwitch.y)))))))))))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), ((_GLF_IDENTITY(false, false || (false)))) && true), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || (false))), ((_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), (_GLF_IDENTITY(false || (false), ! (! (false || (false))))) || false)))) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))))) : _GLF_FUZZED(injectionSwitch)))), injectionSwitch, injectionSwitch)), mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))), (_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), bool(bvec4((false), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), ((_GLF_IDENTITY(false, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, false || (false)), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, false || (false)), true)))))) || (false)))) && true) || false), (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))), (_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), ((_GLF_IDENTITY(false, false || (false)))) && true) || false), (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))), false || ((_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), ((_GLF_IDENTITY(false, false || (false)))) && true) || false), (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y)))))) || false)) || false))))), (bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), ((_GLF_IDENTITY(false, false || (false)))) && true), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || (false))), ((_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), (_GLF_IDENTITY(false || (false), ! (! (false || (false))))) || false)))) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))))) : _GLF_FUZZED(injectionSwitch)))), injectionSwitch, injectionSwitch)), mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))), (_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), bool(bvec4((false), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), ((_GLF_IDENTITY(false, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, false || (false)), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, false || (false)), true)))))) || (false)))) && true) || false), (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))), (_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), ((_GLF_IDENTITY(false, false || (false)))) && true) || false), (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))), false || ((_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), ((_GLF_IDENTITY(false, false || (false)))) && true) || false), (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y)))))) || false)) || false)))))) && true)))) || false), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], float(mat3x2((injectionSwitch)[1], 1.0, 0.0, 1.0, 0.0, 1.0)))), vec2(_GLF_FUZZED((93.36 * 9466.7404)), _GLF_FUZZED(_GLF_IDENTITY(40.09, (40.09) * sqrt(1.0)))), bvec2(false, false))).x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(3.6, 7.1)) : injectionSwitch))) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y)), ! _GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).x > injectionSwitch.y))))))))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, true && (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), (true ? (injectionSwitch) / vec2(_GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0) : _GLF_FUZZED(reflect(injectionSwitch, injectionSwitch))))), _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch, min(false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch, false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))))) * vec2(_GLF_ONE(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))), vec2(_GLF_IDENTITY(mat4x3(clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch, min(false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch, false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))))) * vec2(_GLF_ONE(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, cos(0.0), abs(0.0)), mat4x3(mat4x3(mat4x3(clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch, min(false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch, false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))))) * vec2(_GLF_ONE(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, cos(0.0), abs(0.0)))))))).y)))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), false)), bool(bvec4(bool(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), false)), false, true, false)))), true))), (injectionSwitch.x > injectionSwitch.y))) && true))), ! _GLF_IDENTITY((! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! ((! (! (! _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(6.6), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) / 1.0), _GLF_IDENTITY(_GLF_FUZZED(5934.6464), mix(float(_GLF_IDENTITY(_GLF_FUZZED(5934.6464), max(_GLF_FUZZED(5934.6464), _GLF_FUZZED(5934.6464)))), float(_GLF_FUZZED(-1041.2854)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec2(! (true), false))))), true, false)), false || (bool(bvec3(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec2(! (true), false))))), true, false))))), false))))).x > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(6.6), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) / 1.0), _GLF_IDENTITY(_GLF_FUZZED(5934.6464), mix(float(_GLF_IDENTITY(_GLF_FUZZED(5934.6464), max(_GLF_FUZZED(5934.6464), _GLF_FUZZED(5934.6464)))), float(_GLF_FUZZED(-1041.2854)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec2(! (true), false))))), true, false)), false || (bool(bvec3(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec2(! (true), false))))), true, false))))), false))))).x > injectionSwitch.y))))))))))))))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), ((_GLF_IDENTITY(false, false || (false)))) && true), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || (false))), ((_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), (_GLF_IDENTITY(false || (false), ! (! (false || (false))))) || _GLF_IDENTITY(false, (false) && true))))) && true)), true && ((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || (false))), ((_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), (_GLF_IDENTITY(false || (false), ! (! (false || (false))))) || _GLF_IDENTITY(false, (false) && true))))) && true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))))) : _GLF_FUZZED(injectionSwitch)))), injectionSwitch, injectionSwitch)), mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))), ! (! ((_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), ((_GLF_IDENTITY(false, false || (false)))) && true), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || (false))), ((_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), (_GLF_IDENTITY(false || (false), ! (! (false || (false))))) || _GLF_IDENTITY(false, (false) && true))))) && true)), true && ((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || (false))), ((_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), (_GLF_IDENTITY(false || (false), ! (! (false || (false))))) || _GLF_IDENTITY(false, (false) && true))))) && true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))))) : _GLF_FUZZED(injectionSwitch)))), injectionSwitch, injectionSwitch)), mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y)))))), (_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), bool(bvec4((false), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), ((_GLF_IDENTITY(false, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, false || (false)), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, false || (false)), true)))))) || (false)))) && true) || false), (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), ((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))))) && true) || false), (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))), false || ((_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), ((_GLF_IDENTITY(false, false || (false)))) && true) || false), (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), ((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))))) && true) || false), (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))), false || ((_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), ((_GLF_IDENTITY(false, false || (false)))) && true) || false), (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y)))))), ((_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), ((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))))) && true) || false), (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))), false || ((_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), ((_GLF_IDENTITY(false, false || (false)))) && true) || false), (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))))))) && true)), bool(bvec2(! (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), ((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))))) && true) || false), (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))), false || ((_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), ((_GLF_IDENTITY(false, false || (false)))) && true) || false), (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y)))))), ((_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), ((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))))) && true) || false), (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))), false || ((_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), ((_GLF_IDENTITY(false, false || (false)))) && true) || false), (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))))))) && true)), true))))) || false)) || false))))), (bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), _GLF_IDENTITY(((_GLF_IDENTITY(false, false || (false)))) && true, bool(bool(_GLF_IDENTITY(((_GLF_IDENTITY(false, false || (false)))) && true, bool(bvec4(((_GLF_IDENTITY(false, false || (false)))) && true, true, true, false))))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || (false))), ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))), _GLF_IDENTITY(false || (false), (_GLF_IDENTITY(false || (false), ! (! (false || (false))))) || false)))) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))))) : _GLF_FUZZED(injectionSwitch)))), injectionSwitch, injectionSwitch)), mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))), (_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), bool(bvec4((false), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), _GLF_IDENTITY(((_GLF_IDENTITY(false, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, false || (false)), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, false || (false)), true)))))) || (false)))) && true, false || (((_GLF_IDENTITY(false, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, false || (false))) && true), false), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, false || (false))) && true), false))), bvec2(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, false || (false))) && true), false))))))))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, false || (false)), true)))))) || (false)))) && true))) || false), (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), ((_GLF_IDENTITY(false, false || (false)))) && true) || _GLF_IDENTITY(false, bool(bvec2(false, false)))), (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))), false || ((_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), bool(_GLF_IDENTITY(bvec2(bool(bvec2(false, false)), false), bvec2(bvec3(bvec2(bool(bvec2(false, false)), false), true)))))) || (false))), ((_GLF_IDENTITY(false, false || (false)))) && true) || false), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-9.0), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-92.02)), bvec2(true, false))), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch)), injectionSwitch)), mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y)))))), bool(bvec2((_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), ((_GLF_IDENTITY(false, false || (false)))) && true) || _GLF_IDENTITY(false, bool(bvec2(false, false)))), (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))), false || ((_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), bool(_GLF_IDENTITY(bvec2(bool(bvec2(false, false)), false), bvec2(bvec3(bvec2(bool(bvec2(false, false)), false), true)))))) || (false))), ((_GLF_IDENTITY(false, false || (false)))) && true) || false), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-9.0), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-92.02)), bvec2(true, false))), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch)), injectionSwitch)), mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y)))))), true))) || false)) || false)))))) && true)))) || false)))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bvec4(_GLF_DEAD(false), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = _GLF_IDENTITY(16, clamp(16, 16, 16));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, false)), ! (! (_GLF_IDENTITY(bool(bvec4(false, false, false, false)), bool(bool(bool(bvec4(false, false, false, false)))))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec4(_GLF_IDENTITY((false), ((false)) || false), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(713.882) : injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))) && _GLF_IDENTITY(true, bool(bvec2(true, true)))), _GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((! (! (injectionSwitch.x > injectionSwitch.y))), false || ((! (! (injectionSwitch.x > injectionSwitch.y))))) || false))))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, clamp(gl_NumWorkGroups.x, gl_NumWorkGroups.x, gl_NumWorkGroups.x));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true, false || (true)) && (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)), clamp(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch), (_GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch), clamp(clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch), clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch), clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)))) / vec2(1.0, 1.0))))), _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))), injectionSwitch)), injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, 0.0))))) > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false), bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(1.1), _GLF_FUZZED(float(false))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, false || (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(bvec2(_GLF_IDENTITY(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(vec2(8.5, 8552.1953)))).y, true), bvec2(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, true), true))))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))))), ! (! (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) | (workgroup_size * workgroup_id));
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)) * subgroup_size, min(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec2(subgroup_id * subgroup_size, 0u))), (workgroup_base + subgroup_id * subgroup_size) | (workgroup_base + subgroup_id * subgroup_size)), workgroup_base + subgroup_id * subgroup_size)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(min(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) | (workgroup_base + subgroup_id * subgroup_size)), workgroup_base + subgroup_id * subgroup_size), clamp(min(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) | (workgroup_base + subgroup_id * subgroup_size)), workgroup_base + subgroup_id * subgroup_size), min(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) | (workgroup_base + subgroup_id * subgroup_size)), workgroup_base + subgroup_id * subgroup_size), min(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) | (workgroup_base + subgroup_id * subgroup_size)), workgroup_base + subgroup_id * subgroup_size)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, min(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) << (1u ^ 1u))) - 0u)) | (workgroup_base + subgroup_id * subgroup_size)), workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size)), 0u + (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, min(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) | (workgroup_base + subgroup_id * subgroup_size)), workgroup_base + subgroup_id * subgroup_size))))), ~ (~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, min(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) | (workgroup_base + subgroup_id * subgroup_size)), workgroup_base + subgroup_id * subgroup_size)), 0u + (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, min(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u)) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u)))) | (workgroup_base + subgroup_id * subgroup_size)), workgroup_base + subgroup_id * subgroup_size)))))))))) : _GLF_FUZZED(subgroup_id))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)) + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) ^ 0u)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)) * subgroup_size, min(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, subgroup_id * subgroup_size)), (workgroup_base + subgroup_id * subgroup_size) | (workgroup_base + subgroup_id * subgroup_size)), _GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)), _GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u), workgroup_base)) + subgroup_id * subgroup_size)), (true ? _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, min(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size) | (workgroup_base + subgroup_id * subgroup_size), 1u * ((workgroup_base + subgroup_id * subgroup_size) | (workgroup_base + subgroup_id * subgroup_size)))), _GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)) + subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))) : _GLF_FUZZED(subgroup_id))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)) + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) ^ 0u)), (min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)) * subgroup_size, min(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) | (workgroup_base + subgroup_id * subgroup_size)), workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, min(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) | (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, uint(uvec2(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, min(workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size)), 1u))))), workgroup_base + subgroup_id * subgroup_size)), max(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, min(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) | (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, uint(uvec2(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, min(workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size)), 1u))))), workgroup_base + subgroup_id * subgroup_size)), _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, min(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) | (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, uint(uvec2(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, min(workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size)), 1u))))), workgroup_base + subgroup_id * subgroup_size)))) : _GLF_FUZZED(subgroup_id))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)) + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) ^ 0u))) << 0u), (true ? _GLF_IDENTITY(_GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)) * subgroup_size, min(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, subgroup_id * subgroup_size)), (workgroup_base + subgroup_id * subgroup_size) | (workgroup_base + subgroup_id * subgroup_size)), _GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)), _GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u), workgroup_base)) + subgroup_id * subgroup_size)), (true ? _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, min(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size) | (workgroup_base + subgroup_id * subgroup_size), 1u * ((workgroup_base + subgroup_id * subgroup_size) | (workgroup_base + subgroup_id * subgroup_size)))), _GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)) + subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))) : _GLF_FUZZED(subgroup_id))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)) + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) ^ 0u)), (min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)) * subgroup_size, min(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) | (workgroup_base + subgroup_id * subgroup_size)), workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, min(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) | (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, uint(uvec2(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, min(workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size)), 1u))))), workgroup_base + subgroup_id * subgroup_size)), max(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, min(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) | (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, uint(uvec2(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, min(workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size)), 1u))))), workgroup_base + subgroup_id * subgroup_size)), _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, min(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) | (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, uint(uvec2(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, min(workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size)), 1u))))), workgroup_base + subgroup_id * subgroup_size)))) : _GLF_FUZZED(subgroup_id))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)) + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) ^ 0u))) << 0u), (_GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)) * subgroup_size, min(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, subgroup_id * subgroup_size)), (workgroup_base + subgroup_id * subgroup_size) | (workgroup_base + subgroup_id * subgroup_size)), _GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)), _GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u), workgroup_base)) + subgroup_id * subgroup_size)), (true ? _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, min(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size) | (workgroup_base + subgroup_id * subgroup_size), 1u * ((workgroup_base + subgroup_id * subgroup_size) | (workgroup_base + subgroup_id * subgroup_size)))), _GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)) + subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))) : _GLF_FUZZED(subgroup_id))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)) + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) ^ 0u)), (min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)) * subgroup_size, min(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) | (workgroup_base + subgroup_id * subgroup_size)), workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, min(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) | (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, uint(uvec2(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, min(workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size)), 1u))))), workgroup_base + subgroup_id * subgroup_size)), max(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, min(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) | (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, uint(uvec2(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, min(workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size)), 1u))))), workgroup_base + subgroup_id * subgroup_size)), _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, min(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) | (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, uint(uvec2(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, min(workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size)), 1u))))), workgroup_base + subgroup_id * subgroup_size)))) : _GLF_FUZZED(subgroup_id))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)) + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) ^ 0u))) << 0u)) | (_GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)) * subgroup_size, min(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, subgroup_id * subgroup_size)), (workgroup_base + subgroup_id * subgroup_size) | (workgroup_base + subgroup_id * subgroup_size)), _GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)), _GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u), workgroup_base)) + subgroup_id * subgroup_size)), (true ? _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, min(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size) | (workgroup_base + subgroup_id * subgroup_size), 1u * ((workgroup_base + subgroup_id * subgroup_size) | (workgroup_base + subgroup_id * subgroup_size)))), _GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)) + subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))) : _GLF_FUZZED(subgroup_id))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)) + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) ^ 0u)), (min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)) * subgroup_size, min(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) | (workgroup_base + subgroup_id * subgroup_size)), workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, min(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) | (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, uint(uvec2(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, min(workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size)), 1u))))), workgroup_base + subgroup_id * subgroup_size)), max(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, min(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) | (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, uint(uvec2(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, min(workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size)), 1u))))), workgroup_base + subgroup_id * subgroup_size)), _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, min(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) | (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, uint(uvec2(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, min(workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size)), 1u))))), workgroup_base + subgroup_id * subgroup_size)))) : _GLF_FUZZED(subgroup_id))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)) + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) ^ 0u))) << 0u))) : _GLF_FUZZED(subgroup_local_id))))))) + ((subgroup_local_id + _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (~ (1)) | (_GLF_IDENTITY(~ (1), 0 | (~ (1)))))))) % subgroup_size);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, true)), bool(bvec2(bool(bvec2(false, true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (bool(bvec2(false, true))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 buf[virtual_gid] = 1;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, (subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)) < subgroup_size) || false)), ((_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, (subgroup_local_id + 1 < subgroup_size) || false))) || false), ! _GLF_IDENTITY((_GLF_IDENTITY(! (! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), ! (! ((subgroup_local_id + 1 < subgroup_size)))), (_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), ! (! ((subgroup_local_id + 1 < subgroup_size))))) || false) || false))), ! (! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(subgroup_local_id + 1 < subgroup_size))), (subgroup_local_id + 1 < subgroup_size) || false))))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), ! (! ((subgroup_local_id + 1 < subgroup_size)))) || false), ! (! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), ! (! ((subgroup_local_id + 1 < subgroup_size)))) || false)))))), ! (! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1)) < _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u)), true && (bool(_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1)) < _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u)))))), (subgroup_local_id + 1 < subgroup_size) || false))))))), ((_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), ! (! ((subgroup_local_id + 1 < subgroup_size)))) || false), ! (! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), ! (! ((subgroup_local_id + 1 < subgroup_size)))) || false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), ! (! ((subgroup_local_id + 1 < subgroup_size)))) || false, (_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), ! (! ((subgroup_local_id + 1 < subgroup_size)))) || false) && true)))))))))), ! (! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(subgroup_local_id + 1 < subgroup_size))), _GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), true && (_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), bool(bool((subgroup_local_id + 1 < subgroup_size)))))) || false)))))))) || false), false || ((_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bvec4(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, false || (subgroup_local_id + 1 < subgroup_size)), true, false, false))), _GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), ! (! ((subgroup_local_id + 1 < subgroup_size)))) || false))), ! (! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(subgroup_local_id + 1 < subgroup_size))), (subgroup_local_id + 1 < subgroup_size) || false))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false || (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, (subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)) < subgroup_size) || false)), ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(subgroup_local_id + 1 < subgroup_size))), (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, (subgroup_local_id + 1 < subgroup_size) && true)) || false))) || false), ! _GLF_IDENTITY((_GLF_IDENTITY(! (! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), ! (! ((subgroup_local_id + 1 < subgroup_size)))) || false))), ! (! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, 0u + (subgroup_local_id + 1))) / 1u) < subgroup_size))), (subgroup_local_id + 1 < subgroup_size) || false))))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (0u << _GLF_IDENTITY(uint(6u), uint(6u))) | (subgroup_local_id + 1)) < subgroup_size, _GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), ! (! ((subgroup_local_id + _GLF_IDENTITY(1, (1) | 0) < subgroup_size)))) || false), ! (! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), ! (! ((subgroup_local_id + 1 < subgroup_size)))) || false)))))), ! (! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1)) < subgroup_size))), (subgroup_local_id + 1 < subgroup_size) || false))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), ! (! ((subgroup_local_id + 1 < subgroup_size)))) || false), ! (! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), ! (! ((subgroup_local_id + 1 < subgroup_size)))) || false, (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), ! (! ((subgroup_local_id + 1 < subgroup_size)))) || false, (_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), ! (! ((subgroup_local_id + 1 < subgroup_size)))) || false) || false)) || false))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (! (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), ! (! ((_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, (subgroup_local_id + 1 < subgroup_size) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))))) || false), ! (! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), bool(bvec4((subgroup_local_id + 1 < subgroup_size), true, false, true))), ! (! ((subgroup_local_id + 1 < subgroup_size)))) || false)))))))), ! (! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(subgroup_local_id + 1 < subgroup_size))), (subgroup_local_id + 1 < subgroup_size) || false)))))))) || false), false || ((_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bvec4(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, false || (subgroup_local_id + 1 < subgroup_size)), true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, false || (false)), true)), (bool(bvec2(_GLF_IDENTITY(false, false || (false)), true))) || false)), false))), ! (! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, false || (subgroup_local_id + 1 < subgroup_size)), true, false, false)), true && (bool(bvec4(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, false || (subgroup_local_id + 1 < subgroup_size)), true, false, false)))))))), _GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, min(1, 1)) < subgroup_size), ! (! ((_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)) + 1 < subgroup_size)))) || false))), ! (! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))))), (subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))))) || false))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (0u << _GLF_IDENTITY(uint(6u), uint(6u))) | (subgroup_local_id + 1)) < subgroup_size, _GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), ! (! ((subgroup_local_id + _GLF_IDENTITY(1, (1) | 0) < subgroup_size)))) || false), ! (! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), ! (! ((subgroup_local_id + 1 < subgroup_size)))) || false)))))), ! (! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1)) < subgroup_size))), (subgroup_local_id + 1 < subgroup_size) || false))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), ! (! ((subgroup_local_id + 1 < subgroup_size)))) || false), ! (! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), ! (! ((subgroup_local_id + 1 < subgroup_size)))) || false, (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), ! (! ((subgroup_local_id + 1 < subgroup_size)))) || false, (_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), ! (! ((subgroup_local_id + 1 < subgroup_size)))) || false) || false)) || false))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (! (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), ! (! ((_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, (subgroup_local_id + 1 < subgroup_size) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))))) || false), ! (! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), bool(bvec4((subgroup_local_id + 1 < subgroup_size), true, false, true))), ! (! ((subgroup_local_id + 1 < subgroup_size)))) || false)))))))), ! (! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(subgroup_local_id + 1 < subgroup_size))), (subgroup_local_id + 1 < subgroup_size) || false)))))))) || false), false || ((_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bvec4(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, false || (subgroup_local_id + 1 < subgroup_size)), true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, false || (false)), true)), (bool(bvec2(_GLF_IDENTITY(false, false || (false)), true))) || false)), false))), ! (! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, false || (subgroup_local_id + 1 < subgroup_size)), true, false, false)), true && (bool(bvec4(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, false || (subgroup_local_id + 1 < subgroup_size)), true, false, false)))))))), _GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, min(1, 1)) < subgroup_size), ! (! ((_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)) + 1 < subgroup_size)))) || false))), ! (! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))))), (subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))))) || false))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, false))))))))), _GLF_IDENTITY((! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / 1u) < subgroup_size, (subgroup_local_id + 1 < subgroup_size) || false)), ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) + _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-19643) : 1)))) < subgroup_size, (subgroup_local_id + 1 < subgroup_size) || false))) || false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))) ^ (0u << _GLF_IDENTITY(uint(1u), uint(1u)))) + 1 < subgroup_size, (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))) + 0u) + 1 < subgroup_size) || false))), ! (! (! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, ! (! (subgroup_local_id + 1 < subgroup_size))), bool(bool(subgroup_local_id + 1 < subgroup_size))), (subgroup_local_id + 1 < subgroup_size) || false))), false || ((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, ! (! (subgroup_local_id + 1 < subgroup_size))), bool(bool(subgroup_local_id + 1 < subgroup_size))), (subgroup_local_id + 1 < subgroup_size) || false)))))))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))) + 0u) + 1 < subgroup_size) || false))), ! (! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))) | 0u))), bool(bool(subgroup_local_id + 1 < subgroup_size))), (subgroup_local_id + 1 < subgroup_size) || false)))))), bool(bool(_GLF_IDENTITY(! (! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))) + 0u) + 1 < subgroup_size) || false))), ! (! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(subgroup_local_id + 1 < subgroup_size))), (subgroup_local_id + 1 < subgroup_size) || false))))))))), false, false))))))) && true, (_GLF_IDENTITY((! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / 1u) < subgroup_size, _GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size) || false, false || ((subgroup_local_id + 1 < subgroup_size) || false)))), ((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), (false ? _GLF_FUZZED(-19643) : 1)))) < subgroup_size, (subgroup_local_id + 1 < subgroup_size) || false))) || false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))) + 0u) + 1 < subgroup_size) || false))), ! (! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, (subgroup_local_id + 1 < subgroup_size) && true)), false || (! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, (subgroup_local_id + 1 < subgroup_size) && true)))))), bool(bool(subgroup_local_id + 1 < subgroup_size))), (subgroup_local_id + 1 < subgroup_size) || false)))))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))) + 0u) + 1 < subgroup_size) || false))), ! (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(subgroup_local_id + 1 < subgroup_size))), (subgroup_local_id + 1 < subgroup_size) || false))), true && (! (! (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(subgroup_local_id + 1 < subgroup_size))), (subgroup_local_id + 1 < subgroup_size) || false)))))))), bool(bool(_GLF_IDENTITY(! (! (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, max(1, 1)) < subgroup_size, (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))) + 0u) + 1 < subgroup_size) || false))), ! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(subgroup_local_id + 1 < subgroup_size))), (subgroup_local_id + 1 < subgroup_size) || false)))), ! (! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(subgroup_local_id + 1 < subgroup_size))), (subgroup_local_id + 1 < subgroup_size) || false)))), ! (! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(subgroup_local_id + 1 < subgroup_size))), (subgroup_local_id + 1 < subgroup_size) || false)))), false || (! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(subgroup_local_id + 1 < subgroup_size))), bool(bool(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(subgroup_local_id + 1 < subgroup_size)))))), (subgroup_local_id + 1 < subgroup_size) || false))))))))))))))))), false, false))))))) && true, ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / 1u) < subgroup_size, (subgroup_local_id + 1 < subgroup_size) || false)), ((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-19643) : 1)))) < subgroup_size, (subgroup_local_id + 1 < subgroup_size) || false))) || false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (0u << _GLF_IDENTITY(uint(5u), uint(5u))) + (subgroup_local_id + 1)) < subgroup_size, (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))) + 0u) + 1 < subgroup_size) || false))), ! (! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(subgroup_local_id + 1 < subgroup_size))), (subgroup_local_id + 1 < subgroup_size) || false)))))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << uint(_GLF_ZERO(0.0, injectionSwitch.x))))))) + 0u) + 1 < subgroup_size) || false))), ! (! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u) + 1 < subgroup_size))), (subgroup_local_id + 1 < subgroup_size) || false)))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))) + 0u) + 1 < subgroup_size) || false))), (! (! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))) + 0u) + 1 < subgroup_size) || false)))) && true), ! (! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(subgroup_local_id + 1 < subgroup_size))), (subgroup_local_id + 1 < subgroup_size) || false))))))))), false, false))))))) && true), bool(bvec3(! ((! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / 1u) < subgroup_size, (subgroup_local_id + 1 < subgroup_size) || false)), ((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-19643) : 1)))) < subgroup_size, (subgroup_local_id + 1 < subgroup_size) || false))) || false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))) + 0u) + 1 < subgroup_size) || false))), ! (! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(subgroup_local_id + 1 < subgroup_size))), (subgroup_local_id + 1 < subgroup_size) || false)))))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))) + 0u) + 1 < subgroup_size) || false))), ! (! _GLF_IDENTITY((! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(subgroup_local_id + 1 < subgroup_size))), true && (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u)) | 0u) + 1 < subgroup_size, bool(bool(subgroup_local_id + 1 < subgroup_size))))), (subgroup_local_id + 1 < subgroup_size) || false)))), false || ((! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bool(subgroup_local_id + 1 < subgroup_size))), true && (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u)) | 0u) + 1 < subgroup_size, bool(bool(subgroup_local_id + 1 < subgroup_size))))), (subgroup_local_id + 1 < subgroup_size) || false)))))))), bool(bool(_GLF_IDENTITY(! (! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))) + 0u) + 1 < subgroup_size), ((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))) + 0u) + 1 < subgroup_size)) || false) || false))), ! (! _GLF_IDENTITY((! (! (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(_GLF_IDENTITY(bool(subgroup_local_id + 1 < subgroup_size), true && (bool(subgroup_local_id + 1 < subgroup_size))))), (subgroup_local_id + 1 < subgroup_size) || false)))), false || ((! (! (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(_GLF_IDENTITY(bool(subgroup_local_id + 1 < subgroup_size), true && (bool(subgroup_local_id + 1 < subgroup_size))))), (subgroup_local_id + 1 < subgroup_size) || false))))))))))), false, false))))))) && true), true, true)))))) || false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(150.134)), (vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(150.134, max(150.134, 150.134))))) / cos(vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_FUZZED(2.1)), float(_GLF_ZERO(0.0, injectionSwitch.x)), bool(true)))) / 1.0)))), vec2(_GLF_FUZZED((_GLF_IDENTITY(bool(-33285), ! (! (bool(-33285)))) ? 7.2 : -5540.2191)), (injectionSwitch)[1]), bvec2(false, true))).x < injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(150.134)), (vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(150.134, max(150.134, 150.134))))) / cos(vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_FUZZED(2.1)), float(_GLF_ZERO(0.0, injectionSwitch.x)), bool(true)))) / 1.0)))), vec2(_GLF_FUZZED((_GLF_IDENTITY(bool(-33285), ! (! (bool(-33285)))) ? 7.2 : -5540.2191)), (injectionSwitch)[1]), bvec2(false, true))).x < injectionSwitch.y)))) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))) : _GLF_FUZZED(vec2(8069.8518, 764.348)))).y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((true ? _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))) : _GLF_FUZZED(vec2(8069.8518, 764.348))), max((true ? _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))) : _GLF_FUZZED(vec2(8069.8518, 764.348))), (true ? _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))) : _GLF_FUZZED(vec2(8069.8518, 764.348))))), max(_GLF_IDENTITY((true ? _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))) : _GLF_FUZZED(vec2(8069.8518, 764.348))), max((true ? _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))) : _GLF_FUZZED(vec2(8069.8518, 764.348))), (true ? _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))) : _GLF_FUZZED(vec2(8069.8518, 764.348))))), _GLF_IDENTITY((true ? _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))) : _GLF_FUZZED(vec2(8069.8518, 764.348))), max((true ? _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))) : _GLF_FUZZED(vec2(8069.8518, 764.348))), (true ? _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))) : _GLF_FUZZED(vec2(8069.8518, 764.348)))))))).y))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), (bool((injectionSwitch.x > injectionSwitch.y))) || false))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
   subgroupAll(false);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, _GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((! _GLF_IDENTITY((false), true && ((false))))) && true)))), false || (bool(bvec4(false, true, false, false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   subgroupAll(true);
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) - tan(abs(0.0)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, false))))), true, false, true)), ! (! (bool(bvec4(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, false))))), true, false, true))))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
}
