#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_2 {
 mat4 _f0;
 bool _f1;
 bvec4 _f2;
 uint _f3;
} ;

struct _GLF_struct_3 {
 _GLF_struct_2 _f0;
} ;

struct _GLF_struct_0 {
 mat3 _f0;
 bvec4 _f1;
 mat2x4 _f2;
 mat4x3 _f3;
 vec3 _f4;
 ivec3 _f5;
} ;

struct _GLF_struct_1 {
 _GLF_struct_0 _f0;
} ;

struct _GLF_struct_4 {
 uvec2 _f0;
 mat3x2 _f1;
 _GLF_struct_1 _f2;
 _GLF_struct_3 _f3;
 uvec4 _f4;
 uint _f5;
 uint workgroup_base;
 mat4x3 _f6;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false)))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), _GLF_IDENTITY(bool(bvec3(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), true, false)), _GLF_IDENTITY(true, (true) || false) && (bool(bvec3(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), true, false))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(_GLF_IDENTITY(-6.8, min(-6.8, -6.8)))), float(injectionSwitch.y), bool(true)))), 0.0 + ((_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(_GLF_IDENTITY(-6.8, min(-6.8, -6.8)))), float(injectionSwitch.y), bool(true))))))), false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(_GLF_IDENTITY(-6.8, min(-6.8, -6.8)))), float(injectionSwitch.y), bool(true)))))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 1.0, 0.0, sin(0.0), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0))))))))))))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))) || false)))), ((injectionSwitch.x > injectionSwitch.y)) && true))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, (false ? _GLF_FUZZED(485.580) : _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), true)))), ! (! (bool(bvec3(false, true, false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), true)))), ! (! (bool(bvec3(false, true, false)))))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), true)))), ! (! (bool(bvec3(false, true, false)))))))))))), bool(bvec2(_GLF_DEAD(false), true))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uvec2 GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0))), _GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, (injectionSwitch.x) + 0.0))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec4(_GLF_IDENTITY(false, true && (false)), false, true, true)))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true, true && (true)) && (false)), (_GLF_IDENTITY(false, _GLF_IDENTITY(true, true && (true)) && (false))) || false)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false)))), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false || (false)))), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))), false), true, false)))), true && (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))), false), true, false)))))))))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, 0.0, 1.0, length(vec2(0.0, 0.0)), 0.0, cos(length(vec3(0.0, 0.0, 0.0))), 1.0, 0.0, 1.0))) > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false)))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), true && (bool(bvec2(false, true)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), ! (! (bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))))))))))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), injectionSwitch.y)), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), injectionSwitch.y)), (true ? _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), injectionSwitch.y)) : _GLF_FUZZED(vec2(-343.766, -185.127).s)))) || false)))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), bool(bvec4(bool(bvec4(false, false, true, false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, abs(vec2(0.0, 0.0)) + (injectionSwitch)).x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, abs(vec2(0.0, 0.0)) + (injectionSwitch)).x > injectionSwitch.y)) && true))))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(bool(bool((_GLF_DEAD(false)))), true && (bool(bool((_GLF_DEAD(false))))))) && true))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) >> 0u);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-9.9) : injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y))), ! (! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (! (((injectionSwitch.x > injectionSwitch.y))))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ((false)) || false), bool(bvec3(! (false), false, true)))))), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, true)))))), false, _GLF_IDENTITY(true, bool(bvec2(true, false))))), true && (bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, true)))))), false, _GLF_IDENTITY(true, bool(bvec2(true, false)))))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 1.0, 0.0, 1.0, _GLF_IDENTITY(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), max(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))), 1.0))), 1.0, 1.0, 1.0, 0.0, 0.0, length(0.0), 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0))), 0.0), transpose(transpose(mat4x3(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 1.0, 0.0, 1.0, round(length(normalize(_GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 1.0), _GLF_IDENTITY((vec4(1.0, 1.0, 1.0, 1.0)) / vec4(1.0, 1.0, 1.0, 1.0), mat4(1.0) * ((vec4(1.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, float(vec4(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-29.39)), bool(false))), 1.0, 0.0, 1.0))))), 1.0, 1.0)) / vec4(1.0, 1.0, 1.0, 1.0))))))), _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) + 0.0), _GLF_IDENTITY(1.0, float(mat4x3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), abs(1.0)))), 1.0))))), 1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0, length(0.0), 0.0, 1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-34.45)), bool(false))), 1.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0))), 0.0))))))), bool(bvec4((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-4.9), _GLF_IDENTITY((injectionSwitch)[1], (true ? _GLF_IDENTITY((injectionSwitch)[1], float(float((injectionSwitch)[1]))) : _GLF_FUZZED(-7511.4132)))), vec2((injectionSwitch)[0], _GLF_FUZZED(float(81986))), bvec2(true, false))).y, 1.0, 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0))), 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(36.75)), bool(false))), 0.0, length(0.0), 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, _GLF_IDENTITY(1.0, (1.0) / abs(1.0)), 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0)), max(dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0))))), 0.0), transpose(transpose(mat4x3(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 1.0, 0.0, 1.0, round(length(normalize(_GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 1.0), (vec4(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0)) / vec4(1.0, 1.0, 1.0, 1.0))))), 1.0))), 1.0, 1.0, 1.0, 0.0, 0.0, length(0.0), 0.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(0.0, (0.0) / determinant(mat2(1.0, 1.0, 0.0, 1.0))), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(vec4(5.2, -941.784, -3.4, -6.6)[1]) : 0.0)), 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0)), dot(_GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 1.0), max(vec4(0.0, 0.0, 1.0, 1.0), vec4(0.0, 0.0, 1.0, 1.0))), vec4(1.0, 1.0, 0.0, 0.0))), 0.0))))))), true, false, false))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true, bool(bvec2(true, false))) && (_GLF_DEAD(false))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) / vec2(1.0, 1.0))).y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))) || false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), (false) || false)))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4x3(_GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(3949.5487))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, sqrt(0.0), 0.0, 0.0, 1.0, 0.0)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (false) || false)))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.y = workgroup_id, (GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.y = workgroup_id) | 0u);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_4 _GLF_struct_replacement_4 = _GLF_struct_4(uvec2(1u), mat3x2(1.0), _GLF_struct_1(_GLF_struct_0(mat3(1.0), bvec4(true), mat2x4(1.0), mat4x3(1.0), _GLF_IDENTITY(vec3(1.0), mix(vec3(_GLF_IDENTITY((vec3(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-7.6)), bool(false)))))[0], clamp((vec3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))[0], (vec3(1.0))[0], (vec3(1.0))[0])), _GLF_IDENTITY((vec3(1.0))[1], _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (0.0) - _GLF_IDENTITY(0.0, (0.0) + 0.0)), 0.0)) + ((vec3(1.0))[_GLF_IDENTITY(1, (1) * 1)])), _GLF_IDENTITY((vec3(1.0)), mix(vec3(_GLF_IDENTITY(((vec3(1.0)))[0], cos(0.0) * (_GLF_IDENTITY(((vec3(1.0)))[0], clamp(((vec3(1.0)))[0], ((vec3(1.0)))[0], ((vec3(1.0)))[0])))), ((vec3(1.0)))[1], _GLF_IDENTITY(((vec3(1.0)))[2], (((vec3(1.0)))[2]) / 1.0)), vec3(_GLF_FUZZED(-7112.5804), _GLF_FUZZED((-9.5 - 3.5)), _GLF_FUZZED(-79.46)), bvec3(false, false, false)))[2]), vec3(_GLF_FUZZED(-3.1), _GLF_FUZZED(-4.9), _GLF_FUZZED(float(true))), bvec3(false, false, false))), ivec3(1))), _GLF_struct_3(_GLF_struct_2(mat4(1.0), true, bvec4(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, (true) || false), true)))), 1u)), uvec4(1u), 1u, workgroup_size * GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.y, mat4x3(1.0));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), false || (bool(false)))))) && true, false || ((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), false || (bool(false)))))) && true))), (_GLF_IDENTITY(false, _GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), false || ((false)))))))) && true)) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))) && _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec3(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec3(bvec2(true, true), false))), true))))))), ! (! _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)), vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 0.0, 0.0, determinant(mat3(0.0, exp(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x3(0.0, 1.0, 1.0, 1.0, 0.0, abs(0.0)), mat3(1.0) * (mat2x3(0.0, 1.0, 1.0, 1.0, 0.0, abs(0.0)))))), tan(0.0))), 0.0, 1.0, 1.0, sqrt(1.0), tan(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))), 1.0, 1.0), (mat3x4(injectionSwitch, 0.0, 0.0, determinant(mat3(0.0, exp(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, tan(0.0))), 0.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), sqrt(1.0), tan(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), (dot(vec2(1.0, 0.0), vec2(0.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-9.9)), bool(false))), 1.0, 1.0))))) * exp(0.0)))), 1.0, 1.0)) + mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))).x, min(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((true ? injectionSwitch.x : _GLF_FUZZED(4099.7515)), ((true ? injectionSwitch.x : _GLF_FUZZED(4099.7515))) - 0.0)), injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(_GLF_IDENTITY(46.48, max(46.48, _GLF_IDENTITY(46.48, (true ? 46.48 : _GLF_FUZZED(0.0)))))) : injectionSwitch.x)))), (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)), vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 0.0, 0.0, determinant(mat3(0.0, exp(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x3(0.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 0.0, abs(0.0)), mat3(1.0) * (mat2x3(0.0, 1.0, 1.0, 1.0, 0.0, abs(0.0)))))), tan(0.0))), 0.0, 1.0, 1.0, sqrt(1.0), tan(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))), 1.0, 1.0), (mat3x4(injectionSwitch, 0.0, 0.0, determinant(mat3(0.0, exp(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, tan(0.0))), 0.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), sqrt(1.0), tan(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), (dot(vec2(1.0, 0.0), vec2(0.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-9.9)), bool(false))), 1.0, 1.0))))) * exp(0.0)))), 1.0, 1.0)) + mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))).x, min(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((true ? injectionSwitch.x : _GLF_FUZZED(4099.7515)), ((true ? injectionSwitch.x : _GLF_FUZZED(4099.7515))) - 0.0)), injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(_GLF_IDENTITY(46.48, max(46.48, _GLF_IDENTITY(46.48, (true ? 46.48 : _GLF_FUZZED(0.0)))))) : injectionSwitch.x))))) / 1.0) > injectionSwitch.y))), ! (_GLF_IDENTITY(! ((_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, (false ? _GLF_FUZZED(46.48) : injectionSwitch.x)), (false ? _GLF_FUZZED(-90.33) : _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(46.48) : injectionSwitch.x)))))) > _GLF_IDENTITY(injectionSwitch.y, float(mat2x3(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(70.26)), float(injectionSwitch.y), bool(true))), injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)), 0.0, 0.0, 0.0, 1.0, 1.0))))))), (! ((_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(0.0, float(mat4x2(0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, sqrt(0.0)))) + (injectionSwitch.x)), (false ? _GLF_FUZZED(46.48) : injectionSwitch.x)))) > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, 0.0, _GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, 0.0)), injectionSwitch.x), 0.0, 1.0, 0.0))))).y))))) && true)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(false, bool(bvec3(false, false, false))), false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(bool(bvec3(false, false, true)), (bool(bvec3(false, false, true))) || false)), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) || false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, false), false, false)), bvec2(bvec3(bvec2(bvec4(bvec2(false, _GLF_IDENTITY(false, true && (false))), false, false)), false)))))), true && (false))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false), false || ((false) || false))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || _GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false))), (bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false)))) || false), (bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false)))) && true)), false || ((_GLF_IDENTITY(false, ! (! (false)))) || false))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || _GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))), false || _GLF_IDENTITY(((false) || false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(((false) || false), ! (! (((false) || false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(((false) || false), bool(_GLF_IDENTITY(bool(((false) || false)), false || (bool(((false) || false)))))), ! (! (((false) || false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), false))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true && (false), ! (! (_GLF_IDENTITY(true && (false), bool(bvec2(true && (false), true)))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true && (false), ! (! (_GLF_IDENTITY(true && (false), bool(bvec2(true && (false), true)))))), true, false)), ! (! (bool(bvec3(_GLF_IDENTITY(true && (false), ! (! (_GLF_IDENTITY(true && (false), bool(bvec2(true && (false), true)))))), true, false)))))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
            barrier();
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           barrier();
          }
        }
       barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))), false || (! (_GLF_DEAD(false)))))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-7808.2700)), float(injectionSwitch.x), _GLF_IDENTITY(bool(true), bool(bvec4(bool(true), true, true, false))))) > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-7808.2700)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)))) || false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (! (false))), true)))))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), ((injectionSwitch.x > injectionSwitch.y)) && true)), false || (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) || false))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(7.1)), float(injectionSwitch.y), bool(true))), false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(_GLF_IDENTITY(_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), clamp(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), mix(vec3(_GLF_FUZZED(float(59911)), (_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), clamp(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))))[1], (_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), clamp(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))))[2]), vec3((_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), clamp(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))))[0], _GLF_FUZZED(-4.9), _GLF_FUZZED(4692.5456)), bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), vec3(0.0, 1.0, 1.0)))), mix(float(_GLF_FUZZED(-9.3)), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(_GLF_IDENTITY(_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), clamp(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), mix(vec3(_GLF_FUZZED(float(59911)), (_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), clamp(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))))[1], (_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), clamp(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))))[2]), vec3((_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), clamp(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))))[0], _GLF_FUZZED(-4.9), _GLF_FUZZED(4692.5456)), bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), vec3(0.0, 1.0, 1.0))))), bool(true))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 0.0, 0.0)))) / exp(vec2(0.0, 0.0))).y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], min(_GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) - 0.0), (injectionSwitch)[1]))), vec2(_GLF_FUZZED(7.5), _GLF_FUZZED(-4897.3550)), bvec2(false, false))).y))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (((injectionSwitch.x > injectionSwitch.y))) || false) && true))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))), _GLF_IDENTITY(vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))), 0.0, 0.0, 0.0, 1.0)), mix(vec2((vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))), 0.0, 0.0, 0.0, 1.0)))[0], _GLF_IDENTITY((vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-1.3, 5.6)) : injectionSwitch))))), 0.0, 0.0, 0.0, 1.0)))[1], (true ? (vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), mix(vec2(_GLF_IDENTITY((vec2(vec2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))))[0], mix(float(_GLF_FUZZED(9807.9540)), float(_GLF_IDENTITY((vec2(vec2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))))[0], 1.0 * ((vec2(vec2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))))[0]))), bool(true))), (vec2(vec2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))))[1]), vec2(_GLF_FUZZED(-8.4), _GLF_FUZZED(-97.81)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), 0.0, 0.0, 0.0, 1.0)))[1] : _GLF_FUZZED(93.94)))), vec2(_GLF_FUZZED(-8694.6614), _GLF_FUZZED(75.52)), bvec2(false, false))))) / vec2(1.0, 1.0)).y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))) && true))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, false || (false)))), ! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(false, false || (false))))), _GLF_IDENTITY(bool(bvec4(! (! (! (_GLF_IDENTITY(false, false || (false))))), true, true, true)), true && (bool(bvec4(_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(false, false || (false))))), (! (! (! (_GLF_IDENTITY(false, false || (false)))))) && true), true, true, true))))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x2(injectionSwitch, sqrt(0.0), tan(0.0), 0.0, 0.0)), (vec2(mat3x2(injectionSwitch, sqrt(0.0), tan(0.0), 0.0, 0.0))) / vec2(1.0, 1.0))).x)), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x2(injectionSwitch, sqrt(0.0), tan(0.0), 0.0, 0.0)), (vec2(mat3x2(injectionSwitch, sqrt(0.0), tan(0.0), 0.0, 0.0))) / vec2(1.0, 1.0))).x)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-3.4) : _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x2(injectionSwitch, sqrt(0.0), tan(0.0), 0.0, 0.0)), (vec2(mat3x2(injectionSwitch, sqrt(0.0), tan(0.0), 0.0, 0.0))) / vec2(1.0, 1.0))).x)))), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x2(injectionSwitch, sqrt(0.0), tan(0.0), 0.0, 0.0)), (vec2(mat3x2(injectionSwitch, sqrt(0.0), tan(0.0), 0.0, 0.0))) / vec2(1.0, 1.0))).x)))) > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(false, false, true))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-5020.8906))) > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-5020.8906))) > injectionSwitch.y), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-5020.8906))) > injectionSwitch.y)), bool(bvec3(bool((_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-5020.8906))) > injectionSwitch.y)), false, true)))))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(bool(bvec4(! (_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))), false, _GLF_IDENTITY(true, (true) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false, false))))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(0.2)), vec2(_GLF_FUZZED(1.5), _GLF_IDENTITY((injectionSwitch)[1], (false ? _GLF_FUZZED(-66.84) : (injectionSwitch)[1]))), bvec2(false, true))).x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(0.2)), vec2(_GLF_FUZZED(1.5), _GLF_IDENTITY((injectionSwitch)[1], (false ? _GLF_FUZZED(-66.84) : (injectionSwitch)[1]))), bvec2(false, true))).x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(0.2)), vec2(_GLF_FUZZED(1.5), _GLF_IDENTITY((injectionSwitch)[1], (false ? _GLF_FUZZED(-66.84) : (injectionSwitch)[1]))), bvec2(false, true))).x > injectionSwitch.y))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(0.2)), vec2(_GLF_FUZZED(1.5), _GLF_IDENTITY((injectionSwitch)[1], (false ? _GLF_FUZZED(-66.84) : (injectionSwitch)[1]))), bvec2(false, true))).x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(0.2)), vec2(_GLF_FUZZED(1.5), _GLF_IDENTITY((injectionSwitch)[1], (false ? _GLF_FUZZED(-66.84) : (injectionSwitch)[1]))), bvec2(false, true))).x > injectionSwitch.y))), false, true)))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, true && (false))))), true, false))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint virtual_gid = _GLF_IDENTITY(_GLF_struct_replacement_4.workgroup_base, max(_GLF_IDENTITY(_GLF_struct_replacement_4.workgroup_base, min(_GLF_struct_replacement_4.workgroup_base, _GLF_struct_replacement_4.workgroup_base)), _GLF_struct_replacement_4.workgroup_base)) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u), (subgroup_id) >> _GLF_IDENTITY(0u, (0u) << 0u)) * subgroup_size + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u ^ (0u)), (0u) - (0u | 0u))) >> 0u) ^ (subgroup_local_id)), subgroup_local_id)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - (0u | 0u))) >> _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u)))) >> 0u)) ^ (subgroup_local_id)), subgroup_local_id))), min((_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - (0u | 0u))) >> _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u)))) >> 0u)) ^ (subgroup_local_id)), subgroup_local_id))), (_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - (0u | 0u))) >> _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u)))) >> 0u)) ^ (subgroup_local_id)), subgroup_local_id))))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - (0u | 0u))) >> _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u)))) >> 0u)) ^ (subgroup_local_id)), subgroup_local_id))), min((_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - (0u | 0u))) >> _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u)))) >> 0u)) ^ (subgroup_local_id)), subgroup_local_id))), (_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - (0u | 0u))) >> _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u)))) >> 0u)) ^ (subgroup_local_id)), subgroup_local_id)))))) ^ (0u >> _GLF_IDENTITY(uint(8u), uint(8u)))) - (_GLF_IDENTITY(182002u, clamp(182002u, 182002u, _GLF_IDENTITY(182002u, max(_GLF_IDENTITY(_GLF_IDENTITY(182002u, (182002u) | (182002u)), clamp(_GLF_IDENTITY(182002u, (182002u) | (182002u)), _GLF_IDENTITY(182002u, (182002u) | (182002u)), _GLF_IDENTITY(182002u, (182002u) | (182002u)))), 182002u)))) & 0u));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)) && (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))), _GLF_IDENTITY(true, bool(bool(true))) && _GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(((_GLF_DEAD(false))), ! (! (_GLF_IDENTITY(((_GLF_DEAD(false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(((_GLF_DEAD(false))), ! (! (((_GLF_DEAD(false))))))), bool(bvec2(! (_GLF_IDENTITY(((_GLF_DEAD(false))), ! (! (((_GLF_DEAD(false))))))), true)))))))) || false)))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (_GLF_IDENTITY(! (! (_GLF_DEAD(false))), true && (! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ! (! ((false) && _GLF_IDENTITY(true, (true) || false)))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), true, false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-6.3)), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))).y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false)))))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y)), false, false))), true)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false)))), false, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false)))), false, false), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false)))), false, false)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false)))), false, false)), bvec3(bvec4(bvec3(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false)))), false, false)), true))), false)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false)))), false, false)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false)))), false, false)), bvec3(bvec4(bvec3(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false)))), false, false)), true))), false)))))))), false)))), false || (bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false)))), false, false), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false)))), false, false), false))))))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), (_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))) || false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, false || (false)), false), bvec2(bvec2(bvec2(false, false))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ! _GLF_IDENTITY((! ((false) && true)), ! (! (_GLF_IDENTITY((! ((false) && true)), _GLF_IDENTITY(bool(bvec4((! ((false) && true)), false, true, false)), true && (bool(bvec4((! ((false) && true)), false, true, false))))))))))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.x = virtual_gid, _GLF_IDENTITY((GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.x = virtual_gid), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.x = virtual_gid), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.x = virtual_gid), _GLF_IDENTITY(((GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.x = virtual_gid)), (_GLF_IDENTITY(((GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.x = virtual_gid)), (_GLF_IDENTITY(((GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.x = virtual_gid)), 0u | (((GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.x = virtual_gid))))) - 0u)) + 0u) << 0u), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.x = virtual_gid), ((GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.x = virtual_gid)) << 0u), _GLF_IDENTITY(~ (~ _GLF_IDENTITY((_GLF_IDENTITY((GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.x = virtual_gid), ((GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.x = virtual_gid)) << 0u)), (0u << _GLF_IDENTITY(uint(7u), uint(7u))) ^ (_GLF_IDENTITY((_GLF_IDENTITY((GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.x = virtual_gid), ((GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.x = virtual_gid)) << 0u)), ((_GLF_IDENTITY((GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.x = virtual_gid), ((GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.x = virtual_gid)) << 0u))) | 0u)))), (~ (~ _GLF_IDENTITY((_GLF_IDENTITY((GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.x = virtual_gid), ((GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.x = virtual_gid)) << 0u)), (0u << _GLF_IDENTITY(uint(7u), uint(7u))) ^ (_GLF_IDENTITY((_GLF_IDENTITY((GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.x = virtual_gid), ((GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.x = virtual_gid)) << 0u)), ((_GLF_IDENTITY((GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.x = virtual_gid), ((GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.x = virtual_gid)) << 0u))) | 0u))))) >> 0u)))))) ^ 0u, ((_GLF_IDENTITY(_GLF_IDENTITY((GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.x = virtual_gid), _GLF_IDENTITY(((GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.x = virtual_gid)), (_GLF_IDENTITY(((GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.x = virtual_gid)), (_GLF_IDENTITY(((GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.x = virtual_gid)), 0u | (((GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.x = virtual_gid))))) - 0u)) + 0u) << 0u), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.x = virtual_gid), ((GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.x = virtual_gid)) << 0u), _GLF_IDENTITY(~ (~ _GLF_IDENTITY((_GLF_IDENTITY((GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.x = virtual_gid), ((GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.x = virtual_gid)) << 0u)), (0u << _GLF_IDENTITY(uint(7u), uint(7u))) ^ (_GLF_IDENTITY((_GLF_IDENTITY((GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.x = virtual_gid), ((GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.x = _GLF_IDENTITY(virtual_gid, (virtual_gid) + 0u))) << 0u)), ((_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.x = virtual_gid, (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.x = virtual_gid, 0u | (GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.x = virtual_gid))) >> (0u << _GLF_IDENTITY(uint(3u), uint(3u))))), ((GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.x = virtual_gid)) << 0u))) | 0u)))), (~ (~ _GLF_IDENTITY((_GLF_IDENTITY((GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.x = virtual_gid), ((GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.x = virtual_gid)) << 0u)), (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), uint(7u)), clamp(_GLF_IDENTITY(uint(7u), uint(7u)), _GLF_IDENTITY(uint(7u), uint(7u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), uint(7u)), (_GLF_IDENTITY(uint(7u), uint(7u))) ^ 0u)))) ^ (_GLF_IDENTITY((_GLF_IDENTITY((GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.x = virtual_gid), ((GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.x = virtual_gid)) << 0u)), ((_GLF_IDENTITY((GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.x = virtual_gid), ((GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.x = virtual_gid)) << 0u))) | 0u))))) >> 0u)))))) ^ 0u) - 0u))), (~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.x = virtual_gid), 1u * ((GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.x = virtual_gid))), (_GLF_IDENTITY(_GLF_IDENTITY((GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.x = virtual_gid), _GLF_IDENTITY(((GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.x = virtual_gid)) << 0u, ~ (~ (((GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.x = virtual_gid)) << 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY((GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.x = virtual_gid), ((GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.x = virtual_gid)) << 0u), (_GLF_IDENTITY(_GLF_IDENTITY((GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.x = virtual_gid), ~ (~ (_GLF_IDENTITY((GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.x = virtual_gid), 0u + (_GLF_IDENTITY((GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.x = _GLF_IDENTITY(virtual_gid, (virtual_gid) - 0u)), ((GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.x = virtual_gid)) * 1u)))))), ((GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.x = virtual_gid)) << _GLF_IDENTITY(0u, (0u) ^ 0u))) - 0u)) << _GLF_IDENTITY(0u, 0u | (0u)))) ^ 0u)), 0u ^ ((_GLF_IDENTITY(_GLF_IDENTITY((GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.x = virtual_gid), 1u * ((GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.x = virtual_gid))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.x = virtual_gid), ((GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.x = virtual_gid)) << 0u), _GLF_IDENTITY(((GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.x = virtual_gid)) << 0u, ~ (~ (((GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.x = virtual_gid)) << 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY((GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.x = virtual_gid), ((GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.x = virtual_gid)) << 0u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.x = virtual_gid), ~ (~ (_GLF_IDENTITY((GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.x = virtual_gid), 0u + (_GLF_IDENTITY((GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.x = _GLF_IDENTITY(virtual_gid, (virtual_gid) - 0u)), ((GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.x = virtual_gid)) * 1u)))))), ((GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.x = virtual_gid)) << 0u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.x = virtual_gid), ~ (~ (_GLF_IDENTITY((GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.x = virtual_gid), 0u + (_GLF_IDENTITY((GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.x = _GLF_IDENTITY(virtual_gid, (virtual_gid) - 0u)), ((GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.x = virtual_gid)) * 1u)))))), ((GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.x = virtual_gid)) << 0u), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.x = virtual_gid), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY((GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.x = virtual_gid), 0u + (_GLF_IDENTITY((GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.x = _GLF_IDENTITY(virtual_gid, (virtual_gid) - 0u)), ((GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.x = virtual_gid)) * 1u)))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY((GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.x = virtual_gid), 0u + (_GLF_IDENTITY((GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.x = _GLF_IDENTITY(virtual_gid, (virtual_gid) - 0u)), ((GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.x = virtual_gid)) * 1u)))), 0u ^ ((_GLF_IDENTITY((GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.x = virtual_gid), 0u + (_GLF_IDENTITY((GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.x = _GLF_IDENTITY(virtual_gid, (virtual_gid) - 0u)), ((GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.x = virtual_gid)) * 1u))))))))))), ((GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.x = virtual_gid)) << 0u))))) - 0u)) - 0u)) << _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u)), 0u | (0u)))) ^ 0u))))) >> 0u))) | 0u);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (! (false))))), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))) && true)), ! _GLF_IDENTITY((! ((_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))) && true)))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((! ((_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))) && true)))), bool(bvec4((! ((_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))) && true)))), true, true, false)))), (bool(_GLF_IDENTITY((! ((_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))) && true)))), bool(bvec4((! ((_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))) && true)))), true, true, false))))) && true)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, false))))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((false), bool(bvec2((false), false))))) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
  barrier();
 write_val = _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.x, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id, (GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id) | (GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id)).x, (GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.x) << 0u), (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.x, (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id, (GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id) | (GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id)).x) << 0u)) << 0u)) >> 0u);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), _GLF_IDENTITY(bool(bvec4(bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, false))), true)), true, false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true && (bool(bvec4(bool(bvec2(false, true)), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))))))
  {
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))) || false, ((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), false || (_GLF_DEAD(false)))) || false) && true)), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))) || false, ((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), false || (_GLF_DEAD(false)))) || false) && true))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))) && true, ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, ! (! (false)))) && true), true && (! ((_GLF_IDENTITY(false, ! (! (false)))) && true)))))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec2(injectionSwitch), max(vec2(injectionSwitch), vec2(injectionSwitch)))), mix(vec2(_GLF_FUZZED(8.7), (vec2(_GLF_IDENTITY(vec2(injectionSwitch), max(vec2(injectionSwitch), vec2(injectionSwitch)))))[1]), vec2((vec2(_GLF_IDENTITY(vec2(injectionSwitch), max(vec2(injectionSwitch), vec2(injectionSwitch)))))[0], _GLF_FUZZED(_GLF_IDENTITY(-3739.1198, mix(float(_GLF_FUZZED(-6.7)), float(-3739.1198), bool(true))))), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))).y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), (bool(false)) && true), ! (! (_GLF_IDENTITY(bool(false), bool(bool(bool(false)))))))))), false || (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), _GLF_IDENTITY((bool(false)), bool(_GLF_IDENTITY(bool((bool(false))), ! (! (_GLF_IDENTITY(bool((bool(false))), ! (! (bool((bool(false))))))))))) && true), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), bool(bool(bool(false))))))))))))), ! (! (_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), (bool(false)) && true), ! (! (_GLF_IDENTITY(bool(false), bool(bool(bool(false))))))))))), (_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), _GLF_IDENTITY((bool(false)), ((bool(false))) || false) && true), ! (! (_GLF_IDENTITY(bool(false), bool(bool(bool(false))))))))))), ! (! ((_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), (bool(false)) && true), ! (! (_GLF_IDENTITY(bool(false), bool(bool(bool(false))))))))))))))) && true))))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, true)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) || false), true)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, false || (false)), false), bvec2(bvec2(bvec2(false, false))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 atomicStore(buf[GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.x], uint(subgroupAllEqual(write_val)), 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x2(injectionSwitch, sin(0.0), 1.0, 0.0, 1.0)), min(_GLF_IDENTITY(vec2(mat3x2(injectionSwitch, sin(0.0), 1.0, 0.0, 1.0)), clamp(_GLF_IDENTITY(vec2(mat3x2(injectionSwitch, sin(0.0), 1.0, 0.0, 1.0)), (vec2(mat3x2(injectionSwitch, sin(0.0), 1.0, 0.0, 1.0))) - vec2(_GLF_IDENTITY(0.0, _GLF_IDENTITY(_GLF_IDENTITY(float(vec2(0.0, 1.0)), (_GLF_IDENTITY(float(vec2(0.0, 1.0)), max(float(vec2(0.0, 1.0)), float(vec2(0.0, 1.0))))) - 0.0), min(float(vec2(0.0, 1.0)), float(vec2(0.0, 1.0))))), 0.0)), vec2(mat3x2(injectionSwitch, sin(0.0), 1.0, 0.0, 1.0)), _GLF_IDENTITY(vec2(mat3x2(injectionSwitch, sin(0.0), _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), 0.0, 1.0)), (_GLF_IDENTITY(vec2(mat3x2(injectionSwitch, sin(0.0), 1.0, 0.0, 1.0)), max(vec2(mat3x2(injectionSwitch, sin(0.0), 1.0, 0.0, 1.0)), vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), sin(0.0), 1.0, 0.0, 1.0))))) * mat2(1.0)))), _GLF_IDENTITY(vec2(mat3x2(injectionSwitch, sin(0.0), 1.0, 0.0, 1.0)), (_GLF_IDENTITY(vec2(mat3x2(injectionSwitch, sin(0.0), 1.0, 0.0, 1.0)), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(vec2(mat3x2(injectionSwitch, sin(0.0), 1.0, 0.0, 1.0)), (vec2(mat3x2(injectionSwitch, sin(0.0), 1.0, 0.0, 1.0))) - vec2(0.0, 0.0))))) - vec2(0.0, 0.0))))).y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x2(injectionSwitch, sin(0.0), 1.0, 0.0, 1.0)), min(_GLF_IDENTITY(vec2(mat3x2(injectionSwitch, sin(0.0), 1.0, 0.0, 1.0)), clamp(_GLF_IDENTITY(vec2(mat3x2(injectionSwitch, sin(0.0), 1.0, 0.0, 1.0)), (vec2(mat3x2(injectionSwitch, sin(0.0), 1.0, 0.0, 1.0))) - vec2(_GLF_IDENTITY(0.0, _GLF_IDENTITY(_GLF_IDENTITY(float(vec2(0.0, 1.0)), (_GLF_IDENTITY(float(vec2(0.0, 1.0)), max(float(vec2(0.0, 1.0)), float(vec2(0.0, 1.0))))) - 0.0), min(float(vec2(0.0, 1.0)), float(vec2(0.0, 1.0))))), 0.0)), vec2(mat3x2(injectionSwitch, sin(0.0), 1.0, 0.0, 1.0)), _GLF_IDENTITY(vec2(mat3x2(injectionSwitch, sin(0.0), _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), 0.0, 1.0)), (_GLF_IDENTITY(vec2(mat3x2(injectionSwitch, sin(0.0), 1.0, 0.0, 1.0)), max(vec2(mat3x2(injectionSwitch, sin(0.0), 1.0, 0.0, 1.0)), vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), sin(0.0), 1.0, 0.0, 1.0))))) * mat2(1.0)))), _GLF_IDENTITY(vec2(mat3x2(injectionSwitch, sin(0.0), 1.0, 0.0, 1.0)), (_GLF_IDENTITY(vec2(mat3x2(injectionSwitch, sin(0.0), 1.0, 0.0, 1.0)), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(vec2(mat3x2(injectionSwitch, sin(0.0), 1.0, 0.0, 1.0)), (vec2(mat3x2(injectionSwitch, sin(0.0), 1.0, 0.0, 1.0))) - vec2(0.0, 0.0))))) - vec2(0.0, 0.0))))).y))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x2(injectionSwitch, sin(0.0), 1.0, 0.0, 1.0)), min(_GLF_IDENTITY(vec2(mat3x2(injectionSwitch, sin(0.0), 1.0, 0.0, 1.0)), clamp(_GLF_IDENTITY(vec2(mat3x2(injectionSwitch, sin(0.0), 1.0, 0.0, 1.0)), (vec2(mat3x2(injectionSwitch, sin(0.0), 1.0, 0.0, 1.0))) - vec2(_GLF_IDENTITY(0.0, _GLF_IDENTITY(_GLF_IDENTITY(float(vec2(0.0, 1.0)), (_GLF_IDENTITY(float(vec2(0.0, 1.0)), max(float(vec2(0.0, 1.0)), float(vec2(0.0, 1.0))))) - 0.0), min(float(vec2(0.0, 1.0)), float(vec2(0.0, 1.0))))), 0.0)), vec2(mat3x2(injectionSwitch, sin(0.0), 1.0, 0.0, 1.0)), _GLF_IDENTITY(vec2(mat3x2(injectionSwitch, sin(0.0), _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), 0.0, 1.0)), (_GLF_IDENTITY(vec2(mat3x2(injectionSwitch, sin(0.0), 1.0, 0.0, 1.0)), max(vec2(mat3x2(injectionSwitch, sin(0.0), 1.0, 0.0, 1.0)), vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), sin(0.0), 1.0, 0.0, 1.0))))) * mat2(1.0)))), _GLF_IDENTITY(vec2(mat3x2(injectionSwitch, sin(0.0), 1.0, 0.0, 1.0)), (_GLF_IDENTITY(vec2(mat3x2(injectionSwitch, sin(0.0), 1.0, 0.0, 1.0)), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(vec2(mat3x2(injectionSwitch, sin(0.0), 1.0, 0.0, 1.0)), (vec2(mat3x2(injectionSwitch, sin(0.0), 1.0, 0.0, 1.0))) - vec2(0.0, 0.0))))) - vec2(0.0, 0.0))))).y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x2(injectionSwitch, sin(0.0), 1.0, 0.0, 1.0)), min(_GLF_IDENTITY(vec2(mat3x2(injectionSwitch, sin(0.0), 1.0, 0.0, 1.0)), clamp(_GLF_IDENTITY(vec2(mat3x2(injectionSwitch, sin(0.0), 1.0, 0.0, 1.0)), (vec2(mat3x2(injectionSwitch, sin(0.0), 1.0, 0.0, 1.0))) - vec2(_GLF_IDENTITY(0.0, _GLF_IDENTITY(_GLF_IDENTITY(float(vec2(0.0, 1.0)), (_GLF_IDENTITY(float(vec2(0.0, 1.0)), max(float(vec2(0.0, 1.0)), float(vec2(0.0, 1.0))))) - 0.0), min(float(vec2(0.0, 1.0)), float(vec2(0.0, 1.0))))), 0.0)), vec2(mat3x2(injectionSwitch, sin(0.0), 1.0, 0.0, 1.0)), _GLF_IDENTITY(vec2(mat3x2(injectionSwitch, sin(0.0), _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), 0.0, 1.0)), (_GLF_IDENTITY(vec2(mat3x2(injectionSwitch, sin(0.0), 1.0, 0.0, 1.0)), max(vec2(mat3x2(injectionSwitch, sin(0.0), 1.0, 0.0, 1.0)), vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), sin(0.0), 1.0, 0.0, 1.0))))) * mat2(1.0)))), _GLF_IDENTITY(vec2(mat3x2(injectionSwitch, sin(0.0), 1.0, 0.0, 1.0)), (_GLF_IDENTITY(vec2(mat3x2(injectionSwitch, sin(0.0), 1.0, 0.0, 1.0)), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(vec2(mat3x2(injectionSwitch, sin(0.0), 1.0, 0.0, 1.0)), (vec2(mat3x2(injectionSwitch, sin(0.0), 1.0, 0.0, 1.0))) - vec2(0.0, 0.0))))) - vec2(0.0, 0.0))))).y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x2(injectionSwitch, sin(0.0), 1.0, 0.0, 1.0)), min(_GLF_IDENTITY(vec2(mat3x2(injectionSwitch, sin(0.0), 1.0, 0.0, 1.0)), clamp(_GLF_IDENTITY(vec2(mat3x2(injectionSwitch, sin(0.0), 1.0, 0.0, 1.0)), (vec2(mat3x2(injectionSwitch, sin(0.0), 1.0, 0.0, 1.0))) - vec2(_GLF_IDENTITY(0.0, _GLF_IDENTITY(_GLF_IDENTITY(float(vec2(0.0, 1.0)), (_GLF_IDENTITY(float(vec2(0.0, 1.0)), max(float(vec2(0.0, 1.0)), float(vec2(0.0, 1.0))))) - 0.0), min(float(vec2(0.0, 1.0)), float(vec2(0.0, 1.0))))), 0.0)), vec2(mat3x2(injectionSwitch, sin(0.0), 1.0, 0.0, 1.0)), _GLF_IDENTITY(vec2(mat3x2(injectionSwitch, sin(0.0), _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), 0.0, 1.0)), (_GLF_IDENTITY(vec2(mat3x2(injectionSwitch, sin(0.0), 1.0, 0.0, 1.0)), max(vec2(mat3x2(injectionSwitch, sin(0.0), 1.0, 0.0, 1.0)), vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), sin(0.0), 1.0, 0.0, 1.0))))) * mat2(1.0)))), _GLF_IDENTITY(vec2(mat3x2(injectionSwitch, sin(0.0), 1.0, 0.0, 1.0)), (_GLF_IDENTITY(vec2(mat3x2(injectionSwitch, sin(0.0), 1.0, 0.0, 1.0)), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(vec2(mat3x2(injectionSwitch, sin(0.0), 1.0, 0.0, 1.0)), (vec2(mat3x2(injectionSwitch, sin(0.0), 1.0, 0.0, 1.0))) - vec2(0.0, 0.0))))) - vec2(0.0, 0.0))))).y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x2(injectionSwitch, sin(0.0), 1.0, 0.0, 1.0)), min(_GLF_IDENTITY(vec2(mat3x2(injectionSwitch, sin(0.0), 1.0, 0.0, 1.0)), clamp(_GLF_IDENTITY(vec2(mat3x2(injectionSwitch, sin(0.0), 1.0, 0.0, 1.0)), (vec2(mat3x2(injectionSwitch, sin(0.0), 1.0, 0.0, 1.0))) - vec2(_GLF_IDENTITY(0.0, _GLF_IDENTITY(_GLF_IDENTITY(float(vec2(0.0, 1.0)), (_GLF_IDENTITY(float(vec2(0.0, 1.0)), max(float(vec2(0.0, 1.0)), float(vec2(0.0, 1.0))))) - 0.0), min(float(vec2(0.0, 1.0)), float(vec2(0.0, 1.0))))), 0.0)), vec2(mat3x2(injectionSwitch, sin(0.0), 1.0, 0.0, 1.0)), _GLF_IDENTITY(vec2(mat3x2(injectionSwitch, sin(0.0), _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), 0.0, 1.0)), (_GLF_IDENTITY(vec2(mat3x2(injectionSwitch, sin(0.0), 1.0, 0.0, 1.0)), max(vec2(mat3x2(injectionSwitch, sin(0.0), 1.0, 0.0, 1.0)), vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), sin(0.0), 1.0, 0.0, 1.0))))) * mat2(1.0)))), _GLF_IDENTITY(vec2(mat3x2(injectionSwitch, sin(0.0), 1.0, 0.0, 1.0)), (_GLF_IDENTITY(vec2(mat3x2(injectionSwitch, sin(0.0), 1.0, 0.0, 1.0)), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(vec2(mat3x2(injectionSwitch, sin(0.0), 1.0, 0.0, 1.0)), (vec2(mat3x2(injectionSwitch, sin(0.0), 1.0, 0.0, 1.0))) - vec2(0.0, 0.0))))) - vec2(0.0, 0.0))))).y)))), (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x2(injectionSwitch, sin(0.0), 1.0, 0.0, 1.0)), min(_GLF_IDENTITY(vec2(mat3x2(injectionSwitch, sin(0.0), 1.0, 0.0, 1.0)), clamp(_GLF_IDENTITY(vec2(mat3x2(injectionSwitch, sin(0.0), 1.0, 0.0, 1.0)), (vec2(mat3x2(injectionSwitch, sin(0.0), 1.0, 0.0, 1.0))) - vec2(_GLF_IDENTITY(0.0, _GLF_IDENTITY(_GLF_IDENTITY(float(vec2(0.0, 1.0)), (_GLF_IDENTITY(float(vec2(0.0, 1.0)), max(float(vec2(0.0, 1.0)), float(vec2(0.0, 1.0))))) - 0.0), min(float(vec2(0.0, 1.0)), float(vec2(0.0, 1.0))))), 0.0)), vec2(mat3x2(injectionSwitch, sin(0.0), 1.0, 0.0, 1.0)), _GLF_IDENTITY(vec2(mat3x2(injectionSwitch, sin(0.0), _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), 0.0, 1.0)), (_GLF_IDENTITY(vec2(mat3x2(injectionSwitch, sin(0.0), 1.0, 0.0, 1.0)), max(vec2(mat3x2(injectionSwitch, sin(0.0), 1.0, 0.0, 1.0)), vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), sin(0.0), 1.0, 0.0, 1.0))))) * mat2(1.0)))), _GLF_IDENTITY(vec2(mat3x2(injectionSwitch, sin(0.0), 1.0, 0.0, 1.0)), (_GLF_IDENTITY(vec2(mat3x2(injectionSwitch, sin(0.0), 1.0, 0.0, 1.0)), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(vec2(mat3x2(injectionSwitch, sin(0.0), 1.0, 0.0, 1.0)), (vec2(mat3x2(injectionSwitch, sin(0.0), 1.0, 0.0, 1.0))) - vec2(0.0, 0.0))))) - vec2(0.0, 0.0))))).y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x2(injectionSwitch, sin(0.0), 1.0, 0.0, 1.0)), min(_GLF_IDENTITY(vec2(mat3x2(injectionSwitch, sin(0.0), 1.0, 0.0, 1.0)), clamp(_GLF_IDENTITY(vec2(mat3x2(injectionSwitch, sin(0.0), 1.0, 0.0, 1.0)), (vec2(mat3x2(injectionSwitch, sin(0.0), 1.0, 0.0, 1.0))) - vec2(_GLF_IDENTITY(0.0, _GLF_IDENTITY(_GLF_IDENTITY(float(vec2(0.0, 1.0)), (_GLF_IDENTITY(float(vec2(0.0, 1.0)), max(float(vec2(0.0, 1.0)), float(vec2(0.0, 1.0))))) - 0.0), min(float(vec2(0.0, 1.0)), float(vec2(0.0, 1.0))))), 0.0)), vec2(mat3x2(injectionSwitch, sin(0.0), 1.0, 0.0, 1.0)), _GLF_IDENTITY(vec2(mat3x2(injectionSwitch, sin(0.0), _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), 0.0, 1.0)), (_GLF_IDENTITY(vec2(mat3x2(injectionSwitch, sin(0.0), 1.0, 0.0, 1.0)), max(vec2(mat3x2(injectionSwitch, sin(0.0), 1.0, 0.0, 1.0)), vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), sin(0.0), 1.0, 0.0, 1.0))))) * mat2(1.0)))), _GLF_IDENTITY(vec2(mat3x2(injectionSwitch, sin(0.0), 1.0, 0.0, 1.0)), (_GLF_IDENTITY(vec2(mat3x2(injectionSwitch, sin(0.0), 1.0, 0.0, 1.0)), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(vec2(mat3x2(injectionSwitch, sin(0.0), 1.0, 0.0, 1.0)), (vec2(mat3x2(injectionSwitch, sin(0.0), 1.0, 0.0, 1.0))) - vec2(0.0, 0.0))))) - vec2(0.0, 0.0))))).y))))) || false))), true, false))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), true && (bool(false)))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) / mat2(1.0, 1.0, 1.0, 1.0)))) : _GLF_FUZZED(injectionSwitch))).x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(0.2) : _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(2.1)), float(injectionSwitch.y), bool(true)))))))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))))), bool(bvec2(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x)) > injectionSwitch.y)))), false)))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)))), false)))), ((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))), false))))) || false))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > injectionSwitch.y), false, _GLF_IDENTITY(true, bool(bvec4(true, false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(true, ! (! (true)))))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))), (! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], max(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0))[0], (injectionSwitch)[0])), _GLF_FUZZED(280.562)), vec2(_GLF_FUZZED((- _GLF_IDENTITY(-37.55, min(_GLF_IDENTITY(-37.55, max(_GLF_IDENTITY(-37.55, (true ? -37.55 : _GLF_FUZZED(6.5))), -37.55)), -37.55)))), (injectionSwitch)[1]), bvec2(false, true))).x > injectionSwitch.y))), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)))) || false))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), ! (! (_GLF_IDENTITY((false), ! (! ((false))))))))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(atan(-105.384, -784.451))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
}
