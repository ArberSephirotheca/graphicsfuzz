#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 0) uniform buf0 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = 16;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(vec3(-29.21, 0.2, 392.566).g), _GLF_FUZZED(5.3)), bvec2(false, false))).y)), false, true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       barrier();
      }
    }
  }
 do
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, (0.0) / 1.0))).x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))) || false)))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, (true) && true))))
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))));
      }
     else
      {
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((! (false))))))))));
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     do
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, _GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec4(bvec3(true, false, false), false)))))), true && (! (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec4(bvec3(true, false, false), false)))))))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, true)), ! (! (bool(bvec4(false, false, false, true))))))), false || (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))))))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, true)), ! (! (bool(bvec4(false, false, false, true))))))), false || (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))))))), (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, true)), ! (! (bool(bvec4(false, false, false, true))))))), false || (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))))) && true)))))))))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             do
              {
               barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
          }
        }
       else
        {
         for(int _injected_loop_counter = (((1 | 1) << _GLF_IDENTITY(int(4), _GLF_IDENTITY(_GLF_IDENTITY(int(4), 1 * (int(4))), min(_GLF_IDENTITY(int(4), 1 * (int(4))), _GLF_IDENTITY(int(4), 1 * (int(4))))))) >> _GLF_IDENTITY(int(4), int(4))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, min(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, 1 * (_injected_loop_counter))) / ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(int(0), max(_GLF_IDENTITY(int(0), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(0), (int(0)) | (int(0)))), max(~ (_GLF_IDENTITY(int(0), (int(0)) | (int(0)))), ~ (_GLF_IDENTITY(int(0), (int(0)) | (int(0)))))))), int(0))), int(0)))), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(0), int(0))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(0), int(0))), min(~ (_GLF_IDENTITY(int(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) - 0)) << 0)), int(_GLF_IDENTITY(0, (true ? _GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, int(int(0))), 0, 0)) : _GLF_FUZZED(51696)))))), ~ (_GLF_IDENTITY(int(0), int(0)))))) | (~ (_GLF_IDENTITY(int(0), int(0))))))), _GLF_IDENTITY((~ (~ (~ (_GLF_IDENTITY(int(0), int(0)))))) | 0, min((~ (~ (~ (_GLF_IDENTITY(int(0), int(0)))))) | 0, (~ (~ (~ (_GLF_IDENTITY(int(0), int(0)))))) | 0)))), 0 ^ (_GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(0), int(0))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(0), int(0))), min(~ (_GLF_IDENTITY(int(0), int(0))), ~ (_GLF_IDENTITY(int(0), int(0)))))) | (~ (_GLF_IDENTITY(int(0), int(0)))))), (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(0), int(0))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(0), int(0))), min(~ (_GLF_IDENTITY(int(0), int(0))), ~ (_GLF_IDENTITY(int(0), int(0)))))) | (~ (_GLF_IDENTITY(int(0), int(0))))))) | (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(0), int(0))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(0), int(0))), min(~ (_GLF_IDENTITY(int(0), int(0))), ~ (_GLF_IDENTITY(int(0), int(0)))))) | (~ (_GLF_IDENTITY(int(0), int(0))))))))), _GLF_IDENTITY((~ (~ (~ (_GLF_IDENTITY(int(0), int(0)))))), (false ? _GLF_FUZZED(-65346) : (~ (~ (~ (_GLF_IDENTITY(int(0), int(0)))))))) | 0)), (_GLF_IDENTITY((_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(0), int(0))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(0), int(0))), min(~ (_GLF_IDENTITY(int(0), int(0))), ~ (_GLF_IDENTITY(int(0), int(0)))))) | (~ (_GLF_IDENTITY(int(0), int(0))))))), (~ _GLF_IDENTITY((~ (~ (_GLF_IDENTITY(int(0), int(0))))), clamp((~ (~ (_GLF_IDENTITY(int(0), int(0))))), (~ (~ (_GLF_IDENTITY(int(0), int(0))))), (~ (~ (_GLF_IDENTITY(int(0), int(0)))))))) | 0)), ((_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(0), int(0))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(0), int(0))), min(~ (_GLF_IDENTITY(int(0), int(0))), ~ (_GLF_IDENTITY(int(0), int(0)))))) | (~ (_GLF_IDENTITY(int(0), int(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0))))))))), (~ (~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), (_GLF_IDENTITY(int(0), int(0))) | (_GLF_IDENTITY(int(0), int(0)))))))) | 0))) | ((_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(0), int(0))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(0), int(0))), min(_GLF_IDENTITY(~ (_GLF_IDENTITY(int(0), int(0))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(0), int(0))), clamp(~ (_GLF_IDENTITY(int(0), int(0))), ~ (_GLF_IDENTITY(int(0), int(0))), ~ (_GLF_IDENTITY(int(0), int(0)))))) | (~ (_GLF_IDENTITY(int(0), int(0))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(int(0), clamp(_GLF_IDENTITY(int(0), clamp(int(0), int(0), int(0))), _GLF_IDENTITY(int(0), ~ (_GLF_IDENTITY(~ (int(0)), (~ (int(0))) | 0))), int(0))), int(0)))))) | (~ (_GLF_IDENTITY(int(0), int(0))))))), (~ (~ (~ (_GLF_IDENTITY(int(0), int(0)))))) | 0))))) >> 0)))))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(0, (0) / 1)), _GLF_IDENTITY(_GLF_IDENTITY(int(0), max(_GLF_IDENTITY(int(0), (_GLF_IDENTITY(int(0), (int(0)) | (int(0)))) / 1), int(0))), clamp(_GLF_IDENTITY(int(0), ~ (~ (int(0)))), int(0), int(0)))))), _GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, max(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, 0 ^ (_injected_loop_counter)), ~ (~ (_injected_loop_counter))), _injected_loop_counter)), min(_GLF_IDENTITY(_injected_loop_counter, max(_GLF_IDENTITY(_injected_loop_counter, ~ (~ (_injected_loop_counter))), _injected_loop_counter)), _GLF_IDENTITY(_injected_loop_counter, max(_GLF_IDENTITY(_injected_loop_counter, ~ (~ (_injected_loop_counter))), _injected_loop_counter)))))) > _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((-46915 & _GLF_IDENTITY(0, (0) | (0))), int(ivec3((_GLF_IDENTITY(-46915, (true ? -46915 : _GLF_FUZZED(int(-66.13)))) & 0), int(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((1), int(ivec2((1), (1 & int(_GLF_ONE(1.0, injectionSwitch.y)))))), (true ? ~ (1) : _GLF_FUZZED(_injected_loop_counter)))))))) | 0, (_GLF_IDENTITY((-46915 & _GLF_IDENTITY(0, (0) | (0))), int(ivec3((_GLF_IDENTITY(-46915, (true ? -46915 : _GLF_FUZZED(int(-66.13)))) & 0), int(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((1), int(ivec2((1), (1 & int(_GLF_ONE(1.0, injectionSwitch.y)))))), (true ? ~ (1) : _GLF_FUZZED(_injected_loop_counter)))))))) | 0) ^ (0 >> _GLF_IDENTITY(int(3), int(3))))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((-46915 & 0), (true ? (-46915 & 0) : _GLF_FUZZED(-14174))), _GLF_IDENTITY(int(ivec3((-46915 & 0), int(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(1, (1) | 0))), _GLF_IDENTITY((_GLF_IDENTITY(int(ivec3((-46915 & 0), int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y)))))), 1)), (int(ivec3((-46915 & 0), int(_GLF_ONE(1.0, injectionSwitch.y)), 1))) - 0)), (_GLF_IDENTITY((_GLF_IDENTITY(int(ivec3((-46915 & 0), int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y)))))), 1)), (int(ivec3((-46915 & 0), int(_GLF_ONE(1.0, injectionSwitch.y)), 1))) - 0)), min((_GLF_IDENTITY(int(ivec3((-46915 & 0), int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y)))))), 1)), (int(ivec3((-46915 & 0), int(_GLF_ONE(1.0, injectionSwitch.y)), 1))) - 0)), (_GLF_IDENTITY(int(ivec3((-46915 & 0), int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y)))))), 1)), (int(ivec3((-46915 & 0), int(_GLF_ONE(1.0, injectionSwitch.y)), 1))) - 0))))) | 0) | 0)) | 0), max((_GLF_IDENTITY((-46915 & 0), int(ivec3((-46915 & 0), int(_GLF_ONE(1.0, injectionSwitch.y)), 1))) | 0), (_GLF_IDENTITY(_GLF_IDENTITY((-46915 & 0), int(ivec3((-46915 & 0), int(_GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, 1.0)), injectionSwitch.y)), 1))), (_GLF_IDENTITY((-46915 & 0), int(ivec3((-46915 & 0), int(_GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, 1.0)), injectionSwitch.y)), 1)))) | (_GLF_IDENTITY((-46915 & 0), int(ivec3((-46915 & 0), int(_GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, 1.0)), injectionSwitch.y)), 1))))) | 0))))))); _injected_loop_counter --)
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false), true, false)))))))
            barrier();
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), bool(bvec4(_GLF_DEAD(false), true, false, false)))) || false)))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(_GLF_IDENTITY(bool(! (_GLF_DEAD(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(! (_GLF_DEAD(false))))))), _GLF_IDENTITY(bool(bvec3(! (_GLF_DEAD(false)), true, false)), (bool(bvec3(! (_GLF_DEAD(false)), true, false))) && true)))))))) && true)) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                {
                 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                  {
                   barrier();
                  }
                }
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), true, true))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))) : _GLF_FUZZED(4.5), (true ? _GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))) : _GLF_FUZZED(4.5), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))) : _GLF_FUZZED(4.5)) - 0.0) : _GLF_FUZZED(52.93)))), 0.0 + ((true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), _GLF_IDENTITY(float(mat4x3(min(injectionSwitch.x, injectionSwitch.x), 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, tan(0.0), 0.0)), dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, tan(0.0), 0.0))), 1.0, 1.0, 0.0, 1.0, sin(0.0), 0.0, 0.0, 1.0)), (float(mat4x3(min(injectionSwitch.x, injectionSwitch.x), 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, tan(0.0), 0.0)), dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, tan(0.0), 0.0))), 1.0, 1.0, 0.0, 1.0, sin(0.0), 0.0, 0.0, 1.0))) - 0.0))), min(injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(4.5))))) > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))) && true, _GLF_IDENTITY(false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))) && true), (false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((-5356.6319 - -87.12))), float(injectionSwitch.x), bool(true))) > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), true)))), ! (! ((injectionSwitch.x > injectionSwitch.y)))) && true)) && _GLF_IDENTITY(true, true && (true))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true))))) ? _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x, injectionSwitch.x)) : _GLF_FUZZED(4.5))) > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))) && true), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(7.1, 429.491)) : injectionSwitch)).y)), true))) && true)))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))) || false), true && (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false || (injectionSwitch.x > injectionSwitch.y), bool(bvec4(false || (injectionSwitch.x > injectionSwitch.y), true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false), true))))))) || false))))), true && (bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))) || false))))))))
                {
                 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                  {
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     if(_GLF_WRAPPED_IF_TRUE(true))
                      {
                       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(_GLF_IDENTITY((0 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), _GLF_IDENTITY(max(int(5), int(5)), max(max(int(5), int(5)), _GLF_IDENTITY(max(int(5), int(5)), (max(int(5), int(5))) - 0)))))), (true ? (0 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), _GLF_IDENTITY(max(int(5), int(5)), max(max(int(5), int(5)), _GLF_IDENTITY(max(int(5), int(5)), (max(int(5), int(5))) - 0)))))) : _GLF_FUZZED(findMSB(_injected_loop_counter)))), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY((0 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), max(int(5), int(5))))), ((0 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), max(int(5), int(5)))))) - 0), 1), (ivec2(_GLF_IDENTITY((0 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), max(int(5), int(5))))), ((0 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), max(int(5), int(5)))))) - 0), 1)) - ivec2(0, 0))), 0 ^ (int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY((_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, int(ivec3(0, 0, 0))))) << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), max(int(5), int(5))))), ((0 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(_GLF_IDENTITY(int(5), max(int(5), int(5))), (_GLF_IDENTITY(int(5), max(int(5), int(5)))) - 0)))) - 0), 1), (ivec2(_GLF_IDENTITY((0 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), max(int(5), int(5))))), ((0 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), max(int(5), _GLF_IDENTITY(int(5), (_GLF_IDENTITY(int(5), (_GLF_IDENTITY(int(5), ~ (~ (int(5))))) << 0)) + 0)))))) - 0), 1)) - ivec2(0, 0))))))); _injected_loop_counter --)
                        {
                         if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(! (_GLF_IDENTITY(! (true), true && (! (true)))), bool(bool(! (_GLF_IDENTITY(! (true), true && (_GLF_IDENTITY(! (true), (! (true)) && true))))))))))
                          {
                           do
                            {
                             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                              {
                               barrier();
                              }
                            }
                           while(_GLF_WRAPPED_LOOP(false));
                          }
                         else
                          {
                          }
                        }
                      }
                     else
                      {
                      }
                    }
                  }
                 if(_GLF_DEAD(false))
                  barrier();
                }
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   if(_GLF_DEAD(false))
                    {
                     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
                      {
                       barrier();
                      }
                    }
                  }
                }
               do
                {
                 if(_GLF_DEAD(false))
                  barrier();
                }
               while(_GLF_WRAPPED_LOOP(false));
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 if(_GLF_DEAD(false))
                  barrier();
                }
               do
                {
                 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                     if(_GLF_WRAPPED_IF_FALSE(false))
                      {
                      }
                     else
                      {
                       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).y)), true)), ! (_GLF_IDENTITY(! (bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), bool(bool(! _GLF_IDENTITY((bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), ! (_GLF_IDENTITY(! ((bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), (! ((bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))) && true)))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, _GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (injectionSwitch.x < injectionSwitch.y)), true)), ! (_GLF_IDENTITY(! (bool(bvec3(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true))), bool(bool(! (_GLF_IDENTITY(bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), true && (_GLF_IDENTITY(bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), ! (! (bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec4(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), false))), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), bvec3(bvec4(bvec3(bvec3(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-986.481)), float(injectionSwitch.x), bool(true))) < injectionSwitch.y)), true)), false))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))), ! (_GLF_IDENTITY(! (bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 1.0, sqrt(1.0), tan(sqrt(0.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, 0.0, 1.0))).y)), true))), bool(bool(! (bool(bvec3(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec3(bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-900.721) : injectionSwitch.y)), injectionSwitch.y))))), _GLF_IDENTITY(false, true && (false)), true))))), true)))))))), bool(bool(_GLF_IDENTITY(bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), bool(_GLF_IDENTITY(bvec3(! (bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), false, false), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(! (bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), false, false), bvec3(bvec4(bvec3(! (bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), false, false), false)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(! (bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(! (bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), (_GLF_IDENTITY(! (bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), true && (_GLF_IDENTITY(! (bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), false || (! (bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))) && true), false, false), false)))), true))))))), _GLF_IDENTITY(bool(bool(! (bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)), _GLF_IDENTITY(true, bool(bool(true)))))))), _GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, (false) || false))), bool(bvec3(! (! (false)), true, false))))))) || (bool(bool(! (bool(bvec3(false, _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4x3(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0), transpose(transpose(mat4x3(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0))))))) - 0.0) < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true)))))))))))))) && true)))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), mix(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED((1.4 * -6155.0901))), vec2((min(injectionSwitch, injectionSwitch))[0], (min(injectionSwitch, injectionSwitch))[1]), bvec2(true, true)))) : _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / abs(vec2(1.0, 1.0)))))).x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), mix(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED((1.4 * -6155.0901))), vec2((min(injectionSwitch, injectionSwitch))[0], (min(injectionSwitch, injectionSwitch))[1]), bvec2(true, true)))) : _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / abs(vec2(1.0, 1.0)))))).x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), mix(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED((1.4 * -6155.0901))), vec2((min(injectionSwitch, injectionSwitch))[0], (min(injectionSwitch, injectionSwitch))[1]), bvec2(true, true)))) : _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / abs(vec2(1.0, 1.0)))))).x > injectionSwitch.y))))))))))
                        {
                         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) || false))), (injectionSwitch.x < injectionSwitch.y))))
                          {
                           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (! (false))))))
                            {
                             if(_GLF_WRAPPED_IF_FALSE(false))
                              {
                              }
                             else
                              {
                               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                {
                                }
                               else
                                {
                                 barrier();
                                }
                              }
                            }
                           barrier();
                           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            {
                             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                              {
                               barrier();
                              }
                            }
                          }
                         else
                          {
                          }
                         if(_GLF_DEAD(false))
                          barrier();
                        }
                       if(_GLF_DEAD(false))
                        barrier();
                      }
                     barrier();
                    }
                  }
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                 do
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   do
                    {
                     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      {
                      }
                     else
                      {
                       for(int _injected_loop_counter = _GLF_IDENTITY((1 | (1 ^ _GLF_IDENTITY(1, int(ivec4(1, 1, 0, int(_GLF_ONE(1.0, injectionSwitch.y))))))), 0 | ((1 | (1 ^ 1)))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                        {
                         do
                          {
                           barrier();
                          }
                         while(_GLF_WRAPPED_LOOP(false));
                        }
                      }
                     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y))))
                      {
                       if(_GLF_DEAD(false))
                        {
                         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          {
                          }
                         else
                          {
                           barrier();
                          }
                        }
                       barrier();
                      }
                    }
                   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(_GLF_IDENTITY(! (false), false || (! (false))), _GLF_IDENTITY((_GLF_IDENTITY(! (false), bool(bool(! (false))))), ! (! ((_GLF_IDENTITY(! (false), bool(bool(! (false)))))))) && true)) || false))))), ! (! ((_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(_GLF_IDENTITY(! (false), false || (! (false))), _GLF_IDENTITY((_GLF_IDENTITY(! (false), bool(bool(! (false))))), ! (! ((_GLF_IDENTITY(! (false), bool(bool(! (false)))))))) && true)) || false))))))))), _GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(true && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))))))), true && (true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true))), ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(_GLF_IDENTITY(! (false), false || (! (false))), _GLF_IDENTITY((_GLF_IDENTITY(! (false), bool(bool(! (false))))), ! (! ((_GLF_IDENTITY(! (false), bool(bool(! (false)))))))) && true)) || false))))), ! (! ((_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(_GLF_IDENTITY(! (false), false || (! (false))), _GLF_IDENTITY((_GLF_IDENTITY(! (false), bool(bool(! (false))))), ! (! ((_GLF_IDENTITY(! (false), bool(bool(! (false)))))))) && true)) || false)))))))), bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(_GLF_IDENTITY(! (false), false || (! (false))), _GLF_IDENTITY((_GLF_IDENTITY(! (false), bool(bool(! (false))))), ! (! ((_GLF_IDENTITY(! (false), bool(bool(! (false)))))))) && true)) || false))))), ! (! ((_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(_GLF_IDENTITY(! (false), false || (! (false))), _GLF_IDENTITY((_GLF_IDENTITY(! (false), bool(bool(! (false))))), ! (! ((_GLF_IDENTITY(! (false), bool(bool(! (false)))))))) && true)) || false)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(bvec4((! (false)), false, true, false)))), _GLF_IDENTITY(true && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))))))), true && (true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true))), ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))))))))))))) && true)));
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                 for(int _injected_loop_counter = (0 ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(0), int(_GLF_IDENTITY(0, (0) - (0 | 0))))) >> _GLF_IDENTITY(int(0), int(0)))); _injected_loop_counter ++)
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_DEAD(false))
                    {
                     do
                      {
                       do
                        {
                         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(true, ! (! (true))) && (false))))
                          {
                           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)))))))
                            {
                            }
                           else
                            {
                             if(_GLF_DEAD(false))
                              {
                               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                barrier();
                               barrier();
                              }
                            }
                          }
                         else
                          {
                           if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, false || (false))))
                            {
                            }
                           else
                            {
                             barrier();
                            }
                           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            barrier();
                          }
                        }
                       while(_GLF_WRAPPED_LOOP(false));
                      }
                     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                    }
                  }
                 for(int _injected_loop_counter = ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(4), int(4)), (_GLF_IDENTITY(1 << _GLF_IDENTITY(int(4), int(4)), (true ? 1 << _GLF_IDENTITY(int(4), int(4)) : _GLF_FUZZED(92165)))) << (1 ^ 1))) >> _GLF_IDENTITY(int(4), int(4))); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0), bool(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-435.533) : injectionSwitch.x)))) > injectionSwitch.y))); _injected_loop_counter --)
                  {
                   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)))))
                    {
                     if(_GLF_WRAPPED_IF_FALSE(false))
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), injectionSwitch.y))))))
                        barrier();
                       if(_GLF_WRAPPED_IF_TRUE(true))
                        {
                         if(_GLF_DEAD(false))
                          barrier();
                        }
                       else
                        {
                        }
                      }
                     else
                      {
                       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))
                        barrier();
                       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
                        barrier();
                       if(_GLF_DEAD(false))
                        {
                         for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                          {
                           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).x > injectionSwitch.y))))
                            {
                            }
                           else
                            {
                             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                              {
                               barrier();
                              }
                            }
                          }
                        }
                       barrier();
                       if(_GLF_DEAD(false))
                        barrier();
                       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                        {
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          {
                           if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true)))))
                            barrier();
                           barrier();
                          }
                        }
                       else
                        {
                        }
                      }
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)) && true, ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, (false) && true)) && true), ! (! (! ((_GLF_IDENTITY(false, (false) && true)) && true)))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, (false) && true)) && true), ! (! (! ((_GLF_IDENTITY(false, (false) && true)) && true)))))))))
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                       barrier();
                      }
                    }
                  }
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
            }
           else
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(false))
                barrier();
              }
             else
              {
              }
            }
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   else
    {
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))))
  {
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))));
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(subgroup_id) : workgroup_base)), workgroup_base)) + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (false ? _GLF_IDENTITY(_GLF_FUZZED(uvec4(5762u, 118825u, 30192u, 26511u).t), (_GLF_IDENTITY(_GLF_FUZZED(uvec4(5762u, 118825u, 30192u, 26511u).t), _GLF_IDENTITY(clamp(_GLF_FUZZED(uvec4(5762u, 118825u, 30192u, 26511u).t), _GLF_IDENTITY(_GLF_FUZZED(uvec4(5762u, 118825u, 30192u, 26511u).t), ~ (~ (_GLF_FUZZED(uvec4(5762u, 118825u, 30192u, 26511u).t)))), _GLF_FUZZED(uvec4(5762u, 118825u, 30192u, 26511u).t)), 0u ^ (clamp(_GLF_FUZZED(uvec4(5762u, 118825u, 30192u, 26511u).t), _GLF_IDENTITY(_GLF_FUZZED(uvec4(5762u, 118825u, 30192u, 26511u).t), ~ (~ (_GLF_FUZZED(uvec4(5762u, 118825u, 30192u, 26511u).t)))), _GLF_FUZZED(uvec4(5762u, 118825u, 30192u, 26511u).t)))))) >> 0u) : subgroup_id)) * subgroup_size, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(uvec4(5762u, 118825u, 30192u, 26511u).t) : subgroup_id)) * _GLF_IDENTITY(subgroup_size, 1u * (_GLF_IDENTITY(subgroup_size, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)), injectionSwitch)).x)) ^ (subgroup_size)))), (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))), (true ? uvec2(_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(uvec4(5762u, 118825u, 30192u, 26511u).t) : subgroup_id)) * _GLF_IDENTITY(subgroup_size, 1u * (_GLF_IDENTITY(subgroup_size, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)), injectionSwitch)).x)) ^ (subgroup_size)))), (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))) : _GLF_FUZZED((_GLF_IDENTITY(uvec3(58879u, 54944u, 81764u).x + uvec2(165976u, 198344u), (_GLF_IDENTITY(uvec3(58879u, 54944u, 81764u).x + uvec2(165976u, 198344u), (uvec3(58879u, 54944u, 81764u).x + uvec2(165976u, 198344u)) + uvec2(0u, 0u))) | (uvec3(58879u, 54944u, 81764u).x + uvec2(165976u, 198344u)))))))), 1u * (uint(uvec2(_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(uvec4(5762u, 118825u, 30192u, 26511u).t) : subgroup_id)) * subgroup_size, (0u >> _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((subgroup_local_id / write_val)) : _GLF_IDENTITY(3u, (3u) | 0u))))))))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (false ? _GLF_IDENTITY(_GLF_FUZZED(uvec4(5762u, 118825u, 30192u, 26511u).t), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(uvec4(5762u, 118825u, 30192u, 26511u).t), clamp(_GLF_FUZZED(uvec4(5762u, 118825u, 30192u, 26511u).t), _GLF_IDENTITY(_GLF_FUZZED(uvec4(5762u, 118825u, 30192u, 26511u).t), ~ (~ (_GLF_FUZZED(uvec4(5762u, 118825u, 30192u, 26511u).t)))), _GLF_FUZZED(uvec4(5762u, 118825u, 30192u, 26511u).t))), (_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(uvec4(5762u, 118825u, 30192u, 26511u), (uvec4(5762u, 118825u, 30192u, 26511u)) - (uvec4(0u, 0u, 0u, 0u) << _GLF_IDENTITY(uvec4(6u), uvec4(6u)))).t), clamp(_GLF_FUZZED(uvec4(5762u, 118825u, 30192u, 26511u).t), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(uvec4(5762u, 118825u, 30192u, 26511u).t), ~ (~ (_GLF_FUZZED(uvec4(5762u, 118825u, 30192u, 26511u).t)))), clamp(_GLF_IDENTITY(_GLF_FUZZED(uvec4(5762u, 118825u, 30192u, 26511u).t), ~ (~ (_GLF_FUZZED(uvec4(5762u, 118825u, 30192u, 26511u).t)))), _GLF_IDENTITY(_GLF_FUZZED(uvec4(5762u, 118825u, 30192u, 26511u).t), ~ (~ (_GLF_FUZZED(uvec4(5762u, 118825u, 30192u, 26511u).t)))), _GLF_IDENTITY(_GLF_FUZZED(uvec4(5762u, 118825u, 30192u, 26511u).t), ~ (~ (_GLF_FUZZED(uvec4(5762u, 118825u, 30192u, 26511u).t)))))), _GLF_FUZZED(uvec4(_GLF_IDENTITY(5762u, ~ (~ (5762u))), 118825u, _GLF_IDENTITY(30192u, ~ (_GLF_IDENTITY(~ (30192u), 1u * (~ (30192u))))), 26511u).t)))))) >> 0u) : subgroup_id)) * subgroup_size, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(uvec4(5762u, 118825u, 30192u, 26511u).t) : subgroup_id)) * _GLF_IDENTITY(subgroup_size, 1u * (_GLF_IDENTITY(subgroup_size, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)), injectionSwitch), (min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)), injectionSwitch)) / vec2(1.0, 1.0))).x)) ^ (subgroup_size)))), (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))), (true ? uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(uvec4(5762u, 118825u, 30192u, 26511u).t) : subgroup_id)) * _GLF_IDENTITY(subgroup_size, 1u * (_GLF_IDENTITY(subgroup_size, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)), injectionSwitch)).x)) ^ (subgroup_size)))), max(_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(uvec4(5762u, 118825u, 30192u, 26511u).t) : subgroup_id)) * _GLF_IDENTITY(subgroup_size, 1u * (_GLF_IDENTITY(subgroup_size, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)), injectionSwitch)).x)) ^ (subgroup_size)))), _GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(uvec4(5762u, 118825u, 30192u, 26511u).t) : subgroup_id)) * _GLF_IDENTITY(subgroup_size, 1u * (_GLF_IDENTITY(subgroup_size, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)), injectionSwitch)).x)) ^ (subgroup_size)))))), (0u >> _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, (false ? _GLF_FUZZED(write_val) : 3u)))))) : _GLF_FUZZED((uvec3(58879u, _GLF_IDENTITY(54944u, clamp(_GLF_IDENTITY(54944u, _GLF_IDENTITY(uint(uvec4(54944u, 1u, 0u, (1u | 0u))), (false ? _GLF_FUZZED(write_val) : uint(uvec4(54944u, 1u, 0u, (1u | 0u)))))), 54944u, 54944u)), 81764u).x + uvec2(165976u, 198344u)))))), 1u * (uint(uvec2(_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(uvec4(5762u, 118825u, 30192u, 26511u).t) : subgroup_id)) * subgroup_size, (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (false ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(uvec4(5762u, 118825u, 30192u, 26511u).t), (_GLF_IDENTITY(_GLF_FUZZED(uvec4(5762u, 118825u, 30192u, 26511u).t), clamp(_GLF_FUZZED(uvec4(5762u, 118825u, 30192u, 26511u).t), _GLF_IDENTITY(_GLF_FUZZED(uvec4(5762u, 118825u, 30192u, 26511u).t), ~ (~ (_GLF_FUZZED(uvec4(5762u, 118825u, 30192u, 26511u).t)))), _GLF_FUZZED(uvec4(5762u, 118825u, 30192u, 26511u).t)))) >> 0u), (true ? _GLF_IDENTITY(_GLF_FUZZED(uvec4(5762u, 118825u, 30192u, 26511u).t), (_GLF_IDENTITY(_GLF_FUZZED(uvec4(5762u, 118825u, 30192u, 26511u).t), clamp(_GLF_FUZZED(uvec4(5762u, 118825u, 30192u, 26511u).t), _GLF_IDENTITY(_GLF_FUZZED(uvec4(5762u, 118825u, 30192u, 26511u).t), ~ (~ (_GLF_FUZZED(uvec4(5762u, 118825u, 30192u, 26511u).t)))), _GLF_FUZZED(uvec4(5762u, 118825u, 30192u, 26511u).t)))) >> 0u) : _GLF_FUZZED(subgroup_local_id))) : subgroup_id)) * subgroup_size, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(uvec4(5762u, 118825u, 30192u, 26511u).t) : subgroup_id)) * _GLF_IDENTITY(subgroup_size, 1u * (_GLF_IDENTITY(subgroup_size, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)), injectionSwitch)).x)) ^ (subgroup_size)))), (_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(uvec4(5762u, 118825u, 30192u, 26511u).t) : subgroup_id)) * _GLF_IDENTITY(subgroup_size, 1u * (_GLF_IDENTITY(subgroup_size, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)), injectionSwitch)).x)) ^ (subgroup_size))))) ^ 0u), (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(3u, min(_GLF_IDENTITY(3u, 0u | (3u)), 3u))), uint(3u)))), (true ? uvec2(_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(uvec4(5762u, 118825u, 30192u, 26511u).t) : subgroup_id)) * _GLF_IDENTITY(subgroup_size, 1u * (_GLF_IDENTITY(subgroup_size, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)), injectionSwitch)), mix(vec2(_GLF_FUZZED(708.280), _GLF_FUZZED(-7.5)), vec2((_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)), injectionSwitch)))[0], (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)), injectionSwitch)))[1]), bvec2(true, true))).x)) ^ (subgroup_size)))), (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(3u, (3u) | (3u))), uint(3u)))) : _GLF_FUZZED((uvec3(58879u, 54944u, 81764u).x + uvec2(165976u, 198344u)))))), 1u * (uint(uvec2(_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(uvec4(5762u, 118825u, 30192u, 26511u).t) : subgroup_id)) * subgroup_size, (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (false ? _GLF_IDENTITY(_GLF_FUZZED(uvec4(5762u, 118825u, 30192u, 26511u).t), (_GLF_IDENTITY(_GLF_FUZZED(uvec4(5762u, 118825u, 30192u, 26511u).t), clamp(_GLF_FUZZED(_GLF_IDENTITY(uvec4(5762u, 118825u, 30192u, 26511u).t, (uvec4(5762u, 118825u, 30192u, 26511u).t) | 0u)), _GLF_IDENTITY(_GLF_FUZZED(uvec4(5762u, 118825u, 30192u, 26511u).t), ~ (~ (_GLF_FUZZED(uvec4(5762u, 118825u, 30192u, 26511u).t)))), _GLF_FUZZED(uvec4(5762u, 118825u, 30192u, 26511u).t)))) >> 0u) : subgroup_id)) * subgroup_size, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(uvec4(5762u, 118825u, 30192u, 26511u).t) : subgroup_id)) * _GLF_IDENTITY(subgroup_size, 1u * (_GLF_IDENTITY(subgroup_size, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)), injectionSwitch)).x)) ^ _GLF_IDENTITY((subgroup_size), ((subgroup_size)) << 0u)))), (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))), (true ? uvec2(_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(uvec4(5762u, 118825u, 30192u, 26511u).t) : subgroup_id)) * _GLF_IDENTITY(subgroup_size, 1u * (_GLF_IDENTITY(subgroup_size, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)), injectionSwitch)).x)) ^ (subgroup_size)))), (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))) : _GLF_FUZZED((_GLF_IDENTITY(uvec3(58879u, 54944u, 81764u).x, 0u + (_GLF_IDENTITY(uvec3(58879u, 54944u, 81764u).x, clamp(uvec3(58879u, 54944u, 81764u).x, _GLF_IDENTITY(uvec3(58879u, 54944u, 81764u).x, ~ (~ (uvec3(58879u, 54944u, 81764u).x))), uvec3(58879u, 54944u, 81764u).x)))) + uvec2(165976u, 198344u)))))), 1u * (uint(uvec2(_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(uvec4(5762u, 118825u, 30192u, 26511u).t) : subgroup_id)) * subgroup_size, (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (false ? _GLF_IDENTITY(_GLF_FUZZED(uvec4(_GLF_IDENTITY(5762u, (5762u) * 1u), 118825u, 30192u, 26511u).t), (_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(uvec4(5762u, 118825u, 30192u, 26511u), ~ (~ (_GLF_IDENTITY(uvec4(5762u, 118825u, 30192u, 26511u), min(_GLF_IDENTITY(uvec4(5762u, 118825u, 30192u, 26511u), uvec4(0u, 0u, 0u, 0u) ^ (uvec4(5762u, 118825u, 30192u, 26511u))), uvec4(5762u, 118825u, 30192u, 26511u)))))).t), clamp(_GLF_FUZZED(uvec4(5762u, 118825u, 30192u, 26511u).t), _GLF_IDENTITY(_GLF_FUZZED(uvec4(5762u, 118825u, 30192u, 26511u).t), ~ (~ (_GLF_FUZZED(uvec4(5762u, 118825u, 30192u, 26511u).t)))), _GLF_FUZZED(uvec4(5762u, 118825u, 30192u, 26511u).t)))) >> 0u) : subgroup_id)) * subgroup_size, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(uvec4(5762u, 118825u, 30192u, _GLF_IDENTITY(26511u, min(26511u, 26511u))).t) : subgroup_id)) * _GLF_IDENTITY(subgroup_size, 1u * (_GLF_IDENTITY(subgroup_size, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)), injectionSwitch)).x)) ^ (subgroup_size)))), (0u >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) << 0u)))), (true ? uvec2(_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(uvec4(_GLF_IDENTITY(5762u, (5762u) * 1u), 118825u, 30192u, 26511u).t) : subgroup_id)) * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 1u * (_GLF_IDENTITY(subgroup_size, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)), injectionSwitch)).x)) ^ (subgroup_size)))), uint(uvec2(_GLF_IDENTITY(subgroup_size, 1u * (_GLF_IDENTITY(subgroup_size, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)), injectionSwitch)).x)) ^ (subgroup_size)))), 1u))), (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))) : _GLF_FUZZED((uvec3(58879u, 54944u, 81764u).x + uvec2(165976u, 198344u)))))), 1u * (uint(uvec2(_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(uvec4(5762u, 118825u, 30192u, 26511u).t) : subgroup_id)) * subgroup_size, (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))))))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (false ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(uvec4(5762u, 118825u, 30192u, 26511u).t), (_GLF_IDENTITY(_GLF_FUZZED(uvec4(5762u, 118825u, 30192u, 26511u).t), clamp(_GLF_FUZZED(uvec4(5762u, 118825u, 30192u, 26511u).t), _GLF_IDENTITY(_GLF_FUZZED(uvec4(5762u, 118825u, 30192u, 26511u).t), ~ (~ (_GLF_FUZZED(uvec4(5762u, 118825u, 30192u, 26511u).t)))), _GLF_FUZZED(uvec4(5762u, 118825u, 30192u, 26511u).t)))) >> 0u), max(_GLF_IDENTITY(_GLF_FUZZED(uvec4(5762u, 118825u, 30192u, 26511u).t), (_GLF_IDENTITY(_GLF_FUZZED(uvec4(5762u, 118825u, 30192u, 26511u).t), clamp(_GLF_FUZZED(uvec4(5762u, 118825u, 30192u, 26511u).t), _GLF_IDENTITY(_GLF_FUZZED(uvec4(5762u, 118825u, 30192u, 26511u).t), ~ (~ (_GLF_FUZZED(uvec4(5762u, 118825u, 30192u, 26511u).t)))), _GLF_FUZZED(uvec4(5762u, 118825u, 30192u, 26511u).t)))) >> 0u), _GLF_IDENTITY(_GLF_FUZZED(uvec4(5762u, 118825u, 30192u, 26511u).t), (_GLF_IDENTITY(_GLF_FUZZED(uvec4(5762u, 118825u, 30192u, 26511u).t), clamp(_GLF_FUZZED(uvec4(5762u, 118825u, 30192u, 26511u).t), _GLF_IDENTITY(_GLF_FUZZED(uvec4(5762u, 118825u, 30192u, 26511u).t), ~ (~ (_GLF_FUZZED(uvec4(5762u, 118825u, 30192u, 26511u).t)))), _GLF_FUZZED(uvec4(5762u, 118825u, 30192u, 26511u).t)))) >> 0u))) : subgroup_id)) * subgroup_size, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(uvec4(5762u, 118825u, 30192u, 26511u).t) : subgroup_id)) * _GLF_IDENTITY(subgroup_size, 1u * (_GLF_IDENTITY(subgroup_size, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)), injectionSwitch)).x)) ^ (subgroup_size)))), (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (uint(3u)) | 0u), _GLF_IDENTITY(uint(3u), clamp(uint(3u), uint(3u), uint(3u)))))), (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, false, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(true, false, false))), bvec3(bvec3(bvec3(bvec3(bvec3(true, false, false))))))))) ? uvec2(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(false, bool(bvec2(false, true))) ? _GLF_FUZZED(uvec4(5762u, 118825u, 30192u, 26511u).t) : subgroup_id)) * _GLF_IDENTITY(subgroup_size, 1u * (_GLF_IDENTITY(subgroup_size, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)), injectionSwitch)).x)) ^ (subgroup_size)))), (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))) : _GLF_FUZZED((uvec3(58879u, 54944u, 81764u).x + uvec2(165976u, 198344u)))))), 1u * (uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), (false ? _GLF_FUZZED(uvec4(5762u, 118825u, 30192u, 26511u).t) : subgroup_id)) * subgroup_size, (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))))))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (false ? _GLF_IDENTITY(_GLF_FUZZED(uvec4(5762u, 118825u, 30192u, 26511u).t), (_GLF_IDENTITY(_GLF_FUZZED(uvec4(5762u, 118825u, 30192u, 26511u).t), clamp(_GLF_FUZZED(uvec4(5762u, 118825u, 30192u, 26511u).t), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(uvec4(5762u, 118825u, 30192u, 26511u).t), ~ (~ (_GLF_FUZZED(uvec4(5762u, 118825u, 30192u, 26511u).t)))), (_GLF_IDENTITY(_GLF_FUZZED(uvec4(5762u, 118825u, 30192u, 26511u).t), ~ (~ (_GLF_FUZZED(uvec4(5762u, 118825u, 30192u, 26511u).t))))) >> 0u), _GLF_FUZZED(uvec4(5762u, 118825u, 30192u, 26511u).t)))) >> 0u) : subgroup_id)) * subgroup_size, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(_GLF_IDENTITY(uvec4(5762u, 118825u, 30192u, 26511u).t, (uvec4(5762u, 118825u, 30192u, 26511u).t) | (uvec4(5762u, 118825u, 30192u, 26511u).t))) : subgroup_id)) * _GLF_IDENTITY(subgroup_size, 1u * (_GLF_IDENTITY(subgroup_size, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)), injectionSwitch)).x)) ^ (subgroup_size)))), (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))), (true ? uvec2(_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(uvec4(5762u, 118825u, 30192u, 26511u).t) : subgroup_id)) * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), min(~ (1u), ~ (1u))))), 1u)) * (_GLF_IDENTITY(subgroup_size, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)), injectionSwitch)).x)) ^ (subgroup_size)))), (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))) : _GLF_FUZZED((uvec3(58879u, 54944u, 81764u).x + uvec2(165976u, 198344u)))))), 1u * (uint(uvec2(_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(uvec4(5762u, 118825u, 30192u, 26511u).t) : subgroup_id)) * subgroup_size, (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (false ? _GLF_IDENTITY(_GLF_FUZZED(uvec4(5762u, 118825u, 30192u, 26511u).t), (_GLF_IDENTITY(_GLF_FUZZED(uvec4(5762u, 118825u, _GLF_IDENTITY(30192u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(30192u, (101490u & 0u) + (_GLF_IDENTITY(30192u, min(30192u, 30192u))))), 0u + (uint(_GLF_IDENTITY(30192u, (101490u & 0u) + (_GLF_IDENTITY(30192u, min(30192u, 30192u)))))))), uint(uvec4(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(30192u, (101490u & 0u) + (_GLF_IDENTITY(30192u, min(30192u, 30192u))))), 0u + (uint(_GLF_IDENTITY(30192u, (101490u & 0u) + (_GLF_IDENTITY(30192u, min(30192u, 30192u)))))))), 0u, 1u, (0u << _GLF_IDENTITY(uint(1u), uint(1u))))))), 26511u).t), clamp(_GLF_IDENTITY(_GLF_FUZZED(uvec4(5762u, 118825u, 30192u, 26511u).t), (_GLF_IDENTITY(_GLF_FUZZED(uvec4(5762u, 118825u, 30192u, 26511u).t), ~ (~ (_GLF_FUZZED(uvec4(5762u, 118825u, 30192u, 26511u).t))))) * 1u), _GLF_IDENTITY(_GLF_FUZZED(uvec4(5762u, 118825u, 30192u, 26511u).t), ~ (~ (_GLF_FUZZED(uvec4(5762u, 118825u, 30192u, 26511u).t)))), _GLF_FUZZED(uvec4(5762u, 118825u, 30192u, 26511u).t)))) >> 0u) : subgroup_id)) * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(uvec4(5762u, 118825u, 30192u, 26511u).t) : subgroup_id)) * _GLF_IDENTITY(subgroup_size, 1u * (_GLF_IDENTITY(subgroup_size, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)), injectionSwitch)).x)) ^ (subgroup_size)))), (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))), (true ? uvec2(_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(uvec4(5762u, 118825u, 30192u, 26511u).t) : subgroup_id)) * _GLF_IDENTITY(subgroup_size, 1u * (_GLF_IDENTITY(subgroup_size, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)), abs(vec2(1.0, 1.0)) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)))), injectionSwitch)).x)) ^ (subgroup_size)))), _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(3u), uint(3u))), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(3u), uint(3u))), ((0u >> _GLF_IDENTITY(uint(3u), uint(3u)))) * (1u ^ 0u))), clamp(uint(_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(3u), uint(3u))), ((0u >> _GLF_IDENTITY(uint(3u), uint(3u)))) * (1u ^ 0u))), uint(_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(3u), uint(3u))), ((0u >> _GLF_IDENTITY(uint(3u), uint(3u)))) * (1u ^ 0u))), uint(_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(3u), uint(3u))), ((0u >> _GLF_IDENTITY(uint(3u), uint(3u)))) * (1u ^ 0u)))))))) : _GLF_FUZZED((uvec3(58879u, 54944u, 81764u).x + uvec2(165976u, 198344u)))))), 0u | (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(uvec4(5762u, 118825u, 30192u, 26511u).t) : subgroup_id)) * _GLF_IDENTITY(subgroup_size, 1u * (_GLF_IDENTITY(subgroup_size, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)), injectionSwitch)).x)) ^ (subgroup_size)))), (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))), (true ? uvec2(_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(uvec4(5762u, 118825u, 30192u, 26511u).t) : subgroup_id)) * _GLF_IDENTITY(subgroup_size, 1u * (_GLF_IDENTITY(subgroup_size, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)), abs(vec2(1.0, 1.0)) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)))), injectionSwitch)).x)) ^ (subgroup_size)))), _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(3u), uint(3u))), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(3u), uint(3u))), ((0u >> _GLF_IDENTITY(uint(3u), uint(3u)))) * (1u ^ 0u))), clamp(uint(_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(3u), uint(3u))), ((0u >> _GLF_IDENTITY(uint(3u), uint(3u)))) * (1u ^ 0u))), uint(_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(3u), uint(3u))), ((0u >> _GLF_IDENTITY(uint(3u), uint(3u)))) * (1u ^ 0u))), uint(_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(3u), uint(3u))), ((0u >> _GLF_IDENTITY(uint(3u), uint(3u)))) * (1u ^ 0u)))))))) : _GLF_FUZZED((uvec3(58879u, 54944u, 81764u).x + uvec2(165976u, 198344u)))))), uint(uvec3(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(uvec4(5762u, 118825u, 30192u, 26511u).t) : subgroup_id)) * _GLF_IDENTITY(subgroup_size, 1u * (_GLF_IDENTITY(subgroup_size, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)), injectionSwitch)).x)) ^ (subgroup_size)))), (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))), (true ? uvec2(_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(uvec4(5762u, 118825u, 30192u, 26511u).t) : subgroup_id)) * _GLF_IDENTITY(subgroup_size, 1u * (_GLF_IDENTITY(subgroup_size, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)), abs(vec2(1.0, 1.0)) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)))), injectionSwitch)).x)) ^ (subgroup_size)))), _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(3u), uint(3u))), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(3u), uint(3u))), ((0u >> _GLF_IDENTITY(uint(3u), uint(3u)))) * (1u ^ 0u))), clamp(uint(_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(3u), uint(3u))), ((0u >> _GLF_IDENTITY(uint(3u), uint(3u)))) * (1u ^ 0u))), uint(_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(3u), uint(3u))), ((0u >> _GLF_IDENTITY(uint(3u), uint(3u)))) * (1u ^ 0u))), uint(_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(3u), uint(3u))), ((0u >> _GLF_IDENTITY(uint(3u), uint(3u)))) * (1u ^ 0u)))))))) : _GLF_FUZZED((uvec3(58879u, 54944u, 81764u).x + uvec2(165976u, 198344u)))))), 0u, 0u))))), 1u * (uint(uvec2(_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(_GLF_IDENTITY(uvec4(5762u, 118825u, 30192u, 26511u), (uvec4(5762u, 118825u, 30192u, 26511u)) | (uvec4(5762u, 118825u, 30192u, 26511u))).t) : subgroup_id)) * subgroup_size, (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))))))))))) + subgroup_local_id;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), ! (! (bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(0.0)), bool(false))) > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])))).y)))), true && (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true && (_GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-7572.4699) : injectionSwitch.y)))))), true && (bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch))), mix(vec2((clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch))))[_GLF_IDENTITY(0, _GLF_IDENTITY(int(int(0)), (int(int(0))) | (int(int(0)))))], _GLF_FUZZED(-81.35)), vec2(_GLF_FUZZED(489.833), (clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch))))[1]), _GLF_IDENTITY(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec2(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec2(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false))))))))).x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[0]), float(_GLF_FUZZED(-74.76)), bool(false))), _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))))[1])), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, abs(1.0), 0.0, 1.0)), (_GLF_IDENTITY(true ? vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))[0]), float(_GLF_FUZZED(-74.76)), bool(false))), injectionSwitch[1])), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, abs(1.0), 0.0, 1.0)) : _GLF_FUZZED(injectionSwitch), mix(vec2((true ? vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[0]), float(_GLF_FUZZED(-74.76)), bool(false))), float(float(_GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[0]), float(_GLF_FUZZED(-74.76)), bool(false)))))), injectionSwitch[1])), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 1.0, 1.0, 1.0, _GLF_ONE(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-687.531) : 1.0)), injectionSwitch.y), 1.0, 1.0, abs(1.0), 0.0, 1.0)) : _GLF_FUZZED(injectionSwitch))[0], (true ? vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[0]), float(_GLF_FUZZED(-74.76)), bool(false))), injectionSwitch[1])), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, abs(1.0), 0.0, 1.0)) : _GLF_FUZZED(injectionSwitch))[1]), vec2(_GLF_FUZZED(0.0), _GLF_FUZZED(-5230.4951)), bvec2(false, false)))))).y))))))))) || false))), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY(vec2(56.85, 8552.6339), mat2(1.0) * (vec2(56.85, 8552.6339)))) : injectionSwitch)).y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(true && (bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))), (true && (bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))) || false)))), (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY(vec2(56.85, 8552.6339), mat2(1.0) * (vec2(56.85, 8552.6339)))) : injectionSwitch)).y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(true && (bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))), (true && (bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (bool(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, true))), (injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (bool(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (false), (! (false)) || false), true)), (bool(bvec2(_GLF_IDENTITY(! (false), (! (false)) || false), true))) && true)))), (injectionSwitch.x > injectionSwitch.y))))))))))) || false))))) && true)))), bool(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4x3(injectionSwitch.y, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0)), (true ? float(mat4x3(injectionSwitch.y, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0)) : _GLF_FUZZED(-1523.5615))))) - 0.0))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch), max(_GLF_IDENTITY(clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch), mat2(1.0) * (clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch))), clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), vec2(_GLF_IDENTITY(mat4x2(max(injectionSwitch, injectionSwitch), 1.0, exp(0.0), 1.0, 1.0, 0.0, 0.0), (mat4x2(max(injectionSwitch, injectionSwitch), 1.0, exp(0.0), 1.0, 1.0, 0.0, 0.0)) - mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), injectionSwitch)))).x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(4.9)), bool(false))))), clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))), true && (bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))))))))), true, false), bvec3(bvec3(bvec3(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), true && (! (false)))), bool(bvec2(! (! (false)), true))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(_GLF_IDENTITY(bvec3(bvec3((_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), true && (! (false)))), bool(bvec2(! (! (false)), true))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), bvec3(bvec4(bvec3(bvec3((_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), true && (! (false)))), bool(bvec2(! (! (false)), true))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true))))))) && true), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-456.248)), bool(false))) > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))) && true), false, false)), ! (! (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), false || (injectionSwitch.x > injectionSwitch.y))) && true), false, false)))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))), _GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(! (bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))), ! (! (! (bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))))))), true && (! (_GLF_IDENTITY(! (bool(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)) || false)))), ! (_GLF_IDENTITY(! (! (bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))), ! (! (! (! (bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))))))))))), (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), (bool(bvec3((_GLF_IDENTITY(! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))) && true)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY(! (bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (! (! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)))))))), false || (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! _GLF_IDENTITY((! (! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec2((! (! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false)))))), ! (! (! (! (_GLF_IDENTITY(! _GLF_IDENTITY((bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ((bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false), ! (! (! (bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))))))))), (! (! (_GLF_IDENTITY(! (bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y)))), ! (! _GLF_IDENTITY((! (bool(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))) || (false)), (injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_IDENTITY((! (bool(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))) || (false)), (injectionSwitch.x > injectionSwitch.y))))), false || ((! (bool(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))) || (false)), (injectionSwitch.x > injectionSwitch.y)))))))))))))) || false)))) && true))), _GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, true && (true)), false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(true, true && (true)), false, false), false)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(true, true && (true)), false, false), false)), true)))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, true && (true)), false, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(true, true && (true)), false, false)), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(true, true && (true)), false, false)))))))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(true, true && (true)), false, false))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(true, true && (true)), false, false))), true)))))))), bool(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, true && (true)), false, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(true, true && (true)), false, false)), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(true, true && (true)), false, false)))))))), _GLF_IDENTITY(false, ! (! (false))) || (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, _GLF_IDENTITY(true && (true), true && (true && (true)))), false, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), bool(bool(bool(bvec4(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))) && (true)), false, false)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(true, _GLF_IDENTITY(true && (true), false || (true && (true)))), false, false)), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(true, _GLF_IDENTITY(true && (true), false || (true && (true)))), false, false))))))))))))), true, false))), (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, ! (! (true))), false))) && (true)), (_GLF_IDENTITY(true, true && (true))) && true), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(true, true && (true)), false, _GLF_IDENTITY(false, true && (false)))))))) && true)) && (bool(_GLF_IDENTITY(bool(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(bool(false))))), bool(bool(bool(bool(_GLF_IDENTITY(false, bool(bool(false))))))))), (injectionSwitch.x > injectionSwitch.y))), bool(bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(bool(false))))), bool(bool(bool(bool(_GLF_IDENTITY(false, bool(bool(false))))))))), (injectionSwitch.x > injectionSwitch.y))))))))))), _GLF_IDENTITY(true, true && (true)), false)))))))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       do
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(false)), ! (! (! (_GLF_WRAPPED_IF_FALSE(false))))))))
          {
          }
         else
          {
           barrier();
          }
        }
       else
        {
        }
      }
    }
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(58202))); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0), ! _GLF_IDENTITY((! (_GLF_WRAPPED_LOOP(_injected_loop_counter != 0))), _GLF_IDENTITY(bool(bvec3((! (_GLF_WRAPPED_LOOP(_injected_loop_counter != 0))), false, false)), false || (bool(bvec3((! (_GLF_WRAPPED_LOOP(_injected_loop_counter != 0))), false, false)))))); _injected_loop_counter --)
      {
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), _GLF_ZERO(0.0, injectionSwitch.x), round(length(normalize(_GLF_ONE(1.0, injectionSwitch.y)))), 0.0, 0.0, 1.0)), (false ? _GLF_FUZZED(72.08) : float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), _GLF_ZERO(0.0, injectionSwitch.x), round(length(normalize(_GLF_ONE(1.0, injectionSwitch.y)))), 0.0, 0.0, 1.0))))) > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x), _GLF_IDENTITY(1.0 * (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, mix(float(_GLF_FUZZED(105.313)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x))), bool(true))))) - 0.0)), length(vec2(0.0, 0.0)) + (_GLF_IDENTITY(1.0 * (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, mix(float(_GLF_FUZZED(105.313)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x))), bool(true))))) - 0.0)), max(_GLF_IDENTITY(1.0 * (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, mix(float(_GLF_FUZZED(105.313)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x))), bool(true))))) - 0.0)), mix(float(1.0 * (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, mix(float(_GLF_FUZZED(105.313)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x))), bool(true))))) - 0.0))), float(_GLF_FUZZED(-8.4)), bool(false))), 1.0 * (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, mix(float(_GLF_FUZZED(105.313)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x))), bool(true))))) - 0.0))))))), max((_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(intBitsToFloat(ivec2(-46740, -94924))))), injectionSwitch)).x), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).x), _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))))) - vec2(0.0, 0.0)), min(injectionSwitch, injectionSwitch)).x)), clamp(((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x)), _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x)), mix(float(_GLF_FUZZED(9.9)), float(((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x))), bool(true))), ((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x)))) * 1.0))) - determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, length(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))) > injectionSwitch.y))))
    {
     for(int _injected_loop_counter = _GLF_IDENTITY(1, ~ (~ (1))); _GLF_WRAPPED_LOOP(_injected_loop_counter > (1 ^ ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), (_GLF_IDENTITY(int(3), int(3))) * 1)))); _injected_loop_counter --)
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) || false))), ! _GLF_IDENTITY((! (false)), _GLF_IDENTITY(false, true && (false)) || (_GLF_IDENTITY((! (false)), ! _GLF_IDENTITY((! ((! (false)))), ! (_GLF_IDENTITY(! ((! ((! (false))))), ! (! (! ((! ((! (false))))))))))))))))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && (_GLF_IDENTITY(! (! (false)), bool(bool(! (! (false))))))))))
          {
           do
            {
             do
              {
               barrier();
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 for(int _injected_loop_counter = ((0 | 0) << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) ^ 0))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (int(_GLF_ONE(1.0, injectionSwitch.y)) & 1)); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))) || false)))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, true && (true))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
      barrier();
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))))))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x, injectionSwitch.x)), mix(float(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(7.9)), bool(false))) > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))), mix(vec2(((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-4.8), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(77.27)), bvec2(true, false))), injectionSwitch))))[0], _GLF_FUZZED((-290.552 / 9.1))), vec2(_GLF_FUZZED(49.48), ((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))))[1]), bvec2(false, true))), min((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))), (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))))) * vec2(1.0, 1.0)), injectionSwitch, injectionSwitch)).y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 write_val = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, 0u + (_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((false ? _GLF_FUZZED((virtual_gid + subgroup_id)) : virtual_gid), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY((false ? _GLF_FUZZED((virtual_gid + subgroup_id)) : virtual_gid), uint(uvec3(_GLF_IDENTITY((false ? _GLF_FUZZED((virtual_gid + subgroup_id)) : virtual_gid), ((false ? _GLF_FUZZED((virtual_gid + subgroup_id)) : virtual_gid)) | ((false ? _GLF_FUZZED((virtual_gid + subgroup_id)) : virtual_gid))), 0u, 0u)))), (uint(_GLF_IDENTITY((false ? _GLF_FUZZED((virtual_gid + subgroup_id)) : virtual_gid), uint(uvec3(_GLF_IDENTITY((false ? _GLF_FUZZED((virtual_gid + subgroup_id)) : virtual_gid), ((false ? _GLF_FUZZED((virtual_gid + subgroup_id)) : virtual_gid)) | ((false ? _GLF_FUZZED((virtual_gid + subgroup_id)) : virtual_gid))), 0u, 0u))))) * 1u)))))), (_GLF_IDENTITY(virtual_gid, 0u + (_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((false ? _GLF_FUZZED((virtual_gid + subgroup_id)) : virtual_gid), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY((false ? _GLF_FUZZED((virtual_gid + subgroup_id)) : virtual_gid), uint(uvec3(_GLF_IDENTITY((false ? _GLF_FUZZED((virtual_gid + subgroup_id)) : virtual_gid), ((false ? _GLF_FUZZED((virtual_gid + subgroup_id)) : virtual_gid)) | ((false ? _GLF_FUZZED((virtual_gid + subgroup_id)) : virtual_gid))), 0u, 0u)))), (uint(_GLF_IDENTITY((false ? _GLF_FUZZED((virtual_gid + subgroup_id)) : virtual_gid), uint(uvec3(_GLF_IDENTITY((false ? _GLF_FUZZED((virtual_gid + subgroup_id)) : virtual_gid), ((false ? _GLF_FUZZED((virtual_gid + subgroup_id)) : virtual_gid)) | ((false ? _GLF_FUZZED((virtual_gid + subgroup_id)) : virtual_gid))), 0u, 0u))))) * 1u))))))) ^ 0u), clamp(_GLF_IDENTITY(virtual_gid, 0u + (_GLF_IDENTITY(virtual_gid, (false ? _GLF_FUZZED((virtual_gid + subgroup_id)) : virtual_gid)))), _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(0u + (_GLF_IDENTITY(virtual_gid, (false ? _GLF_FUZZED((virtual_gid + subgroup_id)) : virtual_gid))), 1u * _GLF_IDENTITY((0u + (_GLF_IDENTITY(virtual_gid, (false ? _GLF_IDENTITY(_GLF_FUZZED((virtual_gid + subgroup_id)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(_GLF_FUZZED((virtual_gid + subgroup_id)), max(_GLF_FUZZED((virtual_gid + subgroup_id)), _GLF_FUZZED((virtual_gid + subgroup_id)))))) : virtual_gid)))), (_GLF_IDENTITY(true, bool(bool(true))) ? (0u + (_GLF_IDENTITY(virtual_gid, (false ? _GLF_IDENTITY(_GLF_FUZZED((virtual_gid + subgroup_id)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(_GLF_FUZZED((virtual_gid + subgroup_id)), max(_GLF_FUZZED((virtual_gid + subgroup_id)), _GLF_FUZZED((virtual_gid + subgroup_id)))))) : virtual_gid)))) : _GLF_FUZZED(uaddCarry(virtual_gid, 65801u, subgroup_local_id)))))), min(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(0u + (_GLF_IDENTITY(virtual_gid, (false ? _GLF_FUZZED((virtual_gid + subgroup_id)) : virtual_gid))), 0u ^ (0u + (_GLF_IDENTITY(virtual_gid, (false ? _GLF_FUZZED((virtual_gid + subgroup_id)) : virtual_gid)))))), _GLF_IDENTITY(virtual_gid, 0u + (_GLF_IDENTITY(virtual_gid, (false ? _GLF_FUZZED((virtual_gid + subgroup_id)) : virtual_gid)))))), _GLF_IDENTITY(virtual_gid, 0u + (_GLF_IDENTITY(virtual_gid, (false ? _GLF_FUZZED((virtual_gid + subgroup_id)) : virtual_gid))))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) || false), true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 for(int _injected_loop_counter = _GLF_IDENTITY(_GLF_IDENTITY(1, int(int(1))), (0 << _GLF_IDENTITY(int(8), int(8))) + (_GLF_IDENTITY(1, int(int(_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), int(ivec3(1, 1, 1)))))))); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))))); _injected_loop_counter --)
  {
   for(int _injected_loop_counter = int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x2(injectionSwitch, 1.0, log(1.0), tan(0.0), 0.0, 1.0, 0.0)), max(vec2(mat4x2(injectionSwitch, 1.0, log(1.0), tan(0.0), 0.0, 1.0, 0.0)), _GLF_IDENTITY(vec2(mat4x2(injectionSwitch, 1.0, log(1.0), tan(0.0), 0.0, 1.0, 0.0)), mat2(1.0) * (vec2(mat4x2(injectionSwitch, 1.0, log(1.0), tan(0.0), 0.0, 1.0, 0.0))))))).y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      barrier();
     for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   for(int _injected_loop_counter = (1 | 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
    {
     do
      {
       if(_GLF_DEAD(false))
        barrier();
       do
        {
         do
          {
           atomicStore(buf[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(uint(subgroupAllEqual(write_val)), (uint(subgroupAllEqual(write_val))) | 0u), _GLF_IDENTITY((uint(subgroupAllEqual(write_val))), ((uint(subgroupAllEqual(write_val)))) << 0u) - _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, max(0u, 0u)))))), min(0u, 0u)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(0u, 0u))) - (0u ^ _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(4u), uint(4u))), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(4u), uint(4u))), uint(uint((0u >> _GLF_IDENTITY(uint(4u), uint(4u)))))))))), clamp(0u, 0u, _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, max(0u, 0u)))))), min(0u, 0u)))))), 4, 64, _GLF_IDENTITY(4, (4) / 1));
           if(_GLF_DEAD(false))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true))))) && (false))));
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
     if(_GLF_DEAD(false))
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
    }
  }
}
