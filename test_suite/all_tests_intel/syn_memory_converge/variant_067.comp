#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_7 {
 mat2x3 _f0;
 int _f1;
} ;

struct _GLF_struct_8 {
 uvec3 _f0;
 _GLF_struct_7 _f1;
 ivec2 _f2;
 mat2 _f3;
} ;

struct _GLF_struct_5 {
 mat2x4 _f0;
 vec4 _f1;
 float _f2;
 mat2 _f3;
} ;

struct _GLF_struct_6 {
 _GLF_struct_5 _f0;
 uvec3 _f1;
} ;

struct _GLF_struct_9 {
 _GLF_struct_6 _f0;
 uint subgroup_local_id;
 _GLF_struct_8 _f1;
 mat2x3 _f2;
} ;

struct _GLF_struct_3 {
 vec2 _f0;
 uvec4 _f1;
} ;

struct _GLF_struct_2 {
 uint workgroup_id;
 vec4 _f0;
} ;

struct _GLF_struct_0 {
 ivec2 _f0;
 mat2x4 _f1;
} ;

struct _GLF_struct_1 {
 _GLF_struct_0 _f0;
} ;

struct _GLF_struct_4 {
 _GLF_struct_1 _f0;
 bvec2 _f1;
 _GLF_struct_2 _f2;
 mat2 _f3;
 _GLF_struct_3 _f4;
} ;

layout(set = 0, binding = 0) uniform buf0 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = 16;
 _GLF_struct_9 _GLF_struct_replacement_9 = _GLF_struct_9(_GLF_struct_6(_GLF_struct_5(mat2x4(1.0), vec4(1.0), 1.0, mat2(1.0)), uvec3(1u)), gl_SubgroupInvocationID, _GLF_struct_8(uvec3(1u), _GLF_struct_7(mat2x3(1.0), 1), ivec2(1), mat2(1.0)), mat2x3(1.0));
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 _GLF_struct_4 _GLF_struct_replacement_4 = _GLF_struct_4(_GLF_struct_1(_GLF_struct_0(ivec2(1), mat2x4(1.0))), bvec2(true), _GLF_struct_2(gl_WorkGroupID.x, vec4(1.0)), mat2(1.0), _GLF_struct_3(vec2(1.0), uvec4(1u)));
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = workgroup_size * _GLF_struct_replacement_4._f2.workgroup_id;
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + _GLF_struct_replacement_9.subgroup_local_id;
 write_val = virtual_gid;
 atomicStore(buf[virtual_gid], uint(subgroupAllEqual(write_val)), 4, 64, 4);
}
