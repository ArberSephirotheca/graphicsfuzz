#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec2 GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     barrier();
    }
  }
 uvec2 GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid;
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = 16;
 GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x = subgroup_size;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))))
    {
     barrier();
    }
   else
    {
    }
  }
 do
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x = _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x, min(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x, _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x, max(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x, GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x)), (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x, max(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x, GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x))) - 0u)));
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 for(int _injected_loop_counter = _GLF_IDENTITY(1, max(1, 1)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-6974.4721)), vec2(_GLF_FUZZED(-9.6), (injectionSwitch)[1]), bvec2(false, true)))) - vec2(0.0, 0.0)).y)) && true)))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) && true)), ! (! ((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) && true)))))))) && true))))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, true)))))), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, true))))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false))))))
      barrier();
     barrier();
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) << 0) > 0); _GLF_IDENTITY(_injected_loop_counter --, _GLF_IDENTITY((_GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) - 0)), (true ? (_GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) - 0)) : _GLF_FUZZED(_injected_loop_counter))) >> 0))
      {
       barrier();
      }
    }
   else
    {
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.y = workgroup_size;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false)))))
    {
    }
   else
    {
     barrier();
    }
  }
 do
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        {
         do
          {
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), false)))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)))) > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, sqrt(0.0), 1.0, 1.0, 1.0))))), false), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, sqrt(0.0), 1.0, 1.0, 1.0))))), false), bvec2(bvec2(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, sqrt(0.0), 1.0, 1.0, 1.0))))), false)))), false)), bvec2(bvec3(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, sqrt(0.0), 1.0, 1.0, 1.0))))), false), bvec2(bvec2(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, sqrt(0.0), 1.0, 1.0, 1.0))))), false)))), false)), true))))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))), false)))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), false))))))) || false)) && true)) && true))
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
              }
             else
              {
               barrier();
              }
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))), false, false, true)), ! (! (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))), false, false, true)), (bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))), false, false, true))) || false)))))));
 uint workgroup_base = GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.y * workgroup_id;
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> (_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec3(0u, 0u, 0u)), 0u | (uint(uvec3(0u, 0u, 0u))))) << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) | _GLF_IDENTITY((uint(4u)), (_GLF_IDENTITY((uint(4u)), min(_GLF_IDENTITY((uint(4u)), uint(uint((uint(4u))))), (uint(4u))))) >> 0u))))), (_GLF_IDENTITY(workgroup_base, (workgroup_base) >> (_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec3(0u, 0u, 0u)), 0u | (uint(uvec3(0u, 0u, 0u))))) << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) | _GLF_IDENTITY((uint(4u)), (_GLF_IDENTITY((uint(4u)), min(_GLF_IDENTITY((uint(4u)), uint(uint((uint(4u))))), (uint(4u))))) >> 0u)))))) << 0u) + _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, false)))), (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, false))), (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec3(! (false), false, false)), true && (_GLF_IDENTITY(bool(bvec3(! (false), false, false)), bool(bvec4(bool(bvec3(! (false), false, false)), false, true, true))))))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))), false || (! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), false || (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY((false), ((false)) && true)), ((_GLF_IDENTITY((false), _GLF_IDENTITY(((false)) && true, ! (! (((false)) && true)))))) || false), bool(bvec2(! ((false)), false))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec3((false), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x)))) > injectionSwitch.y)))), ! (! (bool(bvec3((false), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x)))) > injectionSwitch.y)))))))), false, _GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((! (false))) || false))), bvec3(bvec3(bvec3(! _GLF_IDENTITY((false), bool(bvec3((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat4(injectionSwitch.y, 1.0, 0.0, abs(1.0), length(vec3(0.0, 0.0, 0.0)), 1.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 1.0, cos(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0), (mat4(injectionSwitch.y, 1.0, 0.0, abs(1.0), length(vec3(0.0, 0.0, 0.0)), 1.0, determinant(mat2(1.0, 1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(true, ! (! (true))) ? 0.0 : _GLF_FUZZED(-255.929))), 1.0)), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), 1.0, cos(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))))), false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, true, true))))))))))))), false || (bool(_GLF_IDENTITY(bvec3(! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec3((false), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x)))) > injectionSwitch.y)))), ! (! (bool(bvec3((false), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x)))) > injectionSwitch.y)))))))), false, _GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((! (false))) || false))), bvec3(bvec3(bvec3(! _GLF_IDENTITY((false), bool(bvec3((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat4(injectionSwitch.y, 1.0, 0.0, abs(1.0), length(vec3(0.0, 0.0, 0.0)), 1.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 1.0, cos(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0), (mat4(injectionSwitch.y, 1.0, 0.0, abs(1.0), length(vec3(0.0, 0.0, 0.0)), 1.0, determinant(mat2(1.0, 1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(true, ! (! (true))) ? 0.0 : _GLF_FUZZED(-255.929))), 1.0)), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), 1.0, cos(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))))), false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, true, true)))))))))))))))))))) || false)) ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)), uint(uvec2((_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, false)))), (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, false))), (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec3(! (false), false, false)), true && (_GLF_IDENTITY(bool(bvec3(! (false), false, false)), bool(bvec4(bool(bvec3(! (false), false, false)), false, true, true))))))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))), false || (! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), false || (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY((false), ((false)) && true)), ((_GLF_IDENTITY((false), _GLF_IDENTITY(((false)) && true, ! (! (((false)) && true)))))) || false), bool(bvec2(! ((false)), false))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec3((false), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x)))) > injectionSwitch.y)))), ! (! (bool(bvec3((false), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x)))) > injectionSwitch.y)))))))), false, _GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((! (false))) || false))), bvec3(bvec3(bvec3(! _GLF_IDENTITY((false), bool(bvec3((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat4(injectionSwitch.y, 1.0, 0.0, abs(1.0), length(vec3(0.0, 0.0, 0.0)), 1.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 1.0, cos(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0), (mat4(injectionSwitch.y, 1.0, 0.0, abs(1.0), length(vec3(0.0, 0.0, 0.0)), 1.0, determinant(mat2(1.0, 1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(true, ! (! (true))) ? 0.0 : _GLF_FUZZED(-255.929))), 1.0)), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), 1.0, cos(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))))), false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, true, true))))))))))))), false || (bool(_GLF_IDENTITY(bvec3(! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec3((false), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x)))) > injectionSwitch.y)))), ! (! (bool(bvec3((false), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x)))) > injectionSwitch.y)))))))), false, _GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((! (false))) || false))), bvec3(bvec3(bvec3(! _GLF_IDENTITY((false), bool(bvec3((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat4(injectionSwitch.y, 1.0, 0.0, abs(1.0), length(vec3(0.0, 0.0, 0.0)), 1.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 1.0, cos(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0), (mat4(injectionSwitch.y, 1.0, 0.0, abs(1.0), length(vec3(0.0, 0.0, 0.0)), 1.0, determinant(mat2(1.0, 1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(true, ! (! (true))) ? 0.0 : _GLF_FUZZED(-255.929))), 1.0)), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), 1.0, cos(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))))), false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, true, true)))))))))))))))))))) || false)) ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)), (1u ^ 0u))))), subgroup_id)) * GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x + subgroup_local_id;
 for(int _injected_loop_counter = (0 ^ int(_GLF_ONE(1.0, injectionSwitch.y))); _GLF_WRAPPED_LOOP(_injected_loop_counter > (_GLF_IDENTITY(0, 0 ^ _GLF_IDENTITY((0), (true ? (0) : _GLF_FUZZED(_injected_loop_counter)))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(8, (0 ^ 1) * (8))), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(8, (true ? _GLF_IDENTITY(8, ~ (_GLF_IDENTITY(~ (8), int(ivec4(~ (8), 1, 0, 1))))) : _GLF_FUZZED(_injected_loop_counter)))), int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(int(_GLF_IDENTITY(8, (_GLF_IDENTITY(true, true && (true)) ? 8 : _GLF_FUZZED(_injected_loop_counter)))), (true ? _GLF_IDENTITY(int(_GLF_IDENTITY(8, (true ? 8 : _GLF_FUZZED(_injected_loop_counter)))), 0 + (int(_GLF_IDENTITY(8, (true ? 8 : _GLF_FUZZED(_injected_loop_counter)))))) : _GLF_FUZZED(-4669))), 0, 0, 0), _GLF_IDENTITY((ivec4(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(8, 0 ^ (_GLF_IDENTITY(8, max(8, 8)))), (true ? 8 : _GLF_FUZZED(_injected_loop_counter)))), (true ? _GLF_IDENTITY(int(_GLF_IDENTITY(8, (true ? 8 : _GLF_FUZZED(_injected_loop_counter)))), 0 + (int(_GLF_IDENTITY(8, (true ? 8 : _GLF_FUZZED(_injected_loop_counter)))))) : _GLF_FUZZED(-4669))), 0, 0, 0)) ^ ivec4(0, 0, 0, 0), (true ? (ivec4(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(8, 0 ^ (_GLF_IDENTITY(8, max(8, 8)))), (true ? 8 : _GLF_FUZZED(_injected_loop_counter)))), (true ? _GLF_IDENTITY(int(_GLF_IDENTITY(8, (true ? 8 : _GLF_FUZZED(_injected_loop_counter)))), _GLF_IDENTITY(0 + (int(_GLF_IDENTITY(8, (true ? 8 : _GLF_FUZZED(_injected_loop_counter))))), 0 ^ (_GLF_IDENTITY(0 + (int(_GLF_IDENTITY(8, (true ? 8 : _GLF_FUZZED(_injected_loop_counter))))), 0 ^ (0 + (int(_GLF_IDENTITY(8, (true ? 8 : _GLF_FUZZED(_injected_loop_counter)))))))))) : _GLF_FUZZED(-4669))), 0, 0, 0)) ^ ivec4(0, 0, 0, 0) : _GLF_FUZZED(bitfieldExtract(ivec4(_injected_loop_counter, ivec2(22584, 86561), _injected_loop_counter), sign(_injected_loop_counter), ivec2(-40677, -99364)[1]))))))), min(int(8), int(8)))), _GLF_IDENTITY(max(_GLF_IDENTITY(int(8), _GLF_IDENTITY(int(_GLF_IDENTITY(8, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(8, min(8, 8)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(8, min(8, 8)), (_GLF_IDENTITY(8, min(8, 8))) | (_GLF_IDENTITY(8, min(8, 8))))))))))), min(int(8), _GLF_IDENTITY(int(8), int(_GLF_IDENTITY(ivec2(int(8), 0), ivec2(ivec2(ivec2(int(8), 0))))))))), _GLF_IDENTITY(_GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), min(int(8), int(8)))), int(_GLF_IDENTITY(int(_GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), min(int(8), int(8))))), (int(_GLF_IDENTITY(int(8), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(8, _GLF_IDENTITY(int(_GLF_IDENTITY(int(8), ~ (~ (int(8))))), (int(int(8))) | (_GLF_IDENTITY(int(int(8)), (int(int(8))) - 0))))), int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(int(_GLF_IDENTITY(8, _GLF_IDENTITY(int(int(8)), (int(int(8))) | (_GLF_IDENTITY(int(int(8)), (int(int(8))) - 0))))), 0 | (int(_GLF_IDENTITY(8, _GLF_IDENTITY(int(int(8)), (int(int(8))) | (_GLF_IDENTITY(int(int(8)), (int(int(8))) - 0))))))), (0 >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (int(1)) - int(_GLF_ZERO(0.0, injectionSwitch.x))))), int(_GLF_ZERO(0.0, injectionSwitch.x)), 1), (ivec4(_GLF_IDENTITY(int(_GLF_IDENTITY(8, _GLF_IDENTITY(int(int(8)), (int(int(8))) | (_GLF_IDENTITY(int(int(8)), (int(int(8))) - 0))))), 0 | (int(_GLF_IDENTITY(8, _GLF_IDENTITY(_GLF_IDENTITY(int(int(8)), (int(int(8))) | (_GLF_IDENTITY(int(int(8)), (int(int(8))) - 0))), (_GLF_IDENTITY(_GLF_IDENTITY(int(int(8)), (int(int(8))) | (_GLF_IDENTITY(int(int(8)), (int(int(8))) - 0))), min(_GLF_IDENTITY(int(int(8)), (int(int(8))) | (_GLF_IDENTITY(int(int(8)), (int(int(8))) - 0))), _GLF_IDENTITY(_GLF_IDENTITY(int(int(8)), (int(int(8))) | (_GLF_IDENTITY(int(int(8)), (int(int(8))) - 0))), 0 | (_GLF_IDENTITY(int(int(8)), (int(int(8))) | (_GLF_IDENTITY(int(int(8)), (int(int(8))) - 0)))))))) + (0 << _GLF_IDENTITY(int(8), int(8)))))))), (0 >> _GLF_IDENTITY(int(1), int(1))), int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(mat3x4(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(_GLF_IDENTITY(mat4(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, abs(0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, determinant(mat2(0.0, 0.0, 1.0, 0.0))), (true ? mat4(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, abs(0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, determinant(mat2(0.0, 0.0, 1.0, 0.0))) : _GLF_FUZZED(mat4(-7399.2345, 2.3, 3.0, 595.058, 47.82, 34.37, -5.0, -927.038, 53.77, -49.67, 865.581, 7.9, -67.23, -8.7, 39.64, -2.3)))))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), 1.0, tan(determinant(mat2(0.0, 0.0, 1.0, 0.0))))))), 1)) | (ivec4(_GLF_IDENTITY(int(_GLF_IDENTITY(8, _GLF_IDENTITY(int(int(8)), (int(int(8))) | (_GLF_IDENTITY(int(int(8)), (int(int(8))) - 0))))), 0 | (int(_GLF_IDENTITY(8, _GLF_IDENTITY(int(int(8)), (int(int(8))) | (_GLF_IDENTITY(int(int(8)), (int(int(8))) - 0))))))), (0 >> _GLF_IDENTITY(int(1), int(1))), int(_GLF_ZERO(0.0, injectionSwitch.x)), 1))))), min(int(8), int(8)))))) << 0)))), (max(_GLF_IDENTITY(int(_GLF_IDENTITY(8, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_injected_loop_counter) : 8))), _GLF_IDENTITY(int(_GLF_IDENTITY(8, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(8, (8) * 1), min(8, 8)))))), _GLF_IDENTITY(min(int(8), int(8)), (min(int(8), int(8))) | 0))), _GLF_IDENTITY(_GLF_IDENTITY(int(8), _GLF_IDENTITY(_GLF_IDENTITY(int(8), (int(8)) | 0), min(int(8), int(8)))), int(_GLF_IDENTITY(int(_GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), min(int(8), int(8))))), _GLF_IDENTITY((int(_GLF_IDENTITY(int(8), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(8, _GLF_IDENTITY(int(int(8)), (int(int(8))) | _GLF_IDENTITY((_GLF_IDENTITY(int(int(8)), (int(int(8))) - 0)), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(int(int(8)), (int(int(8))) - 0))), (~ ((_GLF_IDENTITY(int(int(8)), (int(int(8))) - 0)))) << 0)))))), int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(int(_GLF_IDENTITY(8, _GLF_IDENTITY(int(int(8)), (int(int(8))) | (_GLF_IDENTITY(int(int(8)), (int(int(8))) - 0))))), 0 | (int(_GLF_IDENTITY(8, _GLF_IDENTITY(int(int(8)), (int(int(8))) | (_GLF_IDENTITY(int(int(8)), (int(int(8))) - 0))))))), (0 >> _GLF_IDENTITY(int(1), int(1))), int(_GLF_ZERO(0.0, injectionSwitch.x)), 1), (ivec4(_GLF_IDENTITY(int(_GLF_IDENTITY(8, _GLF_IDENTITY(int(int(8)), (int(int(8))) | (_GLF_IDENTITY(int(_GLF_IDENTITY(int(8), min(int(8), int(8)))), (int(int(8))) - 0))))), 0 | (int(_GLF_IDENTITY(8, _GLF_IDENTITY(int(int(8)), (int(int(8))) | (_GLF_IDENTITY(int(int(8)), (int(int(8))) - 0))))))), (0 >> _GLF_IDENTITY(int(1), int(1))), int(_GLF_ZERO(0.0, injectionSwitch.x)), 1)) | (ivec4(_GLF_IDENTITY(int(_GLF_IDENTITY(8, _GLF_IDENTITY(int(int(8)), (int(int(8))) | (_GLF_IDENTITY(int(int(8)), (int(int(8))) - 0))))), 0 | (int(_GLF_IDENTITY(8, _GLF_IDENTITY(int(int(8)), (int(int(8))) | (_GLF_IDENTITY(int(int(8)), (int(int(8))) - 0))))))), (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), (_GLF_IDENTITY(int(1), int(1))) / _GLF_IDENTITY((1 | 1), ((1 | 1)) >> 0))), int(_GLF_ZERO(0.0, injectionSwitch.x)), 1))))), _GLF_IDENTITY(min(int(8), int(8)), ~ (_GLF_IDENTITY(~ (min(int(8), int(8))), max(~ (min(int(8), int(8))), ~ (min(int(8), int(8))))))))))), ((int(_GLF_IDENTITY(int(8), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(8, _GLF_IDENTITY(int(int(8)), (int(int(8))) | _GLF_IDENTITY((_GLF_IDENTITY(int(int(8)), (int(int(8))) - 0)), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(int(int(8)), (int(int(8))) - 0))), (~ ((_GLF_IDENTITY(int(int(8)), (int(int(8))) - 0)))) << 0)))))), int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(int(_GLF_IDENTITY(8, _GLF_IDENTITY(int(int(8)), (int(int(8))) | (_GLF_IDENTITY(int(int(8)), (int(int(8))) - 0))))), 0 | (int(_GLF_IDENTITY(8, _GLF_IDENTITY(int(int(8)), (int(int(8))) | (_GLF_IDENTITY(int(int(8)), (int(int(8))) - 0))))))), (0 >> _GLF_IDENTITY(int(1), int(1))), int(_GLF_ZERO(0.0, injectionSwitch.x)), 1), (ivec4(_GLF_IDENTITY(int(_GLF_IDENTITY(8, _GLF_IDENTITY(int(int(8)), (int(int(8))) | (_GLF_IDENTITY(int(_GLF_IDENTITY(int(8), min(int(8), int(8)))), (int(int(8))) - 0))))), 0 | (int(_GLF_IDENTITY(8, _GLF_IDENTITY(int(int(8)), (int(int(8))) | (_GLF_IDENTITY(int(int(8)), (int(int(8))) - 0))))))), (0 >> _GLF_IDENTITY(int(1), int(1))), int(_GLF_ZERO(0.0, injectionSwitch.x)), 1)) | (ivec4(_GLF_IDENTITY(int(_GLF_IDENTITY(8, _GLF_IDENTITY(int(int(8)), (int(int(8))) | (_GLF_IDENTITY(int(int(8)), (int(int(8))) - 0))))), 0 | (int(_GLF_IDENTITY(8, _GLF_IDENTITY(int(int(8)), (int(int(8))) | (_GLF_IDENTITY(int(int(8)), (int(int(8))) - 0))))))), (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), (_GLF_IDENTITY(int(1), int(1))) / _GLF_IDENTITY((1 | 1), ((1 | 1)) >> 0))), int(_GLF_ZERO(0.0, injectionSwitch.x)), 1))))), _GLF_IDENTITY(min(int(8), int(8)), ~ (_GLF_IDENTITY(~ (min(int(8), int(8))), max(~ (min(int(8), int(8))), ~ (min(int(8), int(8)))))))))))) | 0) << 0))))) >> 0)))); _injected_loop_counter --)
  {
   GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.y = virtual_gid;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   do
    {
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)) + _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x, (GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x) | (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x, ~ (~ (GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x))))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(subgroup_id * GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x, uint(uvec4(subgroup_id * GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x, 1u, 0u, 0u))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x, (subgroup_id * GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x) + 0u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x, (subgroup_id * GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x) + 0u), clamp(_GLF_IDENTITY(subgroup_id * GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x, (subgroup_id * GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x) + 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x, (subgroup_id * GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x) + 0u), max(_GLF_IDENTITY(subgroup_id * GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x, (subgroup_id * GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x) + 0u), _GLF_IDENTITY(subgroup_id * GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x, (subgroup_id * GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x) + 0u))), _GLF_IDENTITY(subgroup_id * GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x, (subgroup_id * GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x) + 0u)))) / ((uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u)))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x, (false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u)) : subgroup_id * GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x)), min(_GLF_IDENTITY(subgroup_id * GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x, (subgroup_id * GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x) | (subgroup_id * GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x)), subgroup_id * GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x))), (_GLF_IDENTITY(clamp(_GLF_IDENTITY(subgroup_id * GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x, uint(uvec4(subgroup_id * GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x, 1u, _GLF_IDENTITY(0u, (0u) | 0u), 0u))), _GLF_IDENTITY(subgroup_id * GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x, (subgroup_id * GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x) + 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x, (false ? _GLF_FUZZED(subgroup_size) : subgroup_id * GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x)), _GLF_IDENTITY(min(_GLF_IDENTITY(subgroup_id * GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x, (subgroup_id * GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x) | (subgroup_id * GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x)), subgroup_id * GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x), (min(_GLF_IDENTITY(subgroup_id * GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x, (subgroup_id * GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x) | (subgroup_id * GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x)), subgroup_id * GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x)) ^ (1u ^ 1u)))), 1u * (clamp(_GLF_IDENTITY(subgroup_id * GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x, uint(uvec4(subgroup_id * GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x, 1u, 0u, 0u))), _GLF_IDENTITY(subgroup_id * GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x, (subgroup_id * GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x) + 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x, (false ? _GLF_FUZZED(subgroup_size) : subgroup_id * GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x)), min(_GLF_IDENTITY(subgroup_id * GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x, (subgroup_id * GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x) | (subgroup_id * GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x)), subgroup_id * GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x)))))) | 0u)) + ((_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u) + 1))) % _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x, max(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x, (GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x) ^ 0u), GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x)), (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x, max(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x, (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x, min(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x, GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x))) ^ 0u), _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x, 0u ^ (GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x))))) + 0u));
 do
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, true && (false))));
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 do
  {
   for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)))); _injected_loop_counter ++)
    {
     buf[GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.y] = 1;
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(subgroup_local_id + 1 < GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x)
  {
   int i = 0;
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     do
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) - int(_GLF_ZERO(0.0, injectionSwitch.x))) > 0); _injected_loop_counter --)
          {
           if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), true && (bool(bvec3(false, false, false)))))))))))))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
                barrier();
               barrier();
              }
             barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
            barrier();
          }
        }
       else
        {
        }
       buf[next_virtual_gid] = 2;
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
          {
           barrier();
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4(injectionSwitch.y, tan(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), 1.0, 1.0)), round(length(normalize(sqrt(1.0)))), 1.0, 0.0, 1.0, length(vec2(0.0, 0.0)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0))), 1.0, 1.0, 0.0, 0.0, 1.0), (mat4(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(358.372)), bool(false))), injectionSwitch.y)), tan(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), 1.0, 1.0)), round(length(normalize(sqrt(1.0)))), 1.0, 0.0, 1.0, _GLF_IDENTITY(length(vec2(0.0, 0.0)), mix(float(_GLF_IDENTITY(length(vec2(0.0, 0.0)), 1.0 * (length(vec2(0.0, 0.0))))), float(_GLF_FUZZED(-506.709)), bool(false))), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0))), 1.0, 1.0, 0.0, 0.0, 1.0)) / mat4(1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) / 1.0)) + 0.0), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))), mix(float(float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, tan(0.0), _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-539.091)), float(0.0), bool(true))), 0.0)), _GLF_ONE(1.0, injectionSwitch.y), determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), 1.0, 1.0)), round(length(normalize(sqrt(1.0)))), 1.0, 0.0, 1.0, length(vec2(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-9.3)), bool(false))), 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0))), (_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)))) - 0.0), 1.0, 1.0, 0.0, 0.0, 1.0), (_GLF_IDENTITY(mat4(injectionSwitch.y, tan(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), 1.0, 1.0)), max(determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), 1.0, 1.0)), determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), 1.0, 1.0)))), round(length(_GLF_IDENTITY(normalize(sqrt(1.0)), (true ? normalize(sqrt(1.0)) : _GLF_FUZZED(851.063))))), 1.0, 0.0, 1.0, length(vec2(0.0, 0.0)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0))), 1.0, 1.0, 0.0, 0.0, 1.0), transpose(_GLF_IDENTITY(transpose(mat4(injectionSwitch.y, tan(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), 1.0, 1.0)), max(determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), 1.0, 1.0)), determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), 1.0, 1.0)))), round(length(_GLF_IDENTITY(normalize(sqrt(1.0)), (true ? normalize(sqrt(1.0)) : _GLF_FUZZED(851.063))))), 1.0, 0.0, 1.0, length(vec2(0.0, 0.0)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0))), 1.0, 1.0, 0.0, 0.0, 1.0)), (transpose(mat4(injectionSwitch.y, tan(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), 1.0, 1.0)), max(determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), 1.0, 1.0)), determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), 1.0, 1.0)))), round(length(_GLF_IDENTITY(normalize(sqrt(1.0)), (true ? normalize(sqrt(1.0)) : _GLF_FUZZED(851.063))))), 1.0, 0.0, 1.0, length(vec2(0.0, 0.0)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0))), 1.0, 1.0, 0.0, 0.0, 1.0))) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))), float(_GLF_FUZZED(-5.7)), bool(false))))), _GLF_IDENTITY(false || ((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED((false ? float(false) : 3.7))), bool(false))) > injectionSwitch.y)), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, _GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, false)))))))))))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, _GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, false)))))))))))), _GLF_IDENTITY(true, (true) || false), false), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, _GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, false)))))))))))), _GLF_IDENTITY(true, (true) || false), false), false))))), ! (! _GLF_IDENTITY((bool(bvec2(false, false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((bool(bvec2(false, false))), ((bool(bvec2(false, false)))) || false)), true && (! (_GLF_IDENTITY((bool(bvec2(false, false))), ((bool(bvec2(false, false)))) || false))))))))) || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))))))));
    }
   else
    {
    }
   for(int _injected_loop_counter = _GLF_IDENTITY(0, max(0, 0)); _GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(mat4x2(_GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y))))), _GLF_IDENTITY(bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), (int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))) | 0)), true, false)), ! (! (bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) / _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)))))), true, false)))))), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), max(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(_GLF_IDENTITY(1.0, 1.0 * (1.0)), injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), (false ? _GLF_FUZZED(9840.9605) : _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))))))), (false ? _GLF_FUZZED(-8489.5966) : (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), max(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(_GLF_IDENTITY(1.0, 1.0 * (1.0)), injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), (false ? _GLF_FUZZED(9840.9605) : _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))))))))) * _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec2(1.0, 0.0), vec2(mat3(vec2(1.0, 0.0), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0))))), 0.0)), clamp(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)))), dot(vec4(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)))))), 0.0, 1.0, 0.0), _GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 0.0), min(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)))))))), _GLF_IDENTITY(bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y) / 1.0) : _GLF_FUZZED(uintBitsToFloat(subgroup_size))))) - 0.0)))), _GLF_IDENTITY(true, (true) && true), false)), ! (! _GLF_IDENTITY((bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))), true, false))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY(((bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))), true, false)))), ! (! (((bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))), true, false))))))), ! (! (! _GLF_IDENTITY(((bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))), true, false)))), ! (! (((bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))), true, false)))))))))), (! _GLF_IDENTITY(((bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))), true, false)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(((bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))), true, false)))), bool(bvec2(((bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))), true, false)))), false))), true && (((bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))), true, false)))))))))) || false))))))) || false); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
          {
           barrier();
          }
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
       barrier();
      }
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (64837 & 0)); _injected_loop_counter --)
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
      }
     else
      {
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 else
  {
   buf[next_virtual_gid] = 2;
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true)))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))) || false)))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(-4.6))), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))), (_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), (injectionSwitch.x > injectionSwitch.y))) && true)), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || false)))) && true))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         barrier();
        }
      }
    }
   else
    {
    }
  }
}
