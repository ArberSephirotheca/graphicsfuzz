#version 460
struct _GLF_struct_4 {
 vec2 _f0;
} ;

struct _GLF_struct_3 {
 float _f0;
 bool _f1;
 uvec4 _f2;
 mat3x2 _f3;
 bvec3 _f4;
 bvec3 _f5;
 int _f6;
} ;

struct _GLF_struct_2 {
 vec2 _f0;
 mat4 _f1;
 ivec3 _f2;
 bvec2 _f3;
 vec4 _f4;
 mat3x4 _f5;
 mat3 _f6;
} ;

struct _GLF_struct_1 {
 mat4x3 _f0;
 mat4 _f1;
} ;

struct _GLF_struct_5 {
 _GLF_struct_1 _f0;
 _GLF_struct_2 _f1;
 _GLF_struct_3 _f2;
 _GLF_struct_4 _f3;
} ;

struct _GLF_struct_6 {
 mat4 _f0;
 mat4x2 _f1;
 mat4x3 _f2;
 _GLF_struct_5 _f3;
 ivec4 _f4;
 uint virtual_gid;
} ;

struct _GLF_struct_0 {
 ivec3 _f0;
 uint workgroup_size;
} ;

layout(set = 0, binding = 0) uniform buf0 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = 16;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 _GLF_struct_0 _GLF_struct_replacement_0 = _GLF_struct_0(ivec3(1), gl_WorkGroupSize.x);
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = _GLF_struct_replacement_0.workgroup_size * workgroup_id;
 _GLF_struct_6 _GLF_struct_replacement_6 = _GLF_struct_6(mat4(1.0), mat4x2(1.0), mat4x3(1.0), _GLF_struct_5(_GLF_struct_1(mat4x3(1.0), mat4(1.0)), _GLF_struct_2(vec2(1.0), mat4(1.0), ivec3(1), bvec2(true), vec4(1.0), mat3x4(1.0), mat3(1.0)), _GLF_struct_3(1.0, true, uvec4(1u), mat3x2(1.0), bvec3(true), bvec3(true), 1), _GLF_struct_4(vec2(1.0))), ivec4(1), workgroup_base + subgroup_id * subgroup_size + subgroup_local_id);
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size);
 buf[_GLF_struct_replacement_6.virtual_gid] = 1;
 if(subgroup_local_id + 1 < subgroup_size)
  {
   int i = 0;
   buf[next_virtual_gid] = 2;
  }
 else
  {
   buf[next_virtual_gid] = 2;
  }
}
